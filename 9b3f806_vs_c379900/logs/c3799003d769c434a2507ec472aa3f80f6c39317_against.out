cset: moving following pidspec: 29735
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341546753 seconds)
loading group "string"... done (took 0.556528797 seconds)
loading group "linalg"... done (took 7.608377279 seconds)
loading group "parallel"... done (took 0.168611994 seconds)
loading group "find"... done (took 1.273905108 seconds)
loading group "tuple"... done (took 1.941568368 seconds)
loading group "dates"... done (took 1.420464716 seconds)
loading group "micro"... done (took 0.24665386 seconds)
loading group "io"... done (took 0.987509359 seconds)
loading group "scalar"... done (took 42.019638876 seconds)
loading group "sparse"... done (took 13.76214382 seconds)
loading group "broadcast"... done (took 1.039564069 seconds)
loading group "union"... done (took 15.050667296 seconds)
loading group "simd"... done (took 5.147014236 seconds)
loading group "random"... done (took 10.396554094 seconds)
loading group "problem"... done (took 2.04951345 seconds)
loading group "array"... done (took 23.172703303 seconds)
loading group "misc"... done (took 2.067605892 seconds)
loading group "sort"... done (took 3.510014182 seconds)
loading group "collection"... done (took 20.022512271 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.590381602 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144342439 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151732098 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130709307 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.210146109 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160114108 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161960659 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100455146 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.032196811 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182420662 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.157224355 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.538575802 seconds)
done (took 5.309253808 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.222046598 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09769616 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106865287 seconds)
  done (took 0.897006056 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077999628 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.148208724 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097096845 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079649718 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097460418 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079051644 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096879003 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079214642 seconds)
  done (took 1.374631995 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088593621 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099092334 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082745413 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099331586 seconds)
  done (took 1.069397755 seconds)
done (took 4.342695261 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.753514167 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.281504677 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205151267 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.47817051 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198510971 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.222159288 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674278637 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.355259924 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.264297302 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102874879 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147519722 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.397096999 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.141126797 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680456128 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089545614 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125557841 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180963716 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.467070181 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084874761 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112432739 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118810591 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144397984 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131244832 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09390349 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186711863 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084392951 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.200329067 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111170532 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08097769 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.281559355 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203077218 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.691055143 seconds)
  done (took 11.028065522 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115723018 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138539399 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100300632 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141318694 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13731927 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102647881 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087916591 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.099311061 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125094515 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179616829 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134362704 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123909688 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098474159 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084148071 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118082888 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249752495 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124230166 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101982362 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103115435 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088986613 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14198216 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115955935 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111540962 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09534663 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170225887 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.226329376 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113980326 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128972348 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099636481 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115064963 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145564306 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146838712 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097925455 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08165256 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177322931 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127313042 seconds)
  done (took 5.258138118 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.121712485 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191862317 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121759378 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170952874 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080354007 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143982232 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095634464 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113211241 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258430026 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.121202924 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.493038622 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140247198 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099021212 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098552459 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082676502 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097702896 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.592080839 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158115693 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134606017 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096869468 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104866036 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099560045 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370770048 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088921744 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097590293 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083090374 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082060346 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163525089 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082255459 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.153603827 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122522004 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099692243 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11643582 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207632965 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127525086 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117600821 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096576866 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077972448 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.192403399 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087725415 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09685505 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103713092 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135118675 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133368354 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097646918 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080717337 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218645654 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081065986 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113712779 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.949088592 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183135931 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.123059576 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098018067 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.308235535 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097212366 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102039229 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122644652 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07799288 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.297350352 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.193553802 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101452116 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081427618 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098938626 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08256563 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.40454834 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082961371 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.729741868 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084429301 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106361507 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082468522 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096775613 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103403643 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087391979 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114948531 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079657049 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099172081 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079525529 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097806946 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080718627 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095195137 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077256647 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107916709 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212701104 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098256941 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079257957 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096359685 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115356595 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111601162 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100452048 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094488381 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114266368 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101581295 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096899414 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116616133 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099371234 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106628364 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082883934 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14379127 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097215843 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.155625528 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096000933 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123094763 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099255935 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114184675 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111238084 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093528956 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081628376 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167373465 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096400223 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077731681 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.0979494 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.07851516 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099377173 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081281601 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110853151 seconds)
  done (took 22.859135627 seconds)
done (took 40.965857371 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.325790418 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104115607 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103471075 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102844146 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101454127 seconds)
  done (took 1.515266561 seconds)
done (took 2.261928131 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287345622 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.174005602 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09595448 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165395067 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09312661 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.164429305 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159372745 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093387899 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219411268 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094817574 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161224355 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076270527 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094751204 seconds)
  done (took 2.65691218 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094629836 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1152171 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082922185 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110427421 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075894883 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110532004 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092130208 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116949219 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108789764 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085691209 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092979826 seconds)
  done (took 1.823839474 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094250042 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11334654 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082131586 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110302845 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077005237 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110978274 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093262443 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118944792 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109822023 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086085476 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09344515 seconds)
  done (took 1.823267045 seconds)
done (took 7.040722694 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091872544 seconds)
  done (took 0.824937579 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.931832209 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.781341743 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113687742 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.15146924 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.301342341 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194715022 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.474218717 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127373382 seconds)
  done (took 11.030786521 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.144988491 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083414066 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101479854 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086036809 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101684792 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086452506 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100437707 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100585713 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084974145 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100357949 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08645952 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099432884 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101767293 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085979757 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098977563 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085967804 seconds)
  done (took 2.353791287 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119997544 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118681396 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106843813 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108048982 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086250558 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106098948 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106801599 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088553716 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102738568 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103302539 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090240553 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10586568 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102701961 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079942886 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107032757 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107859077 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086693211 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107179406 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107232967 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089895908 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107543853 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095629132 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087776426 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107623876 seconds)
  done (took 3.284375531 seconds)
done (took 18.236190709 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160868737 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110073463 seconds)
  done (took 1.011962116 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097741541 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115063706 seconds)
  done (took 0.962135969 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099839341 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095836466 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122005187 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109155468 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080676278 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09633726 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12021868 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081047622 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098028553 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07989856 seconds)
  done (took 1.738388902 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083686736 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10950366 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102514041 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095648502 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105127236 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094211862 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08893914 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098536338 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110998369 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077414344 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102518604 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11440147 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085678813 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116361189 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104947861 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083282463 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102663025 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098379196 seconds)
  done (took 2.531531367 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080268125 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098018929 seconds)
  done (took 0.934506622 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082980559 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094296055 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081702135 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097171829 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093670563 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078011093 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094479428 seconds)
  done (took 1.377607586 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485352938 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135597547 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261614971 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101778205 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102975706 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302912384 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097819651 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084798988 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103491141 seconds)
  done (took 2.489289075 seconds)
done (took 11.796043378 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09483606 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115325163 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113395421 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.469303266 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.1073707 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098802251 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147134313 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.255189917 seconds)
done (took 2.163358813 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.14582457 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.607735467 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.427416796 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232558655 seconds)
  done (took 2.032410521 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.406955396 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099408095 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084257466 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082653527 seconds)
  done (took 1.435506176 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082164787 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099855825 seconds)
  done (took 0.949200821 seconds)
done (took 5.326948861 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081930177 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.131984614 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080161968 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097469233 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080853617 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097180836 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07790575 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098980322 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079707167 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.097922775 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.096234454 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081276156 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094249245 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078919526 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097101464 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078928513 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094409055 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078755667 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094070087 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079749439 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09662807 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078275444 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094848815 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080442097 seconds)
  done (took 2.942477497 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101918393 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09863706 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10369438 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086516948 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10201661 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08634022 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103741239 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097478585 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087168152 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101045458 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101078436 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085644437 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099271619 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085559752 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100435344 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102503986 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086779983 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098758236 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08232299 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102115663 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102379743 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081301758 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101880443 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086760078 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102071007 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102255862 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083331166 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098695924 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1025512 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085646965 seconds)
  done (took 3.623242345 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085973516 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093838676 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079338155 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101946488 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07847399 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097010322 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077916185 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095617415 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079862111 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095447587 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079424776 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096143924 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078025654 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097055707 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078564775 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099118465 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111710189 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079297365 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094997058 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078881441 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098449456 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078472731 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095294314 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078304126 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095686659 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077694146 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095502599 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078911546 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096451347 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078604445 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099625395 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082037738 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095815803 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084824472 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099366941 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078686385 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100320523 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077111438 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097174011 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076709165 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096650018 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095125975 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078759711 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101133296 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079781375 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096795865 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080153807 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097158536 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079580641 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099170462 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078340169 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095496666 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079845107 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096593112 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081607333 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095953994 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096229565 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078421406 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096662707 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079205867 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094731323 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078435491 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097343682 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080069908 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110874117 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086061765 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095238063 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080463061 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097280005 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081834042 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098456328 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092614934 seconds)
  done (took 7.189671499 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084271268 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107127334 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081473828 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097673928 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077869536 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096975476 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099424881 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079938121 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097020807 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086198132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096804996 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08023469 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098794361 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107510341 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080501286 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097407336 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08570933 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093625721 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078807915 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100515058 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078334222 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100600827 seconds)
  done (took 2.780031983 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210790037 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104981879 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143390276 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107886076 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083941936 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107564636 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103029054 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087568919 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.211839202 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082795572 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101278628 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102048535 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083378548 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101025322 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100083091 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085732722 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1030047 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085499566 seconds)
  done (took 2.783408805 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093974707 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09885679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102464113 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100093309 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098842205 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08511574 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104875271 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106902312 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084693258 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098809797 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09006164 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102116483 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100318456 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082425617 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101503699 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081659825 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101823652 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081179331 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108700451 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10403929 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086636471 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108987099 seconds)
  done (took 2.902255 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098427759 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100891444 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118383063 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084795307 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095392089 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080596092 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106036422 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081548756 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108538999 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100217063 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08309868 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097948953 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090476524 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09953296 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103340222 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081967185 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101509075 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081992707 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101782001 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077648973 seconds)
  done (took 2.672262306 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104452258 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101592809 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099546425 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093657855 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101815138 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08278245 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110637389 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100326332 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08322435 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126377554 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100422387 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082430067 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109707541 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106494248 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09974572 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092249137 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109848509 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108441462 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082954348 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100729386 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125045822 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082515512 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109573339 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099716799 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082839583 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100603716 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099602211 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08854071 seconds)
  done (took 3.565140434 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082212932 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098743079 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082128043 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095932845 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079181267 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096953649 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07936023 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095676577 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081939511 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095906627 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082033166 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097788862 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082189163 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099233149 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082016427 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098641894 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081374803 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096629308 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079134279 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096304003 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082055694 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099257618 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081253902 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097401667 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079581461 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099173008 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078530027 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096829244 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081087144 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097931122 seconds)
  done (took 3.45870069 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09146171 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105881849 seconds)
  done (took 0.978423538 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080077454 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114998213 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079130019 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103231734 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086795206 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101408386 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107930671 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087055462 seconds)
  done (took 1.541609171 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097124467 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110278293 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084009678 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113685977 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109932934 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099085541 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172065724 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10260598 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087622703 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099218251 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113374022 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082656358 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106414921 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082818739 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106006938 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088233732 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098395146 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108491152 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08550748 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098179806 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083749356 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109162945 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083968163 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096943492 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100679379 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091971515 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112952945 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082701244 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10444482 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106595673 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08852911 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093055004 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082424068 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100124595 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080218179 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109458147 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116317234 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084909237 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110268027 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08325165 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112365152 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095332075 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088083477 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106428042 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109121157 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083396195 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10026104 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078543158 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097497216 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084856109 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095356116 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082020323 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095013669 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088720309 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.1038673 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110190496 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081406731 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101467164 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08594841 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103984906 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088543024 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103679352 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101327225 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082340816 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106403247 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087313399 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110620451 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076417156 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095108894 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097307917 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09356799 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124236109 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088438755 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102625316 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100430313 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081322474 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103006304 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083995645 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106839604 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105404566 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083636951 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107170187 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090030486 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100857694 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084474009 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109462849 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098164833 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084964268 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09749921 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117048795 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081714527 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097445075 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080914454 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111978806 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085451871 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099895271 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079544147 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108185996 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093126449 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083965131 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100743752 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083319495 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111939957 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105913391 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088861344 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10999443 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088992275 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101166367 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103220869 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079668649 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10153751 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085592467 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106841466 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075965536 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103000597 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082996724 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102301231 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108599566 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08114601 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100616668 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090400221 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106662265 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080568683 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097802113 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101879736 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083553335 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103957297 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091320231 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09997004 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077400305 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096209775 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103343672 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083501835 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103270625 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089134706 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10394376 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075988721 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098923996 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104770558 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092301708 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100916853 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082303114 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107280915 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100620814 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082818859 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106094944 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085304038 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099552014 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087849412 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101861688 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077016737 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104447603 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102353343 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081663023 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10375316 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086891799 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103687609 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082675872 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099419494 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105983954 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084067039 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.0990569 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08369035 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09874329 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092889798 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104012847 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09490002 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080246792 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10878505 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080321158 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100754131 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080967625 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103141436 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083232207 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100088541 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099682375 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085322754 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113748419 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086348172 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103241039 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10513037 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094934955 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100732111 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08500135 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10094389 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082800725 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102889176 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109572493 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088335128 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106582965 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08428376 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09821692 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106502631 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091510759 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099839753 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081016026 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099413306 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085773509 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10687713 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103660191 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084437401 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099311771 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083116585 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10472345 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084609488 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102115383 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098496351 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088682193 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100192004 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090383787 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102492143 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110639852 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086693469 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095965463 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086066099 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099651241 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088195622 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097342336 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.09802933 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082233981 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100946541 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081428126 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103516441 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077526775 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108981757 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089824589 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102636683 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081265215 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10270594 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106827289 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084922152 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105042149 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086465842 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107933018 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111065922 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082642827 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103679095 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094224417 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102057269 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076263861 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107272886 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098785953 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083139217 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099675454 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082165808 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105401167 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092966059 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.109389341 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094103424 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086313798 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099715808 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082700337 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09683727 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087140145 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104776238 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0827819 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109126134 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101904412 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086904452 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105186541 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082532887 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102587143 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.082788441 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104835307 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101673098 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086527847 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100255991 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085959485 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100415982 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080614943 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103846958 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082589022 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102438398 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106682472 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082870005 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101197903 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086456009 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102604395 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082862143 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102197981 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081681397 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106334642 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101387955 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084196497 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103850686 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078528534 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10964412 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082124327 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10951124 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082741174 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098912686 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106150988 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086771852 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107808578 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.0838726 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102838454 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102306099 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083448817 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103068967 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090336801 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099417809 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093969186 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110568885 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101951792 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085889819 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100915987 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084622207 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100820086 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082947342 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103099428 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082419045 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102864743 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105413252 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086352822 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101795298 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0853117 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102718289 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082660915 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103390026 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076675243 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10149658 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100805155 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083933317 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112568816 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083814176 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105233365 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08183389 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10383413 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100097446 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080995762 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109747897 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092046212 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103759592 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108680424 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082457673 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102798688 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093411697 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096042425 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08074599 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09998325 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09817817 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100178344 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101642268 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092545282 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102285319 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081996751 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09936451 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084452777 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100400297 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094517852 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08251041 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105219888 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.0862943 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100644879 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084179788 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105335412 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084511791 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113195532 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100441343 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084814188 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102250925 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080274398 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100758031 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082105909 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105327716 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083818674 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100643647 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078887792 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10252041 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101773925 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084956611 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101579354 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085464653 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109340924 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083178195 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105605661 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104415454 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078687332 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103421733 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083226091 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101763805 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081617554 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106808685 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085451846 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104583158 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111313971 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083373137 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103011653 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083842213 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10042687 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082193282 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102999785 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10186135 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08302999 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101694259 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091967575 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100135886 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086357714 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102484887 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082326966 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110519359 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102259986 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08696143 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110658988 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08504027 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104829951 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109337915 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087504053 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105571734 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084942925 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104869469 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107806511 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082833792 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107426857 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084148499 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103365998 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084465585 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100577312 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082784047 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102494583 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081208877 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109602457 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102734274 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083187778 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101363239 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081598379 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103672628 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086423374 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11109312 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104650937 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087215999 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096895366 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081045616 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103658295 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080627703 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104571443 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086276234 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109671701 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103476087 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084188957 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100605991 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092626922 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109488734 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104961071 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081687093 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10532492 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085327652 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104444421 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084888063 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102675756 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085286435 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107070346 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.083829624 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103535781 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108994983 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088314593 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103947891 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085091146 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103227565 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083059914 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098534034 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102199851 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086797597 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106859017 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086260829 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102261269 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093430667 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102857533 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101195366 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088609662 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10219357 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088875242 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098238871 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084290441 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104672724 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102866813 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080350294 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101810649 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081807337 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104359949 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083865404 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097983087 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095351924 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113488143 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105366329 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083589876 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100362903 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079536985 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097703709 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083047965 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104382469 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085096331 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114504831 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10082138 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08354259 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096986673 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084397668 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106531376 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.086756899 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100570244 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078836746 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102213004 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08655207 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109085009 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100908597 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084163194 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106546789 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085663987 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10087277 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086476935 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100358524 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105649227 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098620378 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104468421 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083891699 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109416431 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110408186 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08556912 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097739368 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084671347 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106361699 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083746058 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104604088 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103571232 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100263478 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106407134 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082438039 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10226282 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.084918946 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103529377 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111006236 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085766357 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104076735 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087619032 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106310786 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111871864 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087182952 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111952809 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086304495 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.1067586 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10071404 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084787732 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100073917 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083394913 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103114479 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085319299 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109053693 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111333281 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083442066 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113868791 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092056783 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108533419 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079326461 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103578081 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101165138 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07987599 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106549614 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082561529 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100275973 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08211397 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101426735 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08408278 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109642237 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.083946713 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105072477 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102006576 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078584253 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104815499 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087164067 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103616312 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080896463 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103257393 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084870727 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107708013 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106515003 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08571088 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104249051 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086151907 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103611939 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079607383 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110504392 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082613411 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.10633823 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083155969 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104060582 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.1040068 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088501178 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10860431 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085160361 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106505951 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114823886 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087524311 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100514621 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081966107 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109447441 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081477193 seconds)
  done (took 57.899729438 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146740564 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081787205 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098227092 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07950451 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11315477 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099081152 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080366877 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099707516 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081240875 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102336231 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079640643 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099979787 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10906186 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124783055 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093733602 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104368157 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078362626 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100647178 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098191266 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082219321 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108769755 seconds)
  done (took 2.899643438 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106074537 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118560539 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114728486 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118893717 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090124023 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115503101 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115556387 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114482943 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100446307 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111484429 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11877168 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115531232 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092416099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111541723 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109865404 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093755996 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11974951 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11003786 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115835019 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0955526 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113934945 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114813616 seconds)
  done (took 3.248297343 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084597347 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101982175 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085711435 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097651271 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083373242 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098266358 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087696267 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10086439 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087001782 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103039995 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081578832 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10288289 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104107393 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07994102 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102322946 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081930572 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153050502 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107147149 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082500385 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105209294 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077521567 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106500928 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098922276 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080468969 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101647441 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088163805 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104568884 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081062799 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104289687 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081946457 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103497179 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079983987 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106147786 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102661136 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083644508 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10138986 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084535545 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102472625 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079918823 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101317642 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084636668 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.09913535 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084514345 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105641256 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081709654 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102651058 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084005402 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104034286 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.078124755 seconds)
  done (took 5.458515664 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104925644 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161790327 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086804673 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143333228 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12174388 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112641146 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088267836 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142403738 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10227393 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082702702 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122957974 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121132054 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10359096 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089246413 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111386043 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103123804 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085489535 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103078122 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087738808 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104039488 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107793389 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090275549 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119388479 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118238024 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107967361 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083451874 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104138922 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107829501 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098793721 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10980334 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108593248 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090027089 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121312862 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106127551 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082667492 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107427435 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121631422 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083438361 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108565593 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102024974 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08662157 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109892291 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110338898 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102219006 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106012777 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108358224 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084318395 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101162228 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118082926 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087640171 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114550422 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120115545 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088212868 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106189624 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109275346 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120446406 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085419598 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102299125 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089139543 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118880129 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101268349 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088952888 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119535326 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106203604 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092879518 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120774015 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110118185 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10902689 seconds)
  done (took 8.15361656 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093664957 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111692248 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120411563 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120949015 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091788907 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111275041 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110960581 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091583492 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110405854 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116209468 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110019524 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134495011 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086798812 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116080929 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110584021 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09154877 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111860621 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110383297 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090684148 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111296181 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111804513 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120729116 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091054631 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121033827 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142661907 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106599533 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090647107 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112530474 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122891058 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110559191 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123738643 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092058795 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111276613 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121152077 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123757794 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091016345 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103788101 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109824676 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092335042 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112630638 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104962898 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10077745 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112164283 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106477744 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090721655 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111399061 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121407466 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12423299 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113999818 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097345311 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112765154 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121030812 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109894847 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091863713 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120954765 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147598374 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119496028 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121225678 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110622144 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100694017 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12051621 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128533447 seconds)
  done (took 7.693173878 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108516879 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115699861 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118850953 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100257036 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083913641 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109052825 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083418463 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103167052 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114743334 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095049257 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117228803 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108504128 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092194048 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11797251 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10911222 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111930062 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089380978 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109374205 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115714947 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088743327 seconds)
  done (took 2.938860881 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094819886 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124706209 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084668439 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113361292 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107823264 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0917667 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108405858 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10758722 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08734569 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108237563 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095929101 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117201414 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105906527 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091186787 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11782145 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112682286 seconds)
  done (took 2.519062576 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100047882 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118337626 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121095843 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084213537 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.1052797 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08046943 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10655718 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100318382 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081590923 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121609094 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084813442 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109538644 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105171596 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08345139 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101747578 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088343848 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102089416 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082317291 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106161924 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118801255 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096990339 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105483886 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.084452151 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109093812 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105832221 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090546922 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106167271 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102999169 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084448525 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105483062 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085863698 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113940909 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101049569 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084730128 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103231464 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08260397 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105196361 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084513095 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109451021 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104641418 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084299503 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104374332 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085934798 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107303913 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080582768 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107012242 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080170629 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113179295 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102642304 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086717904 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106616932 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086798642 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107332182 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116348557 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089686165 seconds)
  done (took 6.274928208 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099383422 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109401379 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080321971 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104175435 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087996594 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108544103 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108299043 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088730566 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107132806 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083731762 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107737512 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089179718 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108649969 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108119071 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087850644 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109659933 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080748278 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10782992 seconds)
  done (took 2.635465767 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091624881 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10502909 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093107601 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106535502 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084269579 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108752601 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080570708 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104746943 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103540087 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085925954 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105879587 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088296847 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104301129 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08725584 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107383267 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084418226 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109622009 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102691366 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085999888 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101322838 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089055847 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103843648 seconds)
  done (took 2.987501842 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119158834 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125940243 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.0918922 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232108892 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103913643 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132660403 seconds)
  done (took 1.656036436 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110717326 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121681247 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106559346 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108167543 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115939557 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085838955 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108361703 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108711986 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116565847 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102051124 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108533563 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1195877 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11771924 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096788187 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115758515 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115822445 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107111422 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088733867 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106368037 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127382339 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088151157 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118193212 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107837811 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087145297 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109613276 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117125027 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118053166 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102057371 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108784722 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117827677 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113268843 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087776305 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119173436 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122856995 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088246753 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118892815 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110018925 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12838584 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113844467 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097395802 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110990998 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11510376 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097790353 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114482097 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118106843 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107506856 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093917613 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108412078 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107511354 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135971965 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094370807 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117981699 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115611441 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117825768 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097488975 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135150279 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123691247 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118315384 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114961145 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123253953 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117430746 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094886146 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11874155 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123030366 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114207169 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097135064 seconds)
  done (took 8.153123892 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10307067 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127938324 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108094013 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122828915 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097115252 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109663979 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10738013 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087521886 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109661894 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106578056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152136569 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088999961 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117318851 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117151288 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087884676 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110006207 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108262873 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116566545 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087847575 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134784356 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109096574 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118087636 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096809868 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118224761 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123680028 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115059785 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108347951 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088945998 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108965309 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087749753 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115560601 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110274019 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118493456 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086754385 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117860072 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108626424 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087170121 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115408497 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109439474 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113748903 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09748807 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127850625 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108714237 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107699256 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102407389 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109606357 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108022971 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087055539 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109662123 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106389814 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103110723 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123296655 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123177746 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11768844 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108043465 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089014005 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109674138 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107747671 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089785917 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115149051 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117590255 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087228254 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136334033 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109445531 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109261433 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117922076 seconds)
  done (took 8.055536197 seconds)
done (took 155.768068773 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.216789838 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.200952146 seconds)
  done (took 1.272914919 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088436425 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136902913 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095851346 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170505865 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085319972 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142292285 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138005728 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09792033 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107446491 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085852565 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107831414 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087060818 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173046798 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0851496 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108172252 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107479239 seconds)
  done (took 2.687026796 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119089502 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.232147216 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125269483 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105349661 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090587213 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110231424 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084644541 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112225242 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089595357 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.107269976 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08772398 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108817259 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084257579 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10833728 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109331562 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089084578 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105630648 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090112762 seconds)
  done (took 2.828094715 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113686104 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148752645 seconds)
  done (took 1.134087802 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.243304957 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.164088303 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.231970878 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.476308024 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.280143451 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.366257304 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.204113631 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.215238285 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.161368079 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.211135366 seconds)
  done (took 3.416981438 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120194705 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18058537 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318783024 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155435407 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10762489 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129705437 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157769086 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13052665 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122006411 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100228458 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122586035 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11842446 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138792872 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094679104 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11657159 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117793575 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120988236 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11525166 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114497171 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096729204 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138341462 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084061415 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117179962 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115112171 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097205099 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120587219 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106083552 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086283672 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116960696 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092873914 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115251923 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125926151 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118266865 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156929646 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122554183 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.1576158 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118011612 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091907351 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116187652 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090720991 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119917435 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119133844 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123533947 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097950483 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105760645 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096642137 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106934031 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.083739709 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116038579 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118882062 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.092477629 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11487575 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154385724 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11956413 seconds)
  done (took 7.410606715 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795315707 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157391542 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089842447 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.908904284 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116362182 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131803032 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.794802714 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111603794 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258157574 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764675897 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134441186 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096434334 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236252185 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.266749799 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937357187 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.32101696 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.650212331 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126946047 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152637264 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154844503 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117164788 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115438931 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132939082 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427805521 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118066498 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089396678 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11976258 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119458226 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161349853 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124652722 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091959243 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203303706 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.253362542 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206289323 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095869323 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112254181 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088722099 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191860885 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245578791 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220618714 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183946288 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108404083 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089106994 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122055692 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132633454 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087137274 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185894464 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177408311 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171605133 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115399377 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095272221 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121406258 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121751396 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165531582 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123348906 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.322583035 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316508713 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089931541 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122690648 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125799146 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242352014 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125018334 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228853477 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139674927 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192984562 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113087467 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793368531 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169685566 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088044517 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120955577 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121402876 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094538955 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122993423 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168896354 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392891145 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12553869 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0918239 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114802007 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226548533 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103816607 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113238549 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163435346 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117181452 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097363189 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124971511 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123249663 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17111008 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.234102205 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123892527 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121764421 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092895003 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127408612 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.1172007 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212643068 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223714537 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16383165 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210965369 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123183854 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164953446 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.193812485 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097048332 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19899242 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097261043 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125928879 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123757479 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220821043 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148040056 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101567055 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117285848 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118770659 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14859784 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103912265 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12027318 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171882477 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481806706 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.17087272 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109537028 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104625061 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122089754 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162276033 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119538313 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262437628 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099335729 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.195425651 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097067636 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110663593 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120453781 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164473778 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12103685 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099039433 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123528147 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119349738 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237027913 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220604607 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098582795 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247390948 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186422815 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118390396 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173243456 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120881626 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169710799 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119143785 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099285178 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11795994 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790676805 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10103894 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122298986 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115658685 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188246762 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09093301 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125475892 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124307133 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086751672 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780448637 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128191878 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099044007 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125507374 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117910296 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097300101 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119579352 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116066336 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162703391 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234029914 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120407831 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099269012 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126950768 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161688404 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117258387 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123935679 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103484717 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126941053 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122353066 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092745348 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126331078 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169702859 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.188172279 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.197787079 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.601362789 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112377367 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102340532 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232039647 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113707442 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287972662 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097552932 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230070366 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163495267 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122108621 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315003863 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167325893 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187380473 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127605279 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174709337 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110228198 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095291226 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.189606269 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089925588 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11963128 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163297612 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125699788 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123054288 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937814944 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115659823 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224309873 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110239643 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172115052 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117352405 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095978871 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301176007 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113759352 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127224523 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166659587 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09233567 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.128169121 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.731231401 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10275843 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124832206 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119087324 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226541506 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.168438341 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120905137 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096519515 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121156018 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161831033 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231869436 seconds)
  done (took 44.249557736 seconds)
done (took 63.862271551 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280902332 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217425888 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270288659 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171747864 seconds)
  done (took 1.910984468 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172906828 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150630862 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122882047 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108824297 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151244008 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083743103 seconds)
  done (took 1.684204797 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.367201956 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279571358 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.248027682 seconds)
  done (took 1.793980934 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.31956733 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248598392 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474272781 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325465745 seconds)
  done (took 2.371543381 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211306152 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133644497 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110778254 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103111767 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199032333 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248629214 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143487914 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203633568 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.09838609 seconds)
  done (took 2.39944149 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199025263 seconds)
done (took 11.25692792 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.178636743 seconds)
    (2/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.169294078 seconds)
    (3/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.147994019 seconds)
    (4/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.157107941 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.226554036 seconds)
    (6/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.238883312 seconds)
    (7/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.265070127 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.193468532 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127425485 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.126113665 seconds)
    (11/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.103675855 seconds)
    (12/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.12253162 seconds)
    (13/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.218238264 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097367236 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117033578 seconds)
    (16/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.25166105 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.136606942 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.252050547 seconds)
    (19/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.254025442 seconds)
    (20/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.117661702 seconds)
    (21/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145763982 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.139706383 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.213011716 seconds)
    (24/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.190551468 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.172895036 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.172409013 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.111341464 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.14010023 seconds)
    (29/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093438868 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119351515 seconds)
    (31/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119075202 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.113001481 seconds)
    (33/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.177332324 seconds)
    (34/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.131682048 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.18280851 seconds)
    (36/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099675069 seconds)
    (37/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076479362 seconds)
    (38/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126466363 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.114261382 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.125621886 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117140611 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090632928 seconds)
    (43/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134651253 seconds)
    (44/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.201654406 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.17944634 seconds)
    (46/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.121126876 seconds)
    (47/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112333493 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.07649781 seconds)
    (49/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121728533 seconds)
    (50/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13337488 seconds)
    (51/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095681853 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.188314021 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.195167651 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.150123081 seconds)
    (55/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149504199 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.223995216 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.183534884 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085621359 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.110516194 seconds)
    (60/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.199342497 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.181691778 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104241224 seconds)
    (63/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.149644039 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.194895482 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.157558844 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114168202 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.217708757 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.154263624 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096948612 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.1101803 seconds)
    (71/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.212438421 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.154486593 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.190052724 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.257576717 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.155347383 seconds)
    (76/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120268435 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.179332253 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.1416724 seconds)
    (79/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118875651 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.150974752 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.138865804 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.109690914 seconds)
    (83/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107137741 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.110596188 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.098286834 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109804563 seconds)
    (87/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101093751 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110284828 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.119529058 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112871449 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.120957979 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091416431 seconds)
    (93/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.110032801 seconds)
    (94/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.161837351 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.219176285 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111343907 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094091757 seconds)
    (98/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113093769 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.142498242 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143588968 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.187082177 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.12322333 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.087980511 seconds)
    (104/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100397884 seconds)
    (105/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.147347766 seconds)
    (106/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.173664824 seconds)
    (107/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112443573 seconds)
    (108/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.125847107 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.153702359 seconds)
    (110/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094928939 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117596847 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067440424 seconds)
    (113/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066470383 seconds)
    (114/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.119646789 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.193874707 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.167113073 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.330839942 seconds)
    (118/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.090539147 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.204932158 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095629532 seconds)
    (121/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.148974236 seconds)
    (122/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094602496 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092077103 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087522584 seconds)
    (125/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.119111461 seconds)
    (126/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.123540477 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.179971548 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119235406 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.163897015 seconds)
    (130/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096748356 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119156852 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.172486182 seconds)
    (133/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100903534 seconds)
    (134/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120078385 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09130164 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.178922733 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116060454 seconds)
    (138/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101615908 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134289463 seconds)
    (140/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184586984 seconds)
    (141/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.157754157 seconds)
    (142/309) benchmarking ("sort", Float64, false)...
    done (took 0.171630334 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118094608 seconds)
    (144/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069017652 seconds)
    (145/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.193636303 seconds)
    (146/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.185677925 seconds)
    (147/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068118286 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.138644209 seconds)
    (149/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091532551 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109713518 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115120125 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119740868 seconds)
    (153/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.109377225 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.163722353 seconds)
    (155/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.091391774 seconds)
    (156/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068422603 seconds)
    (157/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066184664 seconds)
    (158/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110056422 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094004597 seconds)
    (160/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103542658 seconds)
    (161/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092208068 seconds)
    (162/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119224724 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.120777467 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112236022 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086280606 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.120090847 seconds)
    (167/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.175379682 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086627898 seconds)
    (169/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091720287 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087923665 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11631834 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.188658456 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066799328 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085419521 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12132985 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.186482415 seconds)
    (177/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067134887 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.143616279 seconds)
    (179/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069220749 seconds)
    (180/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116217762 seconds)
    (181/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.130971733 seconds)
    (182/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117804091 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067901556 seconds)
    (184/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115506735 seconds)
    (185/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.0683738 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.106394376 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137729526 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116069277 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086302086 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110751162 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085607753 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214121383 seconds)
    (193/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101678204 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095694672 seconds)
    (195/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089519921 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068305269 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092667804 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.139421519 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110024629 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108430466 seconds)
    (201/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091975133 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087191339 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212113926 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110556688 seconds)
    (205/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088200349 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.089778329 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113820277 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108789677 seconds)
    (209/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067171236 seconds)
    (210/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083563453 seconds)
    (211/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.091459382 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094055871 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090423773 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096991926 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.13514572 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094775706 seconds)
    (217/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109631535 seconds)
    (218/309) benchmarking ("sort", BigInt, false)...
    done (took 0.221019287 seconds)
    (219/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06627028 seconds)
    (220/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113228616 seconds)
    (221/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.125439686 seconds)
    (222/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.11308869 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.130665214 seconds)
    (224/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.0686151 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137100073 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068041979 seconds)
    (227/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.1356557 seconds)
    (228/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09562545 seconds)
    (229/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.089609324 seconds)
    (230/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067857959 seconds)
    (231/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134597352 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093708466 seconds)
    (233/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114827666 seconds)
    (234/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067154754 seconds)
    (235/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066802523 seconds)
    (236/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.16027331 seconds)
    (237/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.081856043 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111115005 seconds)
    (239/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096147372 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110495678 seconds)
    (241/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067453876 seconds)
    (242/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134870552 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.157478862 seconds)
    (244/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094498653 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190630404 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067247924 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.094192601 seconds)
    (248/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090914137 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.111584427 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067394648 seconds)
    (251/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.150322158 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087493515 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090393634 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087731004 seconds)
    (255/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066825233 seconds)
    (256/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.102678357 seconds)
    (257/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105249134 seconds)
    (258/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.091352121 seconds)
    (259/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.138477377 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.136842441 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115722646 seconds)
    (262/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112145495 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110807735 seconds)
    (264/309) benchmarking ("sort", Float32, false)...
    done (took 0.174508588 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087628131 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12386085 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093072076 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.140812077 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216922789 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067673044 seconds)
    (271/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069624794 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.1220809 seconds)
    (273/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.09241589 seconds)
    (274/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.092943923 seconds)
    (275/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.06765595 seconds)
    (276/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109487402 seconds)
    (277/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067811119 seconds)
    (278/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067274131 seconds)
    (279/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.100551436 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087181542 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.144038274 seconds)
    (282/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067480428 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118503655 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068856451 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110092086 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086764406 seconds)
    (287/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108591019 seconds)
    (288/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089304468 seconds)
    (289/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215801598 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108949635 seconds)
    (291/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.068308699 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095101929 seconds)
    (293/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.092384241 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087393107 seconds)
    (295/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.090531149 seconds)
    (296/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067719144 seconds)
    (297/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066676991 seconds)
    (298/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.100112555 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09365944 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.115605195 seconds)
    (301/309) benchmarking ("sort", Int8, false)...
    done (took 0.190048593 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.108199503 seconds)
    (303/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.091909061 seconds)
    (304/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069758569 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116596566 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223484672 seconds)
    (307/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.069070702 seconds)
    (308/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089104067 seconds)
    (309/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.092655025 seconds)
  done (took 39.741739015 seconds)
done (took 40.647244112 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100875761 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149476853 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095634997 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137591391 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124420437 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09204223 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119120738 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097366085 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125153075 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125112752 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09815974 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094304931 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097343918 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121969188 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096355304 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140770613 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124148127 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094527428 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120864503 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086297969 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120888475 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086039547 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114543348 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069642224 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122506509 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094118759 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118851529 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119854072 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087347047 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111488158 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091591946 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118224181 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088057617 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125920424 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093998487 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120206213 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097601932 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123007576 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088225529 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11313114 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118136562 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08893197 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117598749 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095478525 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117311991 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093591429 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120284366 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099821815 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142429544 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116388062 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096319357 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122021554 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096505753 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119645397 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091244783 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120779005 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091688878 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141421921 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.123398362 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092999988 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121620743 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095439842 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.120207295 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09556168 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121687154 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12237894 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098886509 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117206259 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097298762 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118234888 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087370062 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120350409 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090448394 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112807414 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096544735 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123586097 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085693118 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.120178999 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117302769 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092736997 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110036037 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09030213 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112859243 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094330541 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113611967 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070970665 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090003298 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.11993721 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110834765 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097135009 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116966132 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094347842 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112931987 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099377458 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111778904 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092880673 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112831614 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088159845 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114960596 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090717286 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112434048 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08963761 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121521059 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088011954 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119079692 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123726667 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088252253 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118315901 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087871836 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111420842 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102532624 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123222608 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087127203 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118959876 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091313851 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120803194 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086473581 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112926718 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086547705 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113316801 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.094642426 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.114485054 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089268118 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.12157667 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126543921 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.091067473 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11504627 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090820705 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112717932 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094092448 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112888857 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088015306 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114209061 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081793097 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115300291 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090979538 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120437288 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092592165 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121778118 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.091417535 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121142406 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092469985 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.120190632 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094846039 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112738006 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075265892 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118837419 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091298736 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114762937 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08729931 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114693416 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087052477 seconds)
done (took 17.128777194 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090835322 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189304386 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153212091 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144161648 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10717996 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115344689 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122965868 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121586672 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115641146 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145767262 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112557842 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135704355 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150484668 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.091438292 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114328937 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095231956 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114683852 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103026745 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.151578603 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.140146388 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.170821683 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.091547811 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.151324213 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141925782 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.124767701 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.111048875 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114561572 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092416435 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.117349254 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115305987 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13593134 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090651994 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.118950934 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136577359 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.109845229 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122666609 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.092841042 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121973133 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.091846059 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11557709 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143496766 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109301728 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.123666053 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118849637 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093227151 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115275642 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089700135 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122482721 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098084419 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118802128 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128601236 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159604056 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092488377 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123839781 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087486538 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125538042 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124620977 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091654884 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113606753 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090814457 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112907811 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092645939 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129336064 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143365975 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092754973 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123712675 seconds)
  done (took 8.803510438 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106872904 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140942839 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.122616195 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.134117698 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.1134056 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088052412 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113784165 seconds)
  done (took 1.791345978 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088887249 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135503035 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112414288 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139131922 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13323203 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110612303 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125250772 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088159978 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13417062 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089644977 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.138203347 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153295738 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089930942 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12230931 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139560868 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090128626 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138713764 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088845153 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117762028 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111562694 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119305389 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135796225 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091615819 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114542087 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10310121 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116010676 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163086179 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094426526 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116077426 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092565547 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112956231 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167696988 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104829154 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127350112 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088436022 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13239281 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129486084 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08730375 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131307273 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094174998 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.131235859 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089357314 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11736396 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087493825 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120917588 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124336634 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091560134 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115194071 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093323271 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13672838 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090034686 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128803222 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089267229 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120292129 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090133129 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122559601 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12406133 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091377917 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134632573 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091453573 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131758203 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105448605 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.131631194 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131192768 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091585056 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128600237 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10309352 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118383552 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089929424 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120156136 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13195399 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089701189 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116300492 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101464124 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117277725 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112998806 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.140137327 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089733811 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.128263511 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114914001 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090643738 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114873446 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113073428 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11986104 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089979589 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120248566 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09239893 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113779545 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087631222 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119246022 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087692386 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117194804 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091960477 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11862276 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11671129 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107031667 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115749404 seconds)
  done (took 11.944815265 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091050897 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115360566 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092878372 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115628985 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091368449 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116160329 seconds)
  done (took 1.598667801 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115947227 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119183313 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103724072 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123556907 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157601928 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104340946 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.133716752 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125565559 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107460384 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130690179 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130118565 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105248536 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.139541764 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121782861 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104589029 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122385814 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.131530844 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101558991 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128239735 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096988118 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140328049 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121293969 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097087987 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.135410223 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119437476 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097259448 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127362952 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10262676 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129710804 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124610727 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097376397 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119235372 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096532272 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126728275 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131321873 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096450367 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12425213 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120328459 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101614447 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12021546 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105263584 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124989787 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128154905 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095372192 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125646953 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12270262 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09490975 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126877026 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104479102 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122035501 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120147244 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096308747 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119905141 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094125506 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.125444484 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124133523 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094893757 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.133100627 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096197516 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.127897865 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119732034 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094132824 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126592287 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119689796 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.107985298 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120429455 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096716178 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124654082 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123700571 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097101896 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121275827 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092845201 seconds)
  done (took 9.341572009 seconds)
done (took 34.447428134 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.692022009 seconds)
  done (took 1.672011588 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.724106164 seconds)
  done (took 1.706905297 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.312646912 seconds)
  done (took 18.288013407 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.518082683 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.6024543 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.895008339 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18397341 seconds)
  done (took 3.178031717 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.960126904 seconds)
  done (took 1.961299938 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297576105 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260823463 seconds)
  done (took 1.545126336 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.781179951 seconds)
  done (took 1.770680111 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.405674596 seconds)
  done (took 2.388875843 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.339410929 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185434375 seconds)
  done (took 1.521493534 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.555004199 seconds)
  done (took 1.551133892 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.237338878 seconds)
  done (took 8.241768461 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268060981 seconds)
  done (took 1.274691108 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304141905 seconds)
  done (took 1.295002218 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.577711044 seconds)
  done (took 4.579405915 seconds)
done (took 51.966756967 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100230221 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127702848 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10343041 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125311326 seconds)
  done (took 1.450946238 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.103661389 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121259401 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.1003867 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121901722 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126457734 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097055784 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123106486 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100666302 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121449896 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097460795 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121567602 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120911603 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099382376 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122755386 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093256167 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124969757 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099772036 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122919695 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124972666 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097185585 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118801892 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098254293 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127667864 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09382896 seconds)
  done (took 3.682918951 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105812077 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119183932 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096938223 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118180706 seconds)
  done (took 1.449818387 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103634939 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143040149 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13934009 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100080026 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143402948 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136647675 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092602593 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117487171 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094924288 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125830018 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091505248 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151779273 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138639567 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100307412 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128801135 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088737123 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118222348 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13827196 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100603076 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126898175 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095431355 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126661919 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09004795 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140399388 seconds)
  done (took 3.838748616 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175280431 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129096441 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138821753 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096046284 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161871709 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141712957 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088693445 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141812614 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087660091 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132383685 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118307123 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133082053 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129735448 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088208951 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114379209 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088015035 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129833845 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129048942 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092077556 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127563362 seconds)
  done (took 3.456104036 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100909121 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11773866 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088709068 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116289733 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099639947 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121707778 seconds)
  done (took 1.654191574 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093728584 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114773646 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090718059 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114502807 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095486332 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115682651 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089534034 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114640116 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089846963 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115009934 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090023101 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113586428 seconds)
  done (took 2.250744596 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.468186077 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093509484 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121257969 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.114419826 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097552934 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115864469 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103838365 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.1199927 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140737356 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089526402 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115260027 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092681851 seconds)
  done (took 2.682722355 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237389836 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126842081 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29037923 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372122931 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160591119 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17903887 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282902124 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166156078 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.227006814 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169025344 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207506878 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22901664 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15530073 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189506185 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139276426 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119826264 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235568614 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252973234 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15523007 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211362967 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233434445 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169230845 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182615019 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15228071 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139038969 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173583999 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094723888 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133390325 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237909076 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18071575 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218630354 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166166049 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147788863 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213808489 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261038323 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226604949 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292117722 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112296654 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.179303129 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169295597 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272093624 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13968968 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206596142 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156887349 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133275189 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19241844 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194694905 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178156141 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.154043441 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111461929 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227320875 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243276135 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196710429 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140510916 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304226694 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156316568 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.177467886 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225204422 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229389944 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232677133 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188878914 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122732903 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190187682 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219813981 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186689312 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.176841506 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180577799 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150695683 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230917739 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191292548 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167789447 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224270237 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.189719154 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142895215 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171788803 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175674064 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176157764 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264632091 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191301544 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123292991 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171819657 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15209658 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133610431 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168743578 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126050978 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244306409 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122290375 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165962131 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247730291 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160453751 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161753181 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206687109 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233913352 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149345115 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084351432 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155856765 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156709061 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197403362 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141940109 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161126284 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164186245 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130954504 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187867795 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124570338 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185862314 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090637428 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202399957 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185172433 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099366771 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163269151 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152933012 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15344885 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17588626 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228982823 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118510406 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13743786 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239673415 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187829009 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.157729809 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180848026 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204201727 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147774284 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152399805 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207141154 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251134267 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147678671 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211980902 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165581977 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138468134 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134406053 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189205438 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155585293 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162752579 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10980361 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.2144706 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217024167 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.133991156 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116306387 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229684774 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139653055 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106726275 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166464251 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154490509 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141605577 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.155291652 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155603694 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185366493 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17885627 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155607879 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166990582 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155986101 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260923055 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150689953 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153394509 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149858857 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093727328 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.223735742 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203950494 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132617343 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207678094 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174580961 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233716575 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177360924 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13512611 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179157816 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103583814 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122731655 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195738732 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170247551 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164192449 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.230747885 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206743677 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.207832124 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186002878 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176445671 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175704626 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168971461 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158911956 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142194429 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164300233 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175074248 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095328558 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146847262 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13600197 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151521664 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145184411 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106020806 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230248897 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172285025 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22086125 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135691425 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152324492 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185121405 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133141797 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17508118 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.209992592 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12644874 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.234481011 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19886034 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21646438 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11740747 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234784855 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093450472 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128204365 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144090431 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173111648 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135344317 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109135981 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167156166 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18547572 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215291636 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181355075 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241399066 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179976098 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19290996 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12407312 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141385736 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217636064 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181663027 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.195013488 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123125123 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153540516 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180541827 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16199367 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26168126 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173925639 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180410783 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245331965 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152535523 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10501937 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155817512 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230201778 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158180155 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180309623 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149631237 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141751117 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167877924 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106848796 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161836473 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216169899 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165871964 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192285306 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.160158847 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194370852 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137524797 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171092662 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165812437 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169887759 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082019497 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206443223 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2116815 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158534125 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172776134 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222828461 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11082211 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309288416 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252406145 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199090407 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140936277 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159986888 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164063613 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167649662 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173254571 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18230491 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162495007 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191684013 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162304657 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140882842 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143073394 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150050356 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122553032 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134326639 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151034952 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17965456 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14324637 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188458782 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166209708 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160241128 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176002095 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.156760856 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147252588 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152994504 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219031844 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216359659 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2174741 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.154202835 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.185745928 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240733279 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099196991 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135727496 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136765075 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181802207 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11472079 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227975766 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.196807306 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23944639 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191880036 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201336776 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147198971 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122299373 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158793688 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182543865 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216106892 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159128412 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.164740796 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240515422 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125483516 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136587902 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182624102 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322862792 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123304517 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232016044 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080679808 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286147253 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133246508 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134145033 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138452129 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240849294 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138700866 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.192824193 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180623234 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173628564 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167649409 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153540581 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194213038 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249091185 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20307925 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182422956 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.136841824 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158642261 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17966515 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22385583 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158393423 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113336112 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23733199 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203740611 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.201089908 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145346075 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17443422 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171832888 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160956417 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222158582 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112667551 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241102444 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14015175 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195891804 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156669703 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146309686 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179847476 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190421013 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144969849 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220776718 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185098379 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136682816 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106568994 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171344242 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211009898 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159112234 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099923584 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210304641 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098224185 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225329857 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236224412 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137910552 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157152495 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149092055 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108119582 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156135964 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159695398 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142995067 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168784552 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210105642 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138574245 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194418857 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237833882 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172301601 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177223849 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146282998 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69659073 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132415353 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19603802 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1630678 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239717688 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149739983 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173969765 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159576967 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168909576 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199305083 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163588755 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234721211 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193626186 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.210795239 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104969918 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160304655 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166319023 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147402857 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152491806 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171201999 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162992843 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.157705308 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179612009 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202874278 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10755078 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142993508 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202147728 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163000914 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213969912 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18350578 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111093462 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176716169 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219791386 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134000113 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182896648 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238620888 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115111224 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155717515 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135436662 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.159819381 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266519332 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100471514 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239692481 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191357168 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160548668 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170712074 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150790834 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194653153 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160398536 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217762111 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147950457 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161415828 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157091963 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110841756 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132494588 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157694145 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169469739 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151323838 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160561661 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139684301 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224349013 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096239266 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148714277 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293975602 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226456442 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217326579 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138421697 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135788944 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163814216 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122746205 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.210091644 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180504078 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136644153 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109588819 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139748838 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159105289 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113020352 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158906073 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199714544 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168201921 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240887932 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113693513 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281282908 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144794045 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157521283 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088337526 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134374042 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153317839 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148726684 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16233262 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195008327 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267518624 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148476587 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105673139 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152367422 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127708253 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108127479 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168796355 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166038986 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209277999 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146972114 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082543613 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158548859 seconds)
  done (took 84.910067171 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164791986 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131626452 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147302556 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201924461 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178027307 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271322523 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211360883 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254807342 seconds)
  done (took 2.66570412 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094154153 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146396337 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15989692 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134816786 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091629509 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121722037 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.352512243 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135621291 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116644491 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121692954 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.176069505 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094259268 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.562731077 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.093454798 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121858259 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108531609 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092734437 seconds)
  done (took 3.81571113 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.487457477 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.726535952 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.517983848 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.10003011 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.224589604 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112939755 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.758673365 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198125879 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115237003 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.486690379 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.778524611 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.165438175 seconds)
  done (took 18.773121699 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099291897 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121349846 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109043535 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.13653326 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096061457 seconds)
  done (took 1.676098257 seconds)
done (took 133.301760224 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104630213 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409097442 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07204365 seconds)
  done (took 1.62479633 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107888477 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138420977 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10929308 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137673762 seconds)
  done (took 1.605343568 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098476507 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127263432 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109211279 seconds)
  done (took 1.441749997 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.327186685 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191988089 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.164887857 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106702991 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129620378 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103137406 seconds)
  done (took 1.447446086 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097564697 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128467036 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099392408 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130706962 seconds)
  done (took 1.566860424 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095587314 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071217623 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103593493 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075169431 seconds)
  done (took 1.45041644 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115421955 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133265964 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104858106 seconds)
  done (took 1.462386308 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130959338 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139235327 seconds)
  done (took 1.379284863 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106552081 seconds)
  done (took 1.211747535 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.11925724 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171165276 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.19153521 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.168342182 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.231267862 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.16647559 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141670164 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114521955 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132026786 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145355474 seconds)
  done (took 2.693911809 seconds)
done (took 17.784783457 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102938898 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.515037761 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413055048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1168454 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721764795 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380964669 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033687184 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146907882 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167017331 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093962205 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140426662 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672803285 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.02499301 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.470476823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.984892725 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467763359 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677122024 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12154452 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12018543 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094336245 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018325547 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092673766 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122669405 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092347451 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703298803 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425212725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095201668 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.466916701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092015544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127021548 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383782534 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12288802 seconds)
  done (took 17.301191577 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09540717 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174124933 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098583809 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138610617 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124088691 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094313083 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124931544 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093946957 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180205556 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1232105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111491789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121947026 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127037325 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095391246 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143256686 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092851048 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125530602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092768987 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121640944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122362422 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112123951 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120022446 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09401067 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121530301 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093145075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136247671 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123017367 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09383678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121116921 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09943904 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128411765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094721219 seconds)
  done (took 4.851546313 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14141661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183280856 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129270761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1265903 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168997417 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123887331 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199658728 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118128778 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183662538 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122772075 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139923052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092737807 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157506378 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122815087 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114177745 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122334711 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096529815 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122971246 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092276633 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124426137 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14019806 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092963839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12271155 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093221696 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.1239551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107608957 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124665741 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122090845 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093886512 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127100009 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099446954 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124931293 seconds)
  done (took 5.174888053 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097467599 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127353545 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108924424 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140021806 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09499289 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127246073 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097214556 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126757801 seconds)
  done (took 2.033211444 seconds)
done (took 30.466720975 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113107138 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128125155 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106327182 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136330147 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103154146 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133505401 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091663849 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136653903 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135574681 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103265788 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139685112 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092153162 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125114836 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092531711 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137267298 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098144792 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134429062 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102640091 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13593786 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133650625 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09585084 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135303869 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102857802 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134790093 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105045417 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134961962 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139048073 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100783451 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12448252 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094981185 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126412132 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.106484418 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125594752 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105663611 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12833607 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097400708 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125748282 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09418841 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135441538 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133824296 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099850871 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134362842 seconds)
  done (took 6.070936796 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108437926 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141352827 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105367555 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081382711 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119202084 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080783598 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140914784 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079332621 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112206922 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107926196 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075259673 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108181986 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078374388 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103526192 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077851154 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076154764 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110854191 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075943067 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076708063 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107868853 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080700444 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072975573 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109805735 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079021473 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075084921 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111821387 seconds)
  done (took 3.619566827 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10077223 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137205307 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112699221 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186337512 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.171845493 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100944377 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.135079077 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.142628211 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108662317 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122672452 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097034798 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.1525237 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111611732 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.13107014 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122828127 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.10908609 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138223598 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094877172 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129699485 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113502157 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140993138 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103121077 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.146023482 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135118004 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092221102 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124969932 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096456474 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13784294 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09806376 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.134565037 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127771525 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097775174 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125833975 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105023112 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127640844 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095169862 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144287712 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133853924 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101976813 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123635668 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096327185 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123836312 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113916822 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169654902 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091282852 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.134453939 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.13148483 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103705859 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122653529 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110528199 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133191739 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091651994 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127368682 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092266436 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123878156 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105881935 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.128005851 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124944995 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102861621 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126654976 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106732384 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128177597 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108610868 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123965051 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100606697 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.123550053 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093474932 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.125481074 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146115232 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095114087 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166869864 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093648009 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126046918 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.13252447 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101482272 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130049313 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093268601 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139517236 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102932545 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127584142 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102481545 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127628974 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095452633 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.145135187 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125536708 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095515742 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124384339 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099982349 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125830684 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094415341 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139039525 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092677947 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127280002 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110903909 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.125093949 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123947886 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100343181 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128444861 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092199689 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136641928 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097553693 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124654668 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133344577 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094599493 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125692196 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102747668 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128711519 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092045111 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128795003 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099292658 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125049565 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093850493 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127363906 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09506142 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134101909 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099748087 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12956298 seconds)
  done (took 15.009896288 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229881472 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217122441 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.242608591 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264156839 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137430016 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114055644 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.216203364 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.159072622 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125343418 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.1626981 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163543728 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.185323198 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140773122 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182109342 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.142166632 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123333878 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113388899 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.167275637 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21716685 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.29739832 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11378082 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134362197 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.165621381 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.165149501 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.108471213 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136130823 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141194941 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.10507025 seconds)
  done (took 5.811705564 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109177376 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15767143 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09905789 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147905651 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150534092 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093093731 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129884617 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094576954 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.139827714 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137501677 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092504238 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131614245 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099915185 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.135547965 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124887867 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103490394 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133461496 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094312495 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128056017 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09827852 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131756106 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101939447 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129238669 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092362842 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136118081 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123473895 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086479039 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144127975 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093089358 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.147867431 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122875806 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099900663 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135647524 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094517404 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125469897 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095127363 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127238596 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095312807 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.127547798 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092240889 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123886724 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078303388 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124388796 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106777761 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.132502534 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080391442 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131387405 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129861605 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095373404 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121546023 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09690307 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126809083 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097421729 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131664195 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098706468 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125098604 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097564434 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118431043 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100457262 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126246554 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084936652 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12239656 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099143476 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119298397 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101611755 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129496614 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092719263 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126957185 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097838522 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13138916 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095387275 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128021375 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091617856 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.128602722 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09618624 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130272824 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097022935 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124066641 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093371537 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.126593862 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075880104 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124770697 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074732699 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.128554892 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092342388 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123900023 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095545929 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13186414 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138489615 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095523224 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.134019389 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094195588 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123867894 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096631989 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115440779 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097590066 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140314569 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141759572 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094662585 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123239803 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107772795 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12782646 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092991342 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108259487 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101194135 seconds)
  done (took 13.099562173 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128490693 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155670436 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094828346 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.147254126 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158027671 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159606326 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101731477 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132411849 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096443997 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144503508 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09428621 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.134226048 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09772338 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139231318 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15941095 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103244812 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127810668 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107309281 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133948095 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171916859 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112842207 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144507116 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108270545 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126758854 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098943197 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.145405826 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163590961 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108036487 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139970813 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143755884 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109035882 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163736743 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113448733 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.131904282 seconds)
  done (took 5.556508017 seconds)
done (took 50.285790415 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.22427526 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.472731494 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.22089079 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.211336403 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.27355632 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.228191033 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.233219279 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.22714309 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.434067637 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.21946278 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.457552542 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.86106991 seconds)
done (took 59.213743298 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.282748104 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.358212411 seconds)
    (2/2) benchmarking "String"...
    done (took 1.486789853 seconds)
  done (took 3.991132226 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.57115805 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.312190796 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.483792731 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.219180716 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.222738701 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.511900046 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.892677519 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.581116471 seconds)
  done (took 28.369468657 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.222180929 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.612047476 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.065659165 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.059469372 seconds)
  done (took 19.108051133 seconds)
done (took 61.46967569 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.202374413 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.262366141 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.234904497 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.200668403 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.339603743 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.243626375 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.575583216 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.288994173 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.241973936 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.207668041 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.245942562 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.22320799 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.229941338 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.572702308 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.223147935 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.220770595 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.236868391 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.815703386 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.640881503 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.241621646 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.22860368 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.261212217 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.233806519 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.222629615 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.277445305 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.225583401 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.232926274 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.220559639 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.813993004 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.223955849 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.242041475 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.725987825 seconds)
  done (took 191.506904757 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.221710827 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.33761187 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.460030446 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.28634671 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.725052417 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.422224364 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.359025353 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.801717798 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.245168659 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.249662514 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.411130694 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.222715665 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.450428403 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.21634237 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.231855713 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.235061684 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.546674589 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.481991099 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.238729555 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.495416077 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.229224052 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.314696872 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.252912347 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.382035979 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.268144438 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.332308474 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.231241521 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.233473554 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.416076482 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.466019069 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.253539165 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.254124501 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.85642466 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.084152663 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.231091384 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.258781976 seconds)
  done (took 150.853190647 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.524729932 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.224689497 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.223978066 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.224076852 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.256615953 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.223326138 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.813984788 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814810941 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.724053553 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.388732171 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.286755181 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.546772772 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.222711993 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320529214 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.238251779 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.224595358 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.240087767 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.269208914 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.223385365 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.225131336 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815840849 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.239258458 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.258963489 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.231009146 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.224979391 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.257890884 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.615893374 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223533121 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25708376 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.559487867 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.276346069 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.22468725 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.643603766 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.365974724 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343682119 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.226912798 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.258545266 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.224780692 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.506104158 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.226543344 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.2252696 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.229402351 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.919263332 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.2264255 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.801867224 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.22611307 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.202532714 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.22607724 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225595634 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.540032667 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.944251475 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.244103566 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.227864098 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.228660423 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.227380479 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.227921653 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.228921397 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.260551764 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.583550377 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.325469599 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.245492247 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.231016458 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.260442499 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.227198598 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.274193074 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.231385598 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.51830229 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.305622568 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.336595638 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.820372593 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.231643452 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326476533 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.349291669 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.227546024 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.229867749 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.227098983 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.228007514 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.338148748 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.22739059 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.227812145 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.225846933 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.666349108 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.232341109 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.229084211 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.28791039 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.324129415 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.22637658 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.638934113 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.232416583 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.227084521 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.033935354 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32682288 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.22733994 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.227584048 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.227661119 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.663863735 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.8176612 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.523404884 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.232066862 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.542386877 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.23236013 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.683192416 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.795381139 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.934258036 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.233698531 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.228477908 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342832722 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.231846421 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.231439411 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.230015136 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.259863418 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.245561899 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.287652341 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.230442506 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.627932718 seconds)
  done (took 349.124838622 seconds)
done (took 694.158105732 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.907689585 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.902026354 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.009685592 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.889131894 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.851826779 seconds)
  done (took 10.71698875 seconds)
done (took 11.873987824 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.424347446 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.427434585 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294981662 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.425131757 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263528265 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.442116828 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403809326 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.256653763 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.332564103 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.316912789 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.337278809 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28829006 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.258864038 seconds)
  done (took 18.627909539 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.559104015 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.571455526 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293607366 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.559982893 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.269775082 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.554147149 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.434332204 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.441826845 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453192155 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.264994451 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24342005 seconds)
  done (took 16.802866215 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.559239676 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.557350202 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29900843 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.579317316 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.272662406 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.563045905 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.440631192 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.45260364 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.452415349 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.266334152 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245012525 seconds)
  done (took 16.844988212 seconds)
done (took 53.432055113 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.240689989 seconds)
  done (took 2.399419128 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.274053776 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.438264374 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.258865604 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.2467906 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.240624309 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.241060263 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.244314113 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.240520562 seconds)
  done (took 11.341933905 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.236976995 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.235706042 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.236331457 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.238262799 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.237050717 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.239160418 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.236234467 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.240140692 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.235682839 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.235049659 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.242883057 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.237564396 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.239063198 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.239374837 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.235739713 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.240583044 seconds)
  done (took 20.962715953 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.239042637 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.236959873 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.235350351 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.237790176 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.237272218 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.236197213 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.239906557 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.235421249 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.23735674 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.237406817 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.237416463 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.237994743 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.238069614 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.236256322 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.237160641 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.237540131 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.238321001 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.237304289 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.243321734 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.23831082 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.23874055 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.237871605 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.238770639 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.238710798 seconds)
  done (took 30.870100472 seconds)
done (took 66.731190665 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.407271855 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.063654657 seconds)
  done (took 9.630786709 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.240756009 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.24049382 seconds)
  done (took 3.643035905 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.240128248 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.239290838 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.240074738 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.240475534 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.24071403 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.241056959 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.239522992 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.242082958 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.242607115 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.240406543 seconds)
  done (took 13.566546926 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.240527122 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.240980253 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.238486602 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.241348306 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.24147301 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.23871006 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.240920225 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.241771918 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.240901608 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.239420591 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.24190717 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.239732154 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.242454194 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.239024455 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.241432748 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.238643161 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.238705475 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.239889707 seconds)
  done (took 23.487824695 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.24245192 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.241183504 seconds)
  done (took 3.644204975 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.240361891 seconds)
    (2/7) benchmarking "second"...
    done (took 1.239365393 seconds)
    (3/7) benchmarking "month"...
    done (took 1.239033361 seconds)
    (4/7) benchmarking "year"...
    done (took 1.23983618 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.241526363 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.240162594 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.240258228 seconds)
  done (took 9.840826763 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.244231205 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.417128903 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.498967031 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.852575811 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.243820221 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.246862989 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.105347505 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.246635074 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.248152549 seconds)
  done (took 14.264224323 seconds)
done (took 79.235876447 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.273212191 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.25673767 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.506038978 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.245058962 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.254200865 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.582176147 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.275234548 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.369023057 seconds)
done (took 37.922629242 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.253126888 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.06249586 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.075975007 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.239177903 seconds)
  done (took 11.541110127 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.224178115 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.20331821 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.238507124 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.278162184 seconds)
  done (took 18.108770983 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.291677763 seconds)
    (2/2) benchmarking "read"...
    done (took 1.576889577 seconds)
  done (took 5.032831141 seconds)
done (took 42.097368036 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245442812 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.243922677 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.245149414 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.243113859 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.245325065 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.242540206 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.242914173 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.251548762 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.245162462 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.245010765 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.245184347 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243740705 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243060785 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243121374 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246041149 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.243291729 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243512746 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.242702622 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244014581 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.245003813 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24603851 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.243868847 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.242135454 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.246873048 seconds)
  done (took 31.032359689 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.245503524 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.244203702 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.245975482 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.246330295 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.242414173 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.245287928 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.245198419 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.243002388 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.246381033 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.247707918 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244079652 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.243081498 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.245585808 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.244758976 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246892872 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.24261575 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.247327382 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24445112 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245934914 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.244726893 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.248030455 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244154622 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.244981465 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247494345 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.244197295 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243636636 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.246899624 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.24452372 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246458915 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.245354609 seconds)
  done (took 38.522308181 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.252895859 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.252274412 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.247075946 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.246906487 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.246117333 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.247427907 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.248637913 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.246786962 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.246788084 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.247093648 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.247644976 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.245946548 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.247230303 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.247239004 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.24569758 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.247110205 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.246410127 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.246964083 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.246666458 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.245939876 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.248204691 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.247427179 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.246200898 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.248424026 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.248554802 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.247614435 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.24836859 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.247103398 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.248339281 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.248085064 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.248118449 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.24862368 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.24945213 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.247098432 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.248622237 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.247081289 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.253467726 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.254577781 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.249139332 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.249273693 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.248789225 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.248037001 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.247548353 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.248113475 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.249555383 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.24880013 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.248166894 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.247913275 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.248825677 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.248562008 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.249169221 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.248096764 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.247918976 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.24788376 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.250711533 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.250457089 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.25101047 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.246968975 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.246041863 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.247459999 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.247190542 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.248107949 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.247059425 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.249045398 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.249625254 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.247414384 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.248172123 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.247231207 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.248513792 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.246673743 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.246254169 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.248131346 seconds)
  done (took 91.034003902 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.248747393 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.244951187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.246392782 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.245809864 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245052836 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.247409954 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245740013 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252977264 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247383525 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.249447675 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248196966 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245607379 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244079218 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.248112418 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248470086 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.247488379 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248613362 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245455991 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.247612089 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247922084 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248265649 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.24420049 seconds)
  done (took 28.607784769 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250769655 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.250237375 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.245990284 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247570861 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245067403 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247831384 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.247580012 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.255169484 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251151127 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247817277 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244622068 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247847761 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245657278 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245125963 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24649968 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247481263 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247844021 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247204231 seconds)
  done (took 23.627064126 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.246109232 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.245805838 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.248351533 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.246578937 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.246461833 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248464848 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24703082 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249095379 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.249378038 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.247660284 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.249534167 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249744554 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.250399068 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2470289 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249341749 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.246634717 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.248932851 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247882839 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250741803 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247288323 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.247143616 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248555122 seconds)
  done (took 28.624418958 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24859732 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249586998 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.246298017 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.247490721 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247285182 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.249407393 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.249397105 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.247996436 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.249713336 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.250434765 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247782454 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.248791595 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.250316506 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.248847658 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.247340842 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249001287 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250401641 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.249797758 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249422904 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.247713431 seconds)
  done (took 26.143281874 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251392885 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251831329 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252479255 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252225672 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251603526 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.251197314 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252480554 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.251585775 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252562822 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253211415 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.252130221 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.252152095 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251705746 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252016756 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2529444 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252240199 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252715676 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252328909 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254165055 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252863357 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252967709 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253517129 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253532512 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.253911533 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253567111 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252953629 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253024857 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253785342 seconds)
  done (took 36.241208426 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252877775 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.252437947 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.250736138 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.250591797 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.249958245 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.251715892 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.251158816 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.252091723 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254216825 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.251029572 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.25438508 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.252953894 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254285009 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.254215784 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253440067 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.255215641 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254470115 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.250453988 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251933399 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251607492 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.25503799 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255539814 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.254512722 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.251531741 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251834644 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.254297427 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251772783 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252069386 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254889552 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252891071 seconds)
  done (took 38.755491778 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.273370778 seconds)
    (2/2) benchmarking "in"...
    done (took 1.272928792 seconds)
  done (took 3.719442645 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.251627853 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255100717 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.254286129 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.253850386 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.252786814 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.254709141 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.254115862 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253181305 seconds)
  done (took 11.202048463 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.254191536 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.255149168 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256414549 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.254767604 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.256617704 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.255512409 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263535318 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.2759898 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.255827356 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.257248415 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.262291534 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.262861546 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.258757773 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256514112 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.256690689 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257472485 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.256326167 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256396368 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.257295966 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.256817887 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257255962 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259218016 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258389946 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.254758051 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.258332318 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.268218824 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.28301614 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.257143552 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256486221 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.261062903 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.257507515 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.255103682 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.2582904 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.259044329 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.262045264 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.258162975 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26683607 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275845707 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.263970865 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278501459 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257621113 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.258045996 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.260508555 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.259641486 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259678533 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.259322459 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.258807868 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.255293709 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.257890901 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.263504932 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.263858793 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257499671 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.255097836 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261655652 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.259582497 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265584629 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.278900424 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.263355815 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.267703208 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.269319336 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.292896077 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.285978964 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260333587 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.259550162 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269950206 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.284671203 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265441223 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.277504501 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.255921131 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.25941367 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.265222508 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.291044764 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.287515333 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.259462746 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258487234 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.258645997 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259288138 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25916132 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267057584 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.282433746 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.259374909 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261144737 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270530836 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280902334 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.258662661 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.259561693 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.260943742 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.259583913 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.261936552 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272218853 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.277933413 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.260873622 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.258163139 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.258383187 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.261540244 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.260904228 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.25841724 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261735332 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.257621248 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.259643761 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259631119 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263352761 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.267990798 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259253186 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260236261 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.270535796 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.28073873 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259223467 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.265322964 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.259871233 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260498727 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.262175037 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.266465923 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.260573034 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263266763 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.267315159 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.259500768 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.261019462 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.261217839 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.260818705 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269784878 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.286232261 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.260844845 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.260386127 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.265973996 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.272697767 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262241267 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.263713391 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.264412033 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.258653888 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.25742966 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.262439282 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.261249424 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.260555114 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259887665 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261794272 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.260923264 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.261932866 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.260654399 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.262586179 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.262914118 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.260805206 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.260577733 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.263103047 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.262558054 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.262775275 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.267778779 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.280713556 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.263541965 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.262956753 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.260994481 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262309629 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.262720131 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.263585127 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.263169217 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26183581 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.265279777 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.262859188 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26505313 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.263722446 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265669054 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.263720254 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267530719 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.264335995 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.268369712 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.264018886 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.262400523 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.265137111 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.264073922 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.264925509 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.264381681 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.264498954 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.267885847 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.270904773 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.2648727 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.263906382 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.267584834 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265837995 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265099658 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265593065 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.269253229 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.27276987 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.264810862 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.272642712 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.28566109 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266696682 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.264850428 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.265174852 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.265191967 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265830433 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.269812315 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.274465259 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280132439 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292610482 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.267868518 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.271029468 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.267239542 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.270030888 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.268969861 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.26572362 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269015435 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264204205 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266025231 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265408074 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.268269683 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.266113552 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.265034426 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.268857995 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.266857791 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.26587376 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267381198 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.266367688 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265052724 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.264360122 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266589997 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268447864 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.26674278 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.261896819 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.264060877 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.26587679 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.266806014 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.266399432 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.27168256 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.263218332 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266997579 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266725252 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.266001309 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.265856494 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.265423672 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267566903 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.26602456 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275205856 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.28585934 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.266608193 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27280948 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.284178666 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.263937746 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.268569265 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.266201354 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.264912664 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.266972402 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.273427806 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.265733222 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.265066307 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.265678308 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26677325 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266270524 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.271930608 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.283156656 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.265409673 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.266890842 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.267285198 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.264217623 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.267775996 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.267046708 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.268289113 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268298188 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268077686 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.266986691 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267122806 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.266910115 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.267010011 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.266247474 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269779473 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.273752417 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.271690695 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.267033886 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.267234516 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.26761731 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.271185641 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.266106648 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.266773133 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.268019091 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2811057 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.292769547 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274594292 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.289739252 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.267740456 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273211647 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.287930009 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.27133445 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268569482 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268202199 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.267939871 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.267792508 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.266480472 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268296521 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.267829348 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268061846 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.268938098 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.273157375 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.268029078 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.26803224 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.268151348 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.268013418 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.269467599 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.268158884 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.270995939 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.272180396 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269389493 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.267996631 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.269799811 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275840085 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287743527 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.269932631 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.268085378 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.268466908 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.268023302 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.270517449 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.269753981 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.273406118 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.276745476 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.273449272 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.278064842 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.270455408 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278513269 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.269756501 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.272788343 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.277355534 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.267839137 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.268205203 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.270392276 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.270673889 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277953567 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.288145642 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.271640268 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.274306518 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271560848 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.268961094 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.27051695 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.269244011 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269645502 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.270688476 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.279468845 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.289251883 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.274898693 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270443097 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.267762374 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.270541554 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.27232617 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.270715714 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27436786 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.271300558 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.271202531 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.270718735 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.271081159 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.270863494 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.26955843 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.270921746 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.270095285 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.270574527 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277447599 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.289890429 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276153606 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.271576718 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.278740075 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.293132959 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280292762 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.2876036 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.271584641 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.270483949 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.270169075 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.273378277 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.269994218 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.272416199 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.273497694 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.273651599 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.273793152 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.271057477 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.275107274 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.273248884 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.2708843 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.27225422 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281661355 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293832916 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.272091044 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276180341 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.269110991 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.271615723 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.275261595 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.271203988 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.272127735 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.274272042 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282586036 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279913278 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.272418532 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.270637446 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27318884 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271706465 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.272997517 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.271786273 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.270767724 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.271951432 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.271969253 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.271245326 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274554278 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.267771659 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.272320864 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271003402 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.272217157 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.281666628 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.291986296 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.273374368 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270939894 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.274587396 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.270821254 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.271852857 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.272214897 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272559532 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272641347 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.272399094 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279424185 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.28071305 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.273547879 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.27114325 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.272335225 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.272790975 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.273277434 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272072116 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.271180751 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272807131 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.272588776 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.271443425 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.271543928 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.271245303 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.271889603 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.272228674 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270863214 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275457014 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.276661352 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272239814 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.269555974 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.270732923 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270202642 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.270705079 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.271467713 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.280501515 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293955628 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.282284981 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280371694 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.275958111 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.271524558 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273847224 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.280579476 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.270676811 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.271943391 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.270695473 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.271822395 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.270231558 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.272787751 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272210847 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.277398074 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.290820163 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.2719948 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278904854 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.288639288 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271371197 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.272060021 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.275429064 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.270418188 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.269238992 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.270181245 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.271791455 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279339549 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.290059369 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272897714 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272997123 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.272527269 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.271966829 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275186682 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271438145 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.271737574 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.268618851 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.271412886 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271219555 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272730326 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.268647945 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.27094472 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.271059506 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273379989 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.277428255 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.26915339 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271405224 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.272583392 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.271492631 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271786351 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271685901 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.268990843 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.268935995 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.271551667 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274491682 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.275320882 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.273456446 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.271259561 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.272385441 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272178852 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271147528 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27415835 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.28230087 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.278894949 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.268814051 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.270718368 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.272398362 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.274292823 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271565976 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.272013869 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270434809 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.272602412 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.273208297 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271818328 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272592667 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.274233674 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287713096 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.28854198 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271640261 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.272464445 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274533445 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271669271 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.269416589 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.272909207 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.275773421 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.273501543 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.280530925 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.271958387 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278014634 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.289126369 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.272877176 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.276890406 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.275505554 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.277901213 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.278109698 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272070161 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.273302664 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.276825046 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.288312938 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272836508 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281234354 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300524001 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.299013655 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.273398273 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.273901838 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273087084 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.272831039 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.274916807 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.274070077 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274168129 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274617487 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273177386 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.27305998 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2782393 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.275512243 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.274744659 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.274053614 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.274641311 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.274823362 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.272013851 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.273040755 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.272886589 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.274569331 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274733233 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274213316 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.274900531 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284442558 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.300204814 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274773669 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.273840844 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.271862592 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.278524381 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.275430721 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284277492 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.280560425 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275274898 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.274153102 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.276060575 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274682077 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.272613878 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.274548472 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.274676717 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275257573 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273471665 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28579894 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.300688258 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.279619477 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.274597012 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274799951 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.277168093 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276456318 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276141578 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276071527 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.276174663 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.278080888 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279078543 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.276541006 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.275841384 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.277733552 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.282610255 seconds)
  done (took 758.276604801 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272596181 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272939329 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274260137 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273990384 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273285369 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274607858 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274333281 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274130236 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274787552 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273713545 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274493819 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275114368 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274537585 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275813874 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275361314 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275663873 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275071832 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27609834 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274432394 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275698197 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274961544 seconds)
  done (took 27.95717294 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.276347032 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.273969634 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276127154 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276947568 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275545816 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.27899882 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275856862 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279661895 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278299669 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275909554 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278546498 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278483372 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.275080163 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.276016947 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275911711 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279168953 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.278395467 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275278748 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.277460786 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276036502 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278750595 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.276240659 seconds)
  done (took 29.285595916 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.27853484 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.279204504 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.277702094 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.275799822 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.278584706 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.276618589 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.278986434 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.279142927 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.27982045 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.279293608 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.277953331 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.280001555 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.285354539 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.283264245 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.281368035 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.280428794 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.423529945 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.280536089 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.279547036 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.2792255 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.277670962 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.286537951 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.298371862 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.277846992 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.279604726 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.28096021 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.281133463 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.280381158 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.280990466 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.281328108 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.283914582 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.280718178 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.280631802 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.282308887 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.280563412 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.28154828 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.284900948 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.282093296 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.279368508 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.281094858 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.289979728 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.299213735 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.281047067 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.287425307 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.29979578 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.2822948 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.284411617 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.287741779 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.280152914 seconds)
  done (took 64.163838045 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.281207716 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282185256 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.280023887 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282103501 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.281677753 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.281797979 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.282498464 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281657402 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.279377307 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.280347862 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.282815227 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.281148361 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280575946 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.282918833 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.282324654 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280539801 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280017224 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280512732 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.280328603 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280624483 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.280019804 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.283226132 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.28343703 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.28061308 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283560114 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281021304 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282105961 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.283893007 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.281669976 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.280947611 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.285438205 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283277049 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.283765076 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.282203929 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281436431 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.28368352 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.284331019 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.281319995 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285064631 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.283408935 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.285380574 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284639511 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.284756741 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.285054447 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282118464 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.282193604 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283467641 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.282644988 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.282255224 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.286001537 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.286084523 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.28396272 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286914339 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.283978435 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285221907 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.285715983 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283816651 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.283766357 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.286439881 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283008967 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.283349325 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285834734 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.283738651 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287555632 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.285879154 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.283610433 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.2841024 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286759574 seconds)
  done (took 88.446408349 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285200511 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.286126178 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287268983 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285387693 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286754756 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.286157296 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286485875 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.286027717 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287379614 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.286223764 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286193165 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286178448 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.285521763 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286768363 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286172554 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286572201 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.285641116 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286099495 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286410057 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286977555 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.288050612 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287061688 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.286604164 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.287062339 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.287186164 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.2872025 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.286246466 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287956813 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286380826 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286007053 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.28895192 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.287712128 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287947504 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286832851 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.288760167 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.288009745 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288841885 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288354972 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.287285605 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.288928296 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286336243 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287352232 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288994162 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.287760685 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288387594 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288667067 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289034805 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.289632883 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288948132 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287172591 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.2884044 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289589507 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287920286 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288628118 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289058172 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.289022915 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288327349 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289365285 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290067619 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.2889748 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289705329 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.289933747 seconds)
  done (took 81.030938217 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290410102 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.288809386 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286213421 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.28726677 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290212907 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287897509 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.29056305 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290467336 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291506126 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.290968229 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290003629 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287735559 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289106264 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290481997 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288845 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28857147 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289140572 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288642559 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290957973 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289018665 seconds)
  done (took 26.991219731 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.287600429 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.291218476 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.289294676 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289270733 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.292294858 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288517747 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.291931681 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291283163 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288008841 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290377272 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291374039 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291794436 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290032268 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290484065 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292145783 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288684056 seconds)
  done (took 21.848944718 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.289544466 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.291571025 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.291850178 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.292297127 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.289317573 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.289667722 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.292722108 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.288720926 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.28990717 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.293045275 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.293842239 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.291924015 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.293334909 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.29262536 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.289943126 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.291311033 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.289812259 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.290163754 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.292266559 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.29243101 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.291508328 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.290306136 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29329558 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.29313624 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.290120667 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.290525275 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.290704564 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.291140675 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.29086669 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.29266313 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.291569011 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292476587 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.291774055 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.291702972 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.29405149 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.292862847 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.293912364 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.293847188 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293467137 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.295048564 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.293607339 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.29197238 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294818715 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.294383823 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.292669791 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.295520342 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.29231424 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.293209885 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.292482913 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293735439 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.294165642 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.294802084 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295634281 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.295585632 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.296232645 seconds)
  done (took 72.289488883 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29525912 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295765519 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293357915 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.295630344 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.296102991 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.292089377 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295780612 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294813785 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294397578 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297460417 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29485234 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297130622 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293107867 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295974265 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294417343 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296508639 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.293246137 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295273873 seconds)
  done (took 24.520387275 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.29528351 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294040864 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.296513769 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.294532169 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.294069796 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297069048 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294951042 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.296858906 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296957656 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295115021 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29479431 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.298061202 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296769403 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.297143186 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294596606 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294618381 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.298244465 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298812648 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.295194831 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294758816 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298217781 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297695218 seconds)
  done (took 29.725405647 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.295589845 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.296249485 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.296289168 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.312725912 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.312043734 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.317885318 seconds)
  done (took 9.041501775 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303549775 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299137474 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296375984 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298338705 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299233684 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297489091 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296727045 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294523773 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298284532 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296495597 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297602385 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298084835 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298606071 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297725774 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299829473 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298811249 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296058655 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295862666 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298063745 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30034761 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298343242 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30183411 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297281291 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298002864 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296696612 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296239876 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299171903 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298000081 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297133433 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299543927 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300270477 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298579957 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299911117 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298684966 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300885663 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300609889 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298251293 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300699124 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300486298 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298728485 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300787166 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301848817 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301172782 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298113075 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300803314 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298256353 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298470587 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298593622 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297915203 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302408914 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300988025 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298522942 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301958341 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301767828 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301621225 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300946685 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29900429 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299897456 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302590501 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299606456 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299428644 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301986695 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299071819 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300688213 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302394225 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297907893 seconds)
  done (took 86.981035411 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299041217 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300218236 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299389055 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301038315 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299826746 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298762772 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299437502 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299342331 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300608441 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301089668 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303611165 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301914069 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299537156 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300232473 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300471644 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300606332 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300043333 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301443311 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301139605 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304477752 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301526637 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299628899 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301461886 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299631805 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302178274 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303359558 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301527952 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300740025 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302882344 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300792541 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301444878 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302731481 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301800479 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302274643 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30345195 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301101545 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301681269 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303047436 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302111572 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304303403 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30229296 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303416469 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303113488 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302148058 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302958857 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304360222 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302103009 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302384732 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301606998 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303059412 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302157523 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303032313 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303098414 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303649277 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302734616 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303412621 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302623441 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303129602 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303070777 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306785912 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303763132 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304216399 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30530537 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304174016 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301367022 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301962952 seconds)
  done (took 87.149220182 seconds)
done (took 1766.379983228 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.354070897 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.407973166 seconds)
  done (took 13.980668562 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.46687165 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.419410713 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.304946124 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.299706888 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.303446478 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.328056697 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.32175964 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.303413765 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.30419118 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.305390286 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.304549243 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.490501337 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.300593698 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.30443229 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.306334219 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.397035772 seconds)
  done (took 42.68114116 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.332043543 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.316449726 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.413972481 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.330882094 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.33281759 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.486840609 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.36275571 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.31194281 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.467652688 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.353996687 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.794461639 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.338222798 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.310209697 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.363449952 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.331955316 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.482042979 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.544995748 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.804219798 seconds)
  done (took 29.899528539 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.722268779 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.323674354 seconds)
  done (took 9.267469684 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.314276935 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.31523379 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.333425538 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.315848845 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.317318629 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.34912308 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.361349511 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.373296598 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.366343681 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.362740813 seconds)
  done (took 64.63148923 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.328701565 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.311523047 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.311646123 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.310970161 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.30327903 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.302728918 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.310241003 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.320751762 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.672316088 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.426471864 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.315335864 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.319542922 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.329381672 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.311990523 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.309211355 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.346104085 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.507942804 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.31252308 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.308132536 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.318821943 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.313532418 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.391883137 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.352997399 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.315008279 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.427537268 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.684242477 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.319575362 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.319453246 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.493458225 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.312220765 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.311347586 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.313743743 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.315286377 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.926140018 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.808875648 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.320984846 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.333993156 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.321522447 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.310881831 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.463028605 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.316230844 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.319512191 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.306074231 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.796992846 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.463167342 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.424016023 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.484830071 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.332878783 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.314378084 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372111044 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.317245591 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.316254061 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.341201429 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.04273325 seconds)
  done (took 109.706116546 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.358797043 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.698514906 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.476231513 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.32716186 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.047304511 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.031119155 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.317938139 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.559698109 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.331743062 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.28307615 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.565262897 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.770072874 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.300265844 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.346607405 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.403720622 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.335727451 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.274406507 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.101618667 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.29166626 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.275303822 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.753202559 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.277146363 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.292199636 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.403270227 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.299174044 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.700562782 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.542997256 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.645087694 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.283151292 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.262297185 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.714451107 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.281834067 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.278152233 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.261992049 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.513619693 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.596847319 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.587678996 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.27842112 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.265415268 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.267209307 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.274703482 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.689860625 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.598553825 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.27900886 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.282776338 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.69478811 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.275466726 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.265054837 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.263727618 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.465915431 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.893608893 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.261824804 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.524914278 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.261381749 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.618613971 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.320668754 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.307842163 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.725280877 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.278701977 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.427495566 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.326489624 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.260752784 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.260461234 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.261841869 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.267299894 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.594130044 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.628589141 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.262713188 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.580420726 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.712730585 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.280275758 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.756522448 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.137291849 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.267128087 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.293927328 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.252752036 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.926813241 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.732725388 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.296847448 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.254490383 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.569570373 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.274693245 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.525686217 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.267286206 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.260580287 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.764818217 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.260841928 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.270892555 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.255398683 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.269816167 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.014781369 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.257399841 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.528024845 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.27365429 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.254403972 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.255596757 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.292780912 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.254958177 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.27256871 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.255858452 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.761312086 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.281542285 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.211031494 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.271843936 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.257359415 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.276322311 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.257763108 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.255843087 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.477538991 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.790734486 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.277430435 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.254508746 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.261130394 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.262012851 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.378584419 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.260422541 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.544098278 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.275554702 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.25538716 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.273272854 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.99772721 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320813227 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.255664151 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.253911523 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.129995773 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.458765369 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.266337066 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.265466923 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.248099334 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.263672773 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.404537439 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.260301722 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.316270131 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.246481708 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.927710531 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.279338179 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.251224694 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.537797198 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.2471065 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.043674036 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.265099596 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.245473873 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.524750484 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.502727953 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.553900163 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.247714531 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.266895033 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926978218 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.272957795 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.391597097 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.262644808 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.230078529 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.442415241 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.416483776 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.248693067 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.858409765 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.247628778 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462751537 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.247344126 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.54073848 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.720247503 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.266804108 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.256400774 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933936802 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.938214822 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.998914235 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.248624942 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.512431379 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.189549503 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.728827678 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.248009129 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.247746185 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.798771096 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.249170545 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.251668614 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.249111831 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.247337774 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386876732 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.418853612 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.432668121 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.258075697 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.678349915 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331937619 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.253539984 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.254640706 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.253021589 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.5918227 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.328290775 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.249676395 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.269830179 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.249849807 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.256206106 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.701995792 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.08317946 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.255205012 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.400385367 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.860395354 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.269879785 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.2512337 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.960150917 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.4747008 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.776195744 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.309265529 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.540245441 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.279122831 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.287480608 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.983694103 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.33520575 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.704287702 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.272233251 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.256038123 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.827219281 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.271618294 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.341680977 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.251602846 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.25169248 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.767013962 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.271897566 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.256465568 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.411169041 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.267736066 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.516888423 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.251297443 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.303026757 seconds)
  done (took 1092.582932356 seconds)
done (took 1363.967252855 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.251706051 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.254906079 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.240366762 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.256059169 seconds)
  done (took 26.176006385 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.260306497 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.257582723 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.259026888 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.25734376 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.260114664 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.257817116 seconds)
  done (took 8.724721833 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.275781725 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.256853282 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.257918347 seconds)
  done (took 18.963537685 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.448947264 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.506080825 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.594415298 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.36812578 seconds)
  done (took 10.090152172 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.258519855 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.259531058 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.259656243 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.261520256 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.262814068 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.263754803 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.260469765 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.262566143 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.26222562 seconds)
  done (took 12.523228872 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.994935547 seconds)
done (took 82.645301493 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.11946139 seconds)
    (2/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.951670385 seconds)
    (3/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.289105475 seconds)
    (4/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.393393946 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.2546497 seconds)
    (6/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.43168822 seconds)
    (7/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.236671771 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.813336708 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.490979338 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.063501207 seconds)
    (11/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.264902002 seconds)
    (12/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.348497126 seconds)
    (13/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.467955172 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.301096815 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.281971915 seconds)
    (16/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.280763408 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.660942608 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.2512815 seconds)
    (19/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.239481509 seconds)
    (20/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.075682859 seconds)
    (21/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.011279505 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.151228306 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.235862465 seconds)
    (24/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.251917083 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.236444005 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.309863634 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.122251163 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.51637854 seconds)
    (29/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.291479943 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.364557385 seconds)
    (31/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.258140672 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.613707793 seconds)
    (33/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.867412641 seconds)
    (34/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.30703836 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.236976968 seconds)
    (36/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.281746514 seconds)
    (37/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.857436103 seconds)
    (38/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.964828329 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.709083378 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.635121805 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.374974636 seconds)
    (42/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.005953289 seconds)
    (43/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.524886245 seconds)
    (44/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.824448738 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.258911669 seconds)
    (46/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.607319061 seconds)
    (47/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.314639293 seconds)
    (48/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.237705433 seconds)
    (49/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.273797508 seconds)
    (50/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.272829732 seconds)
    (51/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.283720137 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.34845062 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.274830396 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.896456651 seconds)
    (55/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.425612697 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.262942512 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.011335019 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.897952575 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.713582148 seconds)
    (60/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.779925047 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.212698048 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.554692129 seconds)
    (63/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.653930188 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.277342858 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.360188184 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.321865941 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.238930278 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.177622218 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.664643372 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.616496953 seconds)
    (71/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.563544766 seconds)
    (72/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.240405694 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.359187997 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.985808445 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.349502761 seconds)
    (76/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.268707375 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.249619827 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.283625157 seconds)
    (79/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.271878959 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.23899179 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.718233907 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.428357089 seconds)
    (83/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.053274542 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.340210983 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.288573693 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.798558369 seconds)
    (87/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.574359253 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.866123122 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.302497036 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.315021585 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.285592625 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.322953295 seconds)
    (93/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.259927612 seconds)
    (94/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.24600281 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.282233989 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.657611774 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.299511065 seconds)
    (98/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.37119692 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.260082832 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.283917032 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.24071298 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.374377788 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.347193927 seconds)
    (104/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.8411835 seconds)
    (105/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.24733242 seconds)
    (106/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.279340059 seconds)
    (107/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.341837303 seconds)
    (108/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.637585702 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.274169081 seconds)
    (110/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.294797056 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.474540479 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.242565015 seconds)
    (113/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.248674262 seconds)
    (114/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.344213907 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.261460632 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.261261285 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.655758554 seconds)
    (118/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.034062686 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.256003335 seconds)
    (120/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.381340659 seconds)
    (121/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.515344982 seconds)
    (122/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.279759452 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.259667752 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.268541309 seconds)
    (125/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.372102432 seconds)
    (126/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.630833201 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.777083971 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.300966244 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.298351225 seconds)
    (130/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.369111286 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.541320814 seconds)
    (132/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.243424174 seconds)
    (133/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.449142027 seconds)
    (134/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.32818565 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.990943526 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.271637593 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.539942988 seconds)
    (138/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.424699493 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.764322397 seconds)
    (140/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.249561185 seconds)
    (141/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.121961985 seconds)
    (142/309) benchmarking ("sort", Float64, false)...
    done (took 5.565122979 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.3990402 seconds)
    (144/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.27552501 seconds)
    (145/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.268062161 seconds)
    (146/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.246224083 seconds)
    (147/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.984285963 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.115197714 seconds)
    (149/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.367262407 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.999582183 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.260958537 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.294311555 seconds)
    (153/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.264807824 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.293570871 seconds)
    (155/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.558503329 seconds)
    (156/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.255864706 seconds)
    (157/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.475370395 seconds)
    (158/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.282175767 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.294235305 seconds)
    (160/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.245558282 seconds)
    (161/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.393051468 seconds)
    (162/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.290694908 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.609274376 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.404354106 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.265916291 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.300950515 seconds)
    (167/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.24514407 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.271333229 seconds)
    (169/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.263844731 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.266549202 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.516920314 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.285834834 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.186997769 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.904569621 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.271726625 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.277279503 seconds)
    (177/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.252981008 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.339245596 seconds)
    (179/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.246091514 seconds)
    (180/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.644317825 seconds)
    (181/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.635204062 seconds)
    (182/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.313140137 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.65477133 seconds)
    (184/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.370485989 seconds)
    (185/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.861847334 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.313095277 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.537172804 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.29833044 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.63551507 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.284771814 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.476790617 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.398203759 seconds)
    (193/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.267209694 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.314105309 seconds)
    (195/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.24694831 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.12061435 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.289130292 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.170827262 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.272799982 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.659596833 seconds)
    (201/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.25408313 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.28708822 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.268238987 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.136223823 seconds)
    (205/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.38045416 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.684791952 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.265763777 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.331122729 seconds)
    (209/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.431394343 seconds)
    (210/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.817422892 seconds)
    (211/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.362966684 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.314351074 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.805538113 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.929611252 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.330806872 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.49111651 seconds)
    (217/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.370177727 seconds)
    (218/309) benchmarking ("sort", BigInt, false)...
    done (took 6.268583212 seconds)
    (219/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.778294323 seconds)
    (220/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.398915869 seconds)
    (221/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.001395797 seconds)
    (222/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.400893368 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.636148965 seconds)
    (224/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.253456867 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.29047292 seconds)
    (226/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.256394422 seconds)
    (227/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.316405476 seconds)
    (228/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.278314597 seconds)
    (229/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.278275 seconds)
    (230/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.251388438 seconds)
    (231/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.337168854 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.292149409 seconds)
    (233/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.367645433 seconds)
    (234/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.45948792 seconds)
    (235/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.088797668 seconds)
    (236/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.035360426 seconds)
    (237/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.786068504 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.681969669 seconds)
    (239/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.29109101 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.316186639 seconds)
    (241/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.815279965 seconds)
    (242/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.291401677 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.361154115 seconds)
    (244/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.395840469 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.270201577 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.298634167 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.279184226 seconds)
    (248/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.358130483 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.012655582 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.873976674 seconds)
    (251/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.006207536 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.621838204 seconds)
    (253/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.676417366 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.005867141 seconds)
    (255/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.256477586 seconds)
    (256/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.521221168 seconds)
    (257/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.612463859 seconds)
    (258/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.626393647 seconds)
    (259/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.277338611 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.11732455 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.318572864 seconds)
    (262/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.353148065 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.473834937 seconds)
    (264/309) benchmarking ("sort", Float32, false)...
    done (took 5.294971528 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.181597419 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.438455065 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.30441167 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.855673841 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.277277036 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.477450178 seconds)
    (271/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.827842298 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.665806575 seconds)
    (273/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.29706937 seconds)
    (274/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.463861272 seconds)
    (275/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.631021403 seconds)
    (276/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.293162179 seconds)
    (277/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.092381482 seconds)
    (278/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.322111241 seconds)
    (279/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.515268718 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.174541279 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.346112597 seconds)
    (282/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.451974319 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.374336627 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.265162967 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.121430825 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.361596678 seconds)
    (287/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.355364283 seconds)
    (288/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.397348261 seconds)
    (289/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.273126539 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.390556421 seconds)
    (291/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.626703251 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.112565015 seconds)
    (293/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.07493987 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.00061693 seconds)
    (295/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.08320187 seconds)
    (296/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.956725001 seconds)
    (297/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.534675709 seconds)
    (298/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.628904784 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.321090089 seconds)
    (300/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.298414572 seconds)
    (301/309) benchmarking ("sort", Int8, false)...
    done (took 4.359527911 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.640918373 seconds)
    (303/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.288763164 seconds)
    (304/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.267346794 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.304028907 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.272335643 seconds)
    (307/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.25296065 seconds)
    (308/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.364006059 seconds)
    (309/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.454407301 seconds)
  done (took 1010.552583911 seconds)
done (took 1011.729395297 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.306768293 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.302541689 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.284786416 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.305133909 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.394812623 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.312794891 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.295265713 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.286951422 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.33336895 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.335032198 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.283879873 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.31222592 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.286993545 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.285557426 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.284266086 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.300670379 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.290750839 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.291296653 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.302346423 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.29648906 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.301545089 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.284439387 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.335261813 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.312614973 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.28971047 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.289758258 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.288607596 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.306180097 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.397201491 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.289528349 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.289373214 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.298592738 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.290432521 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.290287097 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.281298001 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.306203952 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.297938595 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.297431286 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.290050222 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.318311955 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.675871494 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.309465781 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.288875261 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.287927426 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.288161099 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.290706607 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.288313682 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.293404632 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.300832035 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303616276 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.675235255 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.324477455 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.291059754 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.289192629 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.298393253 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.286709353 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.292371537 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.306235875 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.307345815 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306114287 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.278192116 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.297800468 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.289961145 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.304805031 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.295474976 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.718734001 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.306990036 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.292567608 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.675365128 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.315658043 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.718863602 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.319402985 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.290787367 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.303264339 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.320989953 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.294217095 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.291042337 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.289412199 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.296890051 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.288762221 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.300099489 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304823456 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.29518997 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.290535707 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304167724 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.316779949 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.300246976 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.291382197 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.300418958 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.310153038 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.298101886 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.302132825 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.294685911 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.286130515 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.299772799 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.294175199 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.292483827 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.292956936 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.296862901 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.301322376 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.679425279 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.328153515 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.287105177 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.288059607 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.290283557 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.304415644 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.67307299 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.313684898 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.312922365 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.338542156 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.293755711 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.281829151 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.300745468 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309538405 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.300592939 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.294710291 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.287194234 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.28547187 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.691359392 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.329872873 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.294092101 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.290210124 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311289808 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.294282941 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.290120196 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.301686188 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.29998934 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.307110595 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.414025402 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.303730121 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.32417207 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.291105065 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.297497911 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.319235002 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309581314 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.324519841 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.295084907 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310795485 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.308248543 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.289745271 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.304467291 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.304516866 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.294905052 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.299586425 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.287458296 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.319040783 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.30689956 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.307775757 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.315373307 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.415306638 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.291716214 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.287588431 seconds)
done (took 218.314275913 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.352256992 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.290078557 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.381216587 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.293302829 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.39045323 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.389456262 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.293082254 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.290429359 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.291170131 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.491247359 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.289693464 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.288858601 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.285796538 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.288529485 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.372569833 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.292084786 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.28846229 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.320377559 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.29185744 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.362120395 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.293642071 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.290374563 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.291839987 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.670750501 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.283503297 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.291444569 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.362865354 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.290768243 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.634824793 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.288826303 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.284648704 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.636006216 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.381011809 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.30986925 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.302461984 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.298205466 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.391113655 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.307833328 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.37359229 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.372840365 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.383170933 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.332642638 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.289791202 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.286597051 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.293873255 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.294097761 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.290383273 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.320329895 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.29104225 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.290649689 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.321801839 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.303354442 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.300194902 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.291300039 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.292062919 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.312677479 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.291900783 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.293479533 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.383026227 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.294330412 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.35462325 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.672173349 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.492917005 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.294731535 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.293711055 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.293160104 seconds)
  done (took 148.660904876 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.359809302 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.36719414 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.403533124 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.31654528 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.346744818 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.406616347 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.316564404 seconds)
  done (took 10.722048196 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.299499252 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.2951532 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341949274 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.344730803 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.295215954 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.462607383 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.295932439 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.305485944 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.293444273 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.347189684 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.29730673 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.294991125 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.302176749 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.288036696 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.343808762 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.305821133 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.411456691 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.297420628 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.296601862 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.447000789 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.294392586 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.304046587 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.35348458 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.307412385 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.297775882 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.302168575 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.861266159 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.296996104 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.295203624 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.297246418 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.29462153 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.333329989 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.297684474 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.289196993 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293137103 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411674106 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.298231441 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.296099864 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.298529143 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.29445945 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.298214771 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.297120466 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.297152058 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.295830161 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.297210741 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.319533967 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.298584607 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.29771243 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.296642807 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.297842527 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.353608538 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.298724221 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.295771566 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.294940617 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.352845375 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.305975474 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.298272559 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.295284412 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.299187638 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.295302022 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.449398871 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.345908025 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.298814347 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.346519522 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.299855648 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.299375272 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.298610972 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.298889111 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.352006461 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.299177665 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.350125385 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.297101551 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.452584245 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.321554375 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.300965035 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.301533328 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.30211829 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.300369546 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.29500342 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.304683733 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.297447673 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.301419293 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.30793744 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.298028857 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.298133749 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.401832107 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.40926922 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.298419711 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.313424898 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.306666842 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.299576373 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.359524521 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.302272154 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.297921366 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.351558539 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.415988251 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.35401005 seconds)
  done (took 149.704969899 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.306105239 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.308185902 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.302601203 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.317328121 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.301854442 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.301965747 seconds)
  done (took 9.049688733 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.302632004 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.302756776 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.301820658 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.301951721 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.301125718 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.303940403 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.301635619 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.302217305 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.304130653 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.303095807 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.303343689 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.303079155 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.303458626 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.303123841 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.301937504 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.301505591 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.301561461 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.300570714 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.30194375 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302116465 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.407093618 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.303084636 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.30424422 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.305159099 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.308231506 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.302895717 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.311098346 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.303786439 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.302747884 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.311501421 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.321661555 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.303952292 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.304297176 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.307999785 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.306397201 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.304781702 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.306922154 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.30612641 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.302197404 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.304655822 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.304626775 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.304457269 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.304856045 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.30554868 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.305324793 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.308641861 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.308065206 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.312104677 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.30548962 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.305849439 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.305131204 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.305203266 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.305808607 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.307152304 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.307434131 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325235609 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.309056448 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.307510855 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.305715633 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.306688514 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.306216509 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.306031575 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.306944876 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.3096 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.303642864 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.305893796 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.307767127 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.740316437 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.305735553 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.306040271 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.307551908 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.303707281 seconds)
  done (took 96.750356156 seconds)
done (took 416.089859616 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.626468409 seconds)
  done (took 7.844116351 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.411307184 seconds)
  done (took 7.629910973 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.324989126 seconds)
  done (took 21.545872139 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.373831438 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.36067793 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.333414404 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.299030243 seconds)
  done (took 26.584029916 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.458942836 seconds)
  done (took 7.676114973 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.298821613 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.32362316 seconds)
  done (took 13.841816664 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.746885194 seconds)
  done (took 7.964817971 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.417650601 seconds)
  done (took 7.639875234 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.301742459 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.31693441 seconds)
  done (took 14.094727333 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.284847125 seconds)
  done (took 7.503285687 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.069445432 seconds)
  done (took 8.289001374 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.310967294 seconds)
  done (took 7.531147104 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.327781185 seconds)
  done (took 7.546451383 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.129860355 seconds)
  done (took 9.348987046 seconds)
done (took 156.256989964 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.30075566 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.307882719 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.308981496 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.308707827 seconds)
  done (took 26.444987014 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.344537996 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.342349387 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.344848678 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.352738588 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.345717143 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.341803594 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.335947409 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.334556024 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.354128354 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.345715562 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.345225815 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.345701939 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.341919683 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.335213539 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.345142392 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.343833311 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.354530818 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.348210115 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.340024703 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.352598198 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.310942694 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.353974886 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.348220237 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.31013142 seconds)
  done (took 33.438531682 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.830323513 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.380602387 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.464407579 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.361323469 seconds)
  done (took 7.256899879 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.362258926 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.363609699 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.374784354 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.414311581 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.440624571 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.372820951 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.337926998 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.333047102 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.318223357 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.363198145 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.439895745 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.380419728 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.447819777 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.311484392 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.496942521 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.31014945 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.310734195 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.362534033 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.414246986 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.428331626 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.311878137 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.362906067 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.365786624 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.380562437 seconds)
  done (took 34.225157239 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.311481125 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.33020092 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.311707246 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.3104176 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.319585169 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.30982687 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.310545058 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.312366112 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.310237273 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.317283284 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.31087086 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.325190025 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.3116513 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.311426709 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.317894006 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.31356175 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.318002001 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.310858448 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.311648595 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.318348053 seconds)
  done (took 27.515131145 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.306059931 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.160681461 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.658050852 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.561607925 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.305918473 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.313388321 seconds)
  done (took 27.529025905 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.37880396 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.530957014 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.312317967 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.660308342 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.75969763 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.334736092 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.31344054 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.548060314 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.853368178 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.851652392 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.374451975 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.378453374 seconds)
  done (took 19.520636439 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.319417327 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.313695541 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.325725272 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.329969499 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.3666119 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.333571307 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.321121371 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.309025949 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.373211368 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.386887857 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.335400142 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.366937993 seconds)
  done (took 37.307055999 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394432411 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357080409 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.208155937 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367222146 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.045705239 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521399286 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.319677463 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.764250709 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.313254473 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582559158 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30161404 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423360723 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.565706029 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31529349 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315909426 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.277880969 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550309916 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767965667 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312455663 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.283525762 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341904076 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.310502436 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.293955293 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.345500575 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521877928 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.451308134 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.570040364 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.088589901 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59808703 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328592899 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321696851 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310737925 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58664045 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97018683 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425257298 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321658967 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311697269 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.880974414 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.299419904 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.202372512 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.098808038 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321442575 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322142202 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312417893 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.245923426 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317133476 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759343848 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.318013755 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.024433154 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.313232173 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32256541 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406995807 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.316029235 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.883329978 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319209712 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.318786268 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.310793046 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404529727 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904386591 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.658004036 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327230854 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.255130567 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313600562 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.300403582 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947206081 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.438560468 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.317444177 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.317439047 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24745195 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.274028942 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336026888 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46038969 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.335405882 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962963291 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998710847 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341821281 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.252313168 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832198097 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318339893 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.255368721 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542898595 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089938095 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24877353 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.267204367 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.249763897 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979548791 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3238468 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.646953777 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.335168247 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.771279648 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.326155351 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33333557 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338467268 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.53746872 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.197194723 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314959 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.086281525 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461048483 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337033506 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.751529246 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250880716 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.319834664 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571685457 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.525837274 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330419455 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.286947084 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537202186 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31662515 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.34314392 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.316346196 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.332804664 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.87832396 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351142734 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.669721647 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340175646 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.092296544 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008250984 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324863842 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.423561475 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.325550443 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563829725 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.043182616 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.200429993 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38386142 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.320494829 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.31874885 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.31981411 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.916940443 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.199219438 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.314218696 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317439177 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.336376674 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.31957148 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264934839 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.320293521 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325979485 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.105074548 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.541012766 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331669288 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60006224 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252249944 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464900251 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.326743363 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.541379101 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.500238215 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.340856533 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579296052 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319087126 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328908873 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337194313 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337753767 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420447485 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341312283 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.318676136 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596482676 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.323350758 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.323390514 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.311837871 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.10588389 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323752752 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.324528138 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340567987 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898499995 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320461657 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327271366 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206899783 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.333445772 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386933817 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325796013 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.329892255 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.093741369 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341293272 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.333137558 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.330511288 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549065244 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331378213 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.305189509 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408332869 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.515695333 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.891717365 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356685785 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.255039062 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.032467576 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.014571405 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321022742 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.51549012 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321582055 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331683277 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331499076 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.326017374 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.913801834 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345283275 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.226702077 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.333462479 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331266957 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.32657982 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322839855 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.074103592 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.713653627 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344006373 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.338774523 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46511074 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.337331835 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.256373779 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.839383627 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326802722 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321563175 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.105781198 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357429926 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.237359532 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803442098 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580621605 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327834972 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341946495 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.324674904 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.363455974 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.321862906 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.134031833 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364160659 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.334553908 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339664079 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.33506024 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.233831342 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.693821319 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892920723 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03596664 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877637403 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256712307 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.337260783 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.214414543 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.767257526 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259384128 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.980809621 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505531391 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.787791706 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268023855 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523934929 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.505420856 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096872546 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342969467 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551891233 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230900181 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.150700085 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360493353 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.536398624 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359599672 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.324548272 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.276333816 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.606001955 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562791419 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.160072826 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41092979 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767447932 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.141908067 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.129038888 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.398652482 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.606963434 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511181958 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.956139628 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.712669761 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335615582 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.346561062 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806599521 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.332726118 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.852107503 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939585299 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359788606 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.531740476 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262317492 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.339012075 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.33742966 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.322159149 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.59630378 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.332214316 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.605135001 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338153656 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261986755 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.330400876 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856002532 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.206018848 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.333192511 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327465497 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028613855 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328973224 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622268205 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.33744423 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.075445463 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355340946 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.262187465 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261867326 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.021660152 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331703536 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304540365 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806786275 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.336162339 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36698303 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346609048 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181045273 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.584833942 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.343003801 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.900499645 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577273494 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341084126 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359783551 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.430303256 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.191201236 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.33655077 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.224048296 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.565873489 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334699189 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.551818107 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.246072555 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.23614839 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.394930132 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540952129 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.220694625 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329753212 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589080408 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.065099248 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.351851134 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027063856 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378653337 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339791183 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.348928751 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.332044501 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357253981 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419696436 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341893205 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.341147579 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.340871983 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499959739 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332930309 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341195574 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.346127904 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425050361 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.727042148 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.09136968 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.110276696 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908869217 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074062965 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928867947 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366391381 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.330592566 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339012774 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266226008 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48332655 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.856387542 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605248661 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461236026 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.332474021 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362576472 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.217941499 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362516568 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551531043 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607883066 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.303228619 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334002174 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.125626177 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.21538805 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343675345 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.545191832 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811139252 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87198944 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45043546 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343721989 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.777423196 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606982128 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.424167592 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332811041 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925346614 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.337875775 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.632410657 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.357727072 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332339144 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50446506 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342264163 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99939135 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.361100294 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.493402525 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.107614693 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.368365494 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597351744 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.79070318 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.345074779 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913695435 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.044172175 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605589568 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405327023 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.345499192 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.441230747 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482232792 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.344672752 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.242206763 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335518085 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183107417 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.044901188 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.344008733 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915311193 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622284674 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.33273994 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.347387136 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366443968 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.344787832 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.560650373 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019426676 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559854634 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.347633234 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.339144833 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.905179684 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912410735 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371984858 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269599032 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.339534079 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583951688 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597821705 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36020179 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.789806941 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.048538029 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861367486 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.309070179 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359407377 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33863013 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.032179203 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923494908 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.134688308 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819425234 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.002580614 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336751913 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635256112 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.34308258 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346415293 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620521074 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.341340375 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351486344 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.356205676 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.917823459 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12090494 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.350176682 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.380713096 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.281961209 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.564087755 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361962381 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273248639 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348155796 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.511376401 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338721432 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469560848 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349702562 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.349451176 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345530753 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.095606891 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611188547 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.344442181 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.337359126 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.269340502 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348305233 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438888326 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578413718 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339534641 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.011476552 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.690401041 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.595337036 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.351280658 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.326357332 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.343258505 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339900572 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.057489674 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.351235844 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34043934 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90699118 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.347369232 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.35702617 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34508096 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.556853855 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552271803 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.354286659 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360690413 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349624689 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362222953 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.241076094 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.107899804 seconds)
  done (took 1632.794385488 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.383568397 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.341539302 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.373184474 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.375114487 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.373025927 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.461977558 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.39261463 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.341815964 seconds)
  done (took 52.298757687 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.35390366 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.504082941 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.379551621 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.341597883 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.35867712 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.353852918 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.796688904 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.371284305 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.357235151 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.35128791 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.342200391 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.356210957 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.983533257 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.358043056 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.354126821 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.343309227 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.357406962 seconds)
  done (took 65.520289326 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.342533528 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.901501288 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.447660093 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.354946175 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.389102497 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.364709378 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.172320554 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.396936213 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.345124884 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.672573493 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.012849273 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.384391855 seconds)
  done (took 85.04214742 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.351316549 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.351000769 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.351776717 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.350938625 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.350785402 seconds)
  done (took 8.012597198 seconds)
done (took 2058.126030915 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.608599657 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.004261404 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.973354794 seconds)
  done (took 5.234509646 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.49149292 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.54090835 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.659209165 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.666602262 seconds)
  done (took 7.616736791 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.628084937 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.730350327 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.534617613 seconds)
  done (took 6.151956988 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.726812232 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.356385179 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.368787797 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.343666899 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.351012678 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.350781537 seconds)
  done (took 20.305547168 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.34793458 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.351648412 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.349007374 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.351463302 seconds)
  done (took 6.659099652 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.324797616 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.043829776 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.333625574 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.348359668 seconds)
  done (took 18.308592047 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.096060845 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.109106675 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.092287694 seconds)
  done (took 7.556827633 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.353205773 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.193486675 seconds)
  done (took 9.807000088 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.6311971 seconds)
  done (took 2.892519252 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.482035113 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.674748008 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.366738026 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.281397592 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.435909083 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.104732068 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.94918552 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.546631369 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.255322526 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.476418462 seconds)
  done (took 27.834690458 seconds)
done (took 130.68600739 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.121625346 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.716655547 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.548653134 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.13455922 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.5763739 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.548507586 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.569529675 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.102930006 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.645687445 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.600986676 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.135171296 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.578971729 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.515778232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.717990858 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.516048419 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.719559167 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.581000563 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.164932002 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.777648053 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.977523257 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.570981516 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.729353543 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.965098209 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.794902184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.587206944 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.500677245 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.309919463 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.720018762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.949325023 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.380439408 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.50916006 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.14862568 seconds)
  done (took 190.67820481 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.362497779 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.362735226 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.349256245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.348052654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.349742062 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.357484873 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.348645904 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.364076959 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.34773411 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.362676263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.349477719 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.348147424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.3489132 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.370822454 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.349688195 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.374404286 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.350463959 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.359164781 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.349388585 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.348934205 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.351481715 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.359207005 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.34935545 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.348533665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.374372845 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.351174969 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.364826839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.350887422 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.35025908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.351155611 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.374655002 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.367093009 seconds)
  done (took 204.659524422 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.365025092 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.35065822 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.366072311 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.36467177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.35646212 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.360438818 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.35182455 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.350292301 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.371923672 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.359063752 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.366169092 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.349827873 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.351364315 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.351625476 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.353292543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.351250482 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.367145827 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.373192595 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.358624482 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.350425435 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.351837184 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.357177432 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.351409651 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.352674698 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.373628322 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.35195731 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.379348352 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.351968767 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.369827148 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.352431361 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.360092652 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.37504216 seconds)
  done (took 204.762338343 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.554226223 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.359315248 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.360052728 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.3154318 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.360056001 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.358838873 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.35804549 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.551720313 seconds)
  done (took 14.48252459 seconds)
done (took 615.844000626 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.607860592 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.332122361 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.567511035 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.387288723 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.138154122 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.407320523 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.381523004 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.545747918 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.291294648 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.559730821 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.592098502 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.400749089 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.723454837 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.386397915 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.629753503 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.483454783 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.280692797 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.407656432 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.692209645 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.897337006 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.645228624 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.812764254 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.56389204 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.289338815 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.746399681 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.82161645 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.083124077 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.277863409 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.405927649 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.697381862 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.010084492 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.320521281 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.442968468 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.445435688 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.502102187 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.48201009 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.309012251 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.44363663 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.583415344 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.594911115 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.906292996 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.109598424 seconds)
  done (took 92.474705626 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.344482624 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.344900483 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.343334368 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.344598174 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.345377007 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.347404369 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.344253679 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.344345431 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.344916239 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.344318425 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.345801427 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.347722638 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.344185652 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.354376321 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.345038346 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.344775561 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.346196793 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.348897143 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.344364177 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.346232191 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.348231484 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.344861533 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.346005109 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.34503336 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.346194032 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.346001802 seconds)
  done (took 36.263541829 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.364238556 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.620236182 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.772755238 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.379607701 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.370668948 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.370340548 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.441197305 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.374184426 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.370402298 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.368625889 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.534555883 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.368475752 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.40192366 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.797555768 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.377428448 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.366947909 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.366709111 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.365259238 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.626896916 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.376085384 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.461209577 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.377736819 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.442546055 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.380409203 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.387782074 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.367507925 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.372424743 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.883719902 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.397559512 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.53400315 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.13916397 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.446358286 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.840593468 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.803456762 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.14197651 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.375985816 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.368383885 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.537765856 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.376314448 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.367398996 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.442182817 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.379023098 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.781246331 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.99250537 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.391167303 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.368245028 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.903503692 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.562202745 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.612229631 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.383509779 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.804103069 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.379276395 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.369818497 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.368320508 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.605186574 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.381918236 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.368377228 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.903987318 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.398729548 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.443556873 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.376389991 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.369453156 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.627327542 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.375956974 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.61518804 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.378191173 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.378738784 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.389411397 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.783656251 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.37786704 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.012353845 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.393186766 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.36983512 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.537805997 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.624361483 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.937403688 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.398990254 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.630828747 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.854347694 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.468204591 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.381088054 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.872498502 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.472545765 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.380883505 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.373722807 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.373239255 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.370844686 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.420771043 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.44364489 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.943166542 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.027204633 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.920036403 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.472325018 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.389559196 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.372912588 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.900591432 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.397727877 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.372101237 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.778406076 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.01783765 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.39507177 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.379789246 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.011657087 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.397020449 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.445890731 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.385146979 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.794994536 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.379228597 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.423070885 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.371773029 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.378675125 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.393819526 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.447978542 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.382765647 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.372321947 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.9802713 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.570333423 seconds)
  done (took 180.221297713 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.368557473 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.364961377 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.36625417 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.365417191 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.364925943 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.374345841 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.366435817 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.366326965 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.372381709 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.366550751 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.366275672 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.365915351 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.366126106 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.383601572 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.378507161 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.373916997 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.976426237 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.367696401 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.36718674 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.365701694 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.155332961 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.375168442 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.36716358 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.386855215 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.367162536 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.367171443 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.39282177 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.368897802 seconds)
  done (took 153.048090805 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.375903468 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.927192147 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.400277055 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.501643044 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.40304585 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.371104772 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.500400278 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.436800312 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.391929054 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.372740627 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.372238906 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.668677629 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.384116043 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.878243583 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.567029947 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.523830486 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.887191659 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.400519294 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.372491212 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.371893591 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.503710152 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.381499493 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.670111095 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.938187025 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.400656438 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.928988756 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.367874419 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.375416174 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.374007275 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.9319547 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.399141985 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.669412887 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.450415132 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.440898121 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.94655578 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.898435778 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.892421622 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.518429122 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.382672428 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.374834512 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.37445871 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.359620159 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.929153798 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.402135511 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.377545105 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.916684043 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.394074184 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.377001645 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.381348884 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.373641119 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.433531851 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.450791833 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.690137998 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.93594447 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.466170971 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.396888513 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.504153464 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.776333262 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.387634088 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.878560257 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.358670135 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.938020424 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.403081042 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.362238084 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.37820099 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.381718245 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.520860942 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.511189259 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.891003614 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.403735994 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.884565161 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.544653993 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.384496356 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.376701651 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.378797851 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.934943442 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.908747939 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.545694697 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.514804673 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.571155004 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.370854294 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.377060861 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.36142289 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.452532482 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.385665554 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.938526459 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.90871564 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.403866311 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.379946805 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.379770241 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.381276467 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.549403379 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.960055034 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.47870947 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.87627259 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.696390053 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.68722369 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.385664843 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.436513531 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.393894057 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.68096185 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.390635252 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.434339246 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.834989133 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.689045098 seconds)
  done (took 164.068770125 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.615356833 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.568765825 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.468705577 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.50698221 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.984175316 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.941162444 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.583195154 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.52510521 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.486026258 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.636451663 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.509918865 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.469955229 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.544521333 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.459940055 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.117001116 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.473671825 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.484290206 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.53131827 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.49193013 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.369699001 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.009815053 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.667886389 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.555896406 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.221087603 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.469503817 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.165553672 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.935519649 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.899422239 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.558409705 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.667689003 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.908296057 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.50193631 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.324914233 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.060442121 seconds)
  done (took 66.001554318 seconds)
done (took 693.34415697 seconds)
SAVING RESULT...
DONE!
