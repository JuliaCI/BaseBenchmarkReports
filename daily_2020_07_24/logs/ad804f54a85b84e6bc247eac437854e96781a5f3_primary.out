cset: moving following pidspec: 27440
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.550919425 seconds)
loading group "shootout"... done (took 1.203170804 seconds)
loading group "string"... done (took 0.400389966 seconds)
loading group "linalg"... done (took 7.545833836 seconds)
loading group "parallel"... done (took 0.142330123 seconds)
loading group "find"... done (took 1.366200981 seconds)
loading group "tuple"... done (took 1.84732893 seconds)
loading group "union"... done (took 12.160191662 seconds)
loading group "dates"... done (took 1.264032499 seconds)
loading group "micro"... done (took 0.191610128 seconds)
loading group "simd"... done (took 4.12047861 seconds)
loading group "io"... done (took 0.987471281 seconds)
loading group "random"... done (took 8.236912477 seconds)
loading group "problem"... done (took 1.51287047 seconds)
loading group "array"... done (took 18.422508814 seconds)
loading group "misc"... done (took 1.441730133 seconds)
loading group "scalar"... done (took 37.729511126 seconds)
loading group "sort"... done (took 2.873668631 seconds)
loading group "sparse"... done (took 11.323663698 seconds)
loading group "collection"... done (took 16.799405579 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.4823166 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123161608 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126704389 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115700169 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14173697 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117108545 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119362957 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082859762 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.86938964 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.13841582 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.109844189 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421167215 seconds)
done (took 5.196840489 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.163657396 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085337302 seconds)
    (2/2) benchmarking "String"...
    done (took 0.075065027 seconds)
  done (took 1.308548342 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06195832 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128589105 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062967956 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063058818 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063460002 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.0631034 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063016832 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06280497 seconds)
  done (took 1.654462626 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068634781 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065212452 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062257545 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064524539 seconds)
  done (took 1.411862314 seconds)
done (took 5.769065103 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.232088431 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.098514614 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.278328692 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.385712765 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.445542988 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.0876888 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070715795 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066411167 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.125186986 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320238583 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.099278148 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.175246244 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.084880627 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.174044986 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.970601893 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.113639092 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080582042 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.11687648 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087790063 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128169552 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.403961654 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.072747326 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069446081 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.064947402 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.062549672 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.664435999 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694689929 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.126821882 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081243016 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.098805207 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.111794477 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.628358177 seconds)
  done (took 10.398692867 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.090611913 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.086989595 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.063580839 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119541592 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.089587295 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065525845 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070309628 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.062827728 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085459433 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.118672902 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085087213 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.094718275 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061102388 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065370916 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072523533 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194963235 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.076735716 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077156757 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064371513 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076525808 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10399273 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075508558 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075385699 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075673629 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125517275 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167575699 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.092427258 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.092826143 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.0635967 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077052186 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111486989 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124271936 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.063202601 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.061972557 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.116934341 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091998604 seconds)
  done (took 4.443050524 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.924260728 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087573416 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.100175433 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.601723175 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061787194 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.14763063 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.240152856 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068733747 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.413699472 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.138832095 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.133686671 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.080666114 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.137339473 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.108553652 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064452532 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.205669304 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.111074617 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.354581128 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064769055 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.063281745 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.061819299 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.064914188 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064243562 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059922034 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066620168 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088233545 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.083454489 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.157511196 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.922545627 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.245282383 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064546594 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161186178 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.082852292 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.355071368 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.067185949 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080448684 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.389526774 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.117122921 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063152785 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166715802 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.111644091 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.059818049 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.10852117 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073431218 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.064688578 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.06514911 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064586888 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070954096 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.074794885 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098696189 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065026442 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061722505 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158692481 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062152344 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062501953 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.063939704 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145619417 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061772632 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.138148264 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060971268 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065114397 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092717771 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06466281 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087228811 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.060895103 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.098706262 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.340630838 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.033808133 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063018392 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.916989161 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075432861 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.062465336 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067900822 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062829104 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064098478 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.059956864 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062519556 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.069240802 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.064228751 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.063304119 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.1027632 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063491977 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065673053 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.061670602 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066385999 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.094369833 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061207718 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.452372135 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.091966533 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061309771 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.072098303 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100104682 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062227234 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.067573995 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.062498679 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062296592 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061037286 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06182417 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.177007171 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.090908833 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066644197 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109613824 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.017069549 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064978098 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062868332 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067914198 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060580874 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066359498 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065884961 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063928186 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06645078 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064742552 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061670171 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.108796298 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062940378 seconds)
  done (took 20.986316161 seconds)
done (took 37.900830796 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.248188815 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078567722 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079054951 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078752748 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078736782 seconds)
  done (took 1.803305205 seconds)
done (took 3.034135519 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.103862436 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.060365246 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.096728181 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.094181766 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.062331723 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060532259 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.094409172 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.06090076 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.092429674 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.093883249 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.096638324 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.095268406 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.059151061 seconds)
  done (took 2.309772621 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066000685 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077770441 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079256188 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059003339 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068715319 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077804099 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058906722 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.07642282 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083204661 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.07783486 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077708061 seconds)
  done (took 2.029383467 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066737105 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.07786087 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083399692 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059093374 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070368336 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078342836 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059214377 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077541537 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081043285 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.07750569 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077686127 seconds)
  done (took 2.028965948 seconds)
done (took 7.590498652 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.065848275 seconds)
  done (took 1.266707988 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.523752479 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.5560744 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065414474 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.086434279 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181563759 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.096560823 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.222294761 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069398052 seconds)
  done (took 8.182131575 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092209813 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070737465 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065624543 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065084499 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066536295 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064975692 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066254072 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066625208 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.064806218 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06530355 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065362723 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066167697 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066384553 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065586572 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.064782638 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064757765 seconds)
  done (took 2.38864971 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093268627 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091979938 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070014443 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071228068 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068512636 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067653951 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070747772 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070035052 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06706525 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068287146 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071266544 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069445255 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069312931 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060162413 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070230077 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072137073 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066719752 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070512922 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070827693 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071750334 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070782209 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060550403 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068854526 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070051809 seconds)
  done (took 3.02895097 seconds)
done (took 16.085942787 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111895102 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073785277 seconds)
  done (took 1.396691694 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.068283723 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069344368 seconds)
  done (took 1.365603875 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075616848 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058451668 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080944895 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070170763 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058942444 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058605016 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078348658 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059168861 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058926381 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059110084 seconds)
  done (took 1.887536186 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.061930038 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069306185 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066238912 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068284992 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.06620657 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060018646 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063706372 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060744453 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068261278 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059146322 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064501959 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079434786 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064099288 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081286931 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063895277 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064691856 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066476431 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063485348 seconds)
  done (took 2.425151042 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060024994 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060370262 seconds)
  done (took 1.359154417 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064018902 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060603719 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062812915 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063299561 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059480753 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058892411 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059859508 seconds)
  done (took 1.656877966 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409303677 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115960138 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.334974405 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066289096 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076940902 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.242934422 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060096562 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065275909 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065308362 seconds)
  done (took 2.70813036 seconds)
done (took 14.040415623 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076764312 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.081265537 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.087024646 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.420853699 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089827848 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064132054 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.10888602 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177398188 seconds)
done (took 2.361670701 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212489834 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.433726154 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.954852031 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.062596023 seconds)
  done (took 3.692650442 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.320856318 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081394021 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074659278 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064196031 seconds)
  done (took 1.795610264 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06255704 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068132505 seconds)
  done (took 1.374293802 seconds)
done (took 8.329412348 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061938398 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085640735 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060402846 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.061639882 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060586846 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.060489899 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060700793 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060026283 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060243343 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060466315 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060257985 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060009192 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.060178457 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060121913 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060344648 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060717514 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060289056 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060489694 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060312682 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060318834 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059950971 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060510061 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060855721 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060721406 seconds)
  done (took 2.745988707 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079010948 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062780754 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064797213 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064547028 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064920163 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064558182 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064258057 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062892111 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064316496 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062617053 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064878755 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064912347 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062641245 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064670475 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062448942 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064697204 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064385309 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062498603 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062689478 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064669786 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063973762 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062672671 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064678113 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064186766 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064486494 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06490336 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06225089 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063453552 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064292193 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064665287 seconds)
  done (took 3.19236112 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06201553 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057549203 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058229231 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066934057 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057304764 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058164532 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058402295 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.05725026 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057291887 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.05889606 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058069128 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056889825 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058296661 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.056945832 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057291774 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058029158 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06122522 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075100183 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057392027 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057412658 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061469036 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057675429 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057357965 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057654233 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058311129 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057469199 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057401043 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057684803 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057005992 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058150748 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057013152 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060900943 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061998033 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057190267 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.065827273 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061841182 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057128165 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.060757591 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058478371 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056980087 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057281138 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056928501 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057707853 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05750542 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.065979876 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057415393 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059061512 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057883753 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057590193 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056806934 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057002376 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059620626 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062192772 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059022883 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.0571593 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058543256 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057400356 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057945597 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057315858 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.056885708 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.056951076 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060463029 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059037444 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058224999 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074507357 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.058882845 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066025965 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057253476 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061212443 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06014299 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.05807019 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072754912 seconds)
  done (took 5.536523146 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085338845 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085883631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06286417 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062229861 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058244169 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058206915 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066061222 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05826782 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062078488 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077202084 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058057882 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061955711 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062177487 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061913053 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058513797 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062157081 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066215057 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058010537 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.05825115 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06147809 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057988252 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065868524 seconds)
  done (took 2.682471494 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137442758 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063948192 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10083038 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074346405 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066403213 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07445875 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063664195 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063753041 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063502779 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064006427 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0640832 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063768954 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06633608 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064091198 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064375662 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063899728 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064187951 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063893201 seconds)
  done (took 2.549990305 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075893625 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063335501 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085763616 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063511492 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063105073 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062875001 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067539179 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068449644 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062783957 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063312035 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068086138 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06274585 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06265531 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0632861 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062367435 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063278193 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062586206 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063433022 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067950184 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067164015 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067288008 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067837692 seconds)
  done (took 2.720099086 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073466214 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063022389 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075868464 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064557697 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058291968 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057810817 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063251914 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061936153 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06313766 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061542294 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062132287 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057798694 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06414183 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062179556 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064345706 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062596596 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061816712 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062632689 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062050172 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058322511 seconds)
  done (took 2.526541913 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085258238 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061518267 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060638944 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079261981 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060979912 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061037437 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079815007 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061194598 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060853121 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081501056 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061376928 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061308193 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079358612 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079766823 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061304623 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079157993 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078662021 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078682129 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060909371 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06135783 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082394173 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061399475 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079442321 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061183724 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061333457 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061305313 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060890306 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079131658 seconds)
  done (took 3.207469423 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071237416 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059824565 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060303003 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060843802 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060885063 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060754189 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061191385 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060870593 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061430658 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061153636 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060879462 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060546294 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060599858 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060774861 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060753865 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060126213 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060754235 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061352014 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060637721 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060509893 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060154763 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060531997 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060515334 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06109969 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06092249 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060972998 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061537275 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060839865 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060323552 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060730645 seconds)
  done (took 3.104382593 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072517014 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069371681 seconds)
  done (took 1.413571781 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060872771 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074409829 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058179609 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06803469 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067398053 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061644234 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068086943 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066608835 seconds)
  done (took 1.791604095 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.067575018 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.087785444 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060431513 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061132399 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063924149 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115594388 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074073097 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.068923893 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07413002 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060494379 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060179869 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071331151 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059550199 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070215489 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061501512 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066474912 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064453861 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069489595 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.06992216 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057670549 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069219743 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060005869 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058105481 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060564998 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.05943905 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064993399 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.072778755 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069232148 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066178211 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057370767 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076187024 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058220098 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.05928277 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06633713 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063251906 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.05828642 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092233727 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058671525 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064666941 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058026593 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069326537 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076397948 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070373544 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.075102303 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060247878 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060759347 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057983293 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060570355 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060850805 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066025216 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058388646 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063923193 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057491747 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059987878 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067580711 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058433355 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.06513537 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066460299 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069686924 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066926349 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065359799 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071427941 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065573138 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.06814821 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059250419 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075582954 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060053488 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068784288 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070783738 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.05946088 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071093673 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057452119 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056519007 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057712905 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088223069 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060150397 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059298479 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057902112 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057904006 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.05975862 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066138726 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064713611 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063743129 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062221758 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072066132 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065751564 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057803766 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066576485 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074870597 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060644219 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057955042 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.072998681 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06003829 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.057858683 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074236696 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.065999353 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.0599311 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.058872503 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060078399 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07029503 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059230615 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056428868 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064284527 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059524004 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061082097 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062169277 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063533234 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057751154 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066477797 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063260394 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059726197 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056680566 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061651921 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058885442 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056430948 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065363168 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057502358 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070741183 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062644947 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.069435804 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069723559 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.066153835 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070801714 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.056798233 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.055782993 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.072890739 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.197248681 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061449838 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076821739 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059116997 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068912111 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059158089 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.06104445 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067664308 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058294965 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061390553 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058689367 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065378087 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060719103 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06057302 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061994978 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065602465 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070351982 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060300404 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065966191 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059445864 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072791978 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067058495 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062591049 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063178237 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059714536 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069815651 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063982039 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066684441 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058628222 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059737495 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059411454 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067304269 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066693002 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.0607426 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068898838 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06223034 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059401388 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.05920056 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060247999 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06151691 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063518506 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06003687 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064586079 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066237101 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.072196231 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071167438 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065951746 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.05727847 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058123254 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060256069 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057813332 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061620166 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066083725 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071701617 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068866514 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076977524 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058740062 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066513281 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060209138 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073525783 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069568817 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059452229 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064218044 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057034202 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060488666 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066510832 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068559044 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071655958 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071103307 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061691278 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061728071 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058109588 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071266906 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059295989 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065138546 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066497849 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063641439 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058194469 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060449309 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066050437 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061983216 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0586914 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.071945775 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065415345 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058178323 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070408959 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058508135 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067970195 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058022645 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060988639 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062258339 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060565107 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065991691 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071710251 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057201852 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058790048 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072484449 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060692362 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060018977 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064767021 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071138609 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061660494 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064842129 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067369249 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066410546 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061339681 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065923142 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.058924748 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.065710437 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061466923 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068403712 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057905549 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073791779 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056650583 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.07075274 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.05849145 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.06734262 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058080718 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065662099 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058590589 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.072265822 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059031873 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.05821976 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.067796139 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.055776265 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065372243 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.056809242 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.060762517 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.061990817 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.064726336 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.058943753 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.201443187 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061588119 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06700537 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063006597 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066909466 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067265991 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062598458 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058744459 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065836997 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068899813 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065834786 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060804828 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060927867 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060028843 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067411541 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060622243 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060333316 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06572973 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.061741107 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063473225 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060721722 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060977636 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060823607 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066164373 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06690769 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075126573 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065652332 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064308425 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066683422 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058331519 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072640774 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058332934 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064753516 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057560021 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066474638 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066259991 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059293142 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076317541 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061311277 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065388882 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07092912 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065452769 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060699693 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075096808 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063472938 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065917626 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06549765 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06209895 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063594426 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060331664 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064907574 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066729217 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068603947 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059281463 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064226912 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065699102 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061505958 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068848437 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060310331 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064946938 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060392162 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.05752527 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062126475 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.068642125 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062239874 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062338267 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058665812 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057162192 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058964817 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.066826186 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061896022 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065531695 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071668264 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057036319 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059805261 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.05821662 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063951948 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.0746436 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066836506 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064711888 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.061970786 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057360542 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060313901 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060453946 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058759892 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062507419 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057950843 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058222159 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067726413 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060390895 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061705642 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058444711 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059681946 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066114713 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063958262 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058836805 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063799066 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057809839 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061813699 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057304209 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060083236 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061784617 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057767901 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061047928 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.066856348 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.072633318 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063473313 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065527761 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059270918 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064706142 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071734591 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066666723 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059237895 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066014124 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.056900654 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074215513 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065512261 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064576753 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066246997 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059042162 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07329736 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061131128 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.065762182 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070938522 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058406036 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064699496 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.056656517 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070567748 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060848024 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.056453157 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.064033634 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062960075 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.202815434 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070837071 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060760982 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066536459 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066617642 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062128255 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061368512 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061294165 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066696354 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073324361 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059823727 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064542225 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066091324 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065645455 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062104259 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069853726 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065992507 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060376652 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06125257 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061582714 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060227825 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069544873 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05935847 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062160729 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06195643 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058488899 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064547897 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073078639 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067009215 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06738923 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058150037 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058069976 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.07515405 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061117776 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063317299 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065463845 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066898534 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069497584 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06664563 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074637889 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059786579 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063285814 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069958363 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059983833 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058551459 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061755835 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060824853 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066565667 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06710757 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065055287 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060485182 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06425106 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069769386 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059790837 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061868582 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.064245499 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059452406 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067575506 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.0652815 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065324961 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059869422 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058250599 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060620884 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06554388 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064460045 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065910223 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059297332 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.066788006 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071292859 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064357974 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062938091 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058125295 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06245998 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065919511 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064037454 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058161803 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062152444 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060571926 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066886441 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066609302 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061887883 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057998666 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073604468 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065188192 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.065666029 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060300114 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061031844 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058648105 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058231914 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068380358 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058245712 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060680013 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061765999 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060280392 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074736807 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065333518 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072343444 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059661887 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.061807109 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057897406 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066832787 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.061895443 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058601529 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067327675 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.05738291 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072564136 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069125078 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067528279 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.05772952 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061792042 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065375786 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070602388 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066357323 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065119277 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061840167 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.065957031 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.059637515 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067232683 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057743212 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.056697606 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067136109 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0647468 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.068529092 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057721264 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.066492116 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.059712352 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.063662474 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06401327 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059342872 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.058919527 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.058976812 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06498872 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.060839644 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.064785161 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.060902028 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071520266 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.058259651 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.066908473 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065062954 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.066433837 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068270267 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068542508 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.063688673 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.057487937 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062736991 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.063872944 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.058147702 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.060556395 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.060641593 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076568638 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.058636997 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.059023612 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070710223 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.064559647 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057307706 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.065255765 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.061267579 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.066209537 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.058442681 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.065903792 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.06186089 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.058277376 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.061101842 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.060844298 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.056432296 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.057634365 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.057429128 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.065701736 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06131859 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.057513545 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074399919 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059400523 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064172285 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067066725 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.062914311 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059249709 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.056416649 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059012884 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068377033 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071510357 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061541553 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064476006 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059983157 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065926752 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.05678401 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.065019529 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06419302 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064845865 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057885308 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05829153 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070147208 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069824653 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.060810427 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.065788523 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.064670765 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.058703477 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075552987 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.062950016 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.056858096 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.064868856 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057888845 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.054415059 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.054632615 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.057090397 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.06710671 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.054968868 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.05768651 seconds)
  done (took 39.734461227 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109097538 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061841736 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060387963 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060674204 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073632107 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062130607 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060798095 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061698019 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061439616 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06331513 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060005976 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059947193 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072465805 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074936096 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071437208 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064398729 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059733615 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060792073 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059524643 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060875395 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07075174 seconds)
  done (took 2.878032908 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.0685347 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075593989 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073013471 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077317787 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067892656 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064421908 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071267462 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064084791 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071900265 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06904473 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072246345 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064025142 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069394437 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069259904 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069723769 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064280448 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072264137 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067694242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063877406 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071293972 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064074282 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071741346 seconds)
  done (took 2.904117199 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.060947434 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059825211 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065988365 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058546634 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058131972 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062374189 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058561809 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061748572 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061715545 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061876319 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065673022 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058977505 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057911923 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062632191 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057919776 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059039069 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102217747 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.0600828 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059139341 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057844819 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064654271 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066202153 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058131219 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058484644 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061419716 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061908371 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058251146 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061490614 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059227396 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061878907 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059405504 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057814941 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066026672 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065118409 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061345725 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.062022529 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060424999 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.05898704 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057921935 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058319862 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065148096 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059693573 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058543918 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059905133 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066428817 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058505489 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058787302 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065804176 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058634181 seconds)
  done (took 4.407758943 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072128956 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107862976 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064388373 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087367127 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.072803788 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065744983 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06400722 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.0883581 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059518878 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060623162 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.073976683 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07445451 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062303374 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064150177 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065880288 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062233099 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063245966 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060985216 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.0652785 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06151434 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065237988 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065544075 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07267655 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073552109 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063659686 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061264781 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061252215 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063262197 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.072579643 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065839021 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063819486 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06438035 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073189837 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06611217 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061626586 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061596534 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07345313 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061966636 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061863297 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059787074 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061731842 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063873102 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066466118 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074553927 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06210858 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066176112 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062320473 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059803413 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073302542 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061424 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066774618 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074536983 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063024498 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062495248 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063723876 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073356838 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061889525 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060478967 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062226681 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.072990303 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059744252 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063024544 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073747368 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.060903462 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065808026 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074003145 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06649547 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063011552 seconds)
  done (took 6.0738755 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070998087 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.08999088 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071025052 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070566731 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069490363 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070062805 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069249059 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069720289 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069738962 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070516274 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069927791 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109252152 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065089095 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074987185 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069331776 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069598684 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069617474 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069426248 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069573978 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06924296 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069299901 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070255158 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06931016 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070037884 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072342128 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065302033 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069043435 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068397243 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069085777 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.067734781 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.071144558 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.067642164 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.067650789 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068354708 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.070597458 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.067186555 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.057825789 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067683794 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069337332 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069406467 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064892336 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070438076 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069670731 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065038831 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069394267 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069184257 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070267907 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.072698172 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078127813 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07044359 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069455893 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071133249 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06952798 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070178399 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070257952 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078276355 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07043277 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070220685 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069576161 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070923534 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070275375 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078494706 seconds)
  done (took 5.808741086 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076132549 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06718028 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07918893 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061451254 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058152967 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068326085 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058203753 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058259728 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066829455 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066482674 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06926685 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068623539 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070986209 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069101365 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068322397 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070714633 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068118072 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067900846 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066417105 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067944636 seconds)
  done (took 2.76556327 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071583814 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076554554 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064266177 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069192648 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063947458 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068359396 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063288002 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064193732 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064568795 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064723002 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069645685 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070129004 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064894944 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068492225 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069573926 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068355386 seconds)
  done (took 2.486201975 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.065626527 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.067977125 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067289562 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060090894 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06303293 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058845367 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060066109 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.057900884 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058753535 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072556697 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059658502 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070579866 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.05955073 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058328457 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058865678 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06513398 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058767058 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059529346 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059237579 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065188324 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065901908 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060768043 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062951817 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.05944842 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064924041 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06685738 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061248151 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063169143 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059249062 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059939307 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064839508 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06618976 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059313113 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060008345 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058243498 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059612394 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060243341 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059768391 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065050629 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059275416 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058122904 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064011948 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059833513 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060030235 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058701374 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059949238 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058470686 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065205282 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060239258 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064530691 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059548302 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061799514 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059982223 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067061991 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062409601 seconds)
  done (took 4.809963618 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074928055 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063753261 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058374314 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0584221 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063462825 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064029363 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063667725 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06343951 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06365723 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058248868 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064188185 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063146836 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063624313 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063468891 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063896103 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063645836 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058010663 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063475252 seconds)
  done (took 2.556119773 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069988532 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062925997 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068042988 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063091537 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063373061 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062819131 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058585417 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058519958 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05906877 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062767353 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062728307 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062570759 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058359972 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062341651 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062978046 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062471391 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06237072 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058781253 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062686369 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058472654 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062405135 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058803714 seconds)
  done (took 2.775127327 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.085873538 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080525651 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.119295348 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075611514 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083507812 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.06827997 seconds)
  done (took 1.927241357 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087935051 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101639436 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063392831 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063245324 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073811687 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066544875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06652729 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066607935 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073934693 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071826983 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067528005 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073878408 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074367527 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068926494 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073880576 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076888177 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067649896 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067259256 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063907516 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076827007 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066907631 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07372732 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066899653 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066694127 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067256634 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087696357 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077193645 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071825944 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069164127 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073509848 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076861918 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066644932 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073906748 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071048909 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062679468 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072831249 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065990761 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076866157 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07392314 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068903916 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06301564 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073803651 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074150689 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069044378 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076979852 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066965898 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06914048 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067190036 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067510898 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079923205 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074276478 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069585764 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074379732 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077979972 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077650232 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079689867 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072288835 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069415652 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074768974 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072117817 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069439023 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074123116 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069439405 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071805804 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07714301 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06927176 seconds)
  done (took 6.174007709 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09628203 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064057607 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067533277 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072627351 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069952373 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067228631 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067077105 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06760699 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067268015 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063852144 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101676782 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067633734 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069659771 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069576348 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06755976 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067164349 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067128275 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069687113 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063844766 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079755213 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067120171 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069211436 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069859167 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069497314 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072130196 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077239237 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066818479 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06682277 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066950871 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067192315 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068114041 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067323463 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069318499 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064153309 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069218193 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066940627 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067132915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06915494 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067417817 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073973206 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068398091 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077136177 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066879642 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067228277 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071999015 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067166774 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067169303 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064084256 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067102963 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063843073 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071792794 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071926284 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072110768 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069817183 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068033525 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067666944 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06747714 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067455571 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06728905 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077328216 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069770486 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067400658 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080209317 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067871119 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067471589 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069522135 seconds)
  done (took 6.046630619 seconds)
done (took 124.060739618 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207071707 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.180133839 seconds)
  done (took 1.785798541 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071314275 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.093943278 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072599208 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130732093 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067291271 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100394522 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099961121 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070583936 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065766939 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06574671 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065662372 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068608417 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13137308 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066469932 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066168387 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068941863 seconds)
  done (took 2.725543838 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101919171 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.179424211 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105695848 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06596933 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101041673 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07256734 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064168896 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074948762 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.067847198 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068377304 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073763543 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07195848 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06837881 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071320692 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069474276 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073243309 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068092139 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073270234 seconds)
  done (took 2.897931149 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.091967485 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083733172 seconds)
  done (took 1.606694426 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153866451 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100838127 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.138830637 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.315211203 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.132087653 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.273292395 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129762636 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126842905 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106116883 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121169337 seconds)
  done (took 3.021035052 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100013993 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163154008 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297726642 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115537556 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072289057 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.084279838 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117667627 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077627524 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077424096 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07705034 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076990231 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076279484 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094412771 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073251487 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072799412 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073257409 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097040219 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071947997 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072359854 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072892299 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096583481 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066288394 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07298262 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072115477 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074939297 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074225247 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067079535 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065528315 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072574197 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071884291 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07538028 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.080854749 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074476095 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100521099 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.06979369 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10207566 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.071544331 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070289644 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071982939 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070422979 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.073919156 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074063744 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074484996 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073161088 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067312858 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071578527 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067360813 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06584509 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076574641 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067260943 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07641096 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075570414 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10052346 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067430282 seconds)
  done (took 5.970202764 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10743318 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10509117 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067182625 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110990746 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101553979 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066995165 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102776177 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095613988 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104889363 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066363583 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065766337 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065825136 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074874055 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078752485 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110257926 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102896341 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066771387 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064726586 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101812387 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102315281 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065265754 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097557374 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093616717 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104175427 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064646005 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066242988 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064856912 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065968488 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072302711 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073640428 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065439357 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074448826 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080815731 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071626769 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062924194 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063149004 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065142115 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.073906736 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074246501 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07479972 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.071284426 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064182835 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064445088 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065360827 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065195018 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06308587 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072161011 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.072384095 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.070778895 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063395426 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.063870863 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.063055352 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064469473 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072093332 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07076611 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.073551594 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07230195 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063373261 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064898311 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066960733 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075626532 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074939092 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075219022 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066598521 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075445627 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065126882 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076928426 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0806512 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065077189 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065470157 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064566996 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065069715 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065496989 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072783036 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073142947 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065526421 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065134449 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064673269 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075392308 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073236365 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06521983 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072008324 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064328922 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065345686 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065962408 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065299013 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.071848827 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074353263 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06647263 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064605691 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064602821 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064814429 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063991973 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072589625 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073935696 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074215719 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073433736 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065768481 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073188367 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072958773 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065352506 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072649042 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064867637 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065239545 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065245242 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073162065 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071594842 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.073022979 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064255576 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063979855 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071546835 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.209701271 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066576507 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074315137 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076352632 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074820054 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065844465 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080502107 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064622172 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077296641 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066389515 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076588775 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066300333 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074085224 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065902315 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064938454 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066045049 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.074371885 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067265416 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065637493 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065718099 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065409152 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074557038 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077490999 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066694217 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074206636 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074798855 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066554813 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073467874 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065807296 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074405477 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065665764 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065979496 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064451227 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076901063 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065085875 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065444806 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065876054 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076505198 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066462416 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07581508 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072916564 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064899785 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079726226 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074325936 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073613527 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076481079 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066644258 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065562787 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06487114 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065208206 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072371327 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073785637 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065954858 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065226524 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072350629 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076037153 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064700118 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.072800163 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073421431 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073216989 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065730733 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065098184 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076330407 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073490764 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.071004094 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.070963981 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071511995 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063192564 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070731705 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072648141 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065242794 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079111792 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065753468 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077226427 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073919059 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072173419 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073562787 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075278667 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075913078 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075818251 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078676946 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064404429 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063579352 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071687138 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063952445 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065503661 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07263356 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065409663 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065438169 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078645227 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063574176 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073436273 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063315464 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.073193634 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063478352 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065534933 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077802092 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065837854 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065652894 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073063129 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064796174 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072386302 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076076961 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.070613013 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064692222 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065510704 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07287973 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.072392145 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064890715 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06424788 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06488102 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071626015 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071332515 seconds)
  done (took 17.643960131 seconds)
done (took 37.094118144 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205754833 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156268856 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187825869 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110722186 seconds)
  done (took 2.186551671 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.096875336 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.096951179 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.077155061 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061931667 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.083004157 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061939708 seconds)
  done (took 1.945932274 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279460154 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19605392 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176475397 seconds)
  done (took 2.11541339 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213746963 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192980025 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.45574547 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283421682 seconds)
  done (took 2.708112698 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.131686578 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.080092648 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061728506 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072484448 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.112052848 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.145717813 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.08959618 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.11401318 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073202567 seconds)
  done (took 2.405046465 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.132353951 seconds)
done (took 12.988254333 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099740212 seconds)
    (2/309) benchmarking ("sort", Float64, false)...
    done (took 0.129195241 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074410954 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069565252 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.0715547 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.108297364 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065360044 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.148799873 seconds)
    (9/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.226185967 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127423398 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.194585294 seconds)
    (12/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.196380004 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072652651 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.459446511 seconds)
    (15/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.082708245 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.117742755 seconds)
    (17/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.069054348 seconds)
    (18/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.205911963 seconds)
    (19/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076412839 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.176284784 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071194003 seconds)
    (22/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071648423 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.165961046 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071209561 seconds)
    (25/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070692839 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062462909 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.195088794 seconds)
    (28/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.166711951 seconds)
    (29/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128325607 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.088895803 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073851392 seconds)
    (32/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.137669358 seconds)
    (33/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.194459704 seconds)
    (34/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.061778928 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088618689 seconds)
    (36/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.133640618 seconds)
    (37/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.165073898 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.080035659 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.162989217 seconds)
    (40/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.170899088 seconds)
    (41/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.171671203 seconds)
    (42/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072420822 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070404592 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117535408 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.163839095 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061098715 seconds)
    (47/309) benchmarking ("sort", Float32, false)...
    done (took 0.128518655 seconds)
    (48/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062123676 seconds)
    (49/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150333441 seconds)
    (50/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.242687242 seconds)
    (51/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.181572342 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074312265 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.148888495 seconds)
    (54/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.061064073 seconds)
    (55/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070716541 seconds)
    (56/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.178836497 seconds)
    (57/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070314838 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 0.062904352 seconds)
    (59/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.064269497 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063338875 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.214537139 seconds)
    (62/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.180109776 seconds)
    (63/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074526602 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073329534 seconds)
    (65/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070965943 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069029652 seconds)
    (67/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.136139434 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061532734 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.061129869 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071007081 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06131869 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116036569 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068245626 seconds)
    (74/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.133734327 seconds)
    (75/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060800714 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148747386 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.08532291 seconds)
    (78/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066628079 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.158250208 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.072294969 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146141776 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.081415402 seconds)
    (83/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074661602 seconds)
    (84/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101747885 seconds)
    (85/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.22586754 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069325442 seconds)
    (87/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.077861399 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.211115366 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.206327286 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087763777 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.099838136 seconds)
    (92/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.163713936 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062940071 seconds)
    (94/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.064515213 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.0623968 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.117971894 seconds)
    (97/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082094886 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16332593 seconds)
    (99/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.239299508 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074025217 seconds)
    (101/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062890931 seconds)
    (102/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.139506183 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081401853 seconds)
    (104/309) benchmarking ("sort", BigInt, false)...
    done (took 0.240467469 seconds)
    (105/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.156546149 seconds)
    (106/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.205700058 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07007749 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.063137557 seconds)
    (109/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.137028453 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075780508 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131386114 seconds)
    (112/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.126381933 seconds)
    (113/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072915199 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.062828227 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.079040205 seconds)
    (116/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.135654219 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084689128 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085702488 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071435584 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069357038 seconds)
    (121/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.064422827 seconds)
    (122/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.063297518 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073587183 seconds)
    (124/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.16823228 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.061919236 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070955398 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116725937 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.078004336 seconds)
    (129/309) benchmarking ("sort", Int8, false)...
    done (took 0.166904358 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.077990586 seconds)
    (131/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.077109621 seconds)
    (132/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.061835856 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.061693547 seconds)
    (134/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071207116 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.153841604 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.205866326 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072186508 seconds)
    (138/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113575143 seconds)
    (139/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.199180014 seconds)
    (140/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.202832844 seconds)
    (141/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.061652771 seconds)
    (142/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.183825831 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.078056196 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.0732199 seconds)
    (145/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.062705013 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088498221 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073049416 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062968153 seconds)
    (149/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062186769 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069221397 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.061840539 seconds)
    (152/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.061318433 seconds)
    (153/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071428022 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07072507 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11595706 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061399014 seconds)
    (157/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.20118132 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086475732 seconds)
    (159/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.070571136 seconds)
    (160/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.066825646 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.074795985 seconds)
    (162/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.062793154 seconds)
    (163/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.074661168 seconds)
    (164/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163590893 seconds)
    (165/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.185512564 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061686254 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.126965841 seconds)
    (168/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063226276 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214920789 seconds)
    (170/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.142788626 seconds)
    (171/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067583703 seconds)
    (172/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061932353 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.061602148 seconds)
    (174/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.061065303 seconds)
    (175/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070540137 seconds)
    (176/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07456743 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138195046 seconds)
    (178/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.061463312 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.063770091 seconds)
    (180/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.0621415 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.083131447 seconds)
    (182/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089992496 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.061942462 seconds)
    (184/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070840751 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069856232 seconds)
    (186/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132203644 seconds)
    (187/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.063677074 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088091563 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120406858 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08601809 seconds)
    (191/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.061770835 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.061586918 seconds)
    (193/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.060698929 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08728861 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.060967217 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.062745582 seconds)
    (197/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.060273025 seconds)
    (198/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.060124409 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06051818 seconds)
    (200/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.062084934 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.075453825 seconds)
    (202/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.069528017 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.061201056 seconds)
    (204/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08351474 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133405834 seconds)
    (206/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06400128 seconds)
    (207/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.067878959 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06019081 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.062092745 seconds)
    (210/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062371325 seconds)
    (211/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.062540601 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.060772042 seconds)
    (213/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.062523821 seconds)
    (214/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065042938 seconds)
    (215/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069250778 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.061963601 seconds)
    (217/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.152612425 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061993752 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.081147298 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.061453068 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.106609979 seconds)
    (222/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.071389941 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.061808022 seconds)
    (224/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071694839 seconds)
    (225/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068477623 seconds)
    (226/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.063737471 seconds)
    (227/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.061699502 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.124320214 seconds)
    (229/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.060180755 seconds)
    (230/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.134136554 seconds)
    (231/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.151517294 seconds)
    (232/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.060121017 seconds)
    (233/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.061425821 seconds)
    (234/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.063156359 seconds)
    (235/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06783579 seconds)
    (236/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062119526 seconds)
    (237/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.060303497 seconds)
    (238/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.075040006 seconds)
    (239/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.062089813 seconds)
    (240/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.062055857 seconds)
    (241/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.068718014 seconds)
    (242/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061978975 seconds)
    (243/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072403396 seconds)
    (244/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072361109 seconds)
    (245/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.060411323 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062184339 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133305596 seconds)
    (248/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.06842595 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120071143 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.061330818 seconds)
    (251/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.067820243 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.060832384 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.061208958 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068845529 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137818716 seconds)
    (256/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.059265209 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06109304 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.085477872 seconds)
    (259/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.059407037 seconds)
    (260/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.066155359 seconds)
    (261/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.061113169 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.060004692 seconds)
    (263/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.064113003 seconds)
    (264/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.061646518 seconds)
    (265/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066763746 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.085553419 seconds)
    (267/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.063767591 seconds)
    (268/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061046451 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.061197979 seconds)
    (270/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061427454 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064299759 seconds)
    (272/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.061707923 seconds)
    (273/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.088390665 seconds)
    (274/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.061036985 seconds)
    (275/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.059548724 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.127755798 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.059809634 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.059575852 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.162394608 seconds)
    (280/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.061481996 seconds)
    (281/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061963746 seconds)
    (282/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.059808218 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.160249086 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.125856775 seconds)
    (285/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068571278 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.064307101 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.060999431 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.062821543 seconds)
    (289/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.061313783 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.103539846 seconds)
    (291/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062651835 seconds)
    (292/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064858915 seconds)
    (293/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069837571 seconds)
    (294/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070980005 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072455776 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123722854 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.119810284 seconds)
    (298/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085688898 seconds)
    (299/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070060552 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.06889292 seconds)
    (301/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.068045639 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.06277283 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.061395546 seconds)
    (304/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064665309 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.061420828 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062674825 seconds)
    (307/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06221086 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.059907196 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.060794799 seconds)
  done (took 31.45381432 seconds)
done (took 32.937774705 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090570196 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088692728 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072102176 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084471584 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079785539 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09494537 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07245902 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077699751 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080360353 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079342212 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07858026 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071411488 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074725058 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074417783 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072993666 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087993348 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079156749 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072425409 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072814405 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064021366 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072637496 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063855446 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063186623 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070267306 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075245271 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07100565 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073621892 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073050235 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064697085 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065267228 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070123232 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07443792 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067804462 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078691864 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073874628 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073564567 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074902167 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075862912 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063806867 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064705535 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074611215 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06437605 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072431508 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070729242 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069450323 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070626418 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072466884 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076543232 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086996474 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068435521 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074608391 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074961475 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074833508 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0681546 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06736716 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071049579 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069039765 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085024741 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071731204 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066672961 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073622381 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072382161 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069607779 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071530731 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072417982 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074073864 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076626833 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07046997 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074133775 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070975043 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063685893 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072131171 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068174818 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063786338 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075398162 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077001773 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062822519 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068049311 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071789585 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072335102 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063315843 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068219166 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063329688 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069071125 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068463336 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070495333 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069109177 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071381593 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06333944 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07287593 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071233914 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07173592 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063265498 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077604886 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063587317 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07037426 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063692101 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063581147 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062922264 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06892277 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063598028 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067876347 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072526061 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062821317 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068501857 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077078252 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063264632 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071397999 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063202721 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063601587 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075400819 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074294313 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063756572 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068251423 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063134334 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068932959 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063355261 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063128702 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063274082 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063121155 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068092924 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063254368 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067648924 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069137563 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076879602 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063523702 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068418874 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067784524 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063653595 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070022696 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063630486 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063364317 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062533716 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076986877 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06764382 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063338369 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068892642 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068016916 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07199397 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062341753 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072105739 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069641625 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.207675328 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07116417 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063556209 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075605823 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067467649 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067495748 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063298104 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063568343 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062700578 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063188811 seconds)
done (took 12.628590907 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064362422 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.105085697 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072535674 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.081142689 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076054418 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.0650631 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.069701184 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.082641537 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067666139 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.083803226 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085543423 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085134145 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.091946791 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062882514 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063571138 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064796978 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063221047 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.070724798 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.080643106 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085116374 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.094141914 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063590758 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073025436 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.07905851 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074263882 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080802562 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064508164 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064473517 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066192828 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082187989 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087170187 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.063430877 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064977923 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.079550783 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078597197 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.07325397 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064215262 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068485106 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064356371 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063240027 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065191063 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078932125 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068008898 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.071017673 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065226748 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065224404 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06483736 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068321273 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077573847 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067583717 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.07183503 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076387548 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066322548 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064191196 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062558806 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068816863 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064153242 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06439844 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06397522 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064045538 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063629398 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065936928 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064979918 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.0648497 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067317931 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067379254 seconds)
  done (took 6.290341967 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080409764 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089940643 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079730167 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081185148 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063260718 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064076651 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064137664 seconds)
  done (took 2.147344409 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064027808 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075726204 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079434144 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079605814 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073889751 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.082321508 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.064321641 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.094268115 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063353323 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077319465 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.110713772 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082044026 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067955863 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076280225 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064233484 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072925271 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064149716 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072498032 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073260782 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08085517 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068449405 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.091660636 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077607898 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064652753 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.08580886 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069729386 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063907423 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064352864 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065682336 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065427617 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065466081 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102892709 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069586636 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078725326 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065326461 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064031794 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070650696 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06762272 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067925234 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070769605 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069919518 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066177938 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063289585 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065859352 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067022874 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.068499231 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063077388 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065607289 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065300475 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076385368 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063530771 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.069106558 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067878004 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069427569 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069794069 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068841148 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072784334 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065581626 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07654493 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072416187 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065185282 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073993845 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073345104 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070353502 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073308855 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068719732 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.067907001 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069338421 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065332494 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066510575 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065758776 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07303971 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063994805 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066190455 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067584612 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066033463 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.06848794 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081002263 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081219108 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076995938 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066121754 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065536479 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068722977 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.081019745 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069257859 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065456881 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067954657 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063424694 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068245124 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06566461 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070579997 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065767633 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072614183 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.06667212 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067910837 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07343812 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063977777 seconds)
  done (took 8.499582625 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067479819 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065085812 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066740451 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065769215 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065418971 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065636816 seconds)
  done (took 2.055978224 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088026401 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066049422 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079414905 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066186574 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.100095188 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.07300328 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073222301 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074006472 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078258991 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077422818 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.073273245 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.075522689 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.07236128 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067355408 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072811964 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066891699 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.073610679 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069397327 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077251026 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067506436 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078695725 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067355747 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067724152 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077036649 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068260078 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066119737 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065000752 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.076859365 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07616133 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077232144 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066764671 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068178844 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072764815 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074155477 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072980713 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072676839 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065374341 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070807021 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06712861 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068213319 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074862315 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067351141 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.06658615 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070730004 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073927897 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072656301 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070659424 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.06884396 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072407516 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071078542 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070857493 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065817503 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068047219 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070917293 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072760092 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073822698 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070728907 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072439799 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067077686 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07243184 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065322333 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067951097 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073708369 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067712263 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.071003588 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070855995 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072449074 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06729569 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067046034 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065467678 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070966282 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065154338 seconds)
  done (took 6.776489503 seconds)
done (took 27.37522624 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.992233958 seconds)
  done (took 2.585034134 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.568580101 seconds)
  done (took 2.204453531 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.672487844 seconds)
  done (took 8.314329517 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.290733452 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.336109372 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.716257307 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129653402 seconds)
  done (took 3.142938298 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707014194 seconds)
  done (took 2.364761024 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.230077968 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222690645 seconds)
  done (took 2.111452191 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.345932561 seconds)
  done (took 1.991904405 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.082837248 seconds)
  done (took 2.720992037 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.23057805 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15784093 seconds)
  done (took 2.039314901 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.455147954 seconds)
  done (took 2.100427537 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.310746945 seconds)
  done (took 5.962239255 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235825671 seconds)
  done (took 1.917547855 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.230853056 seconds)
  done (took 1.884297481 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.727623205 seconds)
  done (took 3.375096973 seconds)
done (took 44.360718858 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080552978 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081167797 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081106839 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077274317 seconds)
  done (took 1.940841542 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071440438 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068121187 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072057562 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072453183 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070386289 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070887758 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.07161874 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068350033 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069563033 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.06851359 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066367715 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067821315 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070954999 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067955294 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070719082 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072352046 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068256546 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068145638 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071604559 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067994494 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.0709104 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068074114 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065827572 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067024199 seconds)
  done (took 3.315151538 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075530833 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070080278 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073341423 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069344869 seconds)
  done (took 1.944257377 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074307222 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.084695446 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086791704 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.092118695 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074628413 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074714314 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082851715 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083795871 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063242229 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086682494 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065923563 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064265613 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064957932 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085258064 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.08281722 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06122725 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062974859 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075268112 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074405391 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.077376312 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065518144 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063809333 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07456466 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074657269 seconds)
  done (took 3.45668477 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077572862 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063584171 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078957992 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09046934 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092885069 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06444028 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079373996 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092106178 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140015872 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063608587 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069462401 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063581437 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105698318 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063500472 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080389355 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109973863 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11352859 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067403678 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097336684 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064128368 seconds)
  done (took 3.346634217 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072905908 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066026483 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067883887 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063749889 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074806784 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071155013 seconds)
  done (took 2.087647054 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065285157 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063926261 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064507723 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065017903 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07051547 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06498412 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06378986 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065353051 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065051782 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064647567 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064741979 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064155079 seconds)
  done (took 2.44577747 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.159154465 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065961401 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065965303 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06451266 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067483672 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062682276 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079075629 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066325154 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083096846 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064400855 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06420012 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066921721 seconds)
  done (took 2.574896946 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098343308 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128500094 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09722201 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071998561 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169622894 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093992324 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.090222884 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.12357274 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093103067 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068372533 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092889199 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13508026 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094928426 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.098103828 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081360015 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124542614 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109468942 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087168528 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112916014 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081604861 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069913824 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133087218 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069547955 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091838283 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101582271 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097991636 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107841102 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131124107 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083856818 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.089539057 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082556266 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073824158 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105386977 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084149332 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.098489806 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09332897 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098835451 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084922303 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085790832 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11826917 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149808768 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09771132 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100276057 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134890168 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077923044 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.107818484 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080701508 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097610699 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102945164 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092090916 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074320824 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090996788 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.105579068 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101321483 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.081031159 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08034843 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117054158 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.098164976 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095704662 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079849691 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106793041 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.086546158 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107777006 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266455237 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138490805 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101784164 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139087087 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123514029 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096038449 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.089382829 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.09236714 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075933027 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111720031 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098961964 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137713784 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110696094 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10080096 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.096895234 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082464214 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108017251 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115308478 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094413987 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094546944 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147051585 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107484025 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087981676 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093159273 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.137153515 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068344794 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14370223 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088572044 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120652417 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096692078 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136394198 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089213042 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.08189353 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105895183 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102549693 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087703953 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099900547 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082260671 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112900801 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092027159 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100560622 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080146745 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090186305 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085996737 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.096867363 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074622512 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103547165 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115106429 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1130458 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07518358 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107470059 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085748138 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077521661 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092379264 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139026574 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083130616 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074736368 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150166626 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.093332652 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.11794792 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109769267 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083041734 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265635452 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136799632 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092985066 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09067084 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076639024 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156002136 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075991171 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119027568 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081640611 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103338367 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107327338 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133518633 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139955802 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096674968 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077987436 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091633616 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.106465727 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08699925 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085631045 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076908211 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.109659705 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126197776 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.100721219 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079911832 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.092451193 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068607597 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114278115 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075995414 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084238025 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095882224 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.08742942 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089506407 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142495064 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084111176 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107000437 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096568113 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066507174 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090761043 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151463961 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082376068 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.1112007 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115704526 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083597127 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067724055 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.095597307 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07234308 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108647883 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092897488 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106533739 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077701413 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10620125 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067938583 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07369595 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128777909 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101382355 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088883728 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.132490017 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105355862 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.08902911 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.104747823 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.097560114 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094946834 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101505243 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.260977309 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105768926 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.074175432 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130083661 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092584906 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.0773849 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087632392 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079606708 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078143523 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10048546 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115942966 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089608104 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100967796 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103899215 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090852619 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.110723509 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089880793 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078382011 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132758057 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076100519 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07462744 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088067297 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.107110838 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089289727 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.134400036 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079728062 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137505757 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093242534 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080517514 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115995595 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068606764 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069235333 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081062898 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09221079 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1159891 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079080921 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077745124 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118015239 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131350199 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096552846 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100764173 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067118231 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089729286 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1344879 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.113904626 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08117313 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109864942 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084202945 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130542579 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096119585 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120261539 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105850155 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110470621 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.091671683 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080670221 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073429228 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087399859 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110935709 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085993691 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08133346 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.06778907 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073762736 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09250347 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090667849 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112953204 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087786933 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135914257 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072971046 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099919416 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105416939 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105047788 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087914099 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094093117 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.090388127 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089924841 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089780889 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090557067 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.071640134 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12331251 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100221881 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076738636 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086789724 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09255744 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103897095 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105910582 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106976625 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090901784 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104342293 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119851401 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095689064 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080091207 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081623301 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.090056745 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.08153881 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078304796 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.100257371 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108960841 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095267189 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105744422 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.092627245 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.090154954 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103165371 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090480707 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086240784 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.114047074 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147662366 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.097599669 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098636045 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080087303 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100348649 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099236962 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106947416 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.104432304 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102841471 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.066368686 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.070351156 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.066244874 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100835202 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074311103 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109476639 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071554824 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100895148 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091126583 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075131893 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.062633951 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095518939 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087692571 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.077587142 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116652099 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.109136379 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070781062 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088044376 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102426637 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078585193 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114527097 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.095350764 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09462975 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.06716786 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.084499633 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0687118 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.372406273 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101877764 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077836729 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.077337465 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070461707 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108094357 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084201788 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109943664 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091015689 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10410914 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124831608 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137031424 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089201503 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098687257 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119367325 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113675731 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.081118211 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111562825 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135569141 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.120674756 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080035126 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.084755943 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105552616 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104398726 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100207522 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074222231 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076854947 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106714801 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111568562 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.066786528 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082973787 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068345369 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.082355802 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110072828 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092560855 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079626852 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117125441 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074796883 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108017486 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09624419 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123990506 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122695843 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14339713 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094586073 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084073127 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076800205 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125367878 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.071109937 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118818746 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113100316 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088088487 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068556647 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084163719 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.096347677 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.626798689 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109729639 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075898975 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137592712 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087572406 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116461329 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085864208 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.119179245 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089995596 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103018843 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092282942 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290538927 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082811477 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110062704 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.174820989 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112686458 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109213028 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073974803 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087417828 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074070605 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.077706642 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.080062793 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085316486 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107529261 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082329301 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104353186 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079032908 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.105584326 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090614803 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089044824 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099507673 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081320455 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139459652 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087668555 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123755934 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106452297 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077650729 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073313199 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.084715065 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099120558 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080469739 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092806782 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078689728 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.07673564 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152750876 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102851054 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085050388 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103101418 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091677355 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.087545821 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092154389 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117963628 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110871312 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073017084 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.087757731 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104103792 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078823147 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074819121 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096883549 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069367276 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089209201 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099208109 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094884028 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087715854 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100424453 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075680603 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085751086 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108953335 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085211936 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077067462 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076195307 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076213339 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.074617002 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100888364 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106509828 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114076673 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109569742 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091754768 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092834029 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.078589416 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.220737243 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239187306 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098654776 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.106530871 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076627808 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.132075667 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089212918 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088448207 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095776035 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101131557 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149858149 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072707544 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109112825 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091225113 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107039529 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084242471 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103984086 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09298933 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090096675 seconds)
  done (took 50.232235021 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.090504532 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.144676547 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151868008 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077941659 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091676784 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115628066 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205023678 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188579249 seconds)
  done (took 2.880132407 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064181369 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077239659 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099385475 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081049071 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062146123 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.0655978 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.205402348 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079875389 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064454065 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101732621 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074651155 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.064945542 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.414220537 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062191157 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.062859798 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070961143 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062742894 seconds)
  done (took 3.508348158 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363956754 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603771204 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.340770633 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072899226 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.989820034 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087666288 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.328759497 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.135200871 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077000679 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.562358935 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367158083 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127600568 seconds)
  done (took 18.856141586 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07312815 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070920951 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074722962 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.074211354 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069899778 seconds)
  done (took 2.157926155 seconds)
done (took 100.407904617 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078262082 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.165268944 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065536509 seconds)
  done (took 2.06240204 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.080230203 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.078300953 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.077916753 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.07493494 seconds)
  done (took 2.116505845 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071016112 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072534422 seconds)
  done (took 1.938957294 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242860501 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163550086 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091793338 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079666448 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076266492 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.0764995 seconds)
  done (took 2.044646532 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068952661 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.068270916 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.068921406 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068624435 seconds)
  done (took 2.073053251 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065068684 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062557096 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064377177 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067528885 seconds)
  done (took 2.058582164 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081034475 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079658384 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073980521 seconds)
  done (took 2.035145209 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.092788987 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093073311 seconds)
  done (took 1.98523821 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077340907 seconds)
  done (took 1.876799581 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.086750114 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094439911 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.149741864 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108598264 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147295492 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.13138003 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.074103703 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075507436 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.070358036 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.068395295 seconds)
  done (took 2.80626076 seconds)
done (took 23.368919604 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075985433 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367866409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355873789 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081388805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667862574 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352233671 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.978896529 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086538804 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.094327105 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063640244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079828532 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.643912282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.967208776 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32638484 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964404007 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320020077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.644103811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06395785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.062996862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064411806 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963130864 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063067834 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064430199 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063560109 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.680967869 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368008079 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064446941 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325040861 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063386643 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066388282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.352016386 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065017595 seconds)
  done (took 16.176054339 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067011587 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116501452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.06878609 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.078895519 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066153105 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06521896 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.066605173 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06435718 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.104118166 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065254337 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080446232 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06342008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.06788533 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065728141 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083585319 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06432892 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065806616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065027449 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064270514 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067880688 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082101814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06417308 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064866643 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065157362 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065034829 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077454006 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066054958 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06426594 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064504678 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067182842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067748038 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065958637 seconds)
  done (took 4.083218163 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118528971 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125610865 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07190364 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105857005 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119481881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068533593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147231675 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090430536 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110706219 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066860397 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082298909 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066285782 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098545859 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065668942 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08403099 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064901063 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066087176 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06488584 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064211941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065171176 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082852377 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064218069 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065040924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065301389 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065353424 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079337853 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065555187 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064739922 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064308908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066959277 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068350201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065937018 seconds)
  done (took 4.385058175 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068616356 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070386278 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078843522 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079500855 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065648079 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067341647 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068623604 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065058261 seconds)
  done (took 2.385085975 seconds)
done (took 28.848445833 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075516527 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065783729 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069458465 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085425758 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071504067 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068922612 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062991466 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071720679 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069928076 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069869816 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.070734976 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.062889538 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.065659599 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06112415 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068217797 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063144083 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.0691272 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066647298 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067593253 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068226048 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.064672859 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068236136 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07050549 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067196937 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.06772952 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.06747014 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07198957 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068104554 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063408281 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065726217 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064461154 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.073297232 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069035081 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069620191 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062499521 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.063264203 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.06679385 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064439777 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068943734 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071325177 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.064008789 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071694217 seconds)
  done (took 4.645376138 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.081096775 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085471689 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.079353886 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077402784 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094475921 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.077557557 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.081544817 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.074060466 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074684339 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.081451934 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.068794025 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.076344718 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.074473005 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067445333 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.072327086 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.069676993 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.074305422 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069608845 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.072808976 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.072927244 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082391897 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067566327 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075243065 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.074207902 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069587171 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075368961 seconds)
  done (took 3.806984724 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.06991769 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080527374 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087955163 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142825435 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107018584 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075250051 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.075990805 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089444198 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092366737 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.063528496 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.066942213 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.087867555 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087612494 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.069730536 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.102925115 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.079589736 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079049107 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06627173 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070244987 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092352411 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083586913 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080513626 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089925865 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079777719 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063157791 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.065660874 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069065362 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.076961413 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070244837 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074380956 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.067572314 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0661798 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.063617239 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.073904222 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067367817 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.062500632 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086213595 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07463602 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076026368 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105496761 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072389857 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065067429 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09108667 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125045143 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064780025 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068802278 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.068360839 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077314944 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06609088 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093533236 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079284089 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06466402 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.065615355 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066035504 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.0661744 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080394631 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067120943 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066837886 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076050821 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071014412 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086641837 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069969421 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084244292 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064907976 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075140623 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065763335 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066016971 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063609588 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095842285 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071518016 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113467743 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065439946 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063535144 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076416023 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075081919 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071137237 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064442551 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082300326 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075624618 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068510244 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075892543 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067780106 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.066987832 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093528442 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.062759425 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062217136 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061548653 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.066026764 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.065764853 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.063339286 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.07650819 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.062151709 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.065964322 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.076648848 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.062645255 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.063492944 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066168757 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.065457722 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.062244064 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075796115 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.067264932 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.064349484 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074182163 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063884713 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.065819833 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076142505 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.069957755 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.062458483 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067175107 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068664117 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066395618 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06889054 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067987022 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066866628 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071993869 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072388585 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.0702495 seconds)
  done (took 10.544408721 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16009793 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150818921 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067530406 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144747331 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073704051 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070865051 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144855311 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085254724 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065723134 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066402201 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064813169 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094541705 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.091277246 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.103872049 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.069181872 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063922754 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086286654 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.09587762 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146352618 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142651308 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088929578 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073093025 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.0681108 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067321548 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066925567 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074424013 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083598856 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074141631 seconds)
  done (took 4.452784663 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075985491 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.090262597 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070020432 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.077142178 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.084858083 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066222891 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067455786 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067225727 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080228793 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074974457 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06588413 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.069771546 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069317238 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068524184 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066718681 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07194452 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072386279 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065089125 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070112774 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071079686 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075524675 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090935163 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069850882 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064880656 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067701459 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064846478 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074267649 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077558811 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065654216 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.081115434 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063128208 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069966123 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079320075 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.066105312 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065163008 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065992952 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065477396 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06603382 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065772604 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064362702 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064551201 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070849184 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064341108 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07390089 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079018277 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072515361 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067832612 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067956967 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.068386406 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062979483 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068454402 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068069264 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067826427 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07251314 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.06890356 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068467269 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069671609 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091387578 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071575885 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.065458625 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06421438 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063413353 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.067659435 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075424883 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080728304 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.066467227 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064599754 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065547759 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071463903 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079027843 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065085283 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070027917 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063411447 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065910364 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.067760907 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067995679 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06460458 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062520798 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063097449 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063863956 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065372621 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064977103 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064374406 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066710803 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063409794 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063650845 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065601763 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067206762 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074442534 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065171659 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069038353 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066239427 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064225257 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067698142 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07090376 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067918688 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.07860327 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076754682 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066408146 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063964801 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078560372 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068006936 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065381753 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071782321 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069730361 seconds)
  done (took 9.173156541 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088502817 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067682593 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08239415 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088858458 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076113842 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071184216 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077505876 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066951222 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081773023 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065131484 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074310299 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064401981 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07699473 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.0757162 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067524142 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076301498 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069124984 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082509793 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080791352 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064833466 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0748356 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077523259 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.077788944 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.07987452 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079245911 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080348244 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.077638481 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068610443 seconds)
  done (took 3.990944708 seconds)
done (took 38.430987858 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.896047052 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.063494339 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.894456299 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.082461701 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.101629506 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.912053741 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.04634522 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.89272485 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.019357223 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.94471425 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.20901599 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.411069166 seconds)
done (took 67.359247143 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.921964871 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.052894147 seconds)
    (2/2) benchmarking "String"...
    done (took 2.157539054 seconds)
  done (took 6.037950746 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.142734807 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.691539903 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.15405228 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.892494542 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.896271646 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.321684059 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.677658551 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.347653108 seconds)
  done (took 31.808014793 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.071070569 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.124354703 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.583966994 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.61809995 seconds)
  done (took 16.26484357 seconds)
done (took 66.09423772 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.938533947 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.891729237 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.9340384 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.919293913 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.892978461 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.894459717 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.897330565 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.898119814 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.903970301 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.956748615 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.895238998 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.897184353 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.895016783 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.905263946 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.461922794 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.942803073 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.913937003 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.902948833 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.89879571 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 7.113601833 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.898575108 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.891486995 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.410058797 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.086204614 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.509429325 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.147877734 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.357537676 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.318829326 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.907814438 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.891569422 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.928029 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.150869081 seconds)
  done (took 208.279189952 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.892372667 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.00706547 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.047858886 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.915974525 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.526036376 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.072862793 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.010297802 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.572463413 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.893223095 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.906374236 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.000796592 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.896248901 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.018621862 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.887100584 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.931543191 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.930614668 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.11577254 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.037624136 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.933832634 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.057783807 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.907086992 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.812634843 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.781389935 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.996032066 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.931105114 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.988209641 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.911553553 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.901915306 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.083381498 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.084528909 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.904613128 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.89728275 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.066986068 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.765877695 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.90914218 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.915180429 seconds)
  done (took 174.341245676 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.093623111 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.904261218 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.897351368 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.951794634 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.019487881 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.89703622 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.567931722 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.903660953 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.475527529 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.900526801 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.895973962 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.896470738 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.896641833 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.901655176 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.91068463 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.980883812 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.896975539 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.913402711 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.899612138 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.924874927 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.898627379 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.895876921 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.897984976 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.897455477 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.897868804 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.898365732 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.896604694 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.030296743 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.139747227 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.895702619 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.899531837 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.873113279 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.911914782 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.010309862 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.897790626 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.991849471 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.953077583 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.021602812 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.898622703 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.116205794 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.973518506 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.897539247 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.897802514 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.964287358 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.909789722 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.900758862 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.902813435 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.903683583 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.964322323 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.175040245 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.899722014 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.021004776 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.393022034 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.900534817 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.899658027 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.899153216 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.501925326 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.899353609 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.899488753 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.905464847 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.905006984 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.902422887 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.903025122 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.288296235 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.896447981 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.971724239 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.999597898 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.097680818 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.902420985 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.569305006 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.130802346 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.898968083 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.901778248 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.901380552 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.901985416 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.901667664 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.900335478 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.90383243 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.022598307 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.907283486 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.028313644 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.98354035 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.0207111 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.900842385 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.910662918 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.721903251 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.969697235 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.933450444 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.730966121 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.900357469 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.27415439 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.685318928 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.903228569 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.900701567 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.913912496 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.90149289 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.901235466 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.902477748 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.98284157 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.897579731 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.023520703 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.615255421 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.090163852 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.907466246 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.900090742 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.909827328 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.902031005 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.983403324 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.02111891 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.902792475 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.968461617 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.902454893 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.904561601 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.99561185 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.900068396 seconds)
  done (took 415.212192495 seconds)
done (took 801.813699476 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.494565377 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.46313125 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.566856965 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.478400253 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.459490256 seconds)
  done (took 14.295476923 seconds)
done (took 16.131710875 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.917523479 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.909714312 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.961276682 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.987731245 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.919383084 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.92291699 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.98546605 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.92131814 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.956008391 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.957099789 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.988003376 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.987443902 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.92745753 seconds)
  done (took 27.175697632 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.91312392 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.054031436 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.124432012 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.943318061 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.932428811 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.13481155 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.969181395 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.053851686 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.054551453 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.142967154 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.14030783 seconds)
  done (took 24.303916893 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.913156294 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.060467607 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.137756475 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.948455316 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.912565066 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.139519947 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.976051282 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.052049878 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.057837815 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.157190316 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.146564022 seconds)
  done (took 24.347524337 seconds)
done (took 77.665490817 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.90957216 seconds)
  done (took 3.746475539 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.939852667 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.07558791 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.909106625 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.905198469 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.90938614 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.909349562 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.904705153 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.905015196 seconds)
  done (took 17.296474683 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.903503296 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.906536312 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.904072975 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.904874004 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.903627667 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.90273288 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.90472499 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.904458259 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.903487905 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.904207723 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.9033376 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.90288037 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.90303489 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.904883773 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.903417833 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.903980525 seconds)
  done (took 32.298014 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.905378809 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.905688362 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.903880104 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.905774893 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.905568161 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.906287766 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.90436818 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.903501143 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.904593615 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.904895059 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.904529868 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.904749257 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.90519794 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.90523019 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.90474406 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.905029464 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.904482144 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.905986446 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.910822138 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.904517676 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.904577866 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.905650628 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.905461574 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.905346375 seconds)
  done (took 47.56054951 seconds)
done (took 102.74876497 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.63132446 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.616627083 seconds)
  done (took 10.084223697 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.904989865 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.9057431 seconds)
  done (took 5.649293686 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.905792349 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.905553645 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.90610896 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.904604984 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.907149034 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.907668099 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.907854493 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.905920109 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.905522626 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.904622785 seconds)
  done (took 20.896188355 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.907134195 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.905711147 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.908263458 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.90619424 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.9069979 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.90563948 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.907084823 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.906976518 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.909748947 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.906351239 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.906069108 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.906700397 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.90823411 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.906942576 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.907140291 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.907084665 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.907485112 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.906262044 seconds)
  done (took 36.163063831 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.90684117 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.912434698 seconds)
  done (took 5.655890908 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.907000469 seconds)
    (2/7) benchmarking "second"...
    done (took 1.907638878 seconds)
    (3/7) benchmarking "month"...
    done (took 1.908529106 seconds)
    (4/7) benchmarking "year"...
    done (took 1.908600985 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.907351985 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.907974057 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.907122774 seconds)
  done (took 15.190890829 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.909700992 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.063124302 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.126391501 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.750051695 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.910208922 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.914009344 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.251423703 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.910771393 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.915825484 seconds)
  done (took 21.586218308 seconds)
done (took 117.062351397 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.703925583 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.905174753 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.194164631 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.962155222 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.934449163 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.206002505 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.922611701 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.183084197 seconds)
done (took 43.852146702 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.932324771 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.907881574 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 7.151840438 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.939591626 seconds)
  done (took 22.838453004 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.91020923 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.335574826 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.929715237 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.807959815 seconds)
  done (took 22.839066562 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.293617734 seconds)
    (2/2) benchmarking "read"...
    done (took 2.254620499 seconds)
  done (took 6.391180563 seconds)
done (took 60.846702725 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.910156945 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.90915141 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.912417932 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.909758754 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.911500398 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.910767708 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.908450139 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.912182302 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.910357618 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.90952227 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.910930347 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.910577756 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.912213096 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.911233919 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.91028676 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.909070585 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.909861206 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.913700095 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.912161891 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.912402266 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.910569895 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.911263923 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.911498568 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.910123484 seconds)
  done (took 47.700626682 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.912724783 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.909875651 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.913596048 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.914092394 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.911787384 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.912592658 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.91154186 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.914561485 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.912390118 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.91382842 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.91244307 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.913281116 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.913414245 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.912141595 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.915253017 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.914552673 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.915132954 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.91213964 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.913402067 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.916688657 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.913527041 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.913068877 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.913221291 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.913654062 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.914746437 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.914802429 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.916410646 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.914138333 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.913293186 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.912969615 seconds)
  done (took 59.247651342 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.913453441 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.913449002 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.913865421 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.911171975 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.913429149 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.916189858 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.914119786 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.912444177 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.915342733 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.916318405 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.914096106 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.912672419 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.913992049 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.914618994 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.913934551 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.916147074 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.915221968 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.914701808 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.914830348 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.913761418 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.917563767 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.918154327 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.918924937 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.917275543 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.915992875 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.915072797 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.917491193 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.91515587 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.915581529 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.917030283 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.915368273 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.914170362 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.917443393 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.916865032 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.915000533 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.917722119 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.914486003 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.914256561 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.917366496 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.917779038 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.916412741 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.919185961 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.915962871 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.916322903 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.916272765 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.916099574 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.916938327 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.920537138 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.91771029 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.914821819 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.913711067 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.918159423 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.917560584 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.914894443 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.917907264 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.916360569 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.919234558 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.919186513 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.915440523 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.918722111 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.917689476 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.916961249 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.919373975 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.919458443 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.916617694 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.918303708 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.919658659 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.9153561 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.918674464 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.919340155 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.918236114 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.917863997 seconds)
  done (took 139.816476089 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.915282528 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.916630201 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.918753075 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.91850771 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.915977416 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.916483229 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.918095087 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.918686596 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.91966184 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.920131828 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.919217979 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.922177625 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.919336432 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.918764552 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.921338005 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.919396027 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.919435558 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.918734507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.920640156 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.919749011 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.920627087 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.919886912 seconds)
  done (took 44.063638825 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.920398481 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.919051637 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.919076111 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.922192392 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.920591057 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.920288459 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.921530252 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.921218483 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.917626597 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.92108541 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.920092349 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.919534747 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.920928221 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.919354818 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.922978767 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.920162695 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.92184996 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.919783316 seconds)
  done (took 36.416661887 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.920630515 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.919515462 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.918788687 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.91831069 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.92254303 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.923198632 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.921285576 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.922450025 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.920673412 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.92210106 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.921178458 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.920658163 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.921694546 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.918862995 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.921542175 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.923956124 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.92381694 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.923627778 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.922020226 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.923033081 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.919697102 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.923401798 seconds)
  done (took 44.120822089 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.921478261 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.922559648 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.920920977 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.919998056 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.921541271 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.921166291 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.921441518 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.922374237 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.923628426 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.923228807 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.924586451 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.925176985 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.923733179 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.923808902 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.922226069 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.922082718 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.921519984 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.92257748 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.92523975 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.923153454 seconds)
  done (took 40.305334809 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.926305336 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.92841515 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.924807918 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.926597297 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.926225868 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.924850646 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.926121525 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.925091538 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.926622092 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.927505176 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.92788624 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.925353431 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.927542155 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.927340584 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.926740529 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.928790531 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.928906138 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.929126546 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.927992779 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.926932995 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.927929175 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.92674579 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.928771904 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.929128154 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.930138235 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.926573714 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.926204064 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.927922076 seconds)
  done (took 55.814077249 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.924218087 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.925144778 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.925084813 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.924462462 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.925424891 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.922724849 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.925255641 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.923698433 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.926650224 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.928224123 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.924740887 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.924658202 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.92664198 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.927832976 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.924465668 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.927973514 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.925523409 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.926314178 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.926470538 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.923214371 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.925737293 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.927602402 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.927007335 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.925394788 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.9253148 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.925878875 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.922067084 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.928088855 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.925257772 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.924299423 seconds)
  done (took 59.619175228 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.94858935 seconds)
    (2/2) benchmarking "in"...
    done (took 1.946611622 seconds)
  done (took 5.748196629 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.92722671 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.924347428 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.927116542 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.927732464 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.92661331 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.924602326 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.927983933 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.92746212 seconds)
  done (took 17.265972474 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.92582427 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.931110734 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.929666468 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.925871337 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.931647678 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.938526707 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.929852648 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.931951844 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.933813741 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.928407739 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.933602236 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.932435336 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.942525834 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.933764973 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.927027281 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.928346381 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.934125785 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.933100028 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.932389139 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.927145242 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.932933332 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.929301434 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.928467585 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.931149653 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.931848781 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.930961479 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.939267257 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.931668986 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.931501989 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.929254246 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.940149724 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.931408807 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.929230316 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.933611745 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.929979569 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.928236298 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.939928004 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.931807149 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.929305401 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.927744689 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.934424989 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.935619283 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.936268274 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.940620297 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.933809244 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.927744763 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.931964285 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.93709615 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.931544312 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.937254391 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.939812042 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.933486348 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.932079532 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.930334991 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.935455792 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.933527816 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.933555354 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.932573393 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.94115202 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.940152746 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.940039003 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.953653521 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.942792766 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.935220467 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.934977188 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.946851688 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.96222801 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.937334973 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.937185074 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.932286651 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.943633386 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.932409169 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.930298246 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.933241251 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.946650417 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.946014492 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.933609594 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.932036699 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.933797118 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.935301387 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.936898042 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.935178576 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.936038745 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.935037687 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.946011091 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.964173765 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.934784849 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.935156638 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.937146229 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.934415725 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.941163367 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.938175815 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.93105704 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.931664047 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.935213594 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.934690917 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.935915154 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.933470751 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.932206235 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.946365581 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.933150581 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.928990974 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.94055815 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.943406252 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.933621428 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.935402204 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.936847502 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.936018696 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.942572648 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.936943221 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.936575961 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.93363371 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.934411205 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.939184475 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.932853276 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.940595029 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.945897855 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.946016859 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.938492874 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.940851922 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.941713325 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.937714827 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.948206201 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.965423281 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.937263534 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.939056032 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.945817313 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.94987572 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.941629571 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.938047323 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.942591086 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.935317794 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.935189162 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.941326443 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.937208156 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.939105814 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.936460654 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.939158487 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.934174001 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.937856106 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.935254923 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.941666114 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.939532373 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.939846833 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.940872945 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.938803662 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.941241853 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.945933802 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.937837656 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.939103385 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.934866242 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.942806489 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.939867565 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.940171338 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.937214967 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.938455954 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.939794798 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.935025696 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.941429635 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.939338255 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.93803802 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.939838304 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.943315617 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.940632083 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.940255382 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.939123085 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.938571055 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.938568952 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.945001132 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.94092916 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.944094933 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.937968442 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.945879691 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.938325255 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.93955422 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.942483126 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.937710945 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.937872756 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.946775658 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.952559989 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.944083506 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.952274325 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.936679893 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.949192387 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.941623652 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.943874945 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.942407551 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.940506501 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.941774725 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.940117474 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.939802892 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.943028004 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.963370963 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.954327985 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.944565513 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.940137075 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.944703323 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.943893213 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.945028509 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.940964643 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.940169154 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.943842475 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.942602772 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.942057797 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.940584714 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.945206394 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.939612459 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.938598819 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.945798499 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.944386933 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.938855825 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.945246188 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.941547959 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.944893115 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.943650232 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.941657235 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.940897763 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.941067717 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.952033408 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.946864398 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.941988852 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.940901231 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.946118388 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.943729161 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.941098478 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.944357037 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.947476087 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.940462702 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.944147351 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.952008237 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.944333225 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.942410604 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.942658435 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.940967528 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.944795845 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.94076057 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.949385898 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.950043815 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.94874027 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.942818425 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.949772226 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.939509206 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.945800561 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.942452073 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.946358328 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.943496595 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.945213921 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.946098368 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.942888602 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.951648562 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.94364055 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.947489235 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.939898477 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.944665005 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.942971564 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.944483786 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.944552065 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.947149863 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.954021464 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.952397567 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.944900829 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.947698175 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.948630096 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.945708547 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.947777354 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.947916653 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.959649306 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.957989782 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.941772423 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.943699059 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.946012154 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.947645742 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.942825958 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.947452352 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.952003152 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.945131179 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.945946289 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.951427186 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.946840702 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.947342584 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.953778425 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.948170858 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.950211807 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.947869527 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.948957453 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.947421507 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.944405964 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.951363065 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.947377842 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.951097516 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.947821661 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.94619668 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.948887043 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.945086423 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.95808542 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.9478171 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.949629608 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.955141644 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.949756383 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.946307484 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.9469313 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.94604907 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.948979121 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.95103224 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.944867399 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.944173414 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.948675127 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.950943472 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.962305626 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.953072789 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.958934231 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.953751503 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.960234144 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.948707661 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.945685913 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.949329477 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.952039873 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.956444981 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.948377232 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.947674019 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.956761941 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.947694372 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.948116506 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.953512122 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.947307725 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.949767853 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.950129435 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.946741044 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.954676339 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.951319787 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.94830436 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.949106791 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.948195491 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.947262673 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.954563848 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.952167557 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.951761544 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.948387366 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.951065012 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.951615205 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.950104235 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.951296642 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.949553962 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.948068599 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.94787485 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.957576987 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.952059289 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.949668942 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.954507121 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.948965911 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.958840713 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.951940319 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.948957291 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.948436325 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.947810386 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.950168829 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.947872371 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.950546337 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.945533725 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.949285425 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.948921651 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.96475705 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.960186625 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.951441728 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.95274446 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.95083398 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.953149847 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.962114083 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.976936974 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.952320204 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.953864988 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.954823627 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.957905273 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.954256996 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.957675092 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.955314225 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.959785229 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.953796479 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.947471651 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.956396378 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.963792396 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.952567878 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.950820728 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.949359251 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.958752067 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.949768653 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.948583393 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.95141873 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.95522353 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.950646352 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.96564922 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.952784912 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.950990858 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.952764587 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.948346306 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.951514218 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.948724271 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.952723479 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.952651256 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.952750927 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.952924995 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.95559392 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.95975642 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.949110788 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.958087965 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.965768876 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.954376428 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.955014134 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.953360337 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.95507027 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.956921957 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.951570676 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.951373416 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.95327629 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.952771698 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.954042927 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.958862752 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.966084328 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.955290924 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.949655648 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.952124815 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.959688609 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.951104793 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.954522856 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.955608582 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.963192891 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.960488848 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.9672656 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.964314521 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.953585699 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.953361118 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.963255799 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.964742202 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.954958029 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.951673194 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.954114862 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.958517378 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.957329112 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.956857245 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.957446374 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.952805375 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.961520523 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.951729732 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.953149075 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.956242578 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.954695429 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.955335225 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.958884824 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.963178542 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.953214649 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.951497972 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.95283623 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.955524919 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.95628441 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.955805997 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.952724637 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.95197608 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.955771602 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.955483683 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.95598322 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.954772053 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.951773816 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.957184423 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.951996682 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.95283139 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.951727914 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.952307932 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.955241477 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.958065432 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.964412092 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.954059579 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.958221386 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.956434829 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.958983324 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.954800696 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.957665881 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.956919923 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.95421093 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.963502052 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.955541028 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.954575809 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.956112581 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.95385111 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.963078835 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.960003209 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.963241406 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.95639121 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.95529144 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.955830111 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.963259533 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.964813541 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.962213658 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.962173662 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.965833658 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.96314675 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.959576287 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.956640694 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.954811847 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.953841042 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.957217967 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.960694936 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.959415193 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.960755782 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.955558331 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.960999864 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.95717941 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.962283781 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.95211143 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.954816128 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.961469368 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.969367868 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.965984325 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.956661496 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.959419447 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.958397935 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.963071855 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.969371069 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.957164173 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.96120076 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.959745588 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.960055088 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.956786172 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.971192045 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.966212641 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.965471171 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.958141278 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.964025223 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.980472208 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.95960886 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.970826092 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.995039693 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.956876573 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.960391256 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.958423836 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.960219573 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.958408416 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.959050182 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.959058538 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.969840483 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.961700545 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.958398242 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.968134961 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.95946882 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.958755703 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.96130483 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.960817944 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.967376164 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.959750458 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.967891755 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.967341855 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.957437507 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.959238058 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.959901705 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.959565491 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.958813855 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.956097512 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.961224212 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.956708795 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.960346472 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.969729502 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.960752141 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.962005647 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.970343258 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.971815683 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.959987124 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.956956102 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.96109392 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.967754499 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.965539848 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.959361578 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.962826312 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.966612032 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.965054829 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.968263982 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.960266995 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.964959026 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.961811744 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.958641054 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.960815361 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.973367404 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.97340238 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.958778036 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.958511077 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.970323036 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.959210667 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.969612327 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.968087309 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.962907922 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.964950393 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.962393737 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.962275409 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.958239243 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.957575857 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.964485395 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.968498114 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.961295606 seconds)
  done (took 1163.398285138 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.958643445 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.956096985 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.959126136 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.96056772 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.957247212 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.957666467 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.958424504 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.957629576 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.964526348 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.957592661 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.959354524 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.957786892 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.955040719 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.961781455 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.949321049 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.952112109 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.955748025 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.953668946 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.954330439 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.953478008 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.954204415 seconds)
  done (took 42.98057936 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.954660523 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.95730096 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.958007532 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.952640617 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.953236288 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.954240779 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.953922903 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.952217578 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.953284656 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.954346705 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.953052463 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.953435394 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.957704438 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.956485639 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.954144768 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.953172541 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.957131769 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.951164364 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.952640495 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.954321173 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.954903102 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.956217567 seconds)
  done (took 44.878510664 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.957633825 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.955260736 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.955493947 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.953233119 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.958173078 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.955000611 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.955591303 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.956727181 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.95392238 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.960133026 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.963173528 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.966083366 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.953917616 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.956035075 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.95493829 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.958874685 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.100959512 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.954259107 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.955756131 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.953907824 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.954804909 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.96058212 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.953813765 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.952061221 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.951082654 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.955533679 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.9513448 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.951692056 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.953385835 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.953814864 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.958381071 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.954555992 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.955840514 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.956985244 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.95491193 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.954294338 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.959615013 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.955105697 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.952309938 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.952190623 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.966964643 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.979479561 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.953908008 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.955544263 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.96281977 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.955718167 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.95284111 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.95917753 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.963495412 seconds)
  done (took 97.902639554 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.950339049 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.954773046 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.951134212 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.95715965 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.953978802 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.958129278 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.953510041 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.953204347 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.95361707 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.954063024 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.954540692 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.955230279 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.954781855 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.953614221 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.953975661 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.955033003 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.953800756 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.954402013 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.952723734 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.953600869 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.953484138 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.956605247 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.953607301 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.953101677 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.954482894 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.955033969 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.954519838 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.95380321 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.953477667 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.954063683 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.956094076 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.955904841 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.953733521 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.95336256 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.95516169 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.953320825 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.952756684 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.953168832 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.955015323 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.954156279 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.95371586 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.955476013 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.94753694 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.946679222 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.946274978 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.948783348 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.950301979 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.944928887 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.944829912 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.942577994 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.94432147 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.948168859 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.945146977 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.941311744 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.943620788 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.942223276 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.942455441 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.94294197 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.941161167 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.94282582 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.942420898 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.945076928 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.940751043 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.940455776 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.941003643 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.941716484 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.941221743 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.943644477 seconds)
  done (took 134.504815947 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.942124278 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.941951135 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.941987152 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.945782687 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.939497882 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.940612208 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.941062589 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.942234867 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.943093477 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.941104117 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.938583687 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.93985957 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.940096865 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.941050002 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.939827195 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.939449153 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.9397047 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.93989298 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.940285764 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.938671065 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.938789398 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.939580575 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.939675282 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.940631343 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.942232997 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.936617005 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.938463327 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.939405107 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.938307778 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.942423564 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.939991896 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.938894758 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.938428749 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.940178364 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.939974276 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.938213681 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.939281069 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.940610671 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.939839798 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.940133542 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.939506779 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.938514775 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.939808731 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.937660257 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.941828686 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.938977112 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.939568455 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.937875246 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.936904005 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.939316066 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.93896559 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.938617787 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.938467514 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.937277025 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.940459639 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.939882965 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.937442982 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.9355024 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.937315587 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.938270565 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.938617239 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.935057747 seconds)
  done (took 122.124571462 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.934051085 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.937144406 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.937596525 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.936110734 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.935554135 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.934911458 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.939337426 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.938244448 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.935886467 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.934843525 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.935030861 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.934986372 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.937298783 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.936126364 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.934545368 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.935396966 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.935071083 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.935677608 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.934284508 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.936220921 seconds)
  done (took 40.581615162 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.934792451 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.93691686 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.935092081 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.93504862 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.93557024 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.93596885 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.935879172 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.936628885 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.933604586 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.935276229 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.935294739 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.934002422 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.934620414 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.933001567 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.932659184 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.935420688 seconds)
  done (took 32.823328754 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.933837603 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.93360311 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.936632352 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.935051646 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.934073304 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.93643171 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.933895631 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.931859399 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.932018039 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.933338336 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.933404961 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.934710421 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.93276951 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.933130385 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.931992172 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.934513055 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.933974679 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.933278963 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.932121297 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.930319071 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.929791652 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.931334684 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.926665042 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.927901636 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.928999533 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.929202042 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.931475892 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.92761131 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.926887524 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.928749416 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.929318053 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.931152306 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.927354183 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.927201014 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.929227514 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.928931759 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.929229309 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.931077519 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.927681607 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.929571491 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.928634912 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.928114613 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.931354224 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.928225087 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.928590739 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.927645152 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.929333961 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.933120748 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.928672191 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.927456482 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.928216511 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.930287901 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.928815713 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.926924585 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.92676828 seconds)
  done (took 108.045506427 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.926252322 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.927654331 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.925824109 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.925507482 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.927324781 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.925881351 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.926804229 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.926559008 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.926223128 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.926651897 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.927245768 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.926839989 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.927147645 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.925972328 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.925113682 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.926557545 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.927940212 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.92895919 seconds)
  done (took 36.534622694 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.924956774 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.92656442 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.926161117 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.93139907 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.925582278 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.926566025 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.927726678 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.927225436 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.928138106 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.926112447 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.924405431 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.925490879 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.924694531 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.92632328 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.926118344 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.925135654 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.926947521 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.92552306 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.926844771 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.928615418 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.92802365 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.926952383 seconds)
  done (took 44.238761166 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.927416537 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.928298066 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.939413399 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.945578478 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.944798588 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.958596267 seconds)
  done (took 13.498009179 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.926210146 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927151091 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.925914923 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.926903646 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.927618383 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.926181076 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.928085576 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.925667179 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.925390672 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.928558031 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926504578 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.92725567 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.926129054 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.92672959 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.926998869 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.930814448 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.92654292 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.928148821 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927876561 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.927520763 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.928836939 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.928832675 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926722465 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.928074528 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927367591 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.92859963 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927844573 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.928582778 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927503865 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.927796853 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.928960182 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.928978033 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927858559 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.927749318 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.927175048 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.930212935 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.927249325 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927821328 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.926959227 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.927549333 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.927461245 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.929217381 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927519722 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.928886533 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.929045021 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.92848811 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927565867 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.928741569 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.927920662 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930062803 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.929322389 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931318316 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.92911053 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.929699813 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.926784914 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.928110764 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.93089317 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.93014569 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.9289376 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.92918744 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.92979071 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.930033285 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.929592407 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.930424409 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.928802409 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931650635 seconds)
  done (took 129.118960176 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.931271519 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.930514694 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.930897797 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.930301352 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.929737488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.932388759 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931136201 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.929659635 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930648385 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.930213811 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.933336478 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.930308359 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.932137666 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931147792 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.932343512 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931035141 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930119589 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931139431 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.930586055 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932222139 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932078781 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.93140079 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932552482 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.932368148 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.933289184 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932803593 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.930787064 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932343826 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.931228678 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932618939 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.933363364 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933566017 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.93313744 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.932377256 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.931570347 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.932304028 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.933944472 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.932143471 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931341389 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933193961 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.932408516 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.935348212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.934015324 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.93416032 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.932421349 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.93209919 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.93521298 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.932543852 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932886617 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932418591 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932321587 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.936046814 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.934823119 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931673611 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932611322 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931945522 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.932808986 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.933816618 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932597049 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.935362979 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.934653009 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.93460874 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.936485051 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932967118 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.9326191 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.932741308 seconds)
  done (took 129.4012838 seconds)
done (took 2691.995833051 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.948237067 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.946448053 seconds)
  done (took 15.75747238 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.1004402 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.053530681 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.936249375 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.965349852 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.93363572 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.960099835 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.94399146 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.933077966 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.936937791 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.939993288 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.936258725 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.118513059 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.942312325 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.934315725 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.935268321 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.027742499 seconds)
  done (took 53.46457277 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.941935604 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.941154597 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.953228001 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.943148506 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.945519231 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.949080298 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.972259555 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.944846443 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.975644832 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.954964623 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.01230445 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.949702447 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.940858844 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.992150932 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.955453665 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.959277721 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.038950847 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.016115576 seconds)
  done (took 37.250900957 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.018381226 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.952972632 seconds)
  done (took 10.840887843 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.975149205 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.933710213 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.937923204 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.938709884 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.946338227 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.945188209 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.968811393 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.962469482 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.939262814 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.934557189 seconds)
  done (took 71.35073783 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.94628827 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.942946424 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.941532171 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.938551539 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.937188945 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.939370907 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.93903947 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.941277844 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.620817027 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.977355334 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.948963036 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.948671744 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.941433607 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.942184952 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.937886812 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.965847027 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.048929675 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.940556276 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.937177371 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.945332129 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.940615201 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.995123466 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.954894576 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.942223374 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.972242704 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.611763273 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.951178537 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.946526738 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.064782533 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.936218212 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.939674494 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.151376298 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.946011059 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.405587693 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.210941605 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.943132725 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.949060157 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.945370092 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.936604133 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.06578438 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.938251003 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.944193321 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.903894582 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.184845144 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.033022868 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.984884588 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.276674735 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.942777788 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.941489499 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.973961263 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.942685921 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.945056284 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.958308299 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.45477335 seconds)
  done (took 136.78150341 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.939476939 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.283110185 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.105982877 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.939912656 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.220894369 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143147991 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.940021768 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.982434288 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.94204375 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.16469372 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.190284762 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.04162503 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.938452748 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.939788024 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.934034012 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.934394304 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.089690387 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.006008974 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.940657772 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.934290764 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.967790402 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.177918025 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.057984389 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.940024191 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.963792272 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.146890916 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.056790794 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.042378473 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.725987636 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.939111048 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.999778937 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.939611513 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.938753355 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.935549625 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.093323288 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.02910727 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.023606785 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.940709383 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.939332506 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.938769204 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.683076844 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137233759 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.032487995 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.067263511 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.190725817 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.141013896 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.719397609 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.939213679 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.669407993 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.100250884 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.170714754 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.169847045 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.055835168 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.940574811 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.270697951 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.941112942 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.937963028 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.186106325 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.157640012 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.03749689 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.940452484 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.942463276 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.93743695 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.231297655 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.94307484 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.033295585 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.942843415 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.937975265 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.035270138 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.039359475 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.167759793 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.14890384 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.968807056 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.281767567 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.452209121 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.185495831 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.003472275 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.187379486 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.943180612 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.938954981 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.017222738 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.781134283 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.195956321 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.22012092 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.184839947 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.971702982 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.658949159 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.939689434 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.165913718 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.16120323 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.199986187 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.184235013 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.180256167 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.274639265 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.941782155 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.938301835 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.271256624 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.062605912 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.942688519 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.284606328 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.17137091 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.502349796 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.967278289 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.243901009 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.070717199 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.944231194 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.585159098 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.94425524 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.17104603 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.978261986 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.943098688 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.944346325 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.15796364 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.93025398 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.943008433 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.576896987 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.001375715 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.945842289 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.174608277 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.946463529 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.210309321 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.945577606 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.175401282 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.537404138 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.970817416 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.113658418 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.186377025 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.946634452 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.18888423 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.186323083 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.055682576 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.162389913 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.632221302 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.94710754 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.236819041 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.944124594 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.943542992 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.110785601 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.945123551 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.085754403 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.945066321 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.237685716 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.96232652 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.18029574 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.948235438 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.197992692 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.975622292 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.990971048 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.944118976 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.077572031 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.949191577 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.866196701 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.101813018 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.947863809 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.945339882 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.499102938 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.943909473 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.089823256 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.171175544 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.963619487 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.012544006 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.604773395 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.946067075 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.025761017 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.968963757 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.330713846 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.945968124 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.194854969 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.945123185 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.94716616 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.945284049 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.233038166 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.125315946 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.94959061 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.942931255 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.847519695 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.945090721 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.947338703 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.12569024 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.279973728 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.943598102 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.147717411 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.951268914 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.069929733 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.948471807 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.014919302 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.279285092 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.947882983 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.945548028 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.9460511 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.948403012 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.948898763 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.154723852 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.971411063 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.483179144 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.082997427 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.219732183 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.255877963 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.190959914 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.987714738 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.950710194 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.206715872 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.950329306 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.012634359 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.951019323 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.964694738 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.182726345 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.950508302 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.161643988 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.219492184 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.825100397 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.995639828 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.951847157 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.94859857 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.949782126 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.097814993 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.031592555 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.95096268 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.95413685 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.062339409 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.06878817 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.156152733 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.951834404 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.041390869 seconds)
  done (took 919.516856648 seconds)
done (took 1246.828468474 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.950393801 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.949229166 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.951427593 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.95169314 seconds)
  done (took 29.681688726 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.951914265 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.95250563 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.953334362 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.950629634 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.952407071 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.952984022 seconds)
  done (took 13.593329804 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.034199515 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.951519937 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.950200423 seconds)
  done (took 21.81536598 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.027454576 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.360019039 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.091110295 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.383005591 seconds)
  done (took 10.742943946 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.953521472 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.953665985 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.955965812 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.953112472 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.953424452 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.954701977 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.953323341 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.954582227 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.95907659 seconds)
  done (took 19.473462573 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.744856689 seconds)
done (took 101.931530925 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.628841549 seconds)
    (2/309) benchmarking ("sort", Float64, false)...
    done (took 5.844173191 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.191321619 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.017638074 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.086410242 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.269142633 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.051976771 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.07447196 seconds)
    (9/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.727500121 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.14987205 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.326404823 seconds)
    (12/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.092772545 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.974373015 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.278807611 seconds)
    (15/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.641340276 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.064450626 seconds)
    (17/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.345817971 seconds)
    (18/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.19148506 seconds)
    (19/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.951465712 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.097519972 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.11574431 seconds)
    (22/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.033085277 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.056373165 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.978871156 seconds)
    (25/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.441011517 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.290864279 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.953830201 seconds)
    (28/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.115264445 seconds)
    (29/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.954379152 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.303414539 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.453979369 seconds)
    (32/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.102774357 seconds)
    (33/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.423750808 seconds)
    (34/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.416657133 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.982091449 seconds)
    (36/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.036726204 seconds)
    (37/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.955044838 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.956627021 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.996776811 seconds)
    (40/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.096401777 seconds)
    (41/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.224552417 seconds)
    (42/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.109963239 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.123857146 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.542470013 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.042083596 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.058564174 seconds)
    (47/309) benchmarking ("sort", Float32, false)...
    done (took 5.683244338 seconds)
    (48/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.706509943 seconds)
    (49/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.096834365 seconds)
    (50/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.724898888 seconds)
    (51/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.331967202 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.374037308 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.171266234 seconds)
    (54/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.209711185 seconds)
    (55/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.047539738 seconds)
    (56/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.165413336 seconds)
    (57/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.054093699 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 5.64134634 seconds)
    (59/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.344997897 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.557470989 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.95719179 seconds)
    (62/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.265334024 seconds)
    (63/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.958705892 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.239916958 seconds)
    (65/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.403888372 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.226569168 seconds)
    (67/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.956803022 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.164067019 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.265744955 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.975864822 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.139566081 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.594516389 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.212497683 seconds)
    (74/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.036465961 seconds)
    (75/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.050176839 seconds)
    (76/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.05175608 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.960916594 seconds)
    (78/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.097615008 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.959961186 seconds)
    (80/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.972781063 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.958513543 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.863229202 seconds)
    (83/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.9689471 seconds)
    (84/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.757754865 seconds)
    (85/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.027611903 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.270798961 seconds)
    (87/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.091470954 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.958514427 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 4.298300763 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.85051404 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.945041761 seconds)
    (92/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.454286328 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.265491091 seconds)
    (94/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.290359578 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.094261167 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.959517821 seconds)
    (97/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.484034229 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.113416034 seconds)
    (99/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.196874903 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.962170353 seconds)
    (101/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.68034662 seconds)
    (102/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.233254086 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.769927372 seconds)
    (104/309) benchmarking ("sort", BigInt, false)...
    done (took 6.964309457 seconds)
    (105/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.063545549 seconds)
    (106/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.252317833 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.977493675 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.957869126 seconds)
    (109/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.122315162 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.611313218 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.964434392 seconds)
    (112/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.878379159 seconds)
    (113/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.97183349 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.111844619 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.409332692 seconds)
    (116/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.061674097 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.90824726 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.881736266 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.993190536 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.186392849 seconds)
    (121/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.960177825 seconds)
    (122/309) benchmarking ("map", abs, Int64, false)...
    done (took 4.16148943 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.271963711 seconds)
    (124/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.035249885 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.360840975 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.980683698 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.960931149 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.318526137 seconds)
    (129/309) benchmarking ("sort", Int8, false)...
    done (took 4.856882046 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.295647042 seconds)
    (131/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.868246741 seconds)
    (132/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.134380998 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.049218598 seconds)
    (134/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.98302689 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.055806855 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.274016295 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.997743221 seconds)
    (138/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.960440891 seconds)
    (139/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.262914565 seconds)
    (140/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.36075099 seconds)
    (141/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.427092158 seconds)
    (142/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.126838623 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.2842328 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.272474968 seconds)
    (145/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.527412996 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.078848299 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.207427237 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.350398005 seconds)
    (149/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.584276071 seconds)
    (150/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.223142339 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.365263419 seconds)
    (152/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.034531912 seconds)
    (153/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.958736696 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.977285814 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.086941853 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.144230391 seconds)
    (157/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.960659416 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.142449615 seconds)
    (159/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.04712806 seconds)
    (160/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.106058587 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.632656752 seconds)
    (162/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.067755946 seconds)
    (163/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.96246875 seconds)
    (164/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.16256832 seconds)
    (165/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.959044072 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.975519287 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.082236938 seconds)
    (168/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.098501505 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.957677033 seconds)
    (170/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 3.808807403 seconds)
    (171/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.054111286 seconds)
    (172/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.13804976 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.268727756 seconds)
    (174/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.050950873 seconds)
    (175/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.514863345 seconds)
    (176/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.546484541 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.961859723 seconds)
    (178/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.960064202 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.291244929 seconds)
    (180/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.961313267 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.956459165 seconds)
    (182/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.994207733 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.960546218 seconds)
    (184/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.988430849 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.985773305 seconds)
    (186/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.429163164 seconds)
    (187/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.832861712 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.640264743 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.070386473 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.603808159 seconds)
    (191/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.13663554 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.360206808 seconds)
    (193/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.143525621 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.737130512 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.267272998 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.367694971 seconds)
    (197/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.068309576 seconds)
    (198/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.156160981 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.172424319 seconds)
    (200/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.246737024 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.513625053 seconds)
    (202/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.997725168 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.25019186 seconds)
    (204/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.977437759 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.962992834 seconds)
    (206/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.040908846 seconds)
    (207/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.965960192 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.104384028 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.962061684 seconds)
    (210/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.962957978 seconds)
    (211/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.421543316 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.288661731 seconds)
    (213/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.751639181 seconds)
    (214/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.0217703 seconds)
    (215/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.050613121 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.961479608 seconds)
    (217/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 5.54507555 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.161378891 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.863015585 seconds)
    (220/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.555362482 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.181135629 seconds)
    (222/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.096090695 seconds)
    (223/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.966525619 seconds)
    (224/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.030468365 seconds)
    (225/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.028416832 seconds)
    (226/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.964208526 seconds)
    (227/309) benchmarking ("map", abs, Bool, false)...
    done (took 3.667743676 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.99228568 seconds)
    (229/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.073380927 seconds)
    (230/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.070565124 seconds)
    (231/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.068763779 seconds)
    (232/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.047528509 seconds)
    (233/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.9712262 seconds)
    (234/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.075412531 seconds)
    (235/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.204653789 seconds)
    (236/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.250555256 seconds)
    (237/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.861017294 seconds)
    (238/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.849666738 seconds)
    (239/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.046043978 seconds)
    (240/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.48033419 seconds)
    (241/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.987005055 seconds)
    (242/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.227103767 seconds)
    (243/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.635703667 seconds)
    (244/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.270067581 seconds)
    (245/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.174687632 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.954145426 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.033991084 seconds)
    (248/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.981665126 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.090126569 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.285312815 seconds)
    (251/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.985475055 seconds)
    (252/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.124914447 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.286528685 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.989295083 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.966981898 seconds)
    (256/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.361438205 seconds)
    (257/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.251510633 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.640924307 seconds)
    (259/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.731357083 seconds)
    (260/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.96750609 seconds)
    (261/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.364668093 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.964336691 seconds)
    (263/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.10555571 seconds)
    (264/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.097908269 seconds)
    (265/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.982531119 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.749587451 seconds)
    (267/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.296544699 seconds)
    (268/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.242157724 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.970363945 seconds)
    (270/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.068449744 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.967254692 seconds)
    (272/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.078953725 seconds)
    (273/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.007685297 seconds)
    (274/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.208547804 seconds)
    (275/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.659815927 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.218232848 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.206382831 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.363964696 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.96871717 seconds)
    (280/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.968566434 seconds)
    (281/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.27252701 seconds)
    (282/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.051512814 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.969240005 seconds)
    (284/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.970441007 seconds)
    (285/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.986461256 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.96871228 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.380188833 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.967251828 seconds)
    (289/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 4.022077357 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.101024396 seconds)
    (291/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.172968627 seconds)
    (292/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.037320202 seconds)
    (293/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.995609303 seconds)
    (294/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.993797387 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.80800711 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.003060548 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.07446838 seconds)
    (298/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.702149732 seconds)
    (299/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.099297168 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.001322417 seconds)
    (301/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.984815685 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.922882738 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.325343967 seconds)
    (304/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.028748925 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.270287154 seconds)
    (306/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.189306857 seconds)
    (307/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.306390813 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.183111553 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.314893335 seconds)
  done (took 1040.712480853 seconds)
done (took 1042.67451527 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.998539725 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.992428131 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.974808974 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.995272362 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.087566169 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.017515849 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.987521215 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.978735696 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.024894219 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.025817986 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.972821009 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.013697648 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.974631891 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.977195036 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.976521997 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.992715839 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.283885286 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.998227036 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.994880361 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.988553786 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.991949807 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.972349985 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.023194339 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.013850133 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.979291769 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.981607188 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.979894504 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.994463052 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.088433196 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.979841404 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.98094675 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.990504202 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.276191759 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.997121312 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.973709467 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.996170266 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.989005612 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.988198441 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.980306175 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.01013706 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.411500822 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.97792804 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.977250773 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.976229373 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.976474102 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.983531298 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.976588006 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.985624339 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.991588304 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.990818102 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.404993662 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.994546605 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.981081627 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.977652128 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.991066348 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.977379801 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.980777629 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.994909795 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.997272257 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.993835777 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.264491549 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.00852398 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.981627701 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.997405098 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.98879547 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.440656286 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.978876442 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.985588871 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.415048383 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.988099933 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.442104198 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.99011347 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.979398133 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.995098015 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.011805345 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.278652538 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.999841959 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.977904402 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.988490838 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.9760694 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.989650652 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.993342212 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.983037362 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.981818456 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.997040641 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.023709447 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.992740609 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.980263961 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.993581386 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.997665506 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.988861137 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.992136814 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.982309249 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.980161079 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.989156011 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.983236805 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.981894463 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.9809152 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.984846302 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.992289631 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.410717727 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.998552286 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.976092745 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.976906878 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.97883035 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.993733115 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.411312879 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.98274196 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.003998645 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.02956447 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.980627423 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.265095478 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.00693136 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.997188056 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.993589984 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.984049623 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.978882217 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.266460685 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.431620923 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.999192117 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.979391287 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.979602745 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.001613104 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.982303037 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.978067911 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.280257128 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.006458059 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.00025841 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.103911309 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.99596807 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.013840404 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.979526053 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.985495013 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.025962615 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.999559159 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.012558822 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.983740529 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.997917898 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.998420425 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.978079109 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.993035825 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.995280628 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.9832522 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.989157717 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.980733892 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.026374097 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.998515853 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.996502614 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.003878394 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.10493161 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.978168145 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.266290762 seconds)
done (took 310.63615113 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.058271254 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.979052645 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.098038993 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.978882152 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.067342166 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.055066908 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.977770313 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.979268816 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.979300807 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.503488346 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.983042697 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.985451895 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.977926201 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.979910766 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.047302579 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.979786835 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.980292035 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.425238271 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.982739271 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.059655685 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.979435024 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.98160452 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.981048346 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.57749279 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.981420711 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.979529563 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.058344461 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.981028046 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.430865502 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.981254994 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.979190031 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.52075087 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.060486599 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.008520647 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.991050853 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.985547078 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.068687618 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.992054404 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.047218676 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.050787348 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.099837836 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.015331226 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.98210128 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.980541278 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.984810163 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.984220906 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.984124058 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.013722977 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.980312208 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.986119255 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.429224879 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.993604801 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.987080565 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.982904368 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.982338465 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.011409671 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.987733379 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.984199601 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.061440926 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.984844034 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.049183822 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.490597805 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.480358342 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.982524157 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.979000788 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.982471962 seconds)
  done (took 193.000686476 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.047193081 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.055176544 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.046402362 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.9833044 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.030741304 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.048598544 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.986049075 seconds)
  done (took 16.10503228 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.988282452 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.981603243 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.031305389 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.033484769 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.984925963 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.159765614 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.994415414 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.988736387 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.011439208 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.983737696 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.61986372 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.033970459 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.989341975 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.981809595 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.996522767 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.041975225 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.986329142 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.985058794 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.097462141 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.131634912 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.988303388 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.990365548 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.009020412 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.995521491 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.984287563 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.984832122 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.984619917 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.990359998 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.984984587 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.983777689 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.98466323 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.036052187 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.983383176 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.982737608 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.985501551 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.98565374 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.985320291 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.983771223 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.983810166 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.984577647 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.985290154 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.98436024 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.984425625 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.985558183 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.985264243 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.007785281 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.985232488 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.985467741 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.986106315 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.984545978 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.010804254 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.986956921 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.986151853 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.990888036 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.029294289 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.993811009 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.988074876 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.985844469 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.984104441 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.986556416 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.985269238 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.135757119 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.034803066 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.985224629 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.036646032 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.139110486 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.986237039 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.985865208 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.986710829 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.074884153 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.98612395 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.034196316 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.985646241 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.099389864 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.986780001 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.165748061 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.010274216 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.989782831 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.990346157 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.985027445 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.994403367 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.987010595 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.989226928 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.992910615 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.992071482 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.987497188 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.987591531 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.989469946 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.995199941 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.987553295 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.038057646 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.988923901 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.989043406 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.127987063 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.988531636 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.104228785 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.016427525 seconds)
  done (took 217.281020309 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.996388599 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.996087427 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.98898508 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.002903107 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.990613488 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.989264228 seconds)
  done (took 13.877070829 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.991772639 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.993040652 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.988961835 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.987924404 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.989920764 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.989609138 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.990022158 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.991658549 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.993166396 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.989767491 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.990933443 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.988779454 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.990910499 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.989799289 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.988844527 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.988890382 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.99008571 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.989322401 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.989221235 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.989189227 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.198500641 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.991150823 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.991717455 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.993237315 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.993547263 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.988675503 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.001459843 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.990124406 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.989566373 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.999641448 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.993858964 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.993493031 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.993551952 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.995397387 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.993186579 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.99268673 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.994092713 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.992027881 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.9900427 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.993422384 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.988796166 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.991147972 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.991547332 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.991430862 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.992943776 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.996025357 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.994497749 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.004303498 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.991304203 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.989895697 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.991440834 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.991326638 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.993223278 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.991019527 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.996563564 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.993933671 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.994870569 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.992930674 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.992630851 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.994186483 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.995263986 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.994203186 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.994806442 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.994080214 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.000429997 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.990671273 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.993842277 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.996414171 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.99421899 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.991368769 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.992975791 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.992295618 seconds)
  done (took 146.582469454 seconds)
done (took 588.766103936 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.077110169 seconds)
  done (took 8.993302633 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.131969856 seconds)
  done (took 9.147781282 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.531906695 seconds)
  done (took 10.45063547 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.007864169 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.035142776 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.999481354 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.995539342 seconds)
  done (took 29.964331921 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.331134314 seconds)
  done (took 9.249154274 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.004138763 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.99697148 seconds)
  done (took 15.990127854 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.99666922 seconds)
  done (took 8.914390481 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.386281653 seconds)
  done (took 9.316072298 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.015042422 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.009328324 seconds)
  done (took 15.9645761 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.997259893 seconds)
  done (took 8.917742041 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.24881107 seconds)
  done (took 10.256514807 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.017130377 seconds)
  done (took 8.976668648 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.030871442 seconds)
  done (took 8.952510933 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.186999933 seconds)
  done (took 10.109049073 seconds)
done (took 167.121224628 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.000512113 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.99053542 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.990938447 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.991699251 seconds)
  done (took 29.893332304 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.031445735 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.03128463 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.040160141 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.030869317 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.022404646 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.021562337 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.030296973 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.030517785 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.023341408 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.029544537 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.0324525 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.028200139 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.030500637 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.041911954 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.040642786 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.028961454 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.032596132 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.032902874 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.025273545 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.041034976 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.030032246 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.033234638 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.999140579 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.999475133 seconds)
  done (took 50.610027222 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.187668863 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.065336521 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.151022769 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.049699643 seconds)
  done (took 10.376391983 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.99721832 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.062331422 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.04778772 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.045354588 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.050173539 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.099633307 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.051200416 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.138985848 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.126829042 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.123076525 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.005063421 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.017943071 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.020421516 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.046155936 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.1037408 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.999029152 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.99788275 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.122175042 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.05924628 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.185175368 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.998836637 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.051822091 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.051540752 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.051914374 seconds)
  done (took 51.376007462 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.999015185 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.005427924 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.007112853 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.998905067 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.000360001 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.000909711 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.005404139 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.002801359 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.021958629 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.002474903 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.998930436 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.001643558 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.009602857 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.000376588 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.00087996 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.013851561 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.014919837 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.002769699 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.005624372 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.008890154 seconds)
  done (took 42.024903011 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.998827505 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.845636855 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.343914221 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.250504976 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.999920688 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.996584089 seconds)
  done (took 32.357455132 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.012023154 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.001880805 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.000689512 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.054056219 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.135267787 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.002667908 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.99863554 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.008429581 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.041556305 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.058120591 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.013209785 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.023246887 seconds)
  done (took 26.275759779 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.999937904 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.999585324 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.99867194 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.011131531 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.011707348 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.002627337 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.009907021 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.999099923 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.010839032 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.014467665 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.004734714 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.01280455 seconds)
  done (took 46.002033169 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.706061852 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072150064 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.999762963 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.876285958 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.451043002 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.546686626 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.890677919 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.786911451 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.463297404 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.926296243 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20289128 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.999001448 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.081264805 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.999450624 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270724052 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.414577651 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18946846 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.242727112 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.661428478 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.025278068 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.20515447 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211496195 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.281989616 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.002606582 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001861337 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.008570955 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.5430212 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.818290678 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.032793477 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.321783538 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.238589124 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.948358036 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056863663 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.004450854 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.013927023 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003406837 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006969645 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272680138 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.009732143 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241804031 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072898332 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250627599 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004909878 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.4194375 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.704718569 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.355245233 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.114028867 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.001123272 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003675419 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.001027021 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.928427324 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085792179 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.002612208 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00630451 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.702023137 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.003938229 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076302628 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.004026516 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206387171 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.809610848 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691439089 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.000024114 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004842313 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.579461025 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.118537811 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.112567084 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784750453 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384368834 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.417077349 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.101529282 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.004424299 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005383241 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.146011406 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.961500777 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.732014428 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036510549 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.140403835 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.017655124 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.644068762 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298911928 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.479731451 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.560037971 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.923436124 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272404925 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.772798715 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.977092128 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222203569 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.832337482 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.931037541 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218737587 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029057141 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00659485 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.266635591 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737603154 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.112336951 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.013571525 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439143425 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019162756 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008476022 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00651695 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.217810699 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414306899 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.029631751 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.128022532 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017258385 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090824881 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.931277504 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.013953949 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.00571257 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.908749209 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.009680025 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932478913 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.046563109 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.669155302 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.03841133 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.943877928 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009045225 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.118956935 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043887348 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.955128331 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248917062 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.30578691 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.66635708 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.974367722 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.132324209 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.423090558 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229564736 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.007318941 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.220541584 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548407607 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.46804749 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.050104931 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299287979 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.064151113 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300743716 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436995856 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080854391 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.804069743 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.629163195 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.227575015 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022681102 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 7.008455593 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011363195 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012308542 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.943332677 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.683859386 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.435685388 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.172214001 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.220914877 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.338730219 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.993390869 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.963740887 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.3085579 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145537297 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.994750496 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.67135497 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.411181568 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.835956381 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.030133242 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.154623611 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.187061393 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.964638909 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023942179 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085880507 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027607872 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.019775878 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.424561888 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369600043 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.009588933 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.01084368 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.961935275 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.017663911 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.012587439 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.545130584 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980056421 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.009232775 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.022211239 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.885189221 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082311331 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.011745624 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.01384897 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.542699475 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.511847781 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.011638882 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.687956592 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.013060359 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206791233 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283762085 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.409554101 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137654307 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.709216133 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.455638145 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.119044097 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.710977824 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.937069226 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.010110206 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.947090842 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013090051 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.013258969 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015559957 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.197061531 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.284579556 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309260573 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.492601481 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.073932579 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211916303 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.795346762 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.963514696 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.01246956 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016766909 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.012208201 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.012974721 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.520503439 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.307770901 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.132461568 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039159628 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.017380691 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141886165 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.024198158 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.938829409 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.012198149 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.014605909 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439246883 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.035792435 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.962885145 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.361147863 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.867605549 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138829233 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057805205 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.024706078 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017094911 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.796227427 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.048424367 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.940979072 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444483548 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043740414 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.751793296 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501347536 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.597677806 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306510725 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.332559549 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.345237413 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.085561943 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.225499698 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.099017002 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066237717 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098903606 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.94993464 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.936424748 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.675163467 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350083922 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.280988681 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020271975 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230517536 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795202591 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.242881126 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04114227 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.686648335 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315706123 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987780733 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03034706 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.34522767 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120674765 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096188077 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016375249 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.963603224 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.340608908 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049364164 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.718953023 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028274563 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.36532309 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.478861146 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.075342718 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.414992046 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223038687 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.012426293 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366449972 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.210056146 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.045131358 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.018657603 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.001569611 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.223775269 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.592207116 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.870364703 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014880695 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.158677083 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.297458159 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.923543808 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 2.017364694 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.159798996 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2647603 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.011680057 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.395003705 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368764166 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.113390919 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069777052 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239138257 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.771595105 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31035195 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.56489163 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.498393025 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.013966252 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.940296642 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.713658388 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.215888871 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.015895579 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.9772933 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216825502 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240695548 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.691475675 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.229355455 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.25644929 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.0216201 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.27959319 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084509171 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.109742042 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.364599584 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.430120529 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.251995111 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.240450479 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.555269014 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.226514561 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.470527483 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.170357171 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.010308133 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.217650501 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.229575933 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.22672252 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.41363348 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183943272 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.724437741 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.019525393 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.219860737 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315000968 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0740453 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.420349002 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.183914208 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.09938688 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019664374 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080363004 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.021852197 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023592123 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.423069535 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.546273476 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.027476268 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09088913 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.121532091 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.52225531 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.01476667 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.020971449 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289378803 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366408258 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347548379 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.998086968 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.01230662 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.023151049 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145269639 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.941915514 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020761932 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289353259 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.018146614 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418027966 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.158191467 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026316673 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.355654602 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.400810398 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764916807 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.976146708 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024897371 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228358561 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308632532 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.196533181 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.129657111 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289278772 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.34462895 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.042943498 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.422858851 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254517266 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021806449 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.892583184 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.022632569 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148321772 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.214182074 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294199059 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.526241139 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.745647582 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.28453943 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.885190825 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021717924 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.798000551 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289923939 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.292869343 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.069762863 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085366898 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024803573 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459610339 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.735033892 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149544996 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.912366459 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.94461439 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.027020984 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.352774043 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.26155638 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.729885374 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.025537151 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297675246 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322271177 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291163701 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.068977985 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.895290272 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230772501 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022127682 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.027751922 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.287280356 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.231085222 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261864159 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022146036 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.020865287 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.826872772 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.946670369 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.02105928 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073403791 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.248783751 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043074615 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.534497025 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.722174882 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293235808 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061835572 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024938999 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.291602979 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.539790178 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.574586044 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025380435 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230835957 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.011322567 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.315128215 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.023163458 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.450853298 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31913727 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.019883557 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.55327469 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.260036785 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.286739349 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.953658674 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02594138 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234622438 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.885599493 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.016398617 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.030072977 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44922324 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24699667 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.757440833 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.576288229 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.017983704 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.023663611 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.496074158 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042582623 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.46295521 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.043203067 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034326564 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.531571314 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.712224154 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.29844283 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255942794 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.541905347 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.590492941 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.0102605 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.011286992 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.009238267 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.929780297 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.187989246 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.190805688 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275524596 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.031598003 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443556252 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033517137 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.359826646 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134803036 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.182785333 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057684256 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.546734428 seconds)
  done (took 1727.853880347 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.029965439 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.110152832 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.033794222 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.031043184 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.026271073 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.032090949 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.09810103 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.022226733 seconds)
  done (took 58.332126279 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.021637371 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.033028206 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.024964223 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.021773143 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.024247555 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.020703626 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.172936584 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.023072639 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.01829463 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.022856347 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.017849677 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.012402711 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.298923507 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.02632542 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.024728152 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.015117731 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.012981464 seconds)
  done (took 76.74361467 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.010007461 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.241893931 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.064702295 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.004703137 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.948635931 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.009184824 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.970950385 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.021853833 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.000653604 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.227406798 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.295043255 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.022772991 seconds)
  done (took 91.760982403 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.004342785 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.999951987 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.000934308 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.99980217 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.999810847 seconds)
  done (took 11.933363531 seconds)
done (took 2257.494442771 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.389648552 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.0577168 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.094041318 seconds)
  done (took 6.077540778 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.149782286 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.19275851 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.308307706 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.066191484 seconds)
  done (took 10.647249008 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.30555377 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.374240228 seconds)
  done (took 6.605793438 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.353275268 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.00023514 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.365603806 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.002299389 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.001612738 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.002464014 seconds)
  done (took 22.937476844 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.00185046 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.003163507 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.002531131 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.002729801 seconds)
  done (took 9.935957943 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.000267651 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.72087093 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.001057196 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.010682099 seconds)
  done (took 21.658809551 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.19108611 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.116850694 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.144198223 seconds)
  done (took 8.379176768 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.223112786 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.102307349 seconds)
  done (took 7.251740989 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.146518775 seconds)
  done (took 4.071963549 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.031022693 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.271946189 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.491805924 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.948941402 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.702302164 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.133527801 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.395713475 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.281882262 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.431262527 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.479346551 seconds)
  done (took 27.09538498 seconds)
done (took 140.695717636 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.554294371 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.054359292 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.231613243 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.428821497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.253494146 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.228323496 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.22763689 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.42723238 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.087602238 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.070001702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.411059302 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.335994477 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.173057372 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.044015264 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.180044924 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.039957212 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.239642743 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.405341078 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.067930549 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.328018479 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.231298921 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.04367953 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.243429271 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.043358176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.235573759 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.163397909 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.59987841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.035305669 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.221589834 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.581562479 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.161826721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.467555591 seconds)
  done (took 173.767300998 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.007800714 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.005099076 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.005239447 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.003686593 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.493007875 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.003804392 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.00301454 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.00793553 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.44542247 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.453445409 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.99888483 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.496319618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.001184822 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.00076167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.997960759 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.002269651 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.579538712 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.995283155 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.997613733 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.995564999 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.995431494 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.338647215 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.995239672 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.316995135 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.590015889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.994440477 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.994310041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.995872732 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.99518958 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.994724184 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.995289876 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.996109 seconds)
  done (took 213.634362207 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.998632314 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.996887573 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.996067156 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.997118596 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.995935655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.995843485 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.998882569 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.996537505 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.715723198 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.722236256 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.994651311 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.995509998 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.998057316 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.994530054 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.997286284 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.99621794 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.995141424 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.997495018 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.996547378 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.996997511 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.996779525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.816261542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.996293023 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.83214888 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.996562519 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.997477818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.997697334 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.996989075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.996423351 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.996964917 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.998853105 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.998289187 seconds)
  done (took 224.921925069 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.246540044 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.002784057 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.003700929 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.913978915 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.002390016 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.003831875 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.999390867 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.249837512 seconds)
  done (took 20.350072661 seconds)
done (took 634.642338995 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.381167318 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.21444809 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.190647403 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.024450582 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.262617545 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.068909306 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.020785255 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.088893343 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.85803144 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.097225488 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.664453814 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.047289212 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.762565493 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.051682771 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.146427088 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.077260601 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.568481702 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.668044164 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.160434435 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.098759365 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.211195792 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.977943174 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.098341133 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.899411742 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.675138349 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.021737322 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.089680681 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.575468111 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.030567437 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.179134087 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.687930492 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.327898413 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.035490301 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.014791248 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.067345452 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.049371611 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.262147763 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.03214836 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.145091802 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.766199659 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.07809404 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.763596671 seconds)
  done (took 108.370094175 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.008469282 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.003811333 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.003728118 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.003167434 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.011071703 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.003146889 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.005437538 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.003681158 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.004978394 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.003893694 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.003824471 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.013123181 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.004095394 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.013957072 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.008059338 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.004550703 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.002458744 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.012979289 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.003331369 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.011279413 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.002841398 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.003346308 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.000292428 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.003401066 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.007852015 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.001587792 seconds)
  done (took 54.088829606 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.997037171 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.151083923 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.247847119 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.017079202 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.996255832 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.999597049 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.015850686 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.999434367 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.000208305 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.999413698 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.088978659 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.999465928 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.015919631 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.243373779 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.010040598 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.996479875 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.997215861 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.998393086 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.16067079 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.009577309 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.016491348 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.998661695 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.016503311 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.007908763 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.999350748 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.997691207 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.000641443 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.462002583 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.004325711 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.09019533 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.071350537 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.017350104 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.404916697 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.249996281 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.051880015 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.003491474 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.998219099 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.096706427 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.001026099 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.998915967 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.015589965 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.000383604 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.247439714 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.524981288 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.010230192 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.998102047 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.478077217 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.100090192 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.035096738 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.008355497 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.249410928 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.012291892 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.000025398 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.999918807 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.03298142 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.009972326 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.997818552 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.360090973 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.00914927 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.015783495 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.998515374 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.000236629 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.16342173 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.003853711 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.154151845 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.004590741 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.005877032 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.000151954 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.247343393 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.011835181 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.540193965 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.009537812 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.997914541 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.090458162 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.154119978 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.494404531 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.008221701 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.164912765 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.420344567 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.024266784 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.00239471 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.44939969 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.021300813 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.000600553 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.002540405 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.996831767 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.996703591 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.040765291 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.012391185 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.4533583 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.53261467 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.372420737 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.019692679 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.003634442 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.994485207 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.355897284 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.998650702 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.995805965 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.235675461 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.542280473 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.007010938 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.001425176 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.517019508 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.009286143 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.014536573 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.999538409 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.255277237 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.008846585 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.040850851 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.995314697 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.001712424 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.99939711 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.014418437 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.998689641 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.995186861 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.508245761 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.102234141 seconds)
  done (took 247.4536558 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.996660822 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.991085434 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.994443184 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.9893359 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.993049042 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.994630639 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.992251747 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.991872919 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.995434967 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.992098888 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.993410242 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.994518512 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.994537404 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.996555509 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.035546526 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.997171969 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.595882723 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.99580048 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.995403878 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.990553896 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.639211801 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.998390301 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.994220973 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.990981192 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.994661469 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.996096038 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.001703346 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.031384569 seconds)
  done (took 171.089953308 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.996701763 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.107150183 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.013815165 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.02619268 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.007723359 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.997648694 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.096137039 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.013616711 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.997507605 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.996883918 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.997343633 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.056054513 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.007644045 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.095073616 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.026420729 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.099123934 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.101465409 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.001798845 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.996891983 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.00078656 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.026528495 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.003006632 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.058061743 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.117550977 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.012774594 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.109690704 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.015198447 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.999351685 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.998110004 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.110891902 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.013795187 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.058447077 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.023136247 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.010809396 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.114006751 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.11195647 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.101012325 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.101713094 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.004205897 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.998344909 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.998265232 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.99964833 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.110220316 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.017937665 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.998824531 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.113392149 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.02012526 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.998925228 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.001305577 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.000314415 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.011189571 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.012930285 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.058227512 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.128912146 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.032084241 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.017752846 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.099029558 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.128097733 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.001291279 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.098015711 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.006326418 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.111970763 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.017271222 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.001482388 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.001505799 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.003954605 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.028645958 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.103122346 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.103164497 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.005232191 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.096724858 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.034824122 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.002610307 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.000771845 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.001356649 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.113963259 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.11482844 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.034408107 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.037066724 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.026080317 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.004582608 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.000213485 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.000733131 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.017354009 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.999783859 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.113917896 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.115703878 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.004916428 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.999276789 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.000111433 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.000335126 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.025888334 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.118642771 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.036873449 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.102978114 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.06571129 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.076322195 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.014523429 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.014664061 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.001371963 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.06426762 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.016748062 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.012581843 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.308542327 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.062563201 seconds)
  done (took 216.418503099 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.390594737 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.052139792 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.053783873 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.326920345 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.386268964 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.947361023 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.049434673 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.046756926 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.077321798 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.267783119 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.125243281 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.066851604 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.032190077 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.019581526 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.042909972 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.078134855 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.052610319 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.392065151 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.271458372 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.52397484 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.037760649 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.343805096 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.38347508 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.632654594 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.104094404 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.445086623 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.643298559 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.206202468 seconds)
  done (took 66.932685717 seconds)
done (took 866.28153874 seconds)
SAVING RESULT...
DONE!
