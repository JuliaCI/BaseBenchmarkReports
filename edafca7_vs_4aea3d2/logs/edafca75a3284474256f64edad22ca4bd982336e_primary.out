cset: moving following pidspec: 7214
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.30817923 seconds)
loading group "string"... done (took 0.469425527 seconds)
loading group "linalg"... done (took 7.677035556 seconds)
loading group "parallel"... done (took 0.174158444 seconds)
loading group "find"... done (took 1.190693609 seconds)
loading group "tuple"... done (took 2.137962742 seconds)
loading group "dates"... done (took 1.339937194 seconds)
loading group "micro"... done (took 0.248349004 seconds)
loading group "io"... done (took 0.661343976 seconds)
loading group "scalar"... done (took 42.169666766 seconds)
loading group "sparse"... done (took 13.00217435 seconds)
loading group "broadcast"... done (took 1.048578751 seconds)
loading group "union"... done (took 14.751804042 seconds)
loading group "simd"... done (took 5.179865281 seconds)
loading group "random"... done (took 9.91022013 seconds)
loading group "problem"... done (took 2.010944454 seconds)
loading group "array"... done (took 22.563501107 seconds)
loading group "misc"... done (took 1.446498077 seconds)
loading group "sort"... done (took 3.622870745 seconds)
loading group "collection"... done (took 19.643269888 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.451050641 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13739395 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141579455 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130902863 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199297202 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136674877 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153596325 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.106386137 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.932089603 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174460891 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138216391 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.486420753 seconds)
done (took 4.927988577 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.213292491 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.07893737 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092806255 seconds)
  done (took 0.859354679 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.086672182 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.140106139 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.088096292 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073271861 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072166435 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.088517025 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072161552 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.08785495 seconds)
  done (took 1.310801346 seconds)
done (took 3.163445887 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.715342743 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.263749315 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203583223 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.502353771 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.171679112 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.202790348 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.655641917 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344774058 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.236913986 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100625513 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.127664899 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391598551 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112649934 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669889334 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.083540622 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12185978 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.168937731 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441239907 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.091194102 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089359644 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.113052587 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.148768369 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.110125148 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081989236 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.176396654 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.078097671 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.18484508 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10427941 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074376865 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.277005759 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.196090757 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.681692588 seconds)
  done (took 10.646339376 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11107301 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13384648 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074797151 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.151076643 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.131205014 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07708857 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.095142465 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075079808 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.118552338 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173743589 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.111459245 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13538884 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088308943 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077275883 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113330161 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.225405155 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.115508028 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.113950072 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078800721 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084617953 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.132112453 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.107419433 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08633011 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.101766926 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.161938775 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.198731502 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10428671 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119299271 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076576044 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.107670819 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139466714 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.153784737 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073449772 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.07486623 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172076365 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.117670691 seconds)
  done (took 4.9134706 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185037109 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099144263 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166618636 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.15898602 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139598321 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.150674022 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107673481 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254465383 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.172518285 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155066923 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16053421 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138576368 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11200127 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076618073 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095454014 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074483719 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.641112281 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.120209296 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149920592 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093344319 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096278816 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101506049 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07386433 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09631386 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.073871152 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078803612 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.130129792 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.330838484 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.140989176 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09766489 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.158319824 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.115678706 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.076052635 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128668042 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.18616247 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125280919 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13103257 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07754243 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072656715 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175425791 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097243662 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074349465 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119481734 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127573218 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11499804 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.089075665 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074942794 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223023992 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073497302 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089872765 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.981697869 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.073284176 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.176146972 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.087997369 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.090397996 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331103858 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094023584 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097720911 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073998902 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.268799558 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.108963914 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.095026408 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075393952 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094417177 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078003157 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382340639 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.092732108 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.702566145 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07851326 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.0862297 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094607481 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.092194308 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084405152 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082406787 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113203069 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07579292 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095825551 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075764183 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.091317603 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.077166957 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113206817 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082012898 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.092597356 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143742784 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.089503172 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095723906 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123295426 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07845291 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.091309285 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124955519 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076815444 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074361424 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132303804 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.075457701 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.091455539 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111897817 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.077584576 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138731164 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092260338 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.157770603 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073917157 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123048242 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.080733338 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125529234 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.107226851 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077383784 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098217518 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073358252 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.090122894 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143350018 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076516831 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.092774179 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.076858161 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.106162534 seconds)
  done (took 22.005466827 seconds)
done (took 38.25267282 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.346858404 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104175976 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10352768 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104634577 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102307965 seconds)
  done (took 1.522277962 seconds)
done (took 2.257869751 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.263588421 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.166214118 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070832463 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16190073 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089035834 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.166494917 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.154303953 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10509391 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.177058346 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069887443 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.156538551 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088851165 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070816223 seconds)
  done (took 2.500693705 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089216632 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111330711 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078599189 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089779701 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089337627 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090057845 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106807751 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096348114 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106426418 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080710556 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071627416 seconds)
  done (took 1.744411196 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088416749 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092558148 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095038876 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089036973 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090171534 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089691715 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105872159 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094847969 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106811232 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080939357 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071755694 seconds)
  done (took 1.740212253 seconds)
done (took 6.712211042 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.088649289 seconds)
  done (took 0.816668999 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.98852285 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.418192098 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099356843 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.161394151 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.311487227 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.208235607 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.579000194 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130027346 seconds)
  done (took 15.842571543 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.109029809 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095897329 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092234485 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099063113 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079937899 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096281564 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.077155856 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094392376 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078124098 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076259943 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092515727 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078522707 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096712785 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076506098 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096372584 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078670722 seconds)
  done (took 2.211701214 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112625828 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111931476 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099186787 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084909913 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099754047 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080104186 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102452797 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081852398 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096400393 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080215081 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102662 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.083875848 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100094887 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079031532 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099804963 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.085803924 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097137549 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.083782604 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.100450915 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100719872 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.085468647 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097667105 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08289738 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101679257 seconds)
  done (took 3.092391299 seconds)
done (took 22.699601642 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145933876 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08092756 seconds)
  done (took 0.965398383 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09486417 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115015517 seconds)
  done (took 0.956407432 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099365411 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094295618 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131055179 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093208959 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.095970228 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077452785 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126792919 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079243494 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095067595 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07746048 seconds)
  done (took 1.716036308 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.079657367 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082203527 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102159958 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115898457 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087389715 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097203085 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082549169 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099276197 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083433916 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093128666 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085494311 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110825677 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083795163 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.112726096 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099879292 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08359498 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104295558 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.082261683 seconds)
  done (took 2.432675003 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076571388 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079448863 seconds)
  done (took 0.901885165 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.078867358 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076352992 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096657987 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096195214 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076464003 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075474652 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092227346 seconds)
  done (took 1.338554355 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.478977547 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139010796 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.265022089 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.081218385 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118320886 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.326954299 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.07508587 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.098486347 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.080845675 seconds)
  done (took 2.449117375 seconds)
done (took 11.504052504 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086319974 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.096611358 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.126520957 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467220879 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.113904216 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.075549194 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.155022407 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25271684 seconds)
done (took 2.126183734 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.139843758 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324279423 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.121087458 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069584513 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091377362 seconds)
  done (took 1.356778051 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073153942 seconds)
    (2/2) benchmarking "read"...
    done (took 0.078227955 seconds)
  done (took 0.900345487 seconds)
done (took 3.14825829 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074299481 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.125544873 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074441766 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.072722225 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095716175 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.072783407 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.094716289 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.072759508 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.072963915 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094434035 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.075211889 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.09268347 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.075588439 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075514813 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090195492 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073354157 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092904009 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073303745 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073060904 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093152742 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07296167 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093263319 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073335459 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.073276171 seconds)
  done (took 2.76188275 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102581566 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095675183 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.08186659 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099414183 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079494032 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099318759 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081628892 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093819449 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081123886 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095373637 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079341281 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.096588458 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077902409 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097447348 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077312441 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097177631 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.081280093 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094223198 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077678097 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097471497 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.080606872 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094147178 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.079549679 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099025576 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079615388 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097356806 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078085909 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.093818987 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08148569 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097495344 seconds)
  done (took 3.419925761 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.079851637 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073200353 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091856817 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.079585006 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090967856 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077996083 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.072820078 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091585683 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.073604669 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090992829 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.075756299 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.072752196 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090997683 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.074402374 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092610431 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.076626928 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.104043742 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.073688068 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073469585 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091973862 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076551904 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091600097 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076490252 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073346218 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091277313 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073073057 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092174628 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073235525 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073954165 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091459372 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.075905124 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094524282 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.074051562 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.080355944 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094894235 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.073009375 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094996891 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.184739394 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.074672239 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090614597 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.072830674 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091176839 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073826121 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.080885276 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094487066 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074616929 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092178182 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.074469106 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.074247815 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09471727 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072176876 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091466707 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.075534804 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092233445 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077145314 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.073083918 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092069061 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073117828 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092303368 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07344303 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073318264 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090675951 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.075075752 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09162733 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08926109 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.079824292 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091123282 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.074769738 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095497272 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.075702139 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.07507019 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105990584 seconds)
  done (took 6.807795051 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076931881 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102281288 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076001297 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075504853 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08940722 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074316924 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099114953 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07402408 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093084312 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091315068 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09195767 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074434944 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075695328 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094768735 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074591511 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094367397 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083754867 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090490828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.074400771 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096060334 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074531593 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099174745 seconds)
  done (took 2.640576719 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.204924513 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100142577 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.13841502 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091500463 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112831391 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090763918 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.099800271 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082771752 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098680275 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083911071 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101456127 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080721758 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11173512 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101976628 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08456301 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103845497 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080457615 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102824282 seconds)
  done (took 2.633526191 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087470403 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094400976 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098202304 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095205164 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077233333 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098783165 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083406366 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110910221 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07877709 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095037096 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087700732 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098045142 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.079251208 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095005115 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079551922 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077007886 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097666728 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076957635 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103973654 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100586675 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08325625 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105407419 seconds)
  done (took 2.769367678 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090670373 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096171828 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096589343 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09836866 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075419208 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096284156 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083371325 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094847485 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085256583 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.078289171 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095704566 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078013114 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.101593631 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076998738 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100548085 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077139885 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096950022 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0767962 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09714554 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075678377 seconds)
  done (took 2.535743149 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114735418 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110064054 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091798896 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120733335 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091500204 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110033318 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120525481 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091555785 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109764361 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10409627 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109999596 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091494797 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119871239 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116942523 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09200261 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120985985 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101743186 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119610102 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110564724 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092009894 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122444772 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092214782 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120501722 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092997635 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109470484 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092030225 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109567096 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116959582 seconds)
  done (took 3.76393581 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075136616 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076491986 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092945075 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073846259 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.074731665 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092740914 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.073688733 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093367701 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076858242 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074960731 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095006077 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076989532 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095122164 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077110896 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076654431 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094401173 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076820767 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.092982256 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0765793 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075009997 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094904277 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076980907 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094682996 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073806497 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074044171 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094733092 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074824021 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092762301 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076445981 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074102241 seconds)
  done (took 3.235972921 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082951464 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101594513 seconds)
  done (took 0.956119612 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072912064 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110352925 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073349794 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08039645 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102253489 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077925501 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105353532 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083203299 seconds)
  done (took 1.4751743 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.093135576 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114328573 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08231138 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108278354 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09610062 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112145668 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137194115 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102084193 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.083682611 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094598654 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.093863261 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095800968 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083052336 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077656626 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.101748817 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083600348 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097180386 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087775666 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103132287 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079816137 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102250521 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089139986 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080801835 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104288175 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078993834 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106813425 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087342879 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108071562 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080633687 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105802229 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083715063 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090155632 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08183369 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101502565 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078421195 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116065875 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090096313 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099140895 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.086940816 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083881816 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10532771 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.075923989 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.101765859 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.083554524 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107248943 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083147056 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102030635 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07674578 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094126563 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080443692 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076500984 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096833073 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071820165 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104945485 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.081811974 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110398168 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080232367 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098662841 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081009108 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.081149137 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.102816209 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.079945079 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098831098 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081526526 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102974902 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.081635199 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104059985 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076315804 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.071509479 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096960231 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.087084668 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119243181 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087061167 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101856737 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083670102 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097116097 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080971752 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103804457 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085234225 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105099064 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.0823301 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103606161 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085701242 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096811518 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080986137 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.084896763 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098621862 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081030519 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.094136845 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09411568 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099142044 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078854414 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.094156897 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088074176 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081395602 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101143918 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.076519554 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103807724 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071805877 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10130698 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084408349 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097236468 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.086979792 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102119548 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08409189 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085813793 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.10679253 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077899559 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.099887718 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.074854589 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102348792 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.080420809 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.104499228 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.072765002 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081516341 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.098566582 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083691367 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.10439969 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080528834 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101814933 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087458147 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.104554886 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080497289 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.074970461 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.099949037 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083119389 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105567078 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.085808333 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099888075 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077134973 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095917813 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.082382812 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100301662 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.084479969 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084412396 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10012565 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072925037 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09827657 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082694897 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105165818 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078221898 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097438266 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.082015284 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07906332 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100156404 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.084599623 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.099202021 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077318479 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.101764734 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081126688 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076842206 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105866628 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.081236843 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099378627 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.082508456 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106004703 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.080665092 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102494177 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080668646 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.102372821 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083926822 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.077699144 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096590253 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080896556 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.106978011 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.080780332 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095469494 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.075337472 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10370974 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.076982746 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082257805 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096423728 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.080581929 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102526988 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079578131 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100472091 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079615284 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093159499 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110132544 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083851002 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.103765386 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088534466 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101190058 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.080367197 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100589315 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084090651 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102297969 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.085990483 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102256791 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082343276 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08115858 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092134872 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084972971 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103544392 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.076822702 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095624508 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.075112638 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.080646106 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.101346166 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081118767 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099064651 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078506797 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095983118 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08542462 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.098067127 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080967861 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09533541 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.080413096 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.088219667 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103006593 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084835741 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10772507 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082278049 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095978588 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087691814 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099605612 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.084903745 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095954792 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.076429687 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077352042 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10359648 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081006248 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.100511267 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.073026275 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105188416 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086595563 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.079237772 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096914337 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08317408 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106556857 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08062814 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100459167 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081690467 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.103617199 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092204421 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.096910559 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.082168187 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.107793225 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.0826985 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072800077 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.103781305 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081603608 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096865713 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081662482 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09896438 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081379012 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085819283 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.102210067 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.072833702 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10094994 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08136398 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096150486 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07752517 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.085485934 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.101833406 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080592823 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107109036 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084819767 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103054041 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083211901 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101860353 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.08481725 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10450747 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082134912 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103334521 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081903893 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078171077 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.100105889 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.078057003 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099589956 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080568906 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.1026076 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.078464984 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085237081 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101256355 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079296055 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103403099 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084862275 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099367944 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.079254806 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097497316 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083098001 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079758306 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.098331232 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.082662297 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096733896 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087221 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102038397 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088087635 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.079104444 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094867919 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084624147 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101011345 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.084229908 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103342828 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08425877 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.099733763 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082909759 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082777228 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107484003 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.077559855 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.108054309 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085239105 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099043719 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.082986578 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09863351 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08113242 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.078238335 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100260661 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085590854 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.098348763 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083134109 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.103470904 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.082458764 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.098890009 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080532946 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084882242 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.098704151 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08470446 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.092786687 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.078886817 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098126917 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083719374 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106476499 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084621486 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.081836852 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101623989 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085366883 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101392324 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.076379444 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.106907723 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086738244 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103989755 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097141036 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078426215 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101443913 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089089011 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092383323 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081214618 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099206934 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.076979385 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106290629 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084359078 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.087916331 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.099327289 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078794504 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095176169 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084841589 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100241353 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07322764 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080426983 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10217858 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081984047 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100981769 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084178999 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.101174617 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084590189 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106448179 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082600812 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081483915 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103594362 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07648521 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.096240088 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.079041231 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.082735089 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102499767 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077859337 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096228382 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083865518 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100352316 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.080471176 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083362172 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101210182 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086680418 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103448407 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.083108305 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107090738 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.074274246 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10195224 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083093531 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103175164 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.078959981 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084099048 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102654065 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085530406 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.106368581 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084091132 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098686538 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083367668 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100383266 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083285121 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084284873 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103437513 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079239421 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105146794 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089180824 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09974446 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08272179 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098848406 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.079819155 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08496491 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104380436 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082642913 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106001536 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082932509 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.100242094 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087021983 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10331638 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08364845 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085686812 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10089769 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086129133 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09798127 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088356369 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.099321166 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085475454 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.100949659 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.077748939 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083375789 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103176992 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083029542 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.104282194 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084924972 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.098007771 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078868798 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080436202 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101592143 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088268054 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106761369 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.083058566 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102273202 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078093013 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096190274 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085124295 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.077999257 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.101340574 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.082998405 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105597017 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.082486139 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099933663 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082851883 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106432239 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087023886 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10488338 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.07819274 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.085340969 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105035907 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.082467114 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.100389004 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.080911575 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105437788 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.085382085 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.100078056 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.077730515 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088233135 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.101332577 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085190413 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101485035 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.080987076 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.099839882 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078868163 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105794101 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.082432721 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105097838 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.080476991 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082856544 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107506657 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.077977821 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.098323921 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088741569 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103140612 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087392079 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097908557 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08094647 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084790777 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105312635 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078974031 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099152606 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07776553 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.102403945 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.078946635 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078105244 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109692967 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087447653 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.103594112 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083436158 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103295118 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078551073 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099163164 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.0795226 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086092308 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102160855 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.089812046 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.099320802 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.07925236 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098235551 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08522104 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103799997 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.083951186 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077788367 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098401611 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.079466551 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.102863654 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.087639058 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103246238 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084802202 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08368157 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.102061069 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081170465 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109169645 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077766369 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103498074 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091447615 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104335642 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080548373 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106800909 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089431195 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104934386 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079006735 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085811598 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102574225 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.080508684 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105066812 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085982904 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116374472 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083779624 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09667344 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08069685 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.082391122 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.097751559 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.08875627 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105928738 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085981848 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.105331419 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.082972494 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106182384 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083410575 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105824429 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.082558854 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.101983313 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083298248 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080764628 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102832791 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.078873863 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106497965 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085919943 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083677682 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108349087 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080394834 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110881001 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.089957902 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106179964 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.076899223 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.100389449 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.080596956 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078940446 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106989912 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079277348 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103043782 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08303354 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103575549 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.081705809 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087512688 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.100373544 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08635438 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103671918 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.075021336 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.102383674 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083384465 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081184149 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097552232 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085146542 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105759771 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087691321 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109322392 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080818087 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104221759 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080788342 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081116404 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09764348 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.087772995 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102603731 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.0832574 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100143302 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085296899 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.086258697 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104193639 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086595515 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105566581 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083207113 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.10764836 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087961188 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098330494 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.078446383 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107321559 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081840739 seconds)
  done (took 55.167596812 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121458443 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103101099 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075767818 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09630828 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119982337 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07983305 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075750395 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100831837 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080930841 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109819167 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076377747 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095685699 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.097720022 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121367242 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118168451 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107145778 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072864704 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096763566 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073385305 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077417648 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112686301 seconds)
  done (took 2.837240614 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099412114 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110836868 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088879905 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113587342 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103164449 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09128781 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108047003 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108733083 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094553737 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105808623 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113858197 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091301169 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105940047 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.086922755 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106585027 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110674752 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097227953 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104869593 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.09283463 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110912369 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108750506 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088785007 seconds)
  done (took 3.065506578 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086447753 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081951596 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.102815013 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.074444428 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10230236 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.075650001 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.108323423 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.077871552 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088705628 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.097222487 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.076149489 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.095110069 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.081572518 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.071935514 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.096425942 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.074895309 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.14725183 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.104492031 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.080847207 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102268892 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076055908 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.082272406 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096483599 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079484096 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.098989719 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092477104 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105487976 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084947375 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.083963087 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.100746208 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085315996 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.099165214 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08252982 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.101102778 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.080088124 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080115787 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104864403 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085306097 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.099961654 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082170394 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.081404754 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100708483 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085830188 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.102668566 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08156874 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.098905844 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.082457189 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084568247 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.094444679 seconds)
  done (took 5.267504565 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.109982279 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.148228882 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102301082 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140640007 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.095289579 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111762588 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.080911032 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117380219 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09548682 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.080402337 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.117980569 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.115425857 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082736707 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.109193548 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088314023 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104509427 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085990976 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100225749 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089232121 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101138267 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.089349194 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.10803451 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116793451 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.094969743 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107703901 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080076247 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.097101164 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.087031475 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.115184273 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109089756 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090491444 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111694916 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118984319 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.086041455 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100444752 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087545136 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121288646 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085054946 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106942505 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.078902679 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.107274077 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089976731 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108460203 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120998694 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085672709 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106741694 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084184769 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.098568844 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.096199661 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.107300612 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094470911 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119343867 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109785626 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085004815 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110385297 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.098347031 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105280969 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083230607 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109134405 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115903564 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.079499735 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109476024 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.09788643 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107120512 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093573263 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117975073 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107623139 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088716954 seconds)
  done (took 7.870071522 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10881522 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106289069 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097992571 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120155495 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110051175 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089829817 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11021208 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089290207 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110289259 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.096358171 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110151942 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.157235994 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088269023 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115668576 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089747702 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111170293 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090114618 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110309904 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089079985 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112038137 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109737897 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.100556836 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110320624 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100469624 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123536294 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107994381 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090320012 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110232664 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100351414 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111705148 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122270996 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090525435 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110794158 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12094671 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.102517838 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.110947121 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084168966 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110635408 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090848255 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110613638 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087590884 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122486774 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110181975 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08760461 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110363471 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090718099 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120753997 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123670379 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094948399 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116748601 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.09026481 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121408622 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110094615 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090955803 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120716059 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127450569 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098454338 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119417325 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110818432 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100825019 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121692049 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12771873 seconds)
  done (took 7.474903004 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10912702 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116151465 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.122763953 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077282974 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079613045 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112171159 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079421209 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101635663 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115450724 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096306218 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118289387 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089020264 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114388814 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119117866 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090467519 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114478117 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109742025 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090654439 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116698974 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09030247 seconds)
  done (took 2.900772984 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087422623 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119207367 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.081601857 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110263672 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086114464 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110366908 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084726611 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104821426 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083665385 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105950002 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095124463 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114610985 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084194181 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111184574 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094055589 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109859316 seconds)
  done (took 2.424755868 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099202479 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120629399 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.104657338 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.109965989 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.079952144 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107763617 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.085890713 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100381676 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.078590407 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119562315 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088779698 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108627866 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086199969 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102189559 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.083934905 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087825247 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099822983 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086057716 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10536577 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.106603127 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109165758 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087794542 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107504899 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.084363089 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105280218 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088431715 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108698464 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076960893 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098214642 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082148838 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102293637 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.086446759 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096257712 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084524472 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097438391 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077084692 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101002286 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08255696 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.104991231 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082160412 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077173839 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.101857689 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.082251732 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100174294 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.076123149 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102007601 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075111969 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105441262 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081512863 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101736186 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082132651 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087093562 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106519089 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110290276 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089305054 seconds)
  done (took 6.048281114 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0943523 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103484053 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074083205 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.076392592 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103141766 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.080779128 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10580655 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.083327892 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104231826 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080294182 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104597078 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087699335 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085048619 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1055383 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085320972 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107148462 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078420929 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10454675 seconds)
  done (took 2.509848381 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085210878 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082036228 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.111540454 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082707672 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102440968 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083198996 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098200851 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078285804 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080958752 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10097362 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082829266 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104560346 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078511625 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.104112009 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079815484 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099144471 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081244139 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078528313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101233473 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075464458 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103024771 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078826449 seconds)
  done (took 2.818725669 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.116125886 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123178348 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.08857927 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.210630514 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.121931574 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.104191504 seconds)
  done (took 1.613226113 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103855719 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135945042 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080151948 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10252908 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092689087 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106706269 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087040282 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106384258 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094805226 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116790998 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103932408 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095877655 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115790265 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115597709 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092319612 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112784752 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08364136 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10475226 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079315071 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12455877 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103653532 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095162037 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104308892 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103756387 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08380733 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114664755 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095300433 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116955978 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104011083 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096020619 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112212311 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085412976 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116887102 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117270598 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083455534 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118317217 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085209054 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124289213 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111912859 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115455485 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082116704 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114091306 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096115012 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113522809 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117960093 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084789964 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114567991 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086991723 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107409072 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131820561 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091943068 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115798396 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111172473 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096046483 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115912338 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130986071 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117523673 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094878899 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110758893 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117090454 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093624637 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112346787 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115496657 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097149805 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111836854 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115910169 seconds)
  done (took 7.795484155 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117105841 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101913654 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086641141 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121504146 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118543278 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08714973 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107110275 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086613158 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108704255 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085144231 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153164409 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109293706 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098492143 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120459405 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107877536 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088264633 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107956495 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097615108 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105786554 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134040791 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085648552 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120053525 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118948966 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099671564 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121466499 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115336075 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088623516 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11064712 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088694951 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110460413 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115093143 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088101912 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119498748 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085381586 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121176812 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08831221 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110360628 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115728005 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088765744 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116585399 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098741896 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130918902 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108826747 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088971976 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123459587 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109209083 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088988093 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106707221 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089208524 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106509986 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101025607 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124075682 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121763575 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097354974 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107793855 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106730691 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084817203 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107064423 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084418056 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113668854 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095025875 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105197935 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130995947 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084228266 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106306168 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116061514 seconds)
  done (took 7.84418177 seconds)
done (took 149.388309091 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.095340406 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137362531 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098990554 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166067385 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080722161 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.112786986 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.133149247 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.094944031 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.103991714 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08508614 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106273869 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086892198 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.14878684 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101993724 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.083982192 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107722946 seconds)
  done (took 2.595899357 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.173344596 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.293073365 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101534506 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104955767 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088704852 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.084374798 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103636573 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092114972 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105683617 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.082428067 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.083670337 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.102734271 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083588035 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.104283268 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.083322276 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102124393 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.080465907 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080149542 seconds)
  done (took 2.808998997 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108064187 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149491254 seconds)
  done (took 1.119069788 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.113438623 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170355332 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292184727 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.152413888 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121590703 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.0952521 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151324395 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.120507997 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198978982 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123468069 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102933691 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109138824 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.115234974 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.112749746 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113538985 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.090573967 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.138984823 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.090803498 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114242384 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.092956976 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136983327 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.081923256 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.111131655 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.086851803 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182277493 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122390348 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.079388176 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101072018 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.087693875 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109690741 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.086176183 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113821643 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122159408 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.14381517 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092753282 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.144755252 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107646911 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085293963 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109116074 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085760912 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.110265548 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.090235689 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.115724825 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.086881275 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.100815155 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.087142981 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102788012 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.080572586 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111364745 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.089088967 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112467662 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.088230511 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.148514596 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108955859 seconds)
  done (took 7.103075333 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.79706116 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.145895989 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088325064 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.872428258 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139595191 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122342254 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.770620792 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131469828 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227516213 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.780317471 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131642347 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119334883 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.19988813 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.228786384 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955663847 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306165993 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.897461276 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098951849 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13946515 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.143536945 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089140551 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131616287 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123191559 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.421271045 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.085300992 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106009079 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090629971 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117610623 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.154077087 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085904992 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109102914 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17106712 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.23758926 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193700912 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.085781798 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083130522 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105852547 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.159141188 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258202567 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.186629573 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.168152928 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080045738 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.105775713 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092524141 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124405803 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101272407 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.153464358 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.165082137 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.164196156 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085432513 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115537183 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113156324 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.092629071 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.152186204 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103395581 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.283076225 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313993609 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105147196 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092711096 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120193631 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232942799 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105884708 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.192539164 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131283621 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.204591076 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083439292 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770537893 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.158000416 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083473155 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111757543 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.0889577 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110366467 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.091991074 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15777275 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398996106 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116190438 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.086953478 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10514444 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.197315076 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084800506 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106173541 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155987908 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.084478753 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112509994 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09578586 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116140419 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.159800087 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.221077923 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.116597947 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091385478 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.109942479 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115165569 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.087308835 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.206555648 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.208318117 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.151748502 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.202199949 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114177607 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.154450041 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156361446 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091648276 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.182206171 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089924933 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119323452 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093489612 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.207794247 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133137934 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083793064 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110179255 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.088870412 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.13636942 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10684555 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090647632 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.158809551 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.4714202 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.155183215 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08127504 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086641015 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113214463 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.153272723 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110003949 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232451908 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113260095 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.157485019 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088893171 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.103558813 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.090300621 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.151796495 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11742094 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11217687 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093458256 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112751003 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.228147812 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.185047312 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117286929 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23160425 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.15053478 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112527063 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.161877067 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112411051 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.159523015 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092012075 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114020627 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084546736 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.763022525 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0933048 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.112524953 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108040306 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15529851 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106286738 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084481941 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105178213 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082382913 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802217924 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087008245 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081299075 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107376566 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090303567 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113119178 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088374664 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109343736 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.153169041 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22135496 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092604839 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111787133 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083736202 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.151287375 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.108266669 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084132102 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.106154168 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085832766 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.113703405 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.087748565 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106808079 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16292292 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.151262915 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21107936 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.560276547 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083860206 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10718554 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219274416 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08537401 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285172432 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091081309 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.216910214 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156337748 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081028354 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312747922 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.157285468 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178542718 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107856825 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.162086127 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082550869 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110151097 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.153545978 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084826976 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111942178 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.150953577 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096264821 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117328214 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.992276845 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085785842 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.218610324 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.103514443 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.159200245 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.086863687 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115439421 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.26107846 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106347752 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.098854927 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.174851394 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.087776606 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106235195 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.844979508 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084867303 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115627433 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090520268 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212973626 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.155572744 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113146792 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089754264 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116950195 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.15505827 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.201799356 seconds)
  done (took 41.774409645 seconds)
done (took 56.258543849 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260567375 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214618991 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260638252 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.161744323 seconds)
  done (took 1.876786463 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172840785 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.124289217 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.139906243 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.082025269 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.146354059 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.101618761 seconds)
  done (took 1.651530092 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.363160212 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269980453 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211041772 seconds)
  done (took 1.732615315 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.24551967 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.241062911 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.343340149 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.388458008 seconds)
  done (took 2.208348543 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198236335 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.0964795 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118437279 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.11083735 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16727351 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.204401397 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.135900532 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.143749587 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102994969 seconds)
  done (took 2.21161992 seconds)
done (took 10.569684813 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.123507335 seconds)
    (2/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.126081765 seconds)
    (3/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.275206555 seconds)
    (4/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.13081434 seconds)
    (5/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.23793448 seconds)
    (6/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.0971969 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.22799715 seconds)
    (8/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.225083745 seconds)
    (9/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.081758271 seconds)
    (10/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.115702499 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.089867399 seconds)
    (12/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119722338 seconds)
    (13/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.233884655 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099503835 seconds)
    (15/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.229032107 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.145586252 seconds)
    (17/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.122939821 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.087835976 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.129610347 seconds)
    (20/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.220493608 seconds)
    (21/286) benchmarking ("sort", BigInt, false)...
    done (took 0.224552348 seconds)
    (22/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086978972 seconds)
    (23/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.25425239 seconds)
    (24/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.156098006 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.105263668 seconds)
    (26/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.115618667 seconds)
    (27/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068374772 seconds)
    (28/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.194551128 seconds)
    (29/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.219997607 seconds)
    (30/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.093502366 seconds)
    (31/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.122229067 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.080408971 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.224775337 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.114221066 seconds)
    (35/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087341535 seconds)
    (36/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.189749926 seconds)
    (37/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.262398108 seconds)
    (38/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.085777482 seconds)
    (39/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.168235973 seconds)
    (40/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176185423 seconds)
    (41/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.158687944 seconds)
    (42/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095077075 seconds)
    (43/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.083435371 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.102801629 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.080338499 seconds)
    (46/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109975645 seconds)
    (47/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079448282 seconds)
    (48/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.091823011 seconds)
    (49/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.115584741 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087371297 seconds)
    (51/286) benchmarking ("sort", Float64, true)...
    done (took 0.230028069 seconds)
    (52/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.159527258 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.103001505 seconds)
    (54/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.130607831 seconds)
    (55/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.184385335 seconds)
    (56/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.169220565 seconds)
    (57/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.19944661 seconds)
    (58/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.20894616 seconds)
    (59/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.199467541 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10633924 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.107009566 seconds)
    (62/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.08144144 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.104578902 seconds)
    (64/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149686348 seconds)
    (65/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.153034796 seconds)
    (66/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.089977983 seconds)
    (67/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.091829641 seconds)
    (68/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235120242 seconds)
    (69/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.073308614 seconds)
    (70/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.105985654 seconds)
    (71/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.173721536 seconds)
    (72/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.110172049 seconds)
    (73/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.093565257 seconds)
    (74/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.164153661 seconds)
    (75/286) benchmarking ("sort", Int64, false)...
    done (took 0.079644755 seconds)
    (76/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.205812667 seconds)
    (77/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.097055205 seconds)
    (78/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.181272282 seconds)
    (79/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137261183 seconds)
    (80/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.145504682 seconds)
    (81/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.08239726 seconds)
    (82/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115232085 seconds)
    (83/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.111052477 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.129451567 seconds)
    (85/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.088046912 seconds)
    (86/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.144749954 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.080623484 seconds)
    (88/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.148660861 seconds)
    (89/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.085236705 seconds)
    (90/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.11384133 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.080399945 seconds)
    (92/286) benchmarking ("sort", Float32, false)...
    done (took 0.175365837 seconds)
    (93/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.068440882 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10488861 seconds)
    (95/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.098593138 seconds)
    (96/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.092035793 seconds)
    (97/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.106776165 seconds)
    (98/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.091947411 seconds)
    (99/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.19597345 seconds)
    (100/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.16118938 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090701692 seconds)
    (102/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.087915365 seconds)
    (103/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106772354 seconds)
    (104/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082155483 seconds)
    (105/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104281528 seconds)
    (106/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.099708009 seconds)
    (107/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.157974288 seconds)
    (108/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.239924796 seconds)
    (109/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097047382 seconds)
    (110/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.194285366 seconds)
    (111/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.112905925 seconds)
    (112/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.186201022 seconds)
    (113/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.112736835 seconds)
    (114/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.083513147 seconds)
    (115/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068425232 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.181047124 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.113549307 seconds)
    (118/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083208522 seconds)
    (119/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.090819439 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.088072003 seconds)
    (121/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.201076187 seconds)
    (122/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.205574783 seconds)
    (123/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089591004 seconds)
    (124/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091810916 seconds)
    (125/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.126668446 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.110419342 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.088175018 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.079565739 seconds)
    (129/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102742981 seconds)
    (130/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.094765537 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.113190065 seconds)
    (132/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07013702 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086164875 seconds)
    (134/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.150738086 seconds)
    (135/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175210636 seconds)
    (136/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108153628 seconds)
    (137/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.132939077 seconds)
    (138/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.196873701 seconds)
    (139/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.153236728 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.104222792 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.088864999 seconds)
    (142/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.114524442 seconds)
    (143/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077281306 seconds)
    (144/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.079550091 seconds)
    (145/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.130598629 seconds)
    (146/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070507061 seconds)
    (147/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092915115 seconds)
    (148/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092809334 seconds)
    (149/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.091889714 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.091346065 seconds)
    (151/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.104505518 seconds)
    (152/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11206311 seconds)
    (153/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110627567 seconds)
    (154/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.071637569 seconds)
    (155/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.080373762 seconds)
    (156/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.174090664 seconds)
    (157/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177760093 seconds)
    (158/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.112392796 seconds)
    (159/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.121305068 seconds)
    (160/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.068924807 seconds)
    (161/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091386865 seconds)
    (162/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.0782924 seconds)
    (163/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.07031054 seconds)
    (164/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.092349755 seconds)
    (165/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.096298533 seconds)
    (166/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.173255181 seconds)
    (167/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069882389 seconds)
    (168/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.166134469 seconds)
    (169/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.083048145 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.109177833 seconds)
    (171/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.168881335 seconds)
    (172/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158230292 seconds)
    (173/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.104419718 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.092718047 seconds)
    (175/286) benchmarking ("sort", Float64, false)...
    done (took 0.173470558 seconds)
    (176/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068837356 seconds)
    (177/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.112437531 seconds)
    (178/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.084452307 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080923998 seconds)
    (180/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.092501376 seconds)
    (181/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.069112051 seconds)
    (182/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.178553174 seconds)
    (183/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068450016 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 0.222676691 seconds)
    (185/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.074826088 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.107569322 seconds)
    (187/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.069026918 seconds)
    (188/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.149829963 seconds)
    (189/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.158164911 seconds)
    (190/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092885901 seconds)
    (191/286) benchmarking ("sort", Int8, true)...
    done (took 0.222956656 seconds)
    (192/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103702639 seconds)
    (193/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134630191 seconds)
    (194/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.079276815 seconds)
    (195/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11159055 seconds)
    (196/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.139515716 seconds)
    (197/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.091865824 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.090726603 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.088368321 seconds)
    (200/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.106652153 seconds)
    (201/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.079731851 seconds)
    (202/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.106517811 seconds)
    (203/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068652578 seconds)
    (204/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091162214 seconds)
    (205/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105108882 seconds)
    (206/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.081168292 seconds)
    (207/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.152909245 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.081425539 seconds)
    (209/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.103784183 seconds)
    (210/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.165046345 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.106703513 seconds)
    (212/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069731407 seconds)
    (213/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.090263143 seconds)
    (214/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115497118 seconds)
    (215/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088280127 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112437317 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.081566105 seconds)
    (218/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.104859809 seconds)
    (219/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.16078095 seconds)
    (220/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.09425532 seconds)
    (221/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069268364 seconds)
    (222/286) benchmarking ("sort", Float32, true)...
    done (took 0.234579784 seconds)
    (223/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.13522717 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.082837443 seconds)
    (225/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.083279243 seconds)
    (226/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110177828 seconds)
    (227/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.070061734 seconds)
    (228/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.078368577 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104388818 seconds)
    (230/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174224734 seconds)
    (231/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085402371 seconds)
    (232/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.072958096 seconds)
    (233/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.103006726 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.081237271 seconds)
    (235/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.11761524 seconds)
    (236/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.068839556 seconds)
    (237/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165812583 seconds)
    (238/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.164064862 seconds)
    (239/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.095359963 seconds)
    (240/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082160036 seconds)
    (241/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.105466398 seconds)
    (242/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.080648456 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110569951 seconds)
    (244/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.087178239 seconds)
    (245/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.068698997 seconds)
    (246/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.105710185 seconds)
    (247/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.068075042 seconds)
    (248/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06912331 seconds)
    (249/286) benchmarking ("sort", Int8, false)...
    done (took 0.189272218 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.113659529 seconds)
    (251/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069611301 seconds)
    (252/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.092721487 seconds)
    (253/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.082197067 seconds)
    (254/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.080023076 seconds)
    (255/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.091829986 seconds)
    (256/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.069707518 seconds)
    (257/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.0819556 seconds)
    (258/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.093465435 seconds)
    (259/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165620717 seconds)
    (260/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.068446608 seconds)
    (261/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.083732514 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.114259263 seconds)
    (263/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.080412566 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.103177193 seconds)
    (265/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068635498 seconds)
    (266/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.08130474 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.102705299 seconds)
    (268/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068577486 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.088590088 seconds)
    (270/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.091590638 seconds)
    (271/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.081295943 seconds)
    (272/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103659159 seconds)
    (273/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.094623273 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.102232242 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.081272775 seconds)
    (276/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.18892184 seconds)
    (277/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.069196985 seconds)
    (278/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.079155544 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.108554804 seconds)
    (280/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.069708686 seconds)
    (281/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067900628 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.103903505 seconds)
    (283/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.107562217 seconds)
    (284/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111787451 seconds)
    (285/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.069595099 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.127441865 seconds)
  done (took 35.02883297 seconds)
done (took 35.927525947 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094834787 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145964911 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091389893 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.132054542 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.094156287 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.118272449 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.089630685 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.093058919 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.118204014 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.095164749 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.116256769 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071442079 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.115200032 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093104282 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.114711465 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113032154 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121583129 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.0884547 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.108013423 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.080111368 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.085617977 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.104489931 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.082937828 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.094701746 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.092738262 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089511048 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.110898766 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093958224 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.105168819 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08132625 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.079830307 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.112600311 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081270854 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118441326 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.087280934 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.10809274 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093890291 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.090248337 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.106284403 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.081630882 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115396875 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.081746432 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.111616519 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.089174288 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.083157062 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.103455445 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086682272 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.118864556 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112922005 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116062701 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.089757649 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.095554372 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.114436037 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.088106156 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.104424844 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.085133654 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.104271464 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113585792 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.113535749 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086071414 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.09096513 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.112553438 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080947044 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.109133315 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.085626628 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.115180119 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.091988079 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.08034149 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115106455 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086840522 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.104451231 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.085254168 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.080066116 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.1051019 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091491598 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.11564345 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.080352022 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.082681146 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.112989519 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.086826663 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10449672 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084257884 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.106091428 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.084979474 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090869007 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.100081933 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.080815006 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.091307805 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.104246841 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085401085 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.111380818 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.088422284 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.106056329 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.093015539 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081802204 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.104572024 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082029568 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.105322277 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083358296 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080852419 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.104945184 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084327581 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.113169522 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.082893582 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.085087705 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117356557 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081455525 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.111370058 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.080773963 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.085470956 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.123226283 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.093458891 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.104875728 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087165112 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.0852127 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.107676849 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.080803109 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104705509 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081707789 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.082141743 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.106923023 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.081461572 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.107113153 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.083764269 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.098544241 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.105103084 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.081220659 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107530037 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.081404371 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.08673512 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106333731 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.081532341 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.106904026 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080328789 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083774561 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.105305993 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.083596087 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107689168 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.085814289 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.083108938 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.109076521 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086383673 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.107228776 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.081354259 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.103976973 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076139115 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087276302 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.107252509 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.083744856 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.081016284 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.106797915 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082053368 seconds)
done (took 15.612353121 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.081449683 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.178695184 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.140645422 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.115764909 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.12652079 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.082369185 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116351874 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.113058267 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.108029245 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.137156486 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.105134155 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.125060438 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120373833 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.105034519 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.081993764 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.08551255 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.107956115 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097411822 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145418358 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.107906201 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.140010865 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.104251741 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.111548312 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.130569369 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091063727 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.133223084 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.082398125 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11041313 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086387919 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.1214614 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.103124923 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108937352 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.082233001 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103834985 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123203222 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089644692 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.106106074 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088657376 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106192278 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082536422 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.128261154 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104367236 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111379672 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088109721 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.109136323 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084763079 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.083113744 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.114870364 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092751673 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110676292 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.096528073 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135084602 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.108122273 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.09212994 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.080780689 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116614144 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.091426044 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.108268576 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.083490012 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.108059715 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.081528165 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.085173347 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.120887577 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.13027678 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.103509591 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.116003831 seconds)
  done (took 8.016605299 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.100237003 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13493813 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.099669091 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.123676072 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.081657281 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08221334 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.106445601 seconds)
  done (took 1.684200614 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.082696777 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.107605611 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.132319938 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.112521327 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.129737607 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.135435452 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09282412 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.082884338 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.12664633 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084286874 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132336678 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124688505 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.10853656 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.09084635 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135355416 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.086338609 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.134010843 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08460727 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.110261244 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110122636 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109903002 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.104443765 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.109728698 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.08293006 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.100608149 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.108097934 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159030535 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087851002 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084207762 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.111082827 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.080935054 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.146059485 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101079811 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119688361 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082806885 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126620505 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.106864156 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110852047 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.099605899 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.11287164 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.100631683 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.084558943 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.108313738 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.0813756 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.111501777 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097432853 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.110891003 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.084408364 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.086532958 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131041131 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.084839156 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125302763 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083422654 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.110982089 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.085207697 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089102968 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.1173812 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.084782976 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13211969 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084842665 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.127689612 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103743916 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128924967 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.103525484 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113893205 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.100583925 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104427188 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.111438755 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085460198 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11120857 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.103040843 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.104729448 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.085665076 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.096685201 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109923247 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11006956 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.134163987 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085165856 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.118785431 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.083468725 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.107529733 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.083891332 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.133700983 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087114386 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083680545 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113501904 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08674501 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107478438 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.082904638 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.086522916 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.108265812 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.086197522 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.110762371 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0845676 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086071511 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128119156 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.087610114 seconds)
  done (took 11.093069525 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.084944089 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086154469 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.11158197 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.085455932 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108930086 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08495972 seconds)
  done (took 1.533738196 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112044913 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.108514571 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.097710404 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.113006598 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.124608393 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.131564179 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107743869 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118153892 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.100847578 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12031427 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110801832 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.136987435 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.116333955 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.114911145 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106878817 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.112405846 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10836789 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11421057 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.09522159 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113564504 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.099926638 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.114732805 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089140192 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.12704639 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.096455644 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.112776243 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090168105 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.11944394 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.094448146 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.117285321 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089920709 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117707666 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090276518 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.117395664 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108448809 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.113532549 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088156095 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118933723 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090087361 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.093663129 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.135170553 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.094444565 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.11868334 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094480807 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.117423824 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.089320346 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120651318 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.088985442 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.132383749 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095024748 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119829502 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.088579727 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118002246 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095943641 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113887838 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092949574 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119901729 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.10864414 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.113604603 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.089076835 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.110473338 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093360743 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117929778 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093709351 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.117774252 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095091364 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.114243563 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090126161 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113639321 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.089087284 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119072671 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.086366449 seconds)
  done (took 8.714722885 seconds)
done (took 31.994298121 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.683970682 seconds)
  done (took 1.648902618 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.817609909 seconds)
  done (took 1.784822438 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.987899185 seconds)
  done (took 17.981738733 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.456121644 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.547502405 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.957948885 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160956091 seconds)
  done (took 3.089609522 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.944963888 seconds)
  done (took 1.931224906 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.277532303 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.2296758 seconds)
  done (took 1.481654322 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.760867399 seconds)
  done (took 1.745628274 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.424868542 seconds)
  done (took 2.405529529 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.31971529 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.151119868 seconds)
  done (took 1.46224559 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.555877003 seconds)
  done (took 1.545229762 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.906602047 seconds)
  done (took 11.896566085 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237079872 seconds)
  done (took 1.233210933 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.283796189 seconds)
  done (took 1.268548229 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.522276626 seconds)
  done (took 4.506046705 seconds)
done (took 54.958554025 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09329337 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.096478377 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121425459 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.093841751 seconds)
  done (took 1.383979854 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.098058951 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.09045509 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.123217476 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.089127465 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124533029 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.089301666 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.117955938 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100093613 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115060257 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.091279617 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11553471 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.08911827 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.118223895 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.091373628 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112949489 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.092830968 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12216483 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.089764163 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.093683549 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.116084251 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.087728843 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.117165709 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.094557582 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.114132403 seconds)
  done (took 3.486872232 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.094072878 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089191667 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.115997853 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088208692 seconds)
  done (took 1.380419038 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.094438865 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100200025 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.125475922 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.093639079 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.126049937 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099764083 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.111738961 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086138958 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.113809043 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094605023 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.083986837 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.132764573 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.125340754 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094205097 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.094997782 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.107803363 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.08613867 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.125296171 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.094253153 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.119710143 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.08818636 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.119043648 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.084653563 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.126011588 seconds)
  done (took 3.523979995 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.165255543 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.121984124 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.107305683 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.114994335 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.128431012 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.134995661 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.082152004 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.134830451 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.082401024 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.123612206 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.086828368 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.153918333 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096109714 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.108055187 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083227329 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.081991713 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120787888 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.094709002 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.110873913 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096115776 seconds)
  done (took 3.221062123 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.092499869 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.086876599 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.108889126 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.085782815 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118948055 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090057909 seconds)
  done (took 1.584555463 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093119557 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084331907 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.113444527 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085852511 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114125184 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083249272 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083341347 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.109943527 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084447501 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.108010331 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085440304 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083301424 seconds)
  done (took 2.129512642 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.501561158 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.085725479 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.111158215 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107791064 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.094029569 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08238602 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.124725437 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.084237186 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.136457227 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.082757773 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.109339115 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.085438208 seconds)
  done (took 2.607793413 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202520075 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093281889 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25420182 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.339567634 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152338792 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160066535 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269967098 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159949107 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.177293067 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109155169 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211259373 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126352338 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148263396 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172561475 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108604763 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.150023998 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168595895 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192801398 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143418623 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197300521 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157326647 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163122319 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17393626 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147905885 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106457941 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152463791 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11479175 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097954463 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167186305 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163382494 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166255643 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143800387 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134847756 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192589223 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20096377 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171407641 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270573406 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127348489 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149574112 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.158576337 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24416931 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109430299 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214961705 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123138323 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126627186 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176893145 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151465846 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173596182 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101535427 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138691863 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175500936 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171211203 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172229622 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133349922 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292401813 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141863214 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114552186 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17547143 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17939241 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182735662 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162263217 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.114903969 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17899213 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173365189 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172701351 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113334148 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159318995 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12079244 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168333366 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189279031 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171759684 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158133891 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.177611876 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130918791 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157170632 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164357127 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120722048 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172235052 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156128069 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.115858345 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11782532 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13273486 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096670414 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189475175 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118923509 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197157005 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104004132 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.167800417 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19638315 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152975945 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156696033 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159352127 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159659226 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114881241 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113204616 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142203313 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119590629 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150666098 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128222386 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124111111 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137882059 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.121819983 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119087506 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119151597 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153782762 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09705779 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158489911 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159319218 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.094357404 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160383998 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145602906 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.117209846 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163162676 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177517176 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128754859 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127889614 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185123052 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125358174 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129559808 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169374833 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179017872 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.150835112 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105635476 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16044154 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185874306 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13850467 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180875742 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137024896 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102297317 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136062559 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154481231 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153486258 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126690433 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125737295 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.147205043 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18441117 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.092973574 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132725019 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171842047 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0960834 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124647336 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109213351 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131888142 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.131859225 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110419781 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131141755 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150363948 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126232087 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147908623 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148375763 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137784015 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183067149 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128142805 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.118897502 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14325845 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088079871 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169065756 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176973954 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126257003 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189039393 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159231387 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188167088 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158163903 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126781084 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171269396 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097525348 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.087701285 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159766522 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154364604 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157268342 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.174410272 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185148337 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157529604 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147628419 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143585306 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159758257 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131011119 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150079458 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.133359644 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154849648 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153207496 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.091198133 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092121509 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123122114 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137176626 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09870494 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128086021 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174950011 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158103475 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181021357 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154329257 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108799733 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174857388 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122203892 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159247945 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.165484294 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105936995 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.175332514 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172888848 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161330252 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138815538 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167455086 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.087598036 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119796832 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.101755467 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158392541 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128854842 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102092032 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13859565 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17637504 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166189663 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144804315 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19350115 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159183087 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184793537 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.116654636 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.136200964 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161632133 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15306927 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.148584009 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126699603 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.146167689 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170792171 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110158114 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18206272 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155546099 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162576386 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186622481 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.145946835 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125938148 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116285401 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158782062 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136137249 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160673154 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112057196 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133432892 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145020818 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.09575311 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121229943 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16765806 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111841338 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195125589 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115328512 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161948985 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122367029 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110388031 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155609052 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141216476 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083466612 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158995276 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176634658 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139039835 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151697412 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16556064 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097537179 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.298277994 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180036537 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174862109 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133272308 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137300982 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128083961 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154066059 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155392675 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173876881 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14238536 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171597155 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125097737 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.130724732 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131357226 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115004122 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145238012 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135421283 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100165258 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.148329697 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.132475949 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169470194 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109734918 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154107071 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158665694 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.116400739 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.141857086 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137957349 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19228501 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151764168 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170536634 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.117275866 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.157198698 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190057625 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120339366 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097640691 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.122918361 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171880035 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100728461 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154057043 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.177773883 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188497285 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152678341 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160065027 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134028384 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.087146452 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1534448 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11572488 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217030518 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136069689 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104263928 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179366893 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.139500063 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098002959 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158179034 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278444429 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138749073 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166477911 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081216366 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.269987441 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119523779 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099799268 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155648372 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164991056 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130594784 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.142135005 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158759531 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138110049 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126771617 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133481633 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18203519 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197175788 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163013951 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165957522 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.128765962 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152009127 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127840923 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169212316 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139562568 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.133251154 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129369656 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175345244 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179707589 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.128766636 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157350976 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156330333 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125450234 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162047021 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12980119 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190651968 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12681953 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157270828 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106265588 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120294883 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151168603 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.17716946 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102414078 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164750646 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152440445 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12783657 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095031489 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146420661 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152020874 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109347265 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.122569757 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165480705 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.091107495 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157982568 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174316969 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098517509 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150338672 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140211977 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102862374 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139157268 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140189951 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1033149 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.158664822 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175256245 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.097186283 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169277609 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168226865 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157060656 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153131761 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140543462 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634945658 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124431047 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174368642 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114454572 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205285878 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116063342 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160558012 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154542703 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14407405 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130881436 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144956804 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.22862018 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158701609 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.151825003 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099008353 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140445342 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137383023 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.099343801 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146617473 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15568301 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107535822 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132345601 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151388426 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111613337 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.129600424 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10509945 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175856733 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143419113 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169645179 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175394463 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133200989 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130774531 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19078355 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098762228 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15471356 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165894367 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108762428 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144628824 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.126133667 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101581186 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174882671 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.119882493 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125812999 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154954212 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155133969 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157292402 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.127815279 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125919598 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137823897 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158437608 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097555546 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14838297 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15378808 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098208692 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124081401 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150318478 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1481892 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.116834579 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122008063 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.133962974 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174392677 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.089237333 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128955523 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277605597 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152427034 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184534889 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137324672 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103039435 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138542803 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114030703 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14742658 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154991484 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.09618109 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127698209 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.125277411 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.133779742 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137301713 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151070111 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150801674 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150799703 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19155228 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132678818 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278299122 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105610976 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152256456 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090744207 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.125078465 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137270058 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101697209 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1399171 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183433344 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174114378 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.142128362 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.102275443 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123461623 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.092208855 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12894768 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128619196 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150550619 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15304961 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137899474 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083978123 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139585406 seconds)
  done (took 72.057613947 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157008368 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.127854155 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.142742322 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.196356126 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162125979 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246925397 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.203942638 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232348183 seconds)
  done (took 2.550759118 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.08795571 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.137970826 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.122044639 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132137516 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.110597474 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.087484522 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.318293881 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.128620683 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.085396437 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.141366247 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.127054567 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.11144872 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.525739226 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.084775477 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.112986067 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080857486 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.110960303 seconds)
  done (took 3.581348035 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.216469798 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.46994739 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.998746296 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.188165586 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.173340816 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.089090549 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.701999175 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.089067229 seconds)
  done (took 12.009461693 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11763413 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.111247716 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.158082965 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.158405034 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116244072 seconds)
  done (took 1.754710482 seconds)
done (took 112.251728361 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.091254882 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.09389272 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120468389 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.095752107 seconds)
  done (took 1.475615856 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09890263 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072006277 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104651906 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076541638 seconds)
  done (took 1.43950902 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.186734045 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.162557031 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394363866 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073304692 seconds)
  done (took 1.582746631 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.107999738 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.126054054 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.099647588 seconds)
  done (took 1.430628108 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.099903453 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095240404 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.124373729 seconds)
  done (took 1.412334904 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.098710172 seconds)
  done (took 1.187185608 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10502945 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.132998684 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107125334 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.132523281 seconds)
  done (took 1.57143519 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.09232409 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094005104 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.134253305 seconds)
  done (took 1.409936683 seconds)
done (took 12.947268753 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100381711 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.42130837 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385048284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139592663 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.692152276 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.404359582 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.049533561 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141359168 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16179733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089769569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130600457 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668368611 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.033357394 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.347074031 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.025037777 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.342503409 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.687591803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114614832 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085419056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114106332 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.040553234 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112877932 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086951106 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086324617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.709218201 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.391115431 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115666172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.34165335 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113676224 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09407857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.372945043 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11638726 seconds)
  done (took 16.79807896 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.092796978 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17231329 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098290747 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130801275 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.093735281 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.087360978 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.118651586 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087418453 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176495827 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114974975 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104228424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.114387226 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.091066864 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086967059 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13550708 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085922435 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115433683 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.08689169 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.114157129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.08732806 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105132016 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115299095 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087002027 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117524387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.086865055 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.127825047 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087778397 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.086370601 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115429684 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09404674 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117284629 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.087037609 seconds)
  done (took 4.515929959 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13868907 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181036121 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098580563 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149437915 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16725956 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095303819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.193228515 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.140615428 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15092884 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115628159 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103544764 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.115837916 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120463288 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118014101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.106735622 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116925833 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.087965286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114734933 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087549075 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087005494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.1353523 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086961877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116158136 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086784419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11598015 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101377149 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115427624 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087895319 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087029747 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123210893 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090102127 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116326037 seconds)
  done (took 4.853474932 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.091743123 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.091702781 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130428331 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.103526092 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117087507 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.090609404 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.118799316 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.089212538 seconds)
  done (took 1.931238022 seconds)
done (took 29.190342408 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105015705 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093688603 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129835127 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099435132 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.126622124 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.099443192 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.113956127 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099399474 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099501155 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.124767585 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102679855 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.114627347 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089059962 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114007849 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.101706742 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09151099 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.12882856 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096212981 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.130479938 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.100136184 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.117360074 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099359153 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.096760503 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.129911129 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.100376171 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.130680024 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.102891761 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121765766 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.087883741 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.117610246 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.100611693 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.137935583 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.095156689 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.13067201 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.092525317 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091567282 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.11781599 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.091150547 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.129462068 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099183661 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122497357 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099058284 seconds)
  done (took 5.663429893 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113542733 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.145021665 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109057941 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082596431 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118288872 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082020842 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.141297668 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080530393 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111514828 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111994696 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.103799946 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.07895265 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080086861 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103342253 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077827628 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076335848 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110624942 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076519573 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.106114166 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078681361 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080303318 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.102567916 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081574486 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080378865 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.10549214 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082851763 seconds)
  done (took 3.632538225 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.093362216 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101261232 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136984898 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.169476432 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.121168174 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.123886361 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.096147642 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.103847942 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.132753332 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.085744532 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.118491259 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.115246002 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133317323 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.094178871 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.11804757 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102465042 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.100312856 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.118086296 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.091539813 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135968702 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.102798513 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.126553217 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.105504163 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.126223007 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087065481 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088229422 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121366253 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.097192278 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123393689 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095230442 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121439474 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.090275686 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.088287763 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.127278738 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.09319642 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.117283789 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.105653241 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124923346 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.095875552 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.117163712 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097556789 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.089329329 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137076908 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125662939 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.116380637 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.093747573 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.119277465 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.095463575 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.117771407 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104865301 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12544501 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.087615385 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.089620188 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11741785 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088927335 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13187974 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089962941 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.0882606 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128265197 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.092121562 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.129022013 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092316342 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131624071 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089005144 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.092528719 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118317549 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087426094 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115963614 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.11014864 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122017584 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128191851 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.118461808 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.088618513 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.095384517 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123034699 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093394526 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117121692 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101688149 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125739071 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.090886589 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126545995 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.090364571 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.089566922 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.134843373 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.088964387 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.117536278 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.088495061 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.092946151 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118778522 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.088351456 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130341875 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.086223174 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118847917 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.10088129 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.087558156 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117486314 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.092588196 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.120849894 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.086286929 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130207161 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.09291599 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116693171 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.097690541 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.087332404 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119469306 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097354352 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.121071841 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.087128595 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.121240224 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094353126 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.086764975 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120626666 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.089550965 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.118491708 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.096979123 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.122876099 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091383838 seconds)
  done (took 13.740692246 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.223736203 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.211935884 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.182869757 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260524856 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13074092 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114275377 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.20823977 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154014521 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.08957025 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.154836534 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165182523 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.178975004 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.166567274 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.176980001 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.136942351 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.117003307 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.10559847 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.162530301 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.210235051 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.28580513 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108209456 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.125655333 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.125849964 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.154983051 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.131247495 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097115028 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.133618624 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.100085959 seconds)
  done (took 5.534677045 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.103946657 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149635788 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.093020434 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.138678978 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.114168994 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.117543601 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.091890813 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117837073 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.100694425 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13164877 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.087183836 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122533841 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.094687389 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.095931123 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.118514241 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.096948971 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.127438255 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.089146808 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.120713668 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092458043 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.097827203 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.135347693 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.091275144 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.117144314 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.096249104 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117410124 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089906527 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139358912 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.08791602 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.139609346 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.085213052 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.126407019 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.101588101 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.118242371 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.088270107 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.089871543 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.1199478 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.089411033 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.119381565 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.08642792 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.086247603 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.109606629 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.086684028 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133630471 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.095388153 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112569521 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.094227506 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.122940403 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089401486 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085171211 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120930798 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.09163135 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.119813068 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.09634017 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.0893483 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119726963 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.090918252 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11760764 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.094208848 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.089960303 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115705403 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.085862852 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.121754761 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.090973433 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.12673402 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093242928 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.085570117 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.120270616 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09203986 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.124414538 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.090296404 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.093584563 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.115450324 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.089910728 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.120838097 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.093756518 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.091031009 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.116339757 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.087862417 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.119057802 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078136477 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.087759325 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.106196936 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.092156133 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.115975118 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.086900958 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.089855609 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124334131 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133562477 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.089899439 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.09601011 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11941806 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.087687219 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120561144 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08543396 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09112049 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.134189736 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137362764 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088371882 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086197268 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.132693117 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.090488618 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.116564234 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078709838 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.096520802 seconds)
  done (took 12.159445976 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.124615453 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.148175647 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.090374021 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.135792742 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.121685786 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15220816 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.094508236 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.126447735 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.089969589 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.137378423 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.08880188 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.096515893 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.119626682 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.102923577 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15193694 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.097935374 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120580101 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.102921548 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.122428223 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.132959179 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137346888 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.106308807 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13590466 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.088558916 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.124253956 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105111281 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.154781087 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.102335179 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.131935001 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.107828842 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.132717474 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125727019 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.137420156 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.093101283 seconds)
  done (took 5.18095084 seconds)
done (took 47.015555188 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.214182431 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.418814341 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.191057233 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.093378448 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.249602793 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.23297804 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.208383546 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.192040271 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.293485422 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.194775606 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.445795582 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.793589378 seconds)
done (took 58.654668931 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.288867907 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.358732903 seconds)
    (2/2) benchmarking "String"...
    done (took 1.487960787 seconds)
  done (took 3.970193037 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.739728657 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.130738724 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.452109598 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.194842279 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.193040753 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.485081997 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.879741924 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.591970815 seconds)
  done (took 28.051842921 seconds)
done (took 42.175504293 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.200745017 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.225983432 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.229926867 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.17999134 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.309061904 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.217989769 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.545466502 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.244133106 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.217249363 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.185363007 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.218169838 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.192938816 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.227452839 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.521070061 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.203043599 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.192534979 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.243277157 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.69199729 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.599148109 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.202566508 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.214733074 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.219659123 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.230671048 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.209690724 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.216529549 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.196082586 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.192567311 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.211639754 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.727102 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.195836757 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.203386371 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.786529955 seconds)
  done (took 190.57672418 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.195424478 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.29937907 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.363284042 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.232057139 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.858108389 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.393262261 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.345544211 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.926731994 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.210169899 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.213258572 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.529240423 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.194790199 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.589611464 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.165755931 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.229906833 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.259273962 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.50763241 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.560825354 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.232044903 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.354384036 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.21590692 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.499824064 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.548317048 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.443614254 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.21213539 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.240359462 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.215016223 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.224255323 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.390418866 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.442957515 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.199311757 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.232539034 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.827059161 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.053718879 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.220550025 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.200479101 seconds)
  done (took 150.953134949 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.194992274 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.194529198 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196059754 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.229075097 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197164509 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.775321836 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781304109 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.730617765 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.597644947 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.201162255 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.611530643 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.459498989 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.195318856 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291694256 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.210787286 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199984403 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.212616268 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.224343477 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197334247 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196407694 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777565062 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.213979846 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.197729828 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.374155251 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.213686875 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231321257 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.596353876 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.24723578 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20442184 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231389175 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.529935592 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.245745604 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197134874 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.58911059 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.338420798 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314203265 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199889317 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230590288 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200423058 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.478805033 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197351708 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.19867659 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.202480656 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.856111511 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198144363 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.78392794 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20455466 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.148097524 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.198420713 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200353437 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.642510272 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.214435917 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.901210064 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.203990006 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.199936087 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.200722075 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.200457049 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200273894 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.234712412 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.883635548 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.307838584 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.200654979 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.203478865 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230267152 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.203328676 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.334390882 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199890273 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.518728979 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.262059068 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.42098556 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782883332 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20547634 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300748448 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320855534 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.199315073 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.203212561 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204431632 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.200735027 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.315770003 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.201166481 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.615339204 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.376375819 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.216542795 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.620867169 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303322866 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.200404171 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.650255704 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.206773068 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.203730198 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.968619688 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299458732 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199687139 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203839995 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199902179 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203457992 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.615575698 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78224152 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.487105683 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.20878858 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.19804134 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.210580006 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.627679592 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.762612446 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.906802055 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.207856828 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317627317 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.378303923 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.219413497 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.202405426 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.55399471 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.207851909 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.25977364 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206764968 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.601969333 seconds)
  done (took 366.952250871 seconds)
done (took 709.608251001 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.831998512 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.819742486 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.932404945 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.810035692 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.777241129 seconds)
  done (took 10.304476789 seconds)
done (took 11.438105951 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.394057092 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.391111659 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262885816 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.392111802 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23476104 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.411336285 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.371672028 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.223511732 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.311120705 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.283115367 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.303161526 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257449527 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236658118 seconds)
  done (took 18.206535386 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517749845 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.520705751 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266761312 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.531533893 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249442464 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520520242 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403297201 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425485031 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.406637927 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21914415 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217762604 seconds)
  done (took 16.414897815 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.52418894 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.523539976 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275385793 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522148583 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246808475 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.535119186 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.411589095 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.422108765 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41649007 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220998578 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221330847 seconds)
  done (took 16.456348497 seconds)
done (took 52.212078748 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.21994585 seconds)
  done (took 2.356408014 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.251675339 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.41990606 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.231911765 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.220179037 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.219818869 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.21695842 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.223717333 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220322679 seconds)
  done (took 11.141853766 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.212080157 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.214788897 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.217349621 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.218394102 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.218017027 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.215722866 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.214869095 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.214680348 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.218671684 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.21492937 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.215265373 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.218590862 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.217826486 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.216425015 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.218996828 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.218999756 seconds)
  done (took 20.603117266 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.217801967 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.214925167 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.215780676 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.217389606 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.217813005 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.218021066 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.217555096 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.217273594 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.217239711 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.218256164 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.217095318 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.218395792 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.218274114 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.216345511 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.218706864 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.217870612 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.217268282 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.21742805 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.222685517 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.218255974 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.219084708 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.217184313 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.217382416 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.219252537 seconds)
  done (took 30.367600096 seconds)
done (took 65.606062224 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.855086763 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.905559953 seconds)
  done (took 6.900924085 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.278359512 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.280698672 seconds)
  done (took 3.70095222 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.221467179 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.220953209 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223513223 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.220948345 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.219853733 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.222244661 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.222530843 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.222757099 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.220977469 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.223420407 seconds)
  done (took 13.358384672 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222569548 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.222238962 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.21921064 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.221202424 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.222055156 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.219731491 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.223457215 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.222998217 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222392006 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.220810462 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.222856194 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.219362068 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.221466093 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.221138813 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.222276387 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.221430123 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.219642702 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.220048465 seconds)
  done (took 23.126463737 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.23671007 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.244172935 seconds)
  done (took 3.623408566 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.350377961 seconds)
    (2/7) benchmarking "second"...
    done (took 1.262721058 seconds)
    (3/7) benchmarking "month"...
    done (took 1.331939015 seconds)
    (4/7) benchmarking "year"...
    done (took 1.318726844 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.26390527 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.241953863 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.261678521 seconds)
  done (took 10.173624858 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.223187388 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.409844037 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.511486557 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.865418217 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.223435913 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22664415 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.039123168 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.226693665 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.22861506 seconds)
  done (took 14.096889497 seconds)
done (took 76.120604948 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.249271215 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.212250707 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.53919182 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.229495774 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.232756001 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.512801361 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.233269174 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.340118567 seconds)
done (took 37.692620158 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.226271583 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.20758866 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.067787094 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.228048115 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.287979086 seconds)
  done (took 18.934445022 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.29312521 seconds)
    (2/2) benchmarking "read"...
    done (took 1.554564927 seconds)
  done (took 4.991223207 seconds)
done (took 31.295999483 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224666858 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.222492485 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.22437588 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.219644357 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.225037021 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.22260254 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.223939148 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.223442279 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.222836545 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.224642998 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.224223317 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.223901473 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.22300758 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223930687 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221675225 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222852351 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224962899 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223894995 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22484567 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225433548 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222668825 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224618242 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.22187987 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.222616468 seconds)
  done (took 30.508405797 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.226377909 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.225417101 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.226475813 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.226758797 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.223150006 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.225791989 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.224308471 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.224334531 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.2254417 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.227206844 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224226492 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.222970163 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.226227191 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.224340971 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226531093 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.2219934 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.227018129 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22367372 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225265569 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.22298353 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.227741415 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22431545 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.224535017 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228074615 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.223520535 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224577718 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.226396872 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.224231409 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226703105 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.224105285 seconds)
  done (took 37.899926616 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.231179607 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.239243185 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.226886591 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.226981984 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.229115005 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.227140506 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.226313251 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.227782595 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22638397 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.227257548 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.228091901 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.226295761 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.226472528 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.226888554 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.226234871 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.227922296 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.228689485 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.227931874 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.229833298 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.230189907 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.228869323 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.228873291 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.228311947 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.22924093 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.227959337 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.227773716 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.229341687 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.229790542 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.227952193 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.229504447 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.230157283 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.229739258 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.2298224 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.228677262 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229718562 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22928893 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.23395878 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.237482791 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.230621117 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.23127556 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.230622133 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.228364326 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.229232467 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.228693579 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.230083384 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.228048773 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.229607925 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.230066604 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.229808108 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.230577602 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.229640696 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.231577985 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.230012898 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.228838458 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.232222643 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.229515249 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.230654986 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.230251891 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.231071565 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.230908593 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.230028253 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.231338631 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.231187629 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.230088179 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.231849565 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.231256511 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.231559274 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.232284855 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.231142404 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.231298481 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.230509123 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.23072992 seconds)
  done (took 89.687110486 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230278848 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228446042 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.229576383 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228734799 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229706071 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.231829889 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.230207181 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231304587 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228863213 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.231677942 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231589043 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.229396765 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227618486 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.231309745 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231628329 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.229497071 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.232557768 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229337093 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.231356142 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232024817 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230197555 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.228238279 seconds)
  done (took 28.215891274 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23184202 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.233736268 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.229341229 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234011577 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229084707 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233444137 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.23120621 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234138757 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232015404 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230172678 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229716908 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233345901 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232836211 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230595762 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229710275 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233153998 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233367721 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231598419 seconds)
  done (took 23.324335678 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.230956806 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.230117998 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.232455362 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231402689 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.231819397 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233732559 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23216679 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234711264 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.233435497 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.233591229 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.234560129 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233698412 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.234426513 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231755211 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234136751 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231366554 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.2340912 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232575289 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234822343 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233019858 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232389208 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234260997 seconds)
  done (took 28.276921726 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234610963 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23431767 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.232830952 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23178298 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233166277 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.234728118 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.697363495 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.230178707 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.235864591 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.233904219 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23380163 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.236629346 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.23283552 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23311499 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.233240736 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233109019 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.23575621 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232728438 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235613892 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.232725499 seconds)
  done (took 26.292052779 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239786046 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237148608 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237760613 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237619203 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236418803 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.239132121 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239610728 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.239853331 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238750219 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.239228303 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238463468 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.236986487 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239102776 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240378002 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237782824 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238829568 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239847133 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239402754 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239113713 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238074848 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237090769 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23954601 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238230271 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237736213 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.239255993 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237763468 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240561103 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238833794 seconds)
  done (took 35.837548154 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239628224 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239176601 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.23758914 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.235792046 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.236018504 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.23631042 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.235649778 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.237701453 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.238133882 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.235421051 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.238949104 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.238371155 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239739109 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.238069553 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238201461 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.238611223 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23972645 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.237272235 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237379468 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237110962 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.240328024 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238406104 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.239487843 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23757192 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238212651 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.240740958 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236519427 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.23698941 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239359316 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236346305 seconds)
  done (took 38.295267339 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.284048926 seconds)
    (2/2) benchmarking "in"...
    done (took 1.27876906 seconds)
  done (took 3.72054645 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.236995347 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239169463 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.240047275 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.237411816 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.237588176 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238569988 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.239061654 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237732503 seconds)
  done (took 11.064024558 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.241741584 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.241411051 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.239683405 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.241204738 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244166992 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.240058196 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250659047 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.256956568 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.242477072 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.242719248 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.248941621 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.249794371 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.245444383 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242483884 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.241454367 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244126745 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.239341498 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.244052502 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.241382297 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239405933 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245223349 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241133222 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241778866 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.237566383 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.242710106 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.254593574 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.240946412 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.243610398 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243345013 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24500852 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240103485 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.240414282 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.245374443 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.242594364 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.239279747 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.246011102 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24841477 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259281773 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.250131756 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245198249 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241161299 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.239223575 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.242476415 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.241027277 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243846929 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.243177806 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.241948265 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.241453497 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.244753848 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.247449295 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.250107216 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244336542 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.242251418 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245292404 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.240009088 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248976998 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.263155245 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243132737 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.253187427 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.25633216 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.252996992 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.248711416 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245642611 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.245393784 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25379316 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.271250099 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251883612 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.258419999 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.243315152 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.247129301 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.252746265 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253649201 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.267276351 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247228336 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248482643 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.246260187 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245382663 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246957293 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253786667 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.263918441 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.248041852 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249314372 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256079246 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272278935 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.247283411 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.248811623 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.245534813 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.248339874 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.244513447 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257064441 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.264408245 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244601203 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.245221102 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245516071 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.247558121 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.250092882 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.244642638 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248090394 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.245287499 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.24790277 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249288334 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249559402 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.256420178 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249852431 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247545629 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.252105072 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.243954057 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246687321 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.253915608 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.24861439 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250827015 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.248407478 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.253616455 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.245892759 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251318032 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.256399969 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.25047257 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.248005238 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.251003595 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.246643525 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258817293 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.276360423 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.246334817 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.248304976 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.253296232 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.263507377 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249118089 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.251115492 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.246837862 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.24633602 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.246159746 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.249777754 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.246449637 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24935968 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252992073 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248117349 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.247167666 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.250254311 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.252157375 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.246790379 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.248476823 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.249888618 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.250349318 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.250127106 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251732024 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.247787172 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.252882272 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.24579297 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.250861049 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.250519862 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.248887426 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251102327 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.251823679 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.252108159 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.246677865 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25350755 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.247173252 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.25371191 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247724476 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.249144956 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249207652 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.249215462 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254362558 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.253659024 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.250302023 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.246556285 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.247316614 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.249865662 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.250445438 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.251144852 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.252514119 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.25084642 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.254305402 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.263091809 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.249573643 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.254328078 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.25212119 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25409204 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252059899 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252370677 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.251647784 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.260088059 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.254083787 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.257288502 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.250415522 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253274319 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.251461718 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.252589967 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.252468934 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256006259 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.253288505 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.261736842 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265623895 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27384131 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.253532255 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.257697504 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.253027198 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.259836346 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.252293101 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.251031533 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.250931939 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253916104 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250200279 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257045548 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.250762212 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.256866751 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.248729056 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.255159678 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.254731175 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.257420918 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252031181 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.253989981 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255263235 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.252558259 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254089828 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257629597 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.251333612 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251907043 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.254166333 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.254537047 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.255401466 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.257043732 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.257867419 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.248256988 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25454611 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252460216 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.250811775 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.25409425 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.254800243 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255729564 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.25146701 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262799415 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.27022226 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.255711427 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263244975 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.270247416 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.256186264 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.259019151 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.256536434 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.253827276 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.258326192 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.263702764 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.255784266 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.259100744 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.25488129 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252426677 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257742138 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.263153702 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.25130668 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.254332274 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.256309938 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255316911 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.25453498 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.255789589 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.255504221 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.255167461 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256120234 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254190263 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.257548412 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25717739 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.259465377 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.255428372 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.254179274 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256487719 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.26784746 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.259383769 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.253047626 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.258116086 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.256936752 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.26049429 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.256951894 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.258731277 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.253762501 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270940071 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.282498428 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261032047 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.25608885 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.259045471 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264183245 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.25562493 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.262546799 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25758474 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259163964 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.25876812 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.257927954 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.25522627 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258606272 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.260338913 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259982802 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.256381262 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.263888678 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.26019127 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.25832074 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.262281431 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.259353711 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.258833966 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.258703898 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.261718303 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.262646221 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262163497 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.25689507 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.260215836 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26643923 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274764991 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.261811242 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.259452089 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.26003508 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.25898712 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.261909233 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.263114282 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26075469 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272302503 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.261769677 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.270988152 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.262657524 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270883759 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.259722874 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.260722631 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.272211933 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.256051207 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260566761 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.260013366 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.262234687 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263255411 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.278157739 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.260840745 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.268564808 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262328765 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.262646726 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.257359616 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.263987387 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259786491 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.262954508 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266061207 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.280664438 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.263913077 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261951798 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.256564297 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.264096905 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.257928135 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.25875292 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264904882 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.261845609 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.259480926 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.260568043 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.261219109 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262148582 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.264697269 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262140519 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.260728579 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.262142254 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269563354 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.280174089 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269655651 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.260188398 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.270372326 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261569686 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266924119 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.282377282 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.26128252 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.266487649 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.262131459 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.264128485 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.262639598 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.266165677 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.266183992 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.263823224 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.268417072 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.266939029 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.26279388 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.263863899 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.26321299 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.261064217 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27493786 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293861225 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.263961503 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268088624 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.262227838 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.265467283 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.270876215 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.263869606 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.258524494 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.268236313 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275101002 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273196333 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.263038865 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.267014759 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261301031 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268433544 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.263743411 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.265059744 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.268087072 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.263931372 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.265052815 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.265795417 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265682597 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.262492618 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.262129596 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264627913 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.266275594 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.274804342 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.264492933 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.262742508 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26790767 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.26565428 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.263631587 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.265662664 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.268110903 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263468413 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267209406 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.266507683 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271717653 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.272653611 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.267814497 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.263270538 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.269341673 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.262226955 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.266264691 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267113642 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.265620901 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266657438 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.263736358 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.266502433 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.263479593 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.264838534 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26715018 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.266237324 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266103297 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269954617 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.27418037 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266057145 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.26470931 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.26526634 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267749719 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.265748231 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.266000246 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.273532028 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267081725 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.277938327 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.275594299 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.274581471 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.264523869 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271312065 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.275619177 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.26719308 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.268675685 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.270257435 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.266255024 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.268069013 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.2706573 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27107139 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.271652778 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.264832827 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267664522 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27626093 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.28858439 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268123297 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.266213798 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.271118203 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.267245568 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.26570474 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267599763 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.268171584 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27444531 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.28718063 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272083504 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270565447 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.266337391 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.269528568 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274789723 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267886833 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.270193403 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.266845357 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.266783184 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271595126 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267948032 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.266727912 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.268539813 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.26890696 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273129762 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.276224435 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.266832024 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27142856 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.266533512 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.270067647 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272813644 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267933912 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.267218582 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.267146956 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.268607771 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271099512 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.266621006 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.270679033 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.266625905 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.269649112 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272683563 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270789575 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271788624 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.280058553 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.27999196 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.268698596 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.269317629 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.271100262 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272897238 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271240033 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.271640496 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268117742 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.273343651 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271905038 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27535215 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.270074303 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.274372887 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288623617 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.2914969 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271398087 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.269144138 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273104052 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.270830012 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.266940155 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271061527 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.271217387 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.272867386 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.28206265 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.272583369 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276634475 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28934917 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.272907005 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.276703548 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.276255262 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279924664 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.275200891 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273551726 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.272874267 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.275079518 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.290001251 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270810842 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283628781 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305574777 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.28993393 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27275388 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.273713022 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26907673 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.27538003 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.271910769 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.276036115 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.272173074 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274356316 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.276431771 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.271495167 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277823777 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.272054698 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.273699315 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.274010408 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.272491215 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.275559064 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.272625567 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.277725984 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.272187814 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.278350438 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274922473 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.275524771 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.272877873 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286611521 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.299935073 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.273614383 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.277858271 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.270194884 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.277158512 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.275212957 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286679801 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.282679925 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.278525001 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.275525944 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.274667994 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275619523 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.273604573 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.275101635 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.275211347 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27538044 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.271781224 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28874379 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284205658 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.279281577 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.27321197 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278489519 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.274217109 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276573371 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278523463 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276586146 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.276271987 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.276956397 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281815077 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.274317423 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.277337223 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.279397275 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.285985649 seconds)
  done (took 752.791450602 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.2733097 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274888399 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275279793 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27561313 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274116427 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274411481 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275863707 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275398115 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27561244 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27480065 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275793342 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27665276 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276072735 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277283299 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275117521 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27583124 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273290155 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275182169 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274763529 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27697882 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275463127 seconds)
  done (took 27.974814441 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.276806564 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.276412212 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276406776 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278348093 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276039778 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279754483 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275811194 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279418766 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279598827 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277048381 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.279694753 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278301969 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.275786805 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.27608311 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276051155 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280025343 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279457003 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276081182 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.276970536 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.277310631 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278806223 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.278122052 seconds)
  done (took 29.302997358 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.280264839 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.280749259 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.277528676 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.278840271 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.281409906 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.279770808 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.284218584 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.278032758 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.281995294 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.282372593 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.279243724 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.281629173 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.288166338 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.286200654 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.283666472 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.280603244 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.426453708 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.28286416 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.282848928 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.281059082 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.276167268 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.284139194 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.276385694 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.278178368 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.278311045 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.282563035 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.279677979 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.280046605 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.284898463 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.279980887 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.287320473 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.280255791 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.279337091 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.284619294 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.279370948 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.283498682 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.285956448 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.285663329 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.277932314 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.281940464 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.291814391 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.307625486 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.286988038 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.285787348 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.280438675 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.283000863 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.286581139 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.293568986 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.278428351 seconds)
  done (took 64.19441992 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.28138746 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.283790913 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.280091884 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285308409 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.282901138 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.283385009 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.282583035 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282705573 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281923606 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.281346903 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.282491591 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.282340595 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.28200678 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.28491743 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.28571542 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28212823 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282337038 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282757706 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.282101222 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282201989 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.283170052 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.28579844 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.285364496 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.280446985 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285360554 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281450038 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282942302 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285142826 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.28348946 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.282186006 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.286149272 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284376361 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.285216642 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283322085 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280409133 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.285833978 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.282976243 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.283769837 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286454236 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.283572011 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.285685934 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286647568 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.286672982 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.285918409 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283915846 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.284595034 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283662529 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.283224876 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.283415895 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.285906665 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.286572652 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.283680641 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286119195 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.283738985 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286412854 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.287421311 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.284313525 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.283503749 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.28802465 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.285259647 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.284007988 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286498798 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.283958587 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287375935 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.287522684 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.285587015 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.286297797 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286041397 seconds)
  done (took 88.525071781 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287181675 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.288322651 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287905666 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287199237 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288512339 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.288279119 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288704761 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.288753568 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288319766 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.287969291 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289180732 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286728355 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.291653307 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286008937 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292428011 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287784346 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288342827 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288612696 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288024061 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288781598 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.288504244 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288907795 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.288727944 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288629529 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28909866 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289218827 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288901243 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289185326 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289226017 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289185995 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289428934 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.288852812 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289549683 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289350258 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.290084502 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.289854691 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290312812 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289800187 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.289883203 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.291022983 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290730498 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288415578 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290919226 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.290607231 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29008139 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290408718 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290104548 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.290800739 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287640283 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290935394 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.291420357 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29108405 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289873227 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291691205 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291121962 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.288683011 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291924591 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29154153 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291513823 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291475189 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29096395 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.288841852 seconds)
  done (took 81.152390594 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290055365 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.290471778 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.290143122 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.288395075 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290365527 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29165772 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.290875973 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290943593 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291546243 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.291983567 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293256133 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290492657 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292517296 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292164278 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.290069225 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291487947 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291848782 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290237454 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292048454 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.291777029 seconds)
  done (took 27.02935123 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.288784956 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29128995 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.288704233 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289835791 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.29144614 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290474288 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.292657577 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29188479 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291009842 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29285182 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292610127 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293842687 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290837886 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288510222 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.2931534 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291082804 seconds)
  done (took 21.867172318 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.289452973 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.290714564 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.295306661 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.293772121 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.288966395 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.290564782 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.294015503 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.291508503 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.288598461 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.29193917 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.292367046 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.29257348 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.29132006 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.294157358 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.290708525 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.293486776 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.293305933 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.291094088 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.295389081 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296174081 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.290524888 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.29163711 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.294983171 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.293107431 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.292079309 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.292311629 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.292827688 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.293258455 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.292119837 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.29588884 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.293206618 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.293556813 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.294323016 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.293803546 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.299484765 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.29100609 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.296625194 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.296085541 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.29693744 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.298213193 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.296833356 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.291451065 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.297607537 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.296993038 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.294751467 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.296920502 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.294626138 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.295400124 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.293720629 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293486469 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.297203227 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.299885802 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.294705207 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296914216 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.296326303 seconds)
  done (took 72.374201606 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294175726 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298586409 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.294638577 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297196759 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298006179 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.295721825 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297880707 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296980064 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29493544 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297854935 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29653894 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299530796 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293734315 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298170317 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298773559 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298317277 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295366166 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294982098 seconds)
  done (took 24.553224391 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.294029732 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.297043684 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.298403755 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.296421992 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.294607688 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29862995 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29508804 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.296266514 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297819853 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294879553 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296665816 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.299006483 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300029184 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.299183699 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.297770707 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296234627 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.298955203 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299691488 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.297516555 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295188228 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29924242 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29905751 seconds)
  done (took 29.75446498 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.296063702 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.297948042 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.29826557 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.315773112 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.320417254 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.321185525 seconds)
  done (took 9.062754761 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304945156 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300729445 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298002074 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300903998 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299073548 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298022305 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298476403 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299673463 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300305913 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298186927 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295729059 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300952766 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300756553 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300451431 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301173881 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302032457 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299306601 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297740963 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299522259 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300545776 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298888644 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301666985 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299417028 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299167693 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300027726 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298770293 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30205568 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299785906 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300931428 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301811447 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30195021 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299786016 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303241989 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299749686 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302979422 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303234286 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300826624 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303957106 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302526683 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30077885 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303523524 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303633134 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302767855 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298441152 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3031442 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300922469 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298717147 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300248389 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300570398 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303757654 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304772425 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301633111 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303176602 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303466862 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304635563 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305265179 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304982312 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303392871 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303971781 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302951209 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30166807 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304944364 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303657281 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301912244 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304235345 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303063654 seconds)
  done (took 87.133771459 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301012345 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301848664 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301979125 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302448404 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30376452 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301435829 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303601453 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302920132 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303389668 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301646341 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303865373 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302688773 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304650551 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304573631 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305236236 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302708801 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303217595 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303804567 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303576609 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306294025 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303959001 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303719363 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304023074 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304306223 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304179601 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306482147 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306165727 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303852533 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304176587 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304659248 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304838541 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304512773 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304449438 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303701646 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305060914 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30467157 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30454232 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304731414 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303531758 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306343965 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305132097 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30800144 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306352441 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306161526 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30631116 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304454857 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305305827 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307770818 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307449955 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307128925 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306092669 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306121421 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305979667 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305964634 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302369481 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303828587 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30686208 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306667617 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306372742 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308113809 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306608288 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307185736 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309962612 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30613176 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307467797 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307178619 seconds)
  done (took 87.343415553 seconds)
done (took 1757.326411532 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.472024718 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.424063331 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.307305789 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.307485621 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.305288931 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.320579393 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.301213486 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304484557 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.306145013 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.305573393 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.305125836 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.492747254 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.309665246 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.306190042 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.305474288 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.401119394 seconds)
  done (took 42.697362906 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.337015362 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.310981035 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.434447231 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.328543225 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.334837271 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.508574178 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.373545564 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.316554979 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.493439209 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.354527757 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.976418815 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.334260515 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.310621577 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.496235027 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.329558847 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.514006889 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.577061582 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.984950629 seconds)
  done (took 30.538879175 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.796648421 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.302911253 seconds)
  done (took 9.324991697 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.330949182 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.31302741 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.313130835 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.310893412 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.301309788 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.301857063 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.308194487 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.309390335 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.264027352 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.453958256 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.317699713 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.318403638 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.331179187 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.312180546 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.307898694 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.350885668 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.467251987 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.310082238 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.309611819 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.318786413 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.310989608 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404699671 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.354808039 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.31439303 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.448485306 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.27377139 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.320976778 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.318027926 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.449089998 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.310629777 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.311921661 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.310048059 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.312744438 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.933702233 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.76092443 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.32426792 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.354165568 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.319830338 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.310226822 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.474147018 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.313358583 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.318334015 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.305018686 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.754939404 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.465754509 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.435030978 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.635883551 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.313584784 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.315911246 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.376907816 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.31390279 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.314132378 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.343694388 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.110866493 seconds)
  done (took 111.020724686 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.338155588 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.698740738 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474916483 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.329926567 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.023785317 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.039620654 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.323654075 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.617921926 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.360560551 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307451939 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.643804012 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.846982633 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.335858142 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.308486753 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.497545337 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.307604699 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311396086 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.185830851 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.327890042 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.31321019 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819754291 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308392849 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.308763149 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.466053918 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.346960407 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.786491901 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.787186356 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.709043249 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.331050772 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.307569831 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.801949205 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.334075814 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.36661873 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.308265416 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.580930224 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.691529396 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66815535 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.310868876 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.34342253 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.313382375 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.326056639 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.7815967 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.673569113 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.310196733 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.308883539 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.787491177 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.307799672 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.316543227 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.31614382 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522994091 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.007116901 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.315093453 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.838368891 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.316144815 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.700840039 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.341895485 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.381865658 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.815827929 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309793212 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.431734243 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.335015581 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309849687 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.312886521 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.309028939 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.311452591 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.679145616 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.431296017 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.311751062 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.678221056 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.796429744 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.331655364 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.874895497 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.254209047 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.333111475 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.407902164 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.310392004 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.005123075 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.834550172 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.323691832 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310563816 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.667567032 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313647179 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.642839366 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.327665597 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.329889849 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832313436 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.316044884 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.352510286 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.311690115 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.311850846 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.044314328 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313526689 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.602257405 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.371319059 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.311167513 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.311260432 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.343253675 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.311740948 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.311522563 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.317275395 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.875262514 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.340849014 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.297870961 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330419176 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312863118 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.312672355 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.312497646 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312920485 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.540699256 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.738541519 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.316274029 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313151246 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.313093304 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.320011664 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.494610174 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.312650043 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.641805128 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.313951144 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313085624 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.312675036 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.055636599 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.36110436 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313335806 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.332206368 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.221460715 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.522865065 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.338071348 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.314227039 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314656444 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313454645 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.634765748 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.335109166 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.332440891 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.31787851 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.05396564 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.373688147 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.331830242 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.661523974 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.317678749 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.31452776 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.341077547 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315233912 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608530652 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.593741083 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.359820654 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.325925031 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.314996758 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.034490352 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.379334591 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453314323 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.336043199 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.375176805 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514417032 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.678602102 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.31604607 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.940949402 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.317586218 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.540988316 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316089767 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623007573 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.840604106 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.340154828 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32065908 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.049076614 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.030762318 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.954274066 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.318760395 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.652967429 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.289197127 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.796421472 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.31705628 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.317998157 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.880918498 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.318891558 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.325091569 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.317994725 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.31758387 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.376820571 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.495322775 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.933526261 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.325066505 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.790892457 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.349180109 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317553726 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324724192 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.318022305 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.670423874 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.318504736 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.319380293 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.31785093 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.316918111 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.321836411 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812939382 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.247376289 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.319044558 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469807485 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989757194 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.343606817 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.317722358 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.9467443 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.920873078 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.85365208 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.319132519 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.65095768 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.323048433 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.358767932 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.98416519 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.406097277 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.81342353 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.319679676 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.319548098 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953113886 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.34360388 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.6782669 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.318269816 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.319133377 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.904919813 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.343838147 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.3234832 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.644765553 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338621996 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.579266004 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.320447206 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.369992363 seconds)
  done (took 1108.445997904 seconds)
done (took 1303.249878241 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.319135067 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.326693355 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.308413067 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.327213118 seconds)
  done (took 26.522492406 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.329079465 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.326385919 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.330944892 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.327119342 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.329390507 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.326173873 seconds)
  done (took 9.21040791 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.420911338 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.327983122 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.321788143 seconds)
  done (took 19.312235264 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.546420731 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.68751802 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.686037935 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.672935031 seconds)
  done (took 10.836487981 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.331348747 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.332160471 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.330987489 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.329501489 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.331538401 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.333084362 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.329923135 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.331010231 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332332231 seconds)
  done (took 13.223478164 seconds)
done (took 80.346696873 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.386110343 seconds)
    (2/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.140524468 seconds)
    (3/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.310497664 seconds)
    (4/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.477481726 seconds)
    (5/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.18162042 seconds)
    (6/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.41346479 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.322625792 seconds)
    (8/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.326181508 seconds)
    (9/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.428148507 seconds)
    (10/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.152640043 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.602902451 seconds)
    (12/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.349715324 seconds)
    (13/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.312800468 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.36469191 seconds)
    (15/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.347889763 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.096122608 seconds)
    (17/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.589159673 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.367073288 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.68830557 seconds)
    (20/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.327996034 seconds)
    (21/286) benchmarking ("sort", BigInt, false)...
    done (took 6.360368927 seconds)
    (22/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.843632289 seconds)
    (23/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.330246568 seconds)
    (24/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.753197457 seconds)
    (25/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.307433085 seconds)
    (26/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.426710452 seconds)
    (27/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.333477525 seconds)
    (28/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.719638532 seconds)
    (29/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.333012134 seconds)
    (30/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.388722152 seconds)
    (31/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.462898221 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.038150407 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.324236318 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.432885527 seconds)
    (35/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.234495318 seconds)
    (36/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.990467304 seconds)
    (37/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.023626512 seconds)
    (38/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.38379708 seconds)
    (39/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.350798525 seconds)
    (40/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.311874918 seconds)
    (41/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.747631431 seconds)
    (42/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.413038178 seconds)
    (43/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.387631192 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.304724966 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.247357297 seconds)
    (46/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.43028396 seconds)
    (47/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.312400588 seconds)
    (48/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.334134511 seconds)
    (49/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.448298867 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.436175939 seconds)
    (51/286) benchmarking ("sort", Float64, true)...
    done (took 6.324774539 seconds)
    (52/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.343085179 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.626583062 seconds)
    (54/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.988593381 seconds)
    (55/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.315538726 seconds)
    (56/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.779906201 seconds)
    (57/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.874199503 seconds)
    (58/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.737590424 seconds)
    (59/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.328552608 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.316392634 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.389388237 seconds)
    (62/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.346585966 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.382413002 seconds)
    (64/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.317976142 seconds)
    (65/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.316405584 seconds)
    (66/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.374140263 seconds)
    (67/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.607377811 seconds)
    (68/286) benchmarking ("sort", BigInt, true)...
    done (took 6.332422523 seconds)
    (69/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.002634241 seconds)
    (70/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.270262472 seconds)
    (71/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.997462667 seconds)
    (72/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.343472829 seconds)
    (73/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.748565466 seconds)
    (74/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.610372088 seconds)
    (75/286) benchmarking ("sort", Int64, false)...
    done (took 5.568651263 seconds)
    (76/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.09472652 seconds)
    (77/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.330664218 seconds)
    (78/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.324403291 seconds)
    (79/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.329091975 seconds)
    (80/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.200728511 seconds)
    (81/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.431987676 seconds)
    (82/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.470956157 seconds)
    (83/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.904615967 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.033186511 seconds)
    (85/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.359747026 seconds)
    (86/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.220044371 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.963645957 seconds)
    (88/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.820302748 seconds)
    (89/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.337118551 seconds)
    (90/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.379246057 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.750367364 seconds)
    (92/286) benchmarking ("sort", Float32, false)...
    done (took 5.409620727 seconds)
    (93/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.327067198 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.020339451 seconds)
    (95/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.460282807 seconds)
    (96/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.540183513 seconds)
    (97/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.321991143 seconds)
    (98/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.413998202 seconds)
    (99/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.832875115 seconds)
    (100/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.029622904 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.761615296 seconds)
    (102/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.372376205 seconds)
    (103/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.391837145 seconds)
    (104/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.415943362 seconds)
    (105/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.331310905 seconds)
    (106/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.002052386 seconds)
    (107/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.532163817 seconds)
    (108/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.335286451 seconds)
    (109/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.353536942 seconds)
    (110/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.317670039 seconds)
    (111/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.197969207 seconds)
    (112/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.335281573 seconds)
    (113/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.352633735 seconds)
    (114/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.439707898 seconds)
    (115/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.601745818 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.85067332 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.353771017 seconds)
    (118/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.476588059 seconds)
    (119/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.601048278 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.611999314 seconds)
    (121/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.318590645 seconds)
    (122/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.59174196 seconds)
    (123/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.419729063 seconds)
    (124/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.323672681 seconds)
    (125/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.32050551 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.204850359 seconds)
    (127/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.591264123 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.694607955 seconds)
    (129/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.369373482 seconds)
    (130/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.377071032 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.439508306 seconds)
    (132/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.838954508 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.834576062 seconds)
    (134/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.749551466 seconds)
    (135/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.32546181 seconds)
    (136/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.366001482 seconds)
    (137/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.415697644 seconds)
    (138/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.318390742 seconds)
    (139/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.661847846 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.163381874 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.357647737 seconds)
    (142/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.437482247 seconds)
    (143/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.911869562 seconds)
    (144/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.878528525 seconds)
    (145/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.348307151 seconds)
    (146/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.319181813 seconds)
    (147/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.277263136 seconds)
    (148/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.352155049 seconds)
    (149/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.319827729 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.354732104 seconds)
    (151/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.356740664 seconds)
    (152/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.332815759 seconds)
    (153/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.358897676 seconds)
    (154/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.347140132 seconds)
    (155/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.158441391 seconds)
    (156/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.320398193 seconds)
    (157/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.334716265 seconds)
    (158/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.892619612 seconds)
    (159/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.859305631 seconds)
    (160/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.560149476 seconds)
    (161/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.32147214 seconds)
    (162/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.193068564 seconds)
    (163/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.344114576 seconds)
    (164/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.359899852 seconds)
    (165/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.075388318 seconds)
    (166/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.339634327 seconds)
    (167/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.272081693 seconds)
    (168/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.623850503 seconds)
    (169/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.441815156 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.358881166 seconds)
    (171/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.321059012 seconds)
    (172/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.460602741 seconds)
    (173/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.333111531 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.375870153 seconds)
    (175/286) benchmarking ("sort", Float64, false)...
    done (took 5.686163177 seconds)
    (176/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.3318501 seconds)
    (177/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.3394831 seconds)
    (178/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.378343601 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.749677289 seconds)
    (180/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.661219054 seconds)
    (181/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.748582347 seconds)
    (182/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.321440996 seconds)
    (183/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.81308639 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 5.373294708 seconds)
    (185/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.346655466 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.392169216 seconds)
    (187/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.530105921 seconds)
    (188/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.016652659 seconds)
    (189/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.438988042 seconds)
    (190/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.94043167 seconds)
    (191/286) benchmarking ("sort", Int8, true)...
    done (took 6.354141294 seconds)
    (192/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.964860109 seconds)
    (193/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.33413267 seconds)
    (194/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.129599756 seconds)
    (195/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.378099455 seconds)
    (196/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.362901605 seconds)
    (197/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.321744706 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.376726688 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.546075616 seconds)
    (200/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.334040128 seconds)
    (201/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.477749412 seconds)
    (202/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.336726068 seconds)
    (203/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.554343817 seconds)
    (204/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.381216605 seconds)
    (205/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.56313865 seconds)
    (206/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.816508442 seconds)
    (207/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.531892212 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.358258118 seconds)
    (209/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.26956585 seconds)
    (210/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.323047463 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.401510934 seconds)
    (212/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.91013547 seconds)
    (213/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.370125049 seconds)
    (214/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.344071495 seconds)
    (215/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.183441985 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.367091927 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.130874042 seconds)
    (218/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.384931337 seconds)
    (219/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.929294072 seconds)
    (220/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.324634842 seconds)
    (221/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.342207897 seconds)
    (222/286) benchmarking ("sort", Float32, true)...
    done (took 6.348929474 seconds)
    (223/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.36367072 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.336055118 seconds)
    (225/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.795072501 seconds)
    (226/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.337536265 seconds)
    (227/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.023308681 seconds)
    (228/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.737446505 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.281315648 seconds)
    (230/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.325122103 seconds)
    (231/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.438532455 seconds)
    (232/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.364735227 seconds)
    (233/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.36375897 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.561734552 seconds)
    (235/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.821027967 seconds)
    (236/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.316286435 seconds)
    (237/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.330104368 seconds)
    (238/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.437724994 seconds)
    (239/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.324732048 seconds)
    (240/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.363799791 seconds)
    (241/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.347150551 seconds)
    (242/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.421815486 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.363836215 seconds)
    (244/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.364014515 seconds)
    (245/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.424197501 seconds)
    (246/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.362962283 seconds)
    (247/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.170044711 seconds)
    (248/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.037411434 seconds)
    (249/286) benchmarking ("sort", Int8, false)...
    done (took 4.372045804 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.716801023 seconds)
    (251/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.8821841 seconds)
    (252/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.444083462 seconds)
    (253/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.438435363 seconds)
    (254/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.422707525 seconds)
    (255/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.125463172 seconds)
    (256/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.380525654 seconds)
    (257/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.35341021 seconds)
    (258/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.329907488 seconds)
    (259/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.334299681 seconds)
    (260/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.131832634 seconds)
    (261/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.403642894 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.422342707 seconds)
    (263/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.339516608 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.423175215 seconds)
    (265/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.344779188 seconds)
    (266/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.253005477 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.456088882 seconds)
    (268/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.87410682 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.177576225 seconds)
    (270/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.205646263 seconds)
    (271/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.873199075 seconds)
    (272/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.340147435 seconds)
    (273/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.105711818 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.408214377 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.766855552 seconds)
    (276/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.469264587 seconds)
    (277/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.027140477 seconds)
    (278/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.74747168 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.332474395 seconds)
    (280/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.328658676 seconds)
    (281/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.653535012 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.370382102 seconds)
    (283/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.908112568 seconds)
    (284/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.367150577 seconds)
    (285/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.329302771 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.089200623 seconds)
  done (took 950.057517869 seconds)
done (took 951.302486731 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.373427083 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369395905 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.350182358 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.373096897 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.462720138 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.534246899 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.36093072 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.353963411 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.398106745 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.40112811 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.350916789 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.533741123 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.353782698 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.350815051 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.351134059 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366670193 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.469513801 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.351915097 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.368944895 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.36085723 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.369048703 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.350523245 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.401147102 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.534146423 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.355796299 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.355689278 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.355107433 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.371616523 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.46486297 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.355707221 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.355545498 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.365119226 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.472154023 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.351813455 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.347232749 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.372766398 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.363954795 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.363525824 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.35821661 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.386319649 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.912431398 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.353419393 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.355289327 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.354905871 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.354250188 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.359440818 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.355697398 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.360591403 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367981833 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369412699 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.903054201 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.370132774 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.35646277 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.354862857 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.365398774 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.354588457 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.358346548 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372609209 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.373819177 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37243405 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.464555971 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.359177916 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.355978015 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.3747606 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.362806052 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.941689577 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.350424524 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.358344765 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.91874422 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.362168095 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.945553996 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.363810178 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.357653149 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.369323307 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.386896276 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.479510969 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.350477333 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.355027527 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.363902032 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.354531496 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.366669942 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369520916 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.360709324 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.356838243 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371801209 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.539628373 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.366528396 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.358516687 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.367004816 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.376122341 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.36430636 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.368259193 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.360526624 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.353647543 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.367864848 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.361250196 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.361020462 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.360900482 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.363333354 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.36815934 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.918485263 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37688261 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.355336812 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.355224644 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.35787877 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.371928277 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.918674162 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.358881864 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.379832112 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.40448785 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.360058899 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.513777646 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.370164855 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376712265 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.366898383 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.362137176 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.354349146 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.475892188 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.912184703 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.374233717 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.359311438 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.357372893 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376875755 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.360942922 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.355616282 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.486902799 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.360313312 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374653262 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.479446477 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.369308275 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.390112149 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.357199184 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.362326341 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.396226543 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377720468 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.391532207 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.363026214 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376883395 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.376147051 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.355132742 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.371268241 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.371061259 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.361595566 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.366358905 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.353841115 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.397756186 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374330237 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374946546 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.380861711 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.481256775 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.357130096 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.4790016 seconds)
done (took 231.277894237 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.419807524 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.354959801 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.450244798 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.359027318 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.460965357 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.46181751 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.356536926 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.355861696 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.356116888 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.737601293 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.356535563 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.355668347 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.353111075 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.355675983 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.441419369 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.359219129 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.35610941 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.700527129 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.361302672 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.4286686 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.3576489 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.356573154 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.359229576 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.738764558 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.354405093 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.360593159 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.429350563 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.359914976 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.704747982 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.360001986 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.361107811 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.70258495 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.448917408 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.37739136 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.370045577 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.367432952 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.463168223 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.380127195 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.44138441 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.44107207 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.452152169 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.400689429 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.361202873 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.353143504 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.361596198 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.364507178 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.358506599 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.387188639 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.360226564 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.35844148 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.70169334 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.371105032 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.367686245 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.35971475 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.360183473 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.384647675 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.360015222 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.366328093 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.451864228 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.366010195 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.42297933 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.74141235 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.740869206 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.361129568 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.355665167 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.360239825 seconds)
  done (took 150.21689687 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.428749948 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.433277291 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.479306202 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.362335454 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.411173203 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.483469472 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.362645507 seconds)
  done (took 11.233501689 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.367986327 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.362662822 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.412100265 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.410852587 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.364689847 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.541321384 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363236888 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.373650963 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.360251037 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.41514121 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.364022052 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364517672 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.370317768 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.362790848 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.410391651 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.374013006 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.477837732 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.36288337 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.368751622 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.519905395 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362044452 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.370132779 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.415549871 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.375302047 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.365265098 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.369699342 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.202619254 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367401143 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361348669 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.364111547 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362699604 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.439317328 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.365374354 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.361041335 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362802612 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.481627164 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.366440556 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363001981 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.366049649 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.36069063 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.365047503 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.366660631 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.365226938 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.36290421 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.366187481 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.387940595 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.364803702 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.365493611 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.364751045 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.366472965 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.41555875 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.365869216 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.363421806 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.363125817 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.421135229 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.372675403 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.368958609 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.36235932 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.366907887 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362337363 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.522777878 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.412251323 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.365661894 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.413757891 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366588874 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.366975856 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.366407478 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.366718217 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.420453629 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.366413578 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.414541556 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.36457388 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.552506193 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.388567647 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.369336374 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.368951254 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.369734427 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369252585 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.361636745 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.37174402 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.365540352 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.367550326 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.372612701 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365391012 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364431307 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.533894532 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.475818882 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.365609301 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.3807407 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.373105585 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.366492189 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.419912468 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.367470567 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.366164389 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.419089934 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.482859223 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.420930858 seconds)
  done (took 156.751141505 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.373067526 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.375072107 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.370530277 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.391236582 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.369349792 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.36676085 seconds)
  done (took 9.525590313 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.3698075 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.369713557 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.370013252 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.368963232 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.372048693 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.369735236 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.371856226 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370086532 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.375678434 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.369076134 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.37026544 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.381005769 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.37189308 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.373752662 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.373486674 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.36922429 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.372768888 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368003613 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.370454263 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372325047 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.464601311 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.3728026 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374214282 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.371336302 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.374455546 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.371070292 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378086413 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.370199396 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.371850755 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.377127071 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.376567413 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.371915438 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.371423447 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.377760912 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.377656827 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.371802679 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375622928 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.382418992 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.36935037 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.373166014 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.381924269 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374726318 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.371772121 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383821964 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.374260674 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.376912514 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.387031744 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.379630299 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.375422138 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.383348922 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.383208081 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.374269508 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.372863536 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.383629902 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.374928663 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39513374 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.386898737 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.376475686 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376994807 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.374311739 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.376167718 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.373809378 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.376189838 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.381422752 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.380716341 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.384882012 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.375251728 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380782596 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37623459 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.374022022 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.385412236 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.371755749 seconds)
  done (took 101.409744959 seconds)
done (took 430.407917281 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.420153573 seconds)
  done (took 7.705017384 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.55150516 seconds)
  done (took 7.838522698 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.638035171 seconds)
  done (took 24.930943168 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.467707504 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.385418573 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.377769945 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.374627965 seconds)
  done (took 26.892279617 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.558515453 seconds)
  done (took 7.843591984 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.378543108 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.368321227 seconds)
  done (took 14.034743696 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.558762525 seconds)
  done (took 7.845858667 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.442994257 seconds)
  done (took 7.73562325 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.375479601 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.385277992 seconds)
  done (took 14.060910364 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.366373577 seconds)
  done (took 7.652898529 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.944084091 seconds)
  done (took 13.231375645 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.371375619 seconds)
  done (took 7.66087266 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.438721761 seconds)
  done (took 7.723683064 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.309774295 seconds)
  done (took 10.596112789 seconds)
done (took 167.038675808 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.368892595 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.375092311 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.37600951 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.377251016 seconds)
  done (took 26.782905631 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.40987944 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.40979544 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.411770969 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.420367008 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.4132123 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.410416877 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.402904685 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.402005213 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.420976182 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.412486988 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.413203368 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41197231 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.409250137 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.403143501 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.412773728 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.411862302 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.421307802 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.412499108 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.40235874 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.413824033 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.378315779 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.422405783 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.414141555 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.3775382 seconds)
  done (took 35.105916685 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.90269703 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.447889527 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.530264953 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.429125675 seconds)
  done (took 7.598076966 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.429437803 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.431191855 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.447930875 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.4855913 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.508579193 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.440281879 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.405554135 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.399892153 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.385917408 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.432741456 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.506587416 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.447306761 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.518079722 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.377986978 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.586431228 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.379738341 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.378974446 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.431336465 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.482345337 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.506495476 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.378614643 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.429663201 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.438426821 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.448326935 seconds)
  done (took 35.965560756 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.378626089 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.398768629 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.378482619 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.377687951 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.387514872 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.377807924 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.378995852 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.379348814 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.379405067 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.384472949 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.378009921 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.390436657 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.378359988 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.379660322 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.385526656 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.379824517 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.385079701 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.378168013 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.379901316 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.386365515 seconds)
  done (took 28.93293446 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.3733228 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.297409962 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.725402008 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.633841026 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.373183497 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.380822251 seconds)
  done (took 29.074879445 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.458620414 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.609223201 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.381224777 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.78212354 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.855623522 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.381476702 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.380794043 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.653685672 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.014979586 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.002560836 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.453508992 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.464968684 seconds)
  done (took 20.730859684 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.384328506 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.38247463 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.391039472 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.397382148 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.442759709 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.391699873 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.386633399 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.377659453 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.44174895 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.448239614 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.385730013 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.443750794 seconds)
  done (took 38.167133659 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462421045 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.42937193 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.47376297 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416220381 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.130510805 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587407902 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.389759576 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.20471285 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.388557174 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650067475 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376004226 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492699862 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633167331 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387756164 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384734249 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.484648779 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611617544 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890413667 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379052689 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.900581816 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410547769 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37768749 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.92699226 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648889166 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598818338 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.360798827 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.639593793 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.153251191 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696751415 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39273286 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388781413 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379884783 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65254237 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094966049 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482600694 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619994365 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391652318 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.944060882 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.377285413 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.897039408 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399264817 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389521035 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390525818 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378881055 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312554687 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38721486 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198010888 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.392558003 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.090168196 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380178705 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671786682 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477298922 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.382499326 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.954412776 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399514641 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.394884319 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.384064121 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479224638 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956550751 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.388938813 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391875671 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.323965714 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382903303 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.904472946 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049390893 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.38609206 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.384292702 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384178738 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315765262 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.905728465 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405832599 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519207895 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.405785135 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042554285 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137656928 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.382725202 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321979333 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95597593 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391544152 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.322416326 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610901727 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.158816485 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322469407 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.333348019 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316502151 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154691583 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397792036 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.9042905 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412406949 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.185630653 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.634507553 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410325309 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40717552 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.608016478 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.269155246 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382233691 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.396702504 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506704008 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404227359 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.182562971 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325757243 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.387804136 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640716858 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.595541552 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383293986 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.504343337 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945344622 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399278691 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.406484783 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.394933272 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636244032 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.02527318 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399575197 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396203799 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409235206 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.160062025 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195385122 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402645936 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.396932479 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.403111539 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659776268 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.241439521 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.276746474 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453076384 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393622742 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386597707 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.925137558 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24333046 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.286149879 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.621769417 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431379509 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.403481971 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.388485192 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344056934 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.381852721 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395724941 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.17357214 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609888413 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394386837 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66820677 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320445459 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523991616 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402742589 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.609404475 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.682543589 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.390525354 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645103292 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392370569 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394995755 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425563893 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405156913 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485503214 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407722744 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.386412764 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.670664964 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.390857773 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.390063663 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.93038788 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.173050044 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39005989 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.392121869 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401265931 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040916521 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367412471 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39004387 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281865226 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.402065104 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455538837 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392862519 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633290106 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.450902317 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402328062 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.393031238 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.395426274 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612594041 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398429498 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.862165514 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475759137 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.94141227 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044752431 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409245535 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.323538114 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.100321693 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.081861365 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388999309 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.577885372 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38985695 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633117079 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41233165 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38892774 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030540896 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391852668 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.865614067 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.403321877 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401548115 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.394456061 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391176985 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.403423858 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.409779331 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414710404 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.408440756 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533798313 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.404465797 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325578654 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.907108189 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396074527 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391798193 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.166103369 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424869824 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.86245521 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356199148 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657140552 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398468068 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684474713 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.049466274 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.43434239 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.394254161 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392002857 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401511335 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.408306496 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419326709 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.403072537 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.923644269 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.84829577 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956688386 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178962979 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967263238 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.868591105 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.40056089 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.312407892 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210433098 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333737178 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.05209045 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604754241 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204678126 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358171021 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953230203 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.703230185 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240642814 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.687721828 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622201145 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.870424941 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.405633962 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696703933 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605292865 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427432689 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.395974736 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.330036915 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.682513831 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043667473 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415767054 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479930449 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212589893 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406553739 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.180427907 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.435615544 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.258170416 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868904706 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.946331749 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.789128914 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399041961 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409973769 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365705341 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40603476 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.920528489 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062118094 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409835767 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.955352804 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341862262 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.641342779 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.413751101 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.399467807 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.909570662 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.391371959 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.650411813 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690217991 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33073627 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395511948 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980721203 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.254349051 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.399600902 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395528113 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207721694 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404855821 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730405876 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.405733958 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.406114302 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400043875 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.329335225 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33023631 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.08931011 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40071511 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36605585 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930142534 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.417634979 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415166768 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410946115 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24434505 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652615845 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.409973632 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045330455 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63067876 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395586854 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420058331 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.400381785 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399720682 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.395424871 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.292765846 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.632403052 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43875947 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.629697899 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.517740657 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.31459425 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.406258741 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618733504 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.280055167 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39885781 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684989131 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.116497006 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.409475187 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164398428 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42398333 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397222028 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424730946 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413658212 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418684325 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46857448 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644466261 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.41945359 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.408879064 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868713706 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42058924 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409382459 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.412662695 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494751864 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.462626534 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.416113981 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.172617152 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047700661 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197980038 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.055239224 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696008676 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401535744 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405309796 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334168849 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548750957 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.925050366 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673471771 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521533471 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.402090012 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424232945 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400690296 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410242515 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621443739 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674887962 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.269767551 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399928949 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.07148742 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.558713991 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410689365 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.611976114 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936022034 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990164722 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51574366 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409332407 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.21026067 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683171089 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.492408792 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402077766 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.995666758 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.424517588 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.268216849 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.415658709 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409774116 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55849643 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698136846 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16393438 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.419777671 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.557779998 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.174887171 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.99664805 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.667327679 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.927337358 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.653413731 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055455711 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.17461764 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667399624 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472972416 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652416888 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.526147499 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550756772 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.417022503 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.284922767 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40454152 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251441234 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.112954602 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.413361341 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05123594 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669064256 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.40805186 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.401786209 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42750407 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.413833224 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628723091 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1923355 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638756411 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415633988 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409807043 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.977364773 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052402701 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702270103 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340676097 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.407642676 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690176752 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.649932598 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430599555 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.856584511 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.115541784 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990202512 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.380456926 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426677204 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413337807 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.183409795 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052232856 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.424038208 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947532007 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.075820936 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421223174 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679125509 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.41174702 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411233267 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690159839 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.409163364 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405780395 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664803909 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.075907656 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272099054 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.410138641 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.016529314 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.351525674 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.634599511 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.481010924 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351648832 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41626219 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.898727787 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.436637003 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526639405 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419627717 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.404524871 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418746341 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.169899303 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699378626 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.414008938 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.415532859 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.403959042 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419001226 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511310678 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073672803 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423495459 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.080630623 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.763971703 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663996137 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.407691712 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.404866383 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.411485553 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410168041 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133456557 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385604545 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.424970291 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997023038 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.41671197 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.428258773 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412282972 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.625586914 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620316986 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411031369 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669213798 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420284531 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431969569 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.318741502 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.182464519 seconds)
  done (took 1682.785274265 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.439892423 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.466425428 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.429137287 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.496562489 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.475566349 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.515641859 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.515405297 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.520676829 seconds)
  done (took 53.184190331 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.410485032 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.567779426 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.444676828 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.426006393 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.420997497 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.40977452 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.917820681 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.417708701 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.420228715 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.420768635 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.423184891 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.416592831 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.145704094 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.421134748 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.412680125 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.403108479 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.417904835 seconds)
  done (took 66.828226624 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.956886767 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.471054206 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.84885267 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.468494464 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.462844747 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.423106224 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.974179812 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.446039412 seconds)
  done (took 55.37754994 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.421950656 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.421724623 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.422136104 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.421504918 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.423457438 seconds)
  done (took 8.43667747 seconds)
done (took 2090.259355764 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.415804932 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.418685129 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.416733882 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.419407203 seconds)
  done (took 6.995877062 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.401136475 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.15984143 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.409959635 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.425972019 seconds)
  done (took 18.72242634 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.417413027 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.432187242 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.230376503 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.128224146 seconds)
  done (took 5.686530488 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.163983144 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.174330247 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.158087882 seconds)
  done (took 7.822531525 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.411464146 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.418754623 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.419515415 seconds)
  done (took 20.574822067 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.722496988 seconds)
  done (took 3.04895394 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.558799249 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.625859395 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.758595554 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.76109053 seconds)
  done (took 8.030443343 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.808962266 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.779767953 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.59495049 seconds)
  done (took 6.5087657 seconds)
done (took 91.566985486 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.646044998 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.433569493 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.608625542 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.618352589 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.644503602 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.610589629 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.021487371 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.587589597 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.126858611 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.115282534 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.621101589 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.645432956 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.762560043 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.434068579 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.762623583 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.432642439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.816949024 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.68970447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.347318422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.426602488 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.021290745 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.258618824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.451445393 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.274793289 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.836569073 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.571007938 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.836667856 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.434711519 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.427600009 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.854318751 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.571035549 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.413577436 seconds)
  done (took 199.63018876 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.412701925 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.413189721 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.413641941 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.412593184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.431927604 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.414632557 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.414496799 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.418664039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.427273242 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.415683521 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.414084688 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.434675256 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.43436787 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.414347184 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.415339714 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.41394786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.414501459 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.414677176 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.44382613 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.414316509 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.434029916 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.427861352 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.415822302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.414957927 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.416060933 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.415001623 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.415426962 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.41557903 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.414959456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.434291841 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.415801386 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.414853921 seconds)
  done (took 206.751844061 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.414234226 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.449877679 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.416035141 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.420512716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.425208708 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.417788834 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.416586457 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.415994756 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.417065562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.449496257 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.425152677 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.416417287 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.415057234 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.415950691 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.415602212 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.416310274 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.419651362 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.423644945 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.415626421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.415924756 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.41756002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.420273707 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.416157585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.452278539 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.415385009 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.417442044 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.416843426 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.448343311 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.42204959 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.41638395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.421371031 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.424432985 seconds)
  done (took 206.84173471 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.613337748 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.424386486 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.424184541 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.379784913 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.424515442 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.423570949 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.417821242 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.623128188 seconds)
  done (took 15.061343454 seconds)
done (took 629.611746972 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.893914905 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.605128876 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.637065769 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.444311502 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.289886067 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.465211524 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.44419132 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.636288008 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.389676201 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.64248554 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.803087467 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.44265855 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.954313057 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.442957728 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.719281297 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.553805039 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.356955425 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.460018804 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.784424796 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.048279247 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.725690668 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.018913181 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.638647311 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.38735328 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.973488561 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.016738278 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.244980401 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.345806637 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.446311846 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.792581122 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.292192222 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.561087776 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.493615469 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.497160451 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.554720374 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.553513798 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.545194735 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.522507171 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.63505397 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.811404571 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.063506511 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.206310089 seconds)
  done (took 97.67330544 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.417051794 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.418052469 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.417030682 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.417863395 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.418745621 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.417801372 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.417040787 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.417561999 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.41779968 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.417813142 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.416758888 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.419190403 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.417431542 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.420004022 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.41767019 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.417608285 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.419064836 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.420111683 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.418399535 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.418148839 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.419033235 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.418520819 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.419949332 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.41877376 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.419598999 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.418676722 seconds)
  done (took 38.211793776 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.430554859 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.692292354 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.876293223 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.435916346 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.429147366 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.433658243 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.518159624 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.42993868 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.432037986 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.433391415 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.595936339 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.432437236 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.467829503 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.904156764 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.432166697 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.430938946 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.431028356 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.430183636 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.701388325 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.439672932 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.541486564 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.431734101 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.518584136 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.444682729 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.454559197 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431280849 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.436361681 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.028073543 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.433327777 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.593577625 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.340557208 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.525132696 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.985834277 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.893420065 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.343730812 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.440897632 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.432286846 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.597286343 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.433651336 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.431162739 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.519822204 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.433557456 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.889377418 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.121341534 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.452675647 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.433385787 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.050514519 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.597391588 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.719146138 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.451174183 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.917550412 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.437577636 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.434760507 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.434483442 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.712453948 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.440814375 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.433432856 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.064451351 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.458541901 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.524630065 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.443693378 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.434687128 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.7086796 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.434461176 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.698570708 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.435901779 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.441749258 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.4571327 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.903453813 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.44556097 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.149400495 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.455594469 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.434983874 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.604841516 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.708067769 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.093256643 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.445950908 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.715565818 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.00076769 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.521477832 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.439255912 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.02023618 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.525087627 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.438762884 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.43741856 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.437161844 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.43555404 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.485830226 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.520934686 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.084463332 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.14071471 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.098105111 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.54513386 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.444014683 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.43718427 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.068106722 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.457446335 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.4367701 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.887948894 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.150534919 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.457311363 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.445687058 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.149463593 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.458829194 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.526302725 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.441398402 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.899967985 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.438337902 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.487390752 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.437692202 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.444035986 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.462858734 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.527524705 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.443248761 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.437492457 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.116473233 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.623578139 seconds)
  done (took 189.80443266 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.448469881 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.43128598 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.445706198 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.431031487 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.429506842 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.439195177 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.432106934 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.430979404 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.437411444 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.43158442 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.431691467 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.435416773 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.433074985 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.430843972 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.44337211 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.440481463 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.087591588 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.432090498 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.448034352 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.432797096 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.263881693 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.441583043 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.443395479 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.432514151 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.432802556 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.432733486 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.435059542 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.433488106 seconds)
  done (took 155.033367178 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.439342226 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.074106447 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.444566302 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.5907751 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.467962893 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.436957399 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.589442109 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.513730882 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.441208556 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.437803981 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.43848171 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.78154427 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.441044296 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.021698044 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.661087446 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.590418937 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.020500505 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.461214539 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.439234844 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.439749756 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.590327221 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.454939942 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.780770373 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.078405926 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.443182823 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.078431555 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.434159338 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.441695489 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.439814272 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.081372907 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.441401504 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.78339624 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.529472496 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.511874756 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.090207855 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.022600762 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.044755169 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.61265213 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.441517005 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.440609925 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.439696667 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.434552856 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.084513605 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.444858322 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.441824007 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.080455642 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.462601706 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.443593154 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.449142528 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.441237906 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.511292337 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.520020686 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.791506885 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.087755576 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.531294747 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.455775022 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.590243576 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.8476297 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.447533945 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.024378028 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.43542855 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.088854823 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.465310682 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.434657025 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.442907776 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.449511735 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.613128737 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.591982199 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.027176255 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.463948672 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.024211161 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.63274566 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.443590651 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.442804265 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.445031589 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.087219408 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.027822809 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.633183892 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.595399201 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.668028617 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.444931676 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.444490097 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.435756123 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.531546588 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.443767751 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.089548307 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.046456362 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.466444823 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.445797099 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.446851848 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.446620143 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.649674734 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.097687527 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.531911444 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.030099354 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.81052715 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.791980327 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.447645172 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.513748822 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.473114992 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.792849583 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.447763049 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.511710906 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.925071686 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.793970812 seconds)
  done (took 173.425212203 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.711883302 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.837849308 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.553740698 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.616630837 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.088389279 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.05254734 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.832453471 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.59811516 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.566400248 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.741702921 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.77402972 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.541409158 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.678705072 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.53116619 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.218159848 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.52457894 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.549070436 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.603525006 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.595427927 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.586055189 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.15409801 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.751137974 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.657600049 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.50349205 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.556213974 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.305028989 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.039953371 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.994397902 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.632315726 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.968345288 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.01420424 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.669394104 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.484965187 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.182796434 seconds)
  done (took 70.468732868 seconds)
done (took 725.948961695 seconds)
SAVING RESULT...
DONE!
