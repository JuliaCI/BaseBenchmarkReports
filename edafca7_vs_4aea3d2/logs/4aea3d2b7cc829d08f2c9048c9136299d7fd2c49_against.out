cset: moving following pidspec: 26703
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.300854514 seconds)
loading group "string"... done (took 0.469444345 seconds)
loading group "linalg"... done (took 7.719673465 seconds)
loading group "parallel"... done (took 0.174933528 seconds)
loading group "find"... done (took 1.197934508 seconds)
loading group "tuple"... done (took 2.128625241 seconds)
loading group "dates"... done (took 1.349285676 seconds)
loading group "micro"... done (took 0.249590569 seconds)
loading group "io"... done (took 0.674193089 seconds)
loading group "scalar"... done (took 42.344559129 seconds)
loading group "sparse"... done (took 12.846822656 seconds)
loading group "broadcast"... done (took 1.038170571 seconds)
loading group "union"... done (took 14.784630975 seconds)
loading group "simd"... done (took 4.860708141 seconds)
loading group "random"... done (took 9.823622208 seconds)
loading group "problem"... done (took 2.019356361 seconds)
loading group "array"... done (took 22.566334309 seconds)
loading group "misc"... done (took 1.438214092 seconds)
loading group "sort"... done (took 3.636556844 seconds)
loading group "collection"... done (took 19.404003746 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.45523894 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139603015 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.143070772 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133120692 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200262403 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137026326 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156051914 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.10757691 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.957937448 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17614695 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138234836 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.494502477 seconds)
done (took 4.980220186 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.269624413 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080470887 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09315542 seconds)
  done (took 0.860073672 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.088218365 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.140614238 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.088785327 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073509997 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072740446 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089296857 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072613235 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.088381771 seconds)
  done (took 1.308955351 seconds)
done (took 3.218065033 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.722901029 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.261975265 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.200496676 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.508461385 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.172381371 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.205387062 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669733732 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.351973194 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.241456215 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099971453 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.126976453 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391837427 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113051012 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68880883 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.086903095 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123842527 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17657978 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435267167 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.088736967 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088563932 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.111786259 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14910846 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.108999405 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081473231 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.175308446 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075743579 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.181080104 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10236382 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074557443 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.279535202 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.196731956 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682315868 seconds)
  done (took 10.697956772 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111408275 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133435698 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074201898 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.152057289 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13177862 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077781169 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.094579528 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07480245 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.118158814 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174493202 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.111422966 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137336036 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.087699066 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076906224 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.112066711 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.224620191 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116029847 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.114576445 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.079481201 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084283821 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.132208703 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10711343 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087439119 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.102621634 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.163253543 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199889338 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107334591 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122020502 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076997926 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.108817267 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140976091 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154954348 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074274922 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074772682 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174445381 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118522467 seconds)
  done (took 4.933310677 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.151475443 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.149326431 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.135384603 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166794329 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.160033548 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139552544 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.151567893 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107769167 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255013062 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.11050404 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161064315 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140647564 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111282025 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076351994 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095742081 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074660496 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.611635997 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163148489 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.129600743 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093507469 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095150828 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085476105 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367240002 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097162537 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.073334075 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094967661 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068214028 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155478342 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076880918 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.188849021 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098798386 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097728778 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11186809 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20265952 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107511703 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12979514 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093354281 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07375193 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.180423545 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08239812 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094285411 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103341712 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132711546 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131783441 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.088226383 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075010577 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204752198 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091309244 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089631857 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.010470816 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.176213036 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088962348 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072863782 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.333103686 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113308345 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076114846 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091630943 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.287119952 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124319156 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.092836954 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075867615 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076227776 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096059076 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381491566 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.075668498 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.662297181 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07817967 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085042377 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09431422 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0926781 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083917302 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082768506 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112821109 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07572663 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095919073 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075297343 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092223632 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.077380434 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113684745 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080792377 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.091458239 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142085365 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08975958 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.072216648 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.07274644 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114395524 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122968227 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.079688938 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073833426 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128218781 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093009293 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074918338 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.130677649 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074899686 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109917745 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.090807201 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.121267472 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.090293275 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.161936861 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088108938 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105807173 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.094946548 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125978865 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.072203371 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102451238 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075487562 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096491821 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072516878 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.090131953 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142667344 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090035035 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075521091 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073867117 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.105637665 seconds)
  done (took 21.944005301 seconds)
done (took 38.260919532 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.345224661 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10777464 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105382462 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105046772 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104084653 seconds)
  done (took 1.526855284 seconds)
done (took 2.263783679 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.277954536 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.167521502 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071389169 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.180276621 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071997594 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.169820811 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.154536526 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10725839 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.178201964 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071105892 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.174613407 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071475421 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071687279 seconds)
  done (took 2.528210466 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090150014 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110008769 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077310291 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088900387 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088859486 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088395557 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104907924 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094760486 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104889609 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079596903 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070810501 seconds)
  done (took 1.730594438 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088626911 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09157329 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093715577 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087515114 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089627873 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089642204 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106640833 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096372698 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107265586 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081964729 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072358161 seconds)
  done (took 1.740810012 seconds)
done (took 6.726222479 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090131739 seconds)
  done (took 0.817467924 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.997068407 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.043597781 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099530706 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.158673478 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.302970981 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.206243753 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.582576224 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126752006 seconds)
  done (took 15.457981415 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.107238145 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093797992 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091613124 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096706348 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078590561 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093752857 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076413867 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093883514 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077804016 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08002714 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094490213 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079760092 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096897108 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078720202 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.0940067 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080356252 seconds)
  done (took 2.206150715 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111986263 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111559038 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099381073 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083609896 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098549507 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079336523 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100841501 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081251167 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095200401 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079915539 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101351886 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.084396396 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101130815 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07964746 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101876252 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.08780538 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097676566 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084639127 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102220457 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101444866 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.086267993 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099041198 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.084512315 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103365655 seconds)
  done (took 3.095209702 seconds)
done (took 22.310316674 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148467997 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080008486 seconds)
  done (took 0.964864236 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095797731 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113539339 seconds)
  done (took 0.952688386 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101385826 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092894868 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.129545462 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093068117 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094166665 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076637934 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126620692 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079220649 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093838381 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078268812 seconds)
  done (took 1.709215236 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081497776 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080859686 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100518755 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113883905 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087412195 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096965446 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08229012 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099626308 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083938074 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094135323 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086460772 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112617674 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085711634 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114586643 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101227074 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084079656 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105324459 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.082450473 seconds)
  done (took 2.438717092 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07582167 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.07881152 seconds)
  done (took 0.900249988 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079189882 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075415868 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095041243 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096500778 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076981526 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076286128 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09366833 seconds)
  done (took 1.338651061 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.482168054 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140715513 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266743945 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.081855363 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120015994 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.326348245 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.074050397 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.097278636 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.079519261 seconds)
  done (took 2.451528723 seconds)
done (took 11.497812301 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086386555 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.096488382 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.123509625 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.460409213 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111080877 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.073947171 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.15368751 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249657158 seconds)
done (took 2.104418511 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.141949297 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32785241 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119139934 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06971671 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09272148 seconds)
  done (took 1.359590702 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074227848 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077908421 seconds)
  done (took 0.901144295 seconds)
done (took 3.155671901 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07465796 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074114051 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089919302 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075471454 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.073089516 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09135904 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.125601689 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073872343 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.075640603 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092724924 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.074421965 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093215672 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.074803183 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07474187 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089994148 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07185229 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091504634 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071545474 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071936483 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088166851 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071674118 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090960413 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.072156487 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072278771 seconds)
  done (took 2.739745879 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102158943 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093480433 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080920755 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097214632 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079443861 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097796147 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081330693 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093694063 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081558446 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096931921 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080316545 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.097734697 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077907767 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.09826128 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079501734 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.098264072 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.082026849 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094309107 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078834617 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098335304 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081690321 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095128852 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.079787706 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099783987 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.080176888 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098136246 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078273316 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09521154 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081970907 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098571397 seconds)
  done (took 3.432631507 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.078946743 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071562883 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091082732 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.080505894 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091536778 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077788133 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.073279023 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09301133 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.075139178 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092003981 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.075155497 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.07381838 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091369091 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.074793092 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093885114 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.076750163 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106062836 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07440895 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073680477 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093100367 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076183106 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092078512 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076596361 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073284749 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091772412 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073880953 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092592167 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073723884 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.074436764 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091867068 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.076682967 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095328421 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073991638 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08042891 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095826051 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.073125589 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095290305 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.184616247 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.073082027 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090565794 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.073047883 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091091771 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073874658 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.080779163 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095304834 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075476423 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093096637 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.074748907 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.074446359 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094626712 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073524427 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091563 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.075951565 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093031621 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077800104 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.073418983 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092553193 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073791403 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093307956 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073481448 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073330961 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091583644 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.075951792 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092682848 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.090168951 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.080550975 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090944726 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.074449488 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096316545 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.076294799 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.075947644 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106072022 seconds)
  done (took 6.837934048 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076950291 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100635004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074575338 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075346005 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090487032 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074204668 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098100286 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074438933 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092113674 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091183989 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090939895 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073990078 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074895833 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092867152 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073603502 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092251605 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082647065 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087990489 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072949181 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095087181 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07319701 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096565553 seconds)
  done (took 2.616893403 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20634761 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099813199 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135835653 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089105881 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109727295 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089593683 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096834501 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081028917 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096155893 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08271019 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099503282 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096834035 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092153396 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100196141 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082944006 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101609065 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079571662 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101294105 seconds)
  done (took 2.601164456 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088035451 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093044957 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.096986218 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093665252 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.075836669 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096183052 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08150825 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108942141 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077747405 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093246059 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085891025 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095953044 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078284241 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093098763 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077809542 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075777744 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.095793835 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075762975 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103494229 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099468978 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0824207 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103317401 seconds)
  done (took 2.735305611 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091725364 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095490423 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095703477 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097051444 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07438305 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094776796 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083168315 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092750128 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083534285 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.077756661 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092522367 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.076530193 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.099607115 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075278058 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098333416 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07585042 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094732878 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075847823 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095224441 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07554324 seconds)
  done (took 2.508598865 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114682916 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108049042 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089987107 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117889043 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09035496 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108090073 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118063492 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090375887 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108019829 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103236095 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107997385 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089881297 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117665815 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114407325 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090430152 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1191577 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101047797 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117724552 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108617717 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091375857 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120471209 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090812707 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118888321 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091406313 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108211063 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090799288 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108533997 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113837281 seconds)
  done (took 3.71745981 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075309278 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075063359 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090824646 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072648458 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.073115001 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090417746 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.073112709 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091265402 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074946012 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073317665 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.091928264 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.075715796 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092844981 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074905607 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075120169 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092992787 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0762962 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.091651202 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076469472 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075492653 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095361754 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077112262 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095044737 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074676073 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075472459 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095540914 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074949272 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093557553 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076376356 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073477846 seconds)
  done (took 3.210792721 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083399621 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099115512 seconds)
  done (took 0.953430898 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073674079 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10922004 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072584456 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078929741 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098923102 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076260744 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103622278 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080893686 seconds)
  done (took 1.462729965 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.093604016 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111589333 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.080934965 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105400638 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093576076 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.110280381 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13663432 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099700661 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.081902311 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.092732189 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.092565827 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093615806 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.081242073 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.076408839 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.099627857 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082677205 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094864934 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086318068 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101354509 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.077888294 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099503109 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086875618 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097024773 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083406947 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.076842763 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.104798074 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084954451 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106002088 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079784479 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.103337361 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.081951798 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087949467 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080577044 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09872412 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.076904846 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11116605 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091257236 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097117401 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.0846338 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081773901 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102952441 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.074216333 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.100091388 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081819605 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104385156 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.080987489 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100780346 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074308578 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091504116 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.078525339 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.075123745 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093795383 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071689082 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101761255 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08065446 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108679206 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078899755 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.09649032 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.079236579 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.078985527 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.100500367 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.078558431 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097350201 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080100882 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10172639 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.081250753 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101805055 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074853064 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.070701475 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095747672 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084978582 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116658261 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.085784731 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099354505 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081667859 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094834817 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07942126 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100228997 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084119563 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.103019597 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08077161 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100955932 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084297272 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094347904 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.078619823 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.082636055 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096167655 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.078885409 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.091715601 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091956142 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097086329 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.077770544 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.092019995 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.085328293 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.079687732 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098286243 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.073846224 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101815542 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070578699 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099332092 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083362982 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094719427 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.085002943 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099633536 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082108936 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.084111502 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.10477151 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076728421 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097818295 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.073353748 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099803083 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.078381555 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.101821966 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070582601 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079855386 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.096398613 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.081457935 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.102329119 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078685669 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099199101 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08465159 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.101704947 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078554579 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07288107 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.097373192 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.080737957 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103451496 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.084093475 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097943447 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075067852 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093687941 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.080782793 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09858199 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.081685065 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082079382 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098336134 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071170397 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096092334 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082100557 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10289711 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.076251762 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09536367 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080657917 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.077602843 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097835703 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.082888048 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.096341641 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.075938838 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.099261898 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.078349049 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075014674 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103309879 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.079274534 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096719163 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.080194697 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103966143 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.079121648 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.09956454 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079493384 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100170268 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082460404 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.075627166 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095069324 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079246878 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.105325806 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.079140442 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094181834 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.073778491 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101154652 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.074764032 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081498587 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.094352433 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.080342104 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101848155 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080023139 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100263592 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079587151 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094855943 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111354937 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084001451 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102163455 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.087861162 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099638121 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.078883549 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098880704 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082838043 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100516574 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.085029804 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102123771 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082885383 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.081323248 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095414494 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08534435 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106352613 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.078840896 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099979943 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.078583162 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102632742 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.086404781 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084042637 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103908456 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081332948 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09883712 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088389447 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10194545 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082831943 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097026326 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084298735 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089193935 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104169183 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085265551 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10788104 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082872331 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096795294 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088626459 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100099408 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.085491801 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096915302 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.076796315 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.078253765 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104067196 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082044951 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101316038 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.073151322 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105833268 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087378919 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.079179614 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096926409 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08436351 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107612868 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.080915776 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102032261 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.083160113 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.103731113 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093386988 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.097879469 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.0820022 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.106028752 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.080816454 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07081686 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10138673 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079124295 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094181832 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079417109 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097203405 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0800129 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083624203 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101114136 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070927949 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.098005021 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079491709 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.093794541 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075398756 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.101377761 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.080440176 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.079371877 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104543205 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083284037 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100171153 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081653939 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098777122 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.08245414 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100310234 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07968964 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100763412 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.079455218 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077357996 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.100364763 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.078914692 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09970118 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.081537447 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103507261 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.080279986 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085391466 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102199138 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079065776 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103445295 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085669418 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10037606 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.080277594 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.098157976 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08360082 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080474403 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100112907 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.082678631 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097552295 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087817974 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102167799 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086932694 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.096468767 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.074575189 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.083011992 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101534296 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.08528358 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104661945 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086082731 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102045429 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083443491 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.0832725 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108563655 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.077609623 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.108833779 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086254356 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100334777 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084019545 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.098273986 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.080123001 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.095146842 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.079335353 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08307913 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.096176173 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081146187 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101840542 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.080759101 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.096205031 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078723064 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083219314 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.096617198 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084164457 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090602204 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.077605454 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.095891793 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082793649 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103926958 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082835047 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080835891 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.10170695 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085651273 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100312343 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.074776273 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104033608 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084860428 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10200774 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086922152 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085056075 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.097676225 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087558311 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.090174111 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.079472525 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097134564 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.075278867 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104202322 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082962281 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.086381815 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.096324911 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.077039669 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093098129 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083171584 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098920828 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.072780731 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078819348 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100560837 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081132575 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100102282 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083564739 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.099631906 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083769018 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103976271 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.080522541 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.079262832 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101300785 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074972882 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.095619848 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.076912015 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.100015723 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083419123 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.076149226 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09623861 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084014081 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102173864 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.081532371 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08435769 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102190395 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087127999 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101677427 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.081208117 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106091889 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.072800073 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.099594625 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08155214 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101006686 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.07700688 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.082200867 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100107267 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083509582 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.104133346 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082350058 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096983608 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082654223 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098303007 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082374963 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082075369 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101701041 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.077142364 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102306871 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086608229 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097487678 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.080459367 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096826154 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.079095997 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.082637773 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102614664 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.080515316 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104471089 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08254883 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.100101546 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.085153917 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101800926 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082430249 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085250848 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.09999451 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085091195 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09648246 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.087136319 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09815073 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086709985 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10206292 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078241775 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084854169 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104112296 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084394541 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.10580653 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087838396 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099630043 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.080273799 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08181528 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101380973 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088603394 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107768428 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.081297454 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100401046 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.076798317 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094565118 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083375398 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07664154 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.098608104 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.081436191 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104622603 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083041487 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101062332 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08390047 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108402569 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087223029 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106086965 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.078698529 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.083399619 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102637929 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.081596851 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.098351605 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.078927785 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103424656 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.084173244 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.100099464 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078126556 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107163968 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.082447344 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083726409 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.098709146 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.078997055 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.097481202 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.07894648 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106550019 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083626456 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107226023 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084210352 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085840928 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111336856 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081135173 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101183268 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090606496 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104825536 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088653089 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099503696 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08302858 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087356024 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107048863 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080243498 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101441626 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079275846 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104400549 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080281619 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079376666 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111417255 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.089281895 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.103701241 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084112613 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104858309 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079896686 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099541601 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080922699 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086784469 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103429851 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09080958 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100376499 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081055357 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099385794 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085203123 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104290481 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085150426 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.078285289 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100356421 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080392128 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103866193 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089088007 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104171502 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085413378 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085205758 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104376647 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08249816 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111034598 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.078804464 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105354191 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093496987 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107255389 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082077092 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107620781 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090447236 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10686491 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080447279 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086424615 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102664121 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.079289755 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104096273 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087163359 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117144678 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085260369 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100592928 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084642662 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104180736 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081017566 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089320452 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107559577 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08739251 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106856349 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084986932 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107369226 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08245521 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104418106 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.081596506 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.100156316 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081775345 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079000164 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099981218 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.077829875 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104118053 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084134571 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101503847 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.08564308 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.077511745 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108178475 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.087720385 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102958128 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.075673584 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.097167586 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.077987079 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077000121 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103452863 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076879469 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100436497 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08193757 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100947206 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.079601861 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084504808 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.100649402 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084501141 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102266697 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.073681399 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099281895 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.081386691 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079283098 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.095063133 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083140681 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103724976 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08513924 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107423845 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.079740072 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.101379378 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080887174 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0792142 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096229442 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.086058939 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100654689 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081836071 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.097370861 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083719944 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.083658236 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102062136 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083998399 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105104214 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.081323053 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.106651442 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086257145 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.095960726 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.076648936 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.104277561 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080237764 seconds)
  done (took 54.665721339 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124543048 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103977307 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073987363 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093948297 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119043696 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078826484 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074292016 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09765243 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078404118 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107404252 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073934594 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094528152 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.095313445 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120894007 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11824344 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108555587 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075374271 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097948894 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074664911 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078490194 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113202262 seconds)
  done (took 2.826201622 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.101331647 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111987935 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090131472 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115165202 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105562418 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091588509 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109668156 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111799267 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09584654 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106048628 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115932258 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091920436 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.10567639 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087096499 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105616915 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108041046 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095792442 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103971053 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091538653 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110012899 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107974948 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090206857 seconds)
  done (took 3.075708685 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08716191 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081844197 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.102846832 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.074367439 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101281585 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.073735071 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.107214142 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.077089829 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088008446 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.099152471 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.078072424 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.096614253 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08363083 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.073753664 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.097759035 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.076238644 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151302732 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107236466 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082819718 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104053938 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077172402 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.080790353 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096543551 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078011394 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.096880105 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.09149387 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102957352 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083310528 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.082282371 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.097004645 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082514642 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.096160792 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.080221754 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.098707721 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.078155936 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.077314812 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10187094 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082476222 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.096339533 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.079732584 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.078871355 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097265341 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084208422 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.100124766 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080642217 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.095678812 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.080275562 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082015922 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.093513404 seconds)
  done (took 5.222574641 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.111355802 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.150560097 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101509934 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142270206 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.095869654 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111698344 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.082220822 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120194109 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097773394 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081358178 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.119271403 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116948501 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084060936 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108215545 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.086490779 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102461738 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084633353 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098198949 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088404851 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098303289 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.087325107 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106458416 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115739195 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.094075151 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107555627 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.081307381 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.098622728 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.0875719 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113454355 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108004254 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.088853817 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110232722 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120874034 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.08961888 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102368896 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088853622 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123174462 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08720875 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109480357 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.080684581 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108887159 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091931062 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109514205 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12180879 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084283756 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105985837 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082888845 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.095816098 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.094135782 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104864464 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092972686 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115601522 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107742405 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083751749 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108513937 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.096418787 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104197848 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080646773 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105455137 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112861915 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.077959581 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107254421 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.094719944 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106222912 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093851466 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115877014 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105307427 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087523201 seconds)
  done (took 7.842423186 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111486574 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10801021 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097850214 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117269556 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107220597 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08761922 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107441737 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.088352019 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107843686 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094700144 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107997045 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155265222 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085332897 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112791911 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088080289 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107979323 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.087417886 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107085935 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08680783 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107785602 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.087526621 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118376328 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107991352 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097523331 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120541964 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104691293 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087888588 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107761838 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09801912 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107793838 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120194682 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.088076558 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107581451 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097657326 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119890148 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106917868 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082042938 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107676728 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.088462353 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108017307 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085224204 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118527147 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106785639 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085668509 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10769108 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088345081 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11814303 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.120535836 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093770032 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114952153 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.08821132 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118874938 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107468509 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088897504 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118321975 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.125386939 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098914741 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118649985 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087067072 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119063238 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118055236 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.124957366 seconds)
  done (took 7.327963127 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111531012 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113816733 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.121057251 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074987593 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076561001 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107894039 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077333679 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.097700903 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112391831 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092559647 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115484143 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087206743 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111511626 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115710242 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088709363 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113460621 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111654801 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091627445 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118042191 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092109251 seconds)
  done (took 2.866798657 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088623283 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119551791 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.081056486 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107909872 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.084029708 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110007496 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085397915 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107154153 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082484415 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104433044 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092547928 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112185634 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08127894 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107371653 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091955372 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106739143 seconds)
  done (took 2.4033049 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100947125 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12055584 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.10415628 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106478896 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.077587073 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104479545 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.083484759 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.096006744 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.076089597 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.116789394 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085896921 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105494006 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.083447363 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098830973 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.080834064 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084933042 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096388676 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084151848 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102992701 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103479406 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105742232 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08444239 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103974311 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.0819991 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103273235 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.085370497 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107339398 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.078230263 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.099329252 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.085841674 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107286611 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091559893 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101733337 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089523615 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103154541 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081505814 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107616496 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086901239 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108238105 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083152985 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077653603 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103147251 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083309581 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101293776 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.076150528 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103858373 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077786036 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10839826 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.082465218 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103337793 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.083829469 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08821349 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10752852 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110705716 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091067624 seconds)
  done (took 6.04947448 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095698481 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104217597 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076472112 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07812177 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104113095 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.082322548 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104888958 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082920542 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102254749 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078187956 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102474306 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084884047 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0824059 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104529134 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082148762 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105033377 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074953711 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101806588 seconds)
  done (took 2.493032336 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085839122 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080674777 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108282999 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08052094 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101711617 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083446419 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096923453 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078773677 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078511464 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100812025 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080039894 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102795013 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078810093 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.103164301 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080706817 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100516389 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082788568 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078557977 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100352874 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076517462 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103151164 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078830697 seconds)
  done (took 2.805108846 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.116518774 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121440886 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.08880673 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.211631037 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.122492865 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.110446074 seconds)
  done (took 1.618829984 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104719583 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136868954 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080876295 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10399879 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092916518 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105559216 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086211116 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107737593 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099651946 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12368402 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110959913 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100275215 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122580662 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121227899 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097110694 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118437621 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088039675 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111061889 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08464625 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130949068 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110866956 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100671666 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111141614 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109630477 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089145887 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12207872 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100410078 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124706953 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109455754 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100237865 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118221592 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087952941 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122731379 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12330246 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086940865 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120425521 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086473447 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126778694 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114037215 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116060632 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083842477 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112618314 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096163763 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112025236 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116438404 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085393966 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112976978 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085550437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106060207 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134206963 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092613938 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116166869 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113651187 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096770708 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116714189 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133538378 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119780662 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096446243 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113154795 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118673968 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096064758 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114099212 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116157525 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098226443 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113049193 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11817774 seconds)
  done (took 7.98052683 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119675718 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102927096 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085286556 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12007371 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119310007 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087196741 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105607981 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086347138 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105986707 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083115124 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150918413 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105792649 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094987039 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118103096 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105148958 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085325268 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105449913 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096319625 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103349924 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132780996 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085369201 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116915894 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116830975 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096723611 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119296379 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113024592 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086125941 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106150719 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085355867 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106040096 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111724807 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085592223 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115991086 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081960114 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117396823 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085332891 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105855939 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112589942 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086555601 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11293091 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095583187 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126532202 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10560009 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085856028 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119079688 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106010414 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086200673 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10410244 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085550859 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102547095 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100394586 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120302926 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118117051 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116258336 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086375198 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106454575 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085500374 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105525439 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085880529 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113713421 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0952733 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107934508 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133048009 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085566374 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106835654 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118000638 seconds)
  done (took 7.716752308 seconds)
done (took 148.462069099 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097068535 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134819597 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094926404 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163484611 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080953244 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.113685494 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.134561287 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.095951203 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102346056 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080776124 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.102043483 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.083625672 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.144579272 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102349348 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.080753531 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.1035427 seconds)
  done (took 2.565920773 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.1747251 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.288344313 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101492762 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.100741924 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.085498331 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080818981 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.101062342 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088380609 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102627202 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.080711014 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080300123 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.102416834 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.079858608 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.102062586 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082613888 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.101615413 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.081065478 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.081507563 seconds)
  done (took 2.775028858 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108860492 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158114475 seconds)
  done (took 1.131531505 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115854194 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173018184 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.270021439 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.149901285 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.131504126 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097038459 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149828843 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.121545054 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200267313 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125551288 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.106336165 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109975949 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.114519166 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.111671152 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.08878841 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.108628619 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135315896 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.090348007 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112890472 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.090868528 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13400559 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.081270458 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11153217 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088207633 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183243908 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124154702 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.080731082 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101277065 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.0894647 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109749419 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.087403312 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115839796 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123327574 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.14483931 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.094224641 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.146156894 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108857882 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086427688 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109864461 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086715196 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.112448137 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.091253375 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.11727665 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.088017579 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101438874 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.089023713 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10350821 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.0810275 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.088408967 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110722435 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10914923 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.088163915 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1464446 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10985256 seconds)
  done (took 7.106822234 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.800277762 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148114978 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087081503 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.874706356 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135875006 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120867624 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.770461413 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132952066 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226411938 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.782862223 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125009792 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117382666 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.201703105 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.223044034 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.913435644 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.303302843 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.902127363 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098760886 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.138317989 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.144229514 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089875351 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133253568 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124350524 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42188981 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.08645634 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107833944 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090220398 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11549194 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.153449759 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086154624 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109296659 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170206924 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.235437128 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.196280395 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.087113896 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083960223 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107193648 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.159622001 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257868571 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.18689185 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17194503 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08101735 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106939455 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.094010318 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126120111 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102409788 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15603478 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.164638646 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.162659552 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086325912 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116259549 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113074211 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.094036004 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.153664288 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10493104 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.285351882 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.303634554 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106322267 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092901358 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121090946 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234930726 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106585948 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.194489669 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13244598 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.205677351 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084423057 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778004384 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.158013418 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088147037 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.113457029 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.090241463 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11086226 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.091541718 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15850855 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.382431732 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118437929 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.087806521 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106399687 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207730774 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084326326 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107417816 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155796726 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.084730867 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11410837 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117884602 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096004312 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.160061471 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.21418377 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118496184 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113367168 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089282435 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117004723 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.08667346 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.204387735 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213774844 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.152056093 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.202570758 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117014662 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157006389 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.157570536 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114820045 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.161800499 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091201994 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120315946 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09416723 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.210952362 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136391227 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083750126 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110626808 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090106594 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137362487 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109083591 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091753256 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.158785502 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.471910454 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.157000399 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.082074117 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110009092 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092806537 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.153886908 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112291149 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.228772893 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114910497 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.159466076 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09001781 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104284992 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.090473534 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.175696162 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096737793 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114244964 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093422691 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114070883 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.221608099 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.209301632 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09628321 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234963229 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.151583565 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.114861009 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.162409135 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114183071 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.15969707 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092149205 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116043469 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085286684 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762191571 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117044125 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091573672 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109173255 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.156549018 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10698237 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084677111 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107249947 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082060731 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76542941 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087667449 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082102928 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.108745946 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089882428 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113588218 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088727107 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111107335 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.154571609 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222117572 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092727007 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11384463 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084392126 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.152429132 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109259983 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08513873 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107622964 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085636895 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11513521 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.088377869 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107817429 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162747749 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153113756 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.210977216 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568389026 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083734278 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10772687 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218060746 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085582347 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.277866306 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092048573 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.218841693 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157316327 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081344174 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30182677 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.157877179 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.179301954 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109701503 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.163992267 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082793197 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111252476 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155946945 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084744312 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11413438 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.152537139 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096811224 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11913278 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.914105968 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085300862 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.218090984 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.104137853 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.161034982 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.086285982 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116902343 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.262088933 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107954704 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12205396 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.154063576 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088255104 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107713089 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.721598126 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084862152 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117473576 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090254923 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.216238713 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.157663643 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114338077 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090253886 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117087168 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.154715746 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.200327446 seconds)
  done (took 41.637053619 seconds)
done (took 56.071132268 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258991069 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213088468 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265110372 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165930152 seconds)
  done (took 1.887663405 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.1735605 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.126301754 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.14182543 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.07924567 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148995941 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102940752 seconds)
  done (took 1.659203721 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.369203506 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271693682 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.215467779 seconds)
  done (took 1.746514197 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.245702158 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.243725168 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.345234589 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.390780738 seconds)
  done (took 2.215564317 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.205126922 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097227254 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.120080147 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.112443078 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.169899678 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206483879 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137495473 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.145830266 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10399239 seconds)
  done (took 2.236062099 seconds)
done (took 10.637432034 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.272556174 seconds)
    (2/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.252577761 seconds)
    (3/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.130656392 seconds)
    (4/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.229383812 seconds)
    (5/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.262030347 seconds)
    (6/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.202953932 seconds)
    (7/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.228693136 seconds)
    (8/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.163432138 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.124845442 seconds)
    (10/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.094586041 seconds)
    (11/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.132146287 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.09489423 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111306165 seconds)
    (14/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.233968007 seconds)
    (15/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.166122511 seconds)
    (16/286) benchmarking ("sort", Int8, true)...
    done (took 0.222679944 seconds)
    (17/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214695407 seconds)
    (18/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.192704953 seconds)
    (19/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093251054 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.210594564 seconds)
    (21/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.08915105 seconds)
    (22/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.084381266 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.131100599 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111457016 seconds)
    (25/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.092465627 seconds)
    (26/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.21101665 seconds)
    (27/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.204667091 seconds)
    (28/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.194301959 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.235020268 seconds)
    (30/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.245202286 seconds)
    (31/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.151482783 seconds)
    (32/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.227528337 seconds)
    (33/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.177142119 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092210409 seconds)
    (35/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.134435656 seconds)
    (36/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.08037305 seconds)
    (37/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109789599 seconds)
    (38/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.16280605 seconds)
    (39/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220659435 seconds)
    (40/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.184415767 seconds)
    (41/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.176909885 seconds)
    (42/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.199013244 seconds)
    (43/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.086794892 seconds)
    (44/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.178351962 seconds)
    (45/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.083087434 seconds)
    (46/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09184811 seconds)
    (47/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.093222059 seconds)
    (48/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.177319265 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093115054 seconds)
    (50/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.235003013 seconds)
    (51/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09565236 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134531388 seconds)
    (53/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068676354 seconds)
    (54/286) benchmarking ("sort", Float32, false)...
    done (took 0.175190348 seconds)
    (55/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.124927894 seconds)
    (56/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.222840956 seconds)
    (57/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.161153984 seconds)
    (58/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.249986481 seconds)
    (59/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101368541 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.103222655 seconds)
    (61/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.161024821 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.104480144 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.082588918 seconds)
    (64/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.169421091 seconds)
    (65/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.133243555 seconds)
    (66/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.095344314 seconds)
    (67/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.113207953 seconds)
    (68/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.088602233 seconds)
    (69/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.117441184 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.107983467 seconds)
    (71/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.201880169 seconds)
    (72/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.108731886 seconds)
    (73/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.101498581 seconds)
    (74/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071022401 seconds)
    (75/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.151153798 seconds)
    (76/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.085171948 seconds)
    (77/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.092461425 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.076288991 seconds)
    (79/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.089853001 seconds)
    (80/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.159218397 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 0.081474304 seconds)
    (82/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.24013744 seconds)
    (83/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11458278 seconds)
    (84/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.10999335 seconds)
    (85/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11813819 seconds)
    (86/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.151579141 seconds)
    (87/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.187164928 seconds)
    (88/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110569684 seconds)
    (89/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.082128794 seconds)
    (90/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.071528864 seconds)
    (91/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.100495043 seconds)
    (92/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.099539511 seconds)
    (93/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.114847695 seconds)
    (94/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.167190815 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105650138 seconds)
    (96/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081308621 seconds)
    (97/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.10569762 seconds)
    (98/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.072617839 seconds)
    (99/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090913123 seconds)
    (100/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.095879299 seconds)
    (101/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071958988 seconds)
    (102/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.134931414 seconds)
    (103/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093996866 seconds)
    (104/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068890737 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132078691 seconds)
    (106/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.08190921 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.116104408 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.081180795 seconds)
    (109/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092602522 seconds)
    (110/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.095056695 seconds)
    (111/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.132962305 seconds)
    (112/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.080207305 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129640662 seconds)
    (114/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.07506591 seconds)
    (115/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.090941709 seconds)
    (116/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.124862333 seconds)
    (117/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.083376014 seconds)
    (118/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.093306301 seconds)
    (119/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.154713352 seconds)
    (120/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.174068486 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.105073177 seconds)
    (122/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091220328 seconds)
    (123/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.110068857 seconds)
    (124/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084027936 seconds)
    (125/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096115184 seconds)
    (126/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.116399314 seconds)
    (127/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.188345683 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 0.182878233 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.092581622 seconds)
    (130/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089117081 seconds)
    (131/286) benchmarking ("sort", Float32, true)...
    done (took 0.233343467 seconds)
    (132/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.092662335 seconds)
    (133/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.102069886 seconds)
    (134/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.164133851 seconds)
    (135/286) benchmarking ("sort", Float64, false)...
    done (took 0.174782816 seconds)
    (136/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.12708559 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104653907 seconds)
    (138/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.127127361 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.110563481 seconds)
    (140/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.104418165 seconds)
    (141/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11041797 seconds)
    (142/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.070401521 seconds)
    (143/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.187102946 seconds)
    (144/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.124155857 seconds)
    (145/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.176099301 seconds)
    (146/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.089587104 seconds)
    (147/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118835144 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166727475 seconds)
    (149/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.152476889 seconds)
    (150/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.103573883 seconds)
    (151/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.084669268 seconds)
    (152/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114820478 seconds)
    (153/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.128344437 seconds)
    (154/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.106872028 seconds)
    (155/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.081764535 seconds)
    (156/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.113678231 seconds)
    (157/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.088748658 seconds)
    (158/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.081142056 seconds)
    (159/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.197651415 seconds)
    (160/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.073340774 seconds)
    (161/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115793148 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.081765738 seconds)
    (163/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133284196 seconds)
    (164/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069808651 seconds)
    (165/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.11511919 seconds)
    (166/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.079252382 seconds)
    (167/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074270531 seconds)
    (168/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.092988981 seconds)
    (169/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.073863824 seconds)
    (170/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.069149851 seconds)
    (171/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.178167611 seconds)
    (172/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116592169 seconds)
    (173/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.143344444 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.095585093 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.081780048 seconds)
    (176/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.096405714 seconds)
    (177/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.12990935 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.08161653 seconds)
    (179/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.105278693 seconds)
    (180/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139586537 seconds)
    (181/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095213283 seconds)
    (182/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.084046246 seconds)
    (183/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.167004948 seconds)
    (184/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069775401 seconds)
    (185/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.129062373 seconds)
    (186/286) benchmarking ("sort", Int8, false)...
    done (took 0.193164161 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.088362918 seconds)
    (188/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175455302 seconds)
    (189/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.132747015 seconds)
    (190/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.070962155 seconds)
    (191/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072162185 seconds)
    (192/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.106305345 seconds)
    (193/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.093691279 seconds)
    (194/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.118241667 seconds)
    (195/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080690541 seconds)
    (196/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.070554797 seconds)
    (197/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.147647652 seconds)
    (198/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.072343196 seconds)
    (199/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.096297959 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093130125 seconds)
    (201/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083184644 seconds)
    (202/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.094479915 seconds)
    (203/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.070374675 seconds)
    (204/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.131049753 seconds)
    (205/286) benchmarking ("sort", Bool, true)...
    done (took 0.225236465 seconds)
    (206/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.070144342 seconds)
    (207/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088191255 seconds)
    (208/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.104752882 seconds)
    (209/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.072726572 seconds)
    (210/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.189541792 seconds)
    (211/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07862824 seconds)
    (212/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.118514221 seconds)
    (213/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.078519529 seconds)
    (214/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.094039171 seconds)
    (215/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.083236809 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.081329825 seconds)
    (217/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.112841407 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.082393985 seconds)
    (219/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.107123957 seconds)
    (220/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.07849901 seconds)
    (221/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09096481 seconds)
    (222/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.1136953 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.081581224 seconds)
    (224/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103873938 seconds)
    (225/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.071079462 seconds)
    (226/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.070071211 seconds)
    (227/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.104910863 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.072427219 seconds)
    (229/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.080255997 seconds)
    (230/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.094541048 seconds)
    (231/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.071859261 seconds)
    (232/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.102446221 seconds)
    (233/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07041886 seconds)
    (234/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.072902398 seconds)
    (235/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.10163828 seconds)
    (236/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08066423 seconds)
    (237/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.13490014 seconds)
    (238/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084582867 seconds)
    (239/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.073508111 seconds)
    (240/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.107021691 seconds)
    (241/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.070143957 seconds)
    (242/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.078462858 seconds)
    (243/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.094662743 seconds)
    (244/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.082013547 seconds)
    (245/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.094918328 seconds)
    (246/286) benchmarking ("sort", BigInt, true)...
    done (took 0.23998245 seconds)
    (247/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106146703 seconds)
    (248/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.087458064 seconds)
    (249/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.11855895 seconds)
    (250/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.095062263 seconds)
    (251/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149801818 seconds)
    (252/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.104780978 seconds)
    (253/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.09615345 seconds)
    (254/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159058831 seconds)
    (255/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094438323 seconds)
    (256/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.082932344 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.107655481 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.092060831 seconds)
    (259/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112986585 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.082719228 seconds)
    (261/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.11351626 seconds)
    (262/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.07111359 seconds)
    (263/286) benchmarking ("sort", Float64, true)...
    done (took 0.234575276 seconds)
    (264/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.070587219 seconds)
    (265/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093078292 seconds)
    (266/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080735261 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.089870662 seconds)
    (268/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.108088496 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.080935647 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080072225 seconds)
    (271/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.184527295 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118118908 seconds)
    (273/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078811283 seconds)
    (274/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.082946886 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.104384205 seconds)
    (276/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.083084116 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105755352 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.082144207 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080724047 seconds)
    (280/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.105067126 seconds)
    (281/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.083936275 seconds)
    (282/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.104953198 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.082468353 seconds)
    (284/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.082092302 seconds)
    (285/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.094971053 seconds)
    (286/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.085910091 seconds)
  done (took 35.321871275 seconds)
done (took 36.223510044 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097213382 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146476137 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094414835 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134088153 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.095351026 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.119812285 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.091130916 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09315912 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.119553807 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.096391135 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.117978531 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072747781 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.116561893 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093472389 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.115881112 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115886837 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123066949 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089360896 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.108685113 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.080879299 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.085396715 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.10581523 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083899849 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.095169275 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.093628809 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.090123882 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.111660823 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093826708 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.105906554 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.082283828 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.080195957 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.114742517 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081834134 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.11924081 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.088496132 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.109051145 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.094217848 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.114760094 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.084024582 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082158959 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116380168 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08202492 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.113100126 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.089741077 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.084027882 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104363834 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086913327 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119263023 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11476999 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115287375 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.090412 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.091239474 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.115854363 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.088034568 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.105165251 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.08541786 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.104919152 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114157147 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111734715 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087472887 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.089801032 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.11389507 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.081873943 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.109450183 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.086355954 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.115794956 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.092959026 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080589576 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.116614689 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.087860553 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.105442509 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.08677763 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.080515853 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.105966519 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091907165 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.116701273 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081175618 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.082429211 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.113108974 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.087388939 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105514964 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085265391 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.107134408 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.083415788 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085321843 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.096071524 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.081425519 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087293059 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.105244523 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.08577976 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.112175223 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08969733 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.107059186 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094269994 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081257104 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.105158559 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082160418 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.105945312 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.084741193 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.081113476 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.106936951 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085254078 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.114077106 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.084236055 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.083777268 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118753698 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.082513234 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.112320156 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08156173 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.080979209 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.122475173 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.092708604 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.10593234 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087622413 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.10511464 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.084332052 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08121255 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.106033581 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.082991859 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081559455 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.108163506 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.083247989 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108160402 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.084253098 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.11948242 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.081967955 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.08126193 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10889545 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082556259 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.086838228 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.107034424 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082337683 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.10751521 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080519589 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084148877 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.106221264 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.084807269 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108937158 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086205103 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.107200872 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.085763195 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086254532 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.107550603 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.081923832 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10508154 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077239324 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088488764 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10830029 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.083866657 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.081566284 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.108018581 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082743267 seconds)
done (took 15.699957902 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082844309 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181293973 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.141838148 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.115960213 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127282492 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083437929 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116906131 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.114681059 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.109123213 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.138223561 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.107127636 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.125564422 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121729582 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.105640619 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082882647 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.085758448 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.108388527 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.098376189 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145771685 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12754615 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117624508 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.104950026 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.1117155 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.130785452 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09146732 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13451905 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083583366 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110549963 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086666979 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.122896025 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.103943617 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109641177 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083103883 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128714209 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099885055 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089625464 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.106567362 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089241527 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.1071772 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.083226292 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.129187646 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105044351 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111795516 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088812656 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.110039387 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085613682 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.083346318 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115720011 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092821083 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110865104 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097501729 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135731154 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.109251391 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092893612 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.080852602 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.117467831 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.091749351 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.109609925 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.083392959 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.109082736 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082183676 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.102770715 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12266305 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.13114373 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.087228627 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.116451606 seconds)
  done (took 8.060687338 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.100907608 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13609032 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100908392 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.124604816 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082842831 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082236028 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.107435561 seconds)
  done (took 1.68981558 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083119675 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109094634 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.133896309 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108763106 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13074726 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.134420319 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088348535 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083528158 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.127496164 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084937926 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132919286 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123856689 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109340341 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.09103202 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136875129 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.083677758 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135385354 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.084084324 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.110785123 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11076636 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111612889 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.102537413 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.110588661 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.08356031 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101424506 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10899196 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156768697 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08853664 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08129992 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.111594424 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082323813 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.147727922 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101464356 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116427933 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08362795 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12740414 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.102060901 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105706877 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.099952432 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.113220024 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.101813806 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.083482445 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.109651817 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.082392594 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.112270935 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098032477 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.086923439 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.109418283 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.086215963 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132249412 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.084833832 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125811894 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.084152611 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.088164137 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111028467 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.08683569 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.118875941 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.085061098 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132004291 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082388392 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129115119 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104086943 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.12564745 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.104476739 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08648516 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126908751 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101011759 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.111787141 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085834813 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.111879019 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.103646495 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.105844597 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.086930782 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.0977112 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110763472 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111199108 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135809455 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085497044 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.119343839 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084310846 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.109215707 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.084650698 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110248005 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11277122 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083918204 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115666122 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087502797 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108498331 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08383813 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.088055698 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.109492477 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085760276 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.111469771 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.085179345 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086597862 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130535409 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.085561953 seconds)
  done (took 11.110627095 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085289098 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.085642806 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.112561919 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.085659733 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10999421 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.086281584 seconds)
  done (took 1.53734 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113253615 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.110170755 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.098276607 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.113166305 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.125776475 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.132413531 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108826391 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118049224 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.102032262 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12125099 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110760129 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.135295009 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.113529498 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11466753 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.107926836 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.113437673 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.108629758 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115776694 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.096332858 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115401209 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101272569 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.115004572 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089585384 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.129282727 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09441103 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.114788512 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090519643 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.121029978 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.095401903 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.118508868 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.089838552 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118301465 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.091209446 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.119194917 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.1095414 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.114860882 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088887824 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120870619 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090932626 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.093359215 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.135908476 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08981098 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121141128 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095563936 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.119592574 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.089446223 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121626113 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.089378473 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.132958958 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094971565 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121300217 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.088329534 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118823439 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095844133 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11543682 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093528341 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121160922 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109638487 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.115546977 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.089999377 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.112038352 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094367047 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118894095 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094737229 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119060317 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095747866 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.11631402 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090202023 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11467235 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09040293 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120401149 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.08691386 seconds)
  done (took 8.768493643 seconds)
done (took 32.117709663 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.681788428 seconds)
  done (took 1.646973661 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.816103729 seconds)
  done (took 1.784238465 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.106208939 seconds)
  done (took 18.100544968 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.464951283 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.55914237 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.955240299 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160506042 seconds)
  done (took 3.10640237 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.937353938 seconds)
  done (took 1.924445941 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.281142488 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232493308 seconds)
  done (took 1.487658387 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.761698293 seconds)
  done (took 1.745578138 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.441789766 seconds)
  done (took 2.420594868 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.3268762 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15661566 seconds)
  done (took 1.474412651 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.559223708 seconds)
  done (took 1.546630589 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.240320884 seconds)
  done (took 11.228308605 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238634782 seconds)
  done (took 1.235809222 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.284543757 seconds)
  done (took 1.270779239 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.54116607 seconds)
  done (took 4.526296972 seconds)
done (took 54.476465033 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.093746203 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.097471796 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123011276 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.09495115 seconds)
  done (took 1.390440477 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.098959223 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.09042892 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.124254993 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.089981958 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12521472 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.090254782 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119262083 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101338595 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115823666 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.093093396 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116326972 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.090494397 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.119336053 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092886118 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113259249 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.093749299 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123720972 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.091411892 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.094279115 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117225504 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.088927518 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118418878 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.09434569 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.115181759 seconds)
  done (took 3.511903691 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.095143973 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.088895884 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117152907 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088869829 seconds)
  done (took 1.385015733 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.094611047 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.101842694 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.126829591 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.094848677 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127310691 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10018735 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.112582175 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086920119 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.114609792 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094959854 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.08447998 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.133931222 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.126611395 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09461872 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.09584144 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.109409502 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086063385 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.126325586 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.095140607 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.121011291 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087385082 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.119354714 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.085492404 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.101387193 seconds)
  done (took 3.521825396 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.165792457 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12205781 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.108265061 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.116291448 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.12929053 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.137033111 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.083380481 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.136229539 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.082634444 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.124858455 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.087329786 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.155026633 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096087263 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.109772879 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.08309759 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.082457608 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121818072 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.095967734 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.112641932 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097177858 seconds)
  done (took 3.249342169 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09297779 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.08711982 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109126163 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086212203 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.1198343 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090590298 seconds)
  done (took 1.590840002 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091092631 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084742461 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.114166815 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085965744 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115327924 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084041402 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.082911375 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110962873 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085294067 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109289977 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086603387 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083317291 seconds)
  done (took 2.13820789 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.504660175 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.085826933 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.112332877 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108419335 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093839878 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.083231592 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.126505777 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.084831626 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.13814937 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083676234 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.110405914 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087056112 seconds)
  done (took 2.623596124 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204701185 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094300253 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258149092 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347565323 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155528875 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162626479 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272673275 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161103104 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180283108 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110274965 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21454891 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128029966 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150403793 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174731689 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110206317 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.152524438 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170287726 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195978933 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145182642 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199650749 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158778008 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164855814 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177310441 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149102339 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108152774 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154741347 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116658447 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09979662 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169340104 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166525903 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169518577 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146320681 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135576349 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196016959 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203209715 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173995439 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273732366 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129352853 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149547142 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.160011966 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247689183 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11109231 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21723415 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124000446 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127862345 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178033765 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152562521 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175116369 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102254396 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13818651 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177389911 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172338821 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.176012343 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13350679 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297998728 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144162114 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115787434 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177404672 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18204414 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184779462 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164838871 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.116171669 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180837678 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177036602 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174807789 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114410328 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162103747 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12259327 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169417256 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191821921 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173493465 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160994884 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179507114 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132957836 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159051832 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165956152 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122173083 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174428802 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156796433 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117350925 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119726849 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134890589 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097796895 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190958659 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120657414 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199692286 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105146456 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.169521835 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198749773 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154681668 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159188394 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160965395 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162480685 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116478556 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113648317 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141717974 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121194861 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152314096 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128649545 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126863154 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13870084 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123232671 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121689197 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12019157 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155205061 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.097409989 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160127453 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160534576 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.094803103 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162925947 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147499666 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.119860983 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166332032 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179195838 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130757151 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10085143 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18891623 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154037604 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131419078 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172375576 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18164643 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151889256 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106901833 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163447195 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187840899 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139321683 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184201929 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13760843 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103334518 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137663345 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15468238 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126202864 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155730286 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127289454 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.148980129 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187043603 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09370566 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134671458 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172665199 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096989585 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126677969 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111591982 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133159599 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.105593536 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.138889348 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132952284 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151777161 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128450427 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150616926 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151711742 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139237958 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185735697 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102758351 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148726638 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145249202 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.089328792 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172654665 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179818967 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126357448 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19221899 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162285898 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18952558 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158312535 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10032376 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1732992 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125708904 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088424311 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160312454 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157489066 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159978062 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.177456964 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188241246 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16046083 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149389288 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145662659 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159439907 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.13300676 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151726963 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.134412648 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129449037 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155638383 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119439349 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093535083 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124549036 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111182107 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128054222 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129282416 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176944659 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160115101 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182239932 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156032594 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109779487 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17640488 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123182182 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160795718 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.166554704 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107549377 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.178247346 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177029952 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163565948 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140287523 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169104323 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.088467522 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121127427 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102371578 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160325138 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129713508 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104748787 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140830203 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177530141 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169057667 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145073325 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196269168 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162031668 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188275532 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.089184228 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.165340072 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164172755 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154372124 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.146915863 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128982119 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.119696111 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173786455 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139167188 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184406811 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156720531 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163656208 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190887897 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148170615 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099904798 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14627957 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161521946 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137120972 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13363783 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142686417 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133146359 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11935401 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.123812519 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094063217 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196024074 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113211469 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171217336 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145065281 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165174857 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09470157 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140434943 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157565362 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141865026 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084080184 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162284974 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179136316 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140139918 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152849129 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167399822 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099457289 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.304256085 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183906336 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178533863 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134496327 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111167037 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158783703 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156773077 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158074874 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176290207 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144796607 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145724304 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156236326 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.132181875 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104286905 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144322646 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147302685 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10958231 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.129451002 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14889818 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.10513411 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171953354 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139055894 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15515719 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159756506 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117486181 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143143884 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109713154 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224065346 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12646989 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172917811 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.146797218 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.159562774 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193600371 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093001169 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126670071 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.095390801 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174765055 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130305864 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155269713 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.17943149 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189917348 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154786559 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161647955 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106894211 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.116483876 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155851921 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116327247 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220406789 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111519146 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133287944 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181901512 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.141024769 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09936171 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160248121 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279863931 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141016176 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169577682 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082595888 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273100942 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094359464 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126703309 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156389359 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167470125 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.104152009 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.172013196 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160328601 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111904035 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156908262 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134093241 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183872855 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199865839 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16479209 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168396345 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.12933384 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127434024 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15874402 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17151701 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141730934 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105875806 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159230116 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17901379 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.182332104 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130001637 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158130172 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129856664 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156075997 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16508511 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132093125 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193648935 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099097637 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159755853 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136702346 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121016534 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124768194 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.206063899 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103499703 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167661752 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154255898 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100620742 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124377678 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147622213 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125935626 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138471153 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.122907718 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168074936 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.093216052 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159907503 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175719399 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099102704 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151592465 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141799683 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103887945 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140548863 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141825677 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104344596 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.159591999 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177374287 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.098260109 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170494174 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170367489 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15861165 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155290329 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141170072 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637799914 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.125187249 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175639667 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114995098 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179653158 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145387443 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162358451 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156048438 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118580487 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161380699 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146050922 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227436973 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160202256 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.152741507 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100806263 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141906409 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110655255 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128662998 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148068653 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128179223 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138074276 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133219383 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151572771 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113623327 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.129878497 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106442251 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179159141 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144834864 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172693524 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177454593 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105779498 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161562052 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165106325 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128094241 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15713518 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16723735 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109506721 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147136237 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127862274 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102850232 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177025387 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092407372 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156837963 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157637508 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157117546 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15882077 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101103585 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156690279 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139930349 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159535032 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099602634 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149115928 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154416324 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099311434 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125329707 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150955846 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121782463 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.146971534 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122962476 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.133923532 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176373581 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.090852029 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13024091 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277783356 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153610537 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18753077 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.110867996 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132555203 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110811453 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143968372 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149803417 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15590802 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.097366584 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129599207 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.097513001 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162924232 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139628331 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126119913 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180043537 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152695538 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193768249 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.1338522 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27559629 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107821764 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152113117 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091600139 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126805808 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109823348 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131233854 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141246093 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185911736 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175743167 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.113999701 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.130564677 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094255785 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122029567 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100648549 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157657267 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151354335 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154591416 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110055173 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.113082046 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141290823 seconds)
  done (took 72.894889306 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145611168 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129933732 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144393827 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.197650699 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163427332 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248662316 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.205741073 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233586932 seconds)
  done (took 2.553432619 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.088963673 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.138945308 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.123088884 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132669581 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.112874963 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.087794993 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.322189684 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.129597495 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.086522868 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.143470409 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.129275232 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.113068027 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.48974377 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.115044576 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.112461911 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081829985 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.111808627 seconds)
  done (took 3.599656072 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.248837803 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.476459593 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.073195104 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.189995184 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.175277629 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.090806134 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.71051792 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090472595 seconds)
  done (took 12.144123134 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118852895 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.112682779 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.159284346 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.158815493 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116254685 seconds)
  done (took 1.769059409 seconds)
done (took 113.352725822 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092805908 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095929076 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121844275 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.097417308 seconds)
  done (took 1.490861635 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099780843 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073575442 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.106246226 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077336961 seconds)
  done (took 1.453594583 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189123917 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.171293039 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.396970665 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073882625 seconds)
  done (took 1.591211229 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.108861733 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.127746902 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.100955842 seconds)
  done (took 1.441045744 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10104481 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096609814 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.125786664 seconds)
  done (took 1.423779391 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099674728 seconds)
  done (took 1.194487837 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106180028 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135104982 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107852659 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.133104855 seconds)
  done (took 1.582070743 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.092945833 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094106671 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.135912874 seconds)
  done (took 1.416605397 seconds)
done (took 13.052555359 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101616062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418389377 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.387332974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133230626 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691788125 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.409192997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.001306862 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142129346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163778223 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087925385 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103240541 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.696585169 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.990399152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.367816585 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.977484225 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.367055521 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.66731595 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115428599 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086769026 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087099033 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.986961192 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086418084 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115931032 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087268392 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.695608673 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.391461358 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115354709 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.338139415 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086651711 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123423928 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374152005 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116502119 seconds)
  done (took 16.627753438 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093342438 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174672527 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099171535 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117485906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095321112 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088462373 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120248841 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088455075 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1783482 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120761858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105530753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086783331 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120762192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087562047 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137132659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087954574 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116397824 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.08771688 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11443736 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088899079 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.10624367 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115467834 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087276845 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115769253 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087955363 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128175562 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089082199 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.08753204 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116180801 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094499779 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119219125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.087955934 seconds)
  done (took 4.545270253 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139003189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183685381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098666429 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150854238 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.174045418 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.091903381 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195245826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142650783 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152163938 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.119749665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103926472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116946224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121808634 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11754625 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107642875 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117550606 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088857968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115695718 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088819377 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087816509 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13585741 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086877623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11681626 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087293419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116418699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101850081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116528585 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088477974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087228794 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124533578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090685844 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116698207 seconds)
  done (took 4.892264949 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09198323 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.092971787 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131477197 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.103532993 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117733636 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.091721501 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.120367858 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090597805 seconds)
  done (took 1.946214086 seconds)
done (took 29.108900102 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105530106 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093848495 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131333794 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100456882 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127318677 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.099941119 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115397069 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.09983802 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099904815 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.125839461 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10467762 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115585858 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089684773 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115313177 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102300621 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092487654 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130157664 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097418346 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132061436 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.101314407 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118718847 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100284008 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.097332932 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131203478 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.101438047 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13173361 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.103743951 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123272776 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.089039231 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118446554 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.099999343 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.138318238 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.09019386 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.131716177 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093335808 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091639152 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118149569 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.091422103 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130532692 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099082832 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122755388 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099569382 seconds)
  done (took 5.699736353 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113227273 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146062821 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109915003 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083622284 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119226971 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082720196 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.142938007 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086039589 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112701826 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.1129547 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.108632273 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080073136 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080304346 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.104255741 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079056095 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077219918 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111048501 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07749485 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.107358936 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07927133 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081397062 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.104001399 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081392548 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080658022 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.106621902 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08311591 seconds)
  done (took 3.665400363 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.094704668 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.10194768 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138502768 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.170387869 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.121422949 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.125345468 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.096666733 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104397949 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.133771717 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.087043544 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.119737354 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.115724008 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134760645 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.094910208 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119491107 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.103015555 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.100689273 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.119303771 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.09280553 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137307522 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.103510726 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127833178 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.106508615 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128498172 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087498922 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088785008 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122099538 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.097270969 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.125285042 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095847325 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122993738 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.091328066 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.089357361 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.128536179 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.094379575 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.118154117 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.10736285 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126566775 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.096669113 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118203822 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097845814 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.089929213 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138531002 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127035618 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117409762 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.093808766 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120651918 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.096511041 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.11827925 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105991796 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126968748 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088402932 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.089793607 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.119164746 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088667295 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132256865 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090280794 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.089174555 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129395483 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.092818291 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.129263585 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.091956635 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131905851 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089198334 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.093138991 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119437647 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087386897 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116659021 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110165053 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123424238 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128717651 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.12357938 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.088527882 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.094764354 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123743983 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094205759 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118295349 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102478033 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126607899 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.091912929 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127646672 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.090062964 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.090559592 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135937427 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.08988062 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.118197948 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.089318309 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.093700988 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120108324 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.088595409 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131954214 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.086719578 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119700987 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.102177889 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.087279564 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119250513 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.093457437 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122297316 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.087191066 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130484039 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.093989246 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117416732 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.09888236 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.087501384 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120607148 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097996877 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.122385459 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.087898887 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.121751374 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094692994 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.087733161 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121259565 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.090330244 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.119622719 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.097797994 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.123669957 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091815934 seconds)
  done (took 13.845514158 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226429116 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212806011 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.185663086 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261326099 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.132018951 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115182702 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.20966718 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154821867 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089953353 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.156233943 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.167080823 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180593431 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.166991724 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179015484 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.137913007 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.118053034 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.106569261 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164275547 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.211482878 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.288456182 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108300436 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.127346153 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.127665821 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.156277665 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.132652715 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097560932 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.135225571 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.101501152 seconds)
  done (took 5.577047123 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.1050262 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150803766 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.093565159 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.139758406 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.113922613 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118136222 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.092392722 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119825367 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101748945 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132198896 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.088043983 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.093557555 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.125197141 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.096569438 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.119571032 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.097097764 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.128424113 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.089455087 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.120437347 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092552815 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.098926509 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136810407 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.091901565 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.117725526 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.097575575 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11800895 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090402039 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139866379 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.087995788 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.139777193 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.085888317 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.127427124 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102586542 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119290649 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.088391394 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.090363318 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.120883331 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.089954074 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.119418617 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.086996464 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.087217095 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110964412 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.087912429 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133894541 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.094690513 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113512924 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.094559726 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.123423497 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089821169 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.08611425 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.121385055 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.091895815 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.120725206 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.097153743 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.090772487 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120056534 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.091765467 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118369053 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.095431307 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.090443799 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117346636 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.087026098 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.122787133 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092813469 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.126799302 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093995764 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.086900722 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.121186244 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.092826284 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.125009949 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09122037 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.093709546 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.116658803 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.09053025 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.121840701 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.094517209 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.091577209 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.118467178 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088245311 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.119086922 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078690692 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.08885087 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.106710951 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.092306038 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.116713124 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.088168142 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.090419988 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125664148 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.104841629 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.120486704 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097461783 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120327879 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.088456471 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122107132 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086748037 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.091457694 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135580623 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138800556 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089278098 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086364505 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.134447601 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091236311 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.116970539 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079762691 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.097692403 seconds)
  done (took 12.247887006 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126532528 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.149513267 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.090853117 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.13734478 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122572746 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.153754271 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.095359845 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127165119 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.091130439 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.137294568 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.090071596 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097181185 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.119453232 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103253678 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.153697376 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.098573672 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121526876 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103437293 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123366325 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134980066 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137496001 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107366804 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.137717409 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.088963442 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.125373858 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106504821 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.157448453 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103655855 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132069877 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.108402863 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134042246 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126850357 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138461485 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09449314 seconds)
  done (took 5.21622417 seconds)
done (took 47.363077615 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.215041143 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.432691008 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.191483016 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.113026702 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.264461249 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.198700131 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.225187441 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.195879948 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.386339661 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.196067993 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.428499358 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.788198035 seconds)
done (took 58.762055684 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.20965102 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.350879547 seconds)
    (2/2) benchmarking "String"...
    done (took 1.492549436 seconds)
  done (took 3.967292353 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.733305937 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.156710465 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457155866 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.193234708 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.196372057 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.485445584 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.908680292 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.625244364 seconds)
  done (took 28.146152251 seconds)
done (took 42.181981417 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.202411357 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.228413127 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.229846415 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.179773366 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.305467218 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.217056529 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.543356811 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.221921051 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.211147238 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.18954118 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.215127969 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.210621937 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.219782325 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.563407454 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.200682438 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.199076897 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.279191929 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.721969061 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.601363548 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.195675253 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.197926943 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.209004461 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.221067948 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.199639704 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.203234185 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.202324531 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.201496843 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.206180731 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.847204952 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.203227984 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.209503931 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.741234854 seconds)
  done (took 190.702574139 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.194844084 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.196728067 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.296884549 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.24012323 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.685557629 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.399919111 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.348784381 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.752816609 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.218138731 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.228596591 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.442364656 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.201705829 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.518240875 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.169389808 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.225134637 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.261828153 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.532034941 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.520127577 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.234931791 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.332335899 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.210984283 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.49474141 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.543962398 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.3948251 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.237597641 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.228671286 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.231191253 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.204448057 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.393205011 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.46359901 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.204181338 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.236906242 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.829820345 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.052850469 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.21765473 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.241433061 seconds)
  done (took 150.313848084 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.196047524 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.197953913 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.197689711 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197345145 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.230015092 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197266471 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.787465506 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78702128 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.732575933 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.475117963 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.638877354 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.526254669 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.201865689 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291553991 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.211622597 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.201313881 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.21377898 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.225511182 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197740648 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198387869 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790117472 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.21473082 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.349716418 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.380364647 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.213835383 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23138576 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.596178009 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198427025 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231388574 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.531340326 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246999473 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199281373 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.607467137 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.379528087 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313031632 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202691587 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232032676 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.199566013 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.480081145 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199611097 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.199788485 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.202555848 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.911263302 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202154839 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.787837086 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204574989 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.170868539 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200150975 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199872581 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.188752306 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.931320128 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.204907517 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.199615545 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203091153 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.201085961 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200380138 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232533846 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.200434567 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.297281141 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.201187644 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.204313402 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233524703 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.201852294 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.283475606 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201671191 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.306551263 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.259601312 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.309973212 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796345614 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205240551 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300561498 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323854223 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.20133812 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.201751936 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20111507 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.201043745 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.314044513 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.201666159 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.626149924 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.380216164 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.218681994 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.644294909 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.206598272 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.20179898 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.29949185 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.20246031 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.6349822 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.207111771 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.202944187 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.976084948 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300898797 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.202974471 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203330294 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202251585 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.628830111 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.776948055 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.482204211 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.207732343 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.424657529 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.206067916 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.640438966 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.768666427 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.90944989 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.20705489 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.203244395 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31635819 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.380839212 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.220590794 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.20399211 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.641764137 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.208915939 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.262958962 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.208112029 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.602521707 seconds)
  done (took 366.13592735 seconds)
done (took 708.278097852 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.826128685 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.821584475 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.935374902 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.811568392 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.776444909 seconds)
  done (took 10.304571566 seconds)
done (took 11.439547088 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.394598261 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.396797393 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267853456 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.39752043 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236282459 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.411094161 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.375185361 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.228766031 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.306052604 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.289019809 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.308545101 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258207671 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238959832 seconds)
  done (took 18.243026352 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535714715 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.543316609 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271553415 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537201809 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248785517 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.544999662 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.414224906 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.424518274 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.409199979 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.222809274 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217896214 seconds)
  done (took 16.505584977 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.533630511 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.544048312 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27692846 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.538602297 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250164167 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.548560848 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426745724 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.438267406 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.414761369 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225713659 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217735317 seconds)
  done (took 16.550672058 seconds)
done (took 52.434583702 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.214768061 seconds)
  done (took 2.351400138 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.254557279 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.417459364 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.237860346 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.22094716 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.21597061 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225638473 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.221281161 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.21931363 seconds)
  done (took 11.151058899 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.212041807 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.211696657 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.213884198 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.213283832 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.213866629 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.211257008 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.211981795 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.212040616 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.211630092 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.21411287 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.211876337 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.214801198 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.215295249 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21460582 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.212543169 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.215379346 seconds)
  done (took 20.548030339 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.214076618 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.211544908 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.213050381 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.212719546 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.211897517 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.212889039 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.213118837 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.212111321 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.2130932 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.211930936 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.213284543 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.212523068 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.213630682 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.214526896 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.212069411 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.213313115 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.214400407 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.213231303 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.217671447 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.213330946 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.213617508 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.214557885 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.213495587 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21414232 seconds)
  done (took 30.260150214 seconds)
done (took 65.44878324 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.855511621 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.949373156 seconds)
  done (took 6.943217536 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.276325756 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.275516935 seconds)
  done (took 3.69309284 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.216983319 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.215900858 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.215647286 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.217459558 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.216430593 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.216907567 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.216857614 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.215751729 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.217037647 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.21689065 seconds)
  done (took 13.304740694 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.218374612 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.216110683 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.214830523 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.216622018 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.217723326 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.214639634 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.216853317 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.217104759 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.219599129 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.215283731 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.218172371 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.215005469 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.218360823 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.215814942 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.217540128 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.214929888 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.215098184 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.218063061 seconds)
  done (took 23.040953912 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.229988841 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.239146002 seconds)
  done (took 3.609976288 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.345164229 seconds)
    (2/7) benchmarking "second"...
    done (took 1.2570537 seconds)
    (3/7) benchmarking "month"...
    done (took 1.325949159 seconds)
    (4/7) benchmarking "year"...
    done (took 1.314952268 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.256902301 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.235917829 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.256458247 seconds)
  done (took 10.133323915 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.218593383 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.407748679 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.506613412 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.827263554 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.219420598 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.222253172 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.100732474 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.222576942 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.224737593 seconds)
  done (took 14.091566249 seconds)
done (took 75.95665338 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.254874129 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.214441577 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.527949483 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.229109228 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.230957828 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.554454829 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.249682069 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.347543238 seconds)
done (took 37.752565413 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.219528753 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.202513725 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.098097927 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.225921786 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.308123965 seconds)
  done (took 18.97792066 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.307469545 seconds)
    (2/2) benchmarking "read"...
    done (took 1.55159379 seconds)
  done (took 5.000814722 seconds)
done (took 31.342237136 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220737178 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.22036486 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.217395228 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.219779942 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.216939225 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.218214526 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.218168651 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.220167792 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220711932 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.221446055 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.221523731 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.220330092 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.220720129 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22031346 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217534222 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218348802 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220215109 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.217851687 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.218088358 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218425122 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218040343 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220494444 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.21799837 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.218537539 seconds)
  done (took 30.406935044 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.22040601 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.219770439 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.220872303 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.22116826 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.219898134 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.221264 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.220613074 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.218512455 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.220486025 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.221124314 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219163765 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.21855454 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.221344059 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.219358376 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221380421 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.219048006 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221892351 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218920704 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221527336 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.219253731 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.221469838 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221133668 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.219575905 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223015863 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.2196094 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219235619 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.222157607 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.221674448 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223290204 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.219678299 seconds)
  done (took 37.760273408 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226936354 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.229996298 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.223363716 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.223029068 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.223341074 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.230827857 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.222920927 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.223091125 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.222991551 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.223758158 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.223381701 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.223271304 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.223954152 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.225422294 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.224092821 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.224372973 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.224057165 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.2237217 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.224079398 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.224538598 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.223507412 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.223828642 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.224401328 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.223589685 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.223560427 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.224493326 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.224115381 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.223352064 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223729593 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.223801531 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.22486456 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.224399384 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.223272082 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.224145853 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224959754 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.224644209 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.229439939 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.233090697 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.224388622 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.225108804 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.224954549 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.225740593 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.225233378 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.225406401 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.224414687 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.225250908 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225863455 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.225112907 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.225641285 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.224560339 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.224453095 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.22522823 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.22548129 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.225371844 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.226038622 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.225465853 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.225856623 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.225602551 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.225723381 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.225849292 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.225977863 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.225707065 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.225899947 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.226422661 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.227144304 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.226194069 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228209517 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.227005914 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.227491295 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22656257 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.226406093 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.226869989 seconds)
  done (took 89.363480532 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.227459741 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.224992085 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225159002 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223558873 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224610457 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.226783253 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.225073489 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226974212 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224888211 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.227919962 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227402399 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.225406962 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225193697 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.228956459 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227757455 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.225712913 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228703841 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225367743 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.226832083 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229472974 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228161974 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.226153553 seconds)
  done (took 28.133034932 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228495904 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230473039 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.225621834 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230408381 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227983297 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229792678 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.228740528 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229561083 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228992003 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226034581 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225843574 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228806395 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228619846 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225394598 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226422613 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228129443 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229498669 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228044512 seconds)
  done (took 23.257769673 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.227070226 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.226067635 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.229309958 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226617499 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.227729962 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.229249851 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226677963 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230747124 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.230555089 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.227226515 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.230098468 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229728677 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.23044748 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227470498 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230132724 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228295053 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.229983691 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226832813 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230872216 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227698559 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228665101 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230687923 seconds)
  done (took 28.18356544 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230589816 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.231067854 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.229568285 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22755782 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.228772205 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.231025407 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.230649404 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.22796047 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.699359647 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.231320138 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228461248 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231957497 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.230469196 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23044615 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.229476024 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22823309 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.231760136 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.229364395 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231060163 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.228868263 seconds)
  done (took 26.221076805 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234189175 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233206033 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.234466257 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234232184 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234106955 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.235604379 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234058353 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.234336655 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233452102 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.233978638 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234574907 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234331724 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234404443 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.234428195 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233445075 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234768611 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235034119 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234988911 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235446393 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235603413 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.234298634 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234982806 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235124253 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235606565 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.235380051 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234659703 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234800666 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.235029836 seconds)
  done (took 35.723174535 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233731878 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234545431 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.231597174 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.232760422 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.232114945 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.231689582 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.231583327 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.231749662 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235222147 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231268983 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.234287155 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.234109949 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233573024 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.23442869 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234271039 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.23455304 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234788747 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.232863505 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232124012 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232587763 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.235332814 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235290674 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.235041505 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23228135 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232384063 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.235122751 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232842678 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232611124 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236006238 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23266772 seconds)
  done (took 38.160152866 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.278774781 seconds)
    (2/2) benchmarking "in"...
    done (took 1.273909467 seconds)
  done (took 3.710093075 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.232813635 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235580688 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.236253067 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23381821 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233856842 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236581493 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235901833 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234491184 seconds)
  done (took 11.036435906 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.23722956 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.236454619 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.236871675 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236359464 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.237963488 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.237069616 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246007351 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.256963776 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23831993 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.239618145 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.243650665 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.245201217 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.240593573 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238457799 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.237884822 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239803152 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.237727679 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.239392838 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.239953835 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.23968894 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238645665 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241946598 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241154363 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.237060967 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.241240713 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.250618578 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.244142659 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.239500275 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239053276 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243344586 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240331186 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.236955215 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.23961892 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.239620425 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.239990649 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.239939153 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249644586 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262747254 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.246564343 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240898552 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240405535 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.236466666 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241004287 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.241065651 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240899776 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.240063293 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240361478 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.237013138 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.24008318 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.243844997 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.245963098 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240471864 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.237826291 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243949682 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242448339 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247723439 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.261113745 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.244975571 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.251332829 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.253197099 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.254458356 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.25043741 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243510182 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.241692466 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251643331 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.266693814 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248929509 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.258812539 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.239070973 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.241838693 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.249390164 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255179954 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.267949952 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.242319164 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241794022 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.242179416 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242626114 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243736583 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249834606 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.264350895 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.24177735 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243225329 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253257709 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267048262 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.242555113 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.242987415 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.243082938 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.243625333 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.24421327 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253987837 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.263863345 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.243003939 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.242855725 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.243717937 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.245027878 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.244044739 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.243429882 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243972347 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.240123169 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.242872746 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243294273 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246885753 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.252910314 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244421544 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244305823 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251286774 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.244177601 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244110069 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250444905 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.244509829 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243658228 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.246015684 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.25127177 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.241044541 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248567011 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.252463662 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.244760408 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.245364605 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.245777047 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.244878498 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255559862 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.272226989 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.244995646 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244852605 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.250907425 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.257438713 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245193244 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.247467763 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.245135083 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.242356297 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.241698238 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.245701069 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.246077613 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.246819805 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245881248 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24692444 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.24298596 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.24585823 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.24650075 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.247450086 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.248112871 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.246148747 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.246587979 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.248391832 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.247029834 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.247815517 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.253685872 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.247409972 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.248659004 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.247972538 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.244406963 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247720279 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.248006962 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.24786009 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.248796959 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248755373 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.249714752 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.246845336 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247663139 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.246659796 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247001664 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.247637629 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250845881 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.247585636 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.250888108 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.24629831 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.244511259 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.247264471 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.248719052 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.247763648 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.247913464 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.247502285 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.251713118 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.256999562 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.248127107 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.24926056 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.252033954 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249391084 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24864112 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249014838 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.252472176 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.257385045 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.249141485 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.256960151 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.250214541 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250679948 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.24944978 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.249472533 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.249753534 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249796007 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.252779133 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.257703387 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261971701 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277067655 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.25101807 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.254405634 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.250554852 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.255908437 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.25491363 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.250909709 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.25071091 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250424229 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251575193 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251884899 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.254110103 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.250895149 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.250472795 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.251308139 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.251997191 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.251166541 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250863754 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.25123262 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252813905 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.247752626 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251112066 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249925062 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.251606595 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.248003522 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.249596592 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250643127 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.251703138 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.251217029 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.257417614 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.248492029 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253544455 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254003687 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.251847879 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.250593746 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252098127 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25289224 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.251956629 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260047429 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.271571243 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252786714 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258048806 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272872774 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.252029562 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.25531364 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.252643856 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.248816759 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.255736082 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.261381141 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.25177377 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.253260255 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252990097 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252559822 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252832739 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.260244064 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.250365632 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.253069071 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.252864109 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.254911565 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.249803063 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.254710612 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254247744 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.252677891 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255205981 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254118255 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.254229271 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25523969 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.25544678 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.254434884 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253667542 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257998713 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.263049236 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.260733475 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254455215 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.257317372 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255467266 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.258452759 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.254983609 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.254928263 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.255116511 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267534997 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.28048092 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261522272 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.25587799 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.254963331 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260805201 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.257016555 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259019597 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256028986 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256362396 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.25601375 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.255733321 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.252011428 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255711939 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.255640731 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256834904 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.258313747 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.260083777 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.256526088 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.255127952 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.255656578 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.256693427 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.25698154 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.255654962 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.256633352 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.257853895 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258129369 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.255025155 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.257414052 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263260512 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276514246 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.25814993 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.257564526 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.256774527 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.256476283 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.257765575 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.257718588 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26097392 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.265115321 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.260281769 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.266730578 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.258954558 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267471415 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.258258029 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.261184752 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.266534424 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.256440067 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.257304589 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.259129596 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258964489 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265414901 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.277919798 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.260426108 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.262294207 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25851324 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.258316357 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.259625914 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.259517616 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2585307 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.259460937 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267765521 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.282386157 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.262904583 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259928076 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.255786718 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.259020076 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.258880436 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.257835627 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261722517 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.259611424 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.261347375 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.259677554 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.260680671 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260560842 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.2610227 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.260265845 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.258082027 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.260186271 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268128628 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.282389808 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26508748 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.261061574 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.267932184 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261489847 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268709854 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.281727185 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.261149854 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.261643078 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.260590465 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.263270834 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.260565882 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.26174803 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.262263438 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.261834338 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.265646561 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.261363734 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.263743497 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.262725878 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.261732609 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.260965391 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271468463 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286088017 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.264151976 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26657262 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.259458832 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.263536152 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.266796807 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.262206546 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.26098367 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.264788118 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272928241 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270024444 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.26212351 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.262670052 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261930867 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263527006 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.2630691 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.263370726 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.263766565 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262994241 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.264196319 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.263828503 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26592536 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.26265733 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.263590944 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265815229 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.264085981 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.274543129 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.264347307 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.264413686 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264222114 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.265262442 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.264712817 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.26445142 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.265193478 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264696726 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265257625 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.266523885 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27248679 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.270608876 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.266750837 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.264877719 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.265398968 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.264340955 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.264914834 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266134865 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.264991628 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265912714 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.266399737 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.266484724 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265813236 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.265203584 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.265628811 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.265516146 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265352542 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26863004 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.27218779 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266008504 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.262938197 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.264948588 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266207869 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.264230799 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.266605439 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.272778184 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269340325 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.278198565 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.275631579 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.270601926 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266255103 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269721415 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.274376826 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.265752551 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.266847974 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.267468838 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.266475579 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.267721733 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.270647913 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267412969 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.273613332 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.266937581 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.265983522 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275960852 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.290176907 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267639927 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.269754507 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.271509308 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.267246182 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.265214144 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267597156 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.267829036 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274337303 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.288328198 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268575689 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26885976 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.267420327 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.2696081 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272315716 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268128729 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.269092375 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.265444476 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.268306181 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268298263 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2688796 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.264975323 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.267317441 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.26771323 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.271989545 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.274854852 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.266102481 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271231433 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.268927213 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.269530473 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269442661 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26896135 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.265951999 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.266251422 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.268062292 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270224845 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.269422523 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.272030477 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.268223675 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.271689546 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.270874273 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270049522 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273342968 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.280220108 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277733114 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.266321564 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.269402172 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270430667 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272791731 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270700787 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.270520656 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271360442 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.2710938 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.269875641 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269842715 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.269459468 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.273225713 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286851302 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.293214934 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27080337 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.271870446 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272783016 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271318224 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.268496999 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.270639482 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.273784402 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.274673195 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.279464722 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.272426074 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276807683 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292427479 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273006151 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.275321952 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.275217018 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.278623707 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.274008297 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271640708 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.27214755 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.276683959 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.288023469 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272031681 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281488712 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.303950858 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.291999147 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.273302498 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.272904838 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27173048 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.273226777 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.274367868 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.272739245 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.272557372 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272368306 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.274100698 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.274732046 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279586849 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.274791002 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.274406507 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.27348732 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.272881384 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.274234452 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.270529035 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.273513521 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.272858226 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.274677944 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.27398539 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.273864514 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.273685101 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285752624 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.301869437 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274819496 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.274789871 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.271524164 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.278424911 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.276979156 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285533808 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.282426011 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.274263752 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.275782923 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.275279194 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274714271 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.273262319 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.275743203 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.275066526 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274596951 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.272484968 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.288680507 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285029133 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.280797353 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.273995153 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276961891 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.27614376 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276118913 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277030137 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275992393 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.276042947 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.278006932 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280075402 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.276006874 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.27511594 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.279901827 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.284035037 seconds)
  done (took 751.756641463 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27391468 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27323574 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273231406 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273755197 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274100737 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273783206 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273521704 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273575601 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.273931189 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273790064 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273434334 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27306584 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.273193273 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2738101 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273970481 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273941433 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273478679 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274680416 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274557769 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273482037 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274288752 seconds)
  done (took 27.943540163 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.276411412 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.274023096 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273717363 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27706834 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274787982 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.276973574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.274929561 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277331111 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.277341339 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274513017 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.277383677 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276809188 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.274556544 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.274430619 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274503023 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278418608 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.277596239 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275186478 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.276940783 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275780769 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277266504 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.275120645 seconds)
  done (took 29.266307425 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.278535986 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.279091139 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.277951589 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.275865132 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.279069874 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.275460829 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.278653631 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.278933647 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.279421176 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.279256193 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.278618213 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.281062021 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.286475268 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.28423589 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.281002984 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.279897137 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.423439843 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.280113519 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.279388406 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.279965391 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.276798116 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.285396433 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.278072379 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.27784938 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.279411933 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.281403025 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.280552966 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.280096894 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.280209768 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.281452349 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.283642705 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.279940363 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.280194964 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.282425149 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.279671515 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.281964422 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.284044328 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.281426566 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.277635456 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.28027135 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.290104313 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.302021794 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.281324071 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.286600148 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.281228157 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.281019816 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.284701578 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.289605033 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.278122536 seconds)
  done (took 64.120012558 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.28091659 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.281030466 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.279723096 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281413286 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.282032988 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.280857896 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.281861953 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.280886845 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.279596213 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.279214207 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.281781667 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.279720577 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280108442 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.282863811 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.282803664 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279955912 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.279643913 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279569112 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.279466998 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28079435 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.279805004 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.282735297 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.284108232 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.281821371 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283952316 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281148211 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.28050219 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.283674349 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.281858017 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.281294204 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.283712757 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282635454 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.283712246 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.281292946 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282292489 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.283062392 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.28421401 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.280173582 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283977909 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.282312054 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.284548345 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284073355 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.284137516 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284838594 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281891573 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.281844029 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282047107 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.281690962 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.282140648 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.285084389 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.284246563 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.282753716 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.284349336 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.282497758 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.284056074 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.285136573 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283055818 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.282572211 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.285374899 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283660998 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.282888637 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.28511076 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.283978718 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.285181124 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.285641847 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.283523511 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.283500825 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.284565106 seconds)
  done (took 88.408494534 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286379338 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.285793488 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285944479 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285915574 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285795107 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.286205252 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28634523 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.286967303 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286201677 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285130599 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287385548 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286284425 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.285987208 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28685523 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286936957 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286708332 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287031442 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287220508 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287280577 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286727323 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.287473219 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286302413 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287294825 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.287532263 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286441407 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.287869711 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287206597 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287467827 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288144096 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.287577179 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287235281 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.288149732 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287702447 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286976797 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.287819199 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.288145181 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287468687 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287212342 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.287632376 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28888474 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287889219 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288600972 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28787144 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288752519 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288602834 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288676184 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288582363 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.289667556 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289134372 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287984953 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.288765089 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290019014 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2893611 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290315508 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.290285532 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.289530263 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289811467 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289309631 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289433489 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289835901 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288445146 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.28936547 seconds)
  done (took 81.044564357 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289746547 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.290315789 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.287571714 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.287604766 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.289705943 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288662062 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289267891 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290052595 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.289759626 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.290472349 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290918634 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288843814 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289209781 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291446836 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.288447046 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289482759 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28847186 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287971414 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290582232 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.288778717 seconds)
  done (took 26.994243004 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.287529769 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290803796 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.287575714 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288096879 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.289672372 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.287667159 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.290562299 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290563696 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288029851 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290973984 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29157276 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291240959 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287817505 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.289659554 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.291426613 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288754887 seconds)
  done (took 21.839175945 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.288244169 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.291864901 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.290932115 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.291335631 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.28834207 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.288505941 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.291701683 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.289081557 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.289218216 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.291338851 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.29189781 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.292413553 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.292533978 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.2926319 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.288718356 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.292867466 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.289536391 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.289329431 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.291947811 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.291936717 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.291232814 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.290656676 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.293610029 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.294375943 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.290778948 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291925259 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.290460276 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.291572046 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.29003808 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.293478472 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.290818769 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292442178 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.290587458 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.290464295 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293251406 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.290677905 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.292721724 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.293262552 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293939097 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.2944061 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.294272679 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.291676464 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.293065564 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.293639325 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.290344199 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.294512476 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.291130531 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.292378719 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.291428972 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.292903406 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.294788172 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295354481 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.29451079 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.29552 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.295289926 seconds)
  done (took 72.265594318 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295105646 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294466094 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.292683705 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.295146936 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295824842 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.292216677 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295193653 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293444745 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292393044 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.29569169 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293565777 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296985515 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293464871 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295955677 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293508827 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296496594 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.294197657 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293601107 seconds)
  done (took 24.511648121 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293028999 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294264958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.296863772 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293334749 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.293565908 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295963615 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293276557 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.296324182 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297089833 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29415609 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294497825 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.29683245 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296298071 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.296528876 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294452901 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294911233 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.297679601 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295729607 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.294846244 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294595322 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296435157 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29707732 seconds)
  done (took 29.710992481 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.297422143 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.295460196 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.296716959 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.314298253 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.31678854 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.319636182 seconds)
  done (took 9.055277171 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305772537 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298087363 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295255731 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298494946 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298036458 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295722763 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295664314 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298395599 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298531153 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296438523 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296211122 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299188299 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298832405 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296503391 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298776513 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298478077 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297221753 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297196384 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297309425 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300255079 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298150252 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298686533 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298168216 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296919307 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298968156 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29743431 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2989636 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298117908 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296921442 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300418297 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299604617 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296679926 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300070829 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298201725 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300077611 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299516769 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298644468 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299643929 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300408981 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297798201 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300093988 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300113053 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300704156 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298024186 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299537154 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298270563 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298271489 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298945659 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29806891 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301275705 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301955676 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298944965 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301167869 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301485748 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300992152 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301877721 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299330987 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298763824 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301825444 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299613536 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300113631 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30159779 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299405402 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299683928 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300769862 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299978341 seconds)
  done (took 86.975014354 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299332712 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300476428 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30060758 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301540082 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29921725 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299508329 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30076758 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300669647 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300430953 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300606396 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302851749 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300850463 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300609172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301567148 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300866782 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301491828 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301592009 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30116271 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300813451 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304426993 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301426294 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301589119 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301701744 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301914049 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301483758 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304265055 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302374186 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301381252 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301746389 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301411743 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302295663 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300655314 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302244704 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301024259 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302721451 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301529214 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301277808 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301033062 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301800095 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303484006 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302014209 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30442888 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302410517 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30245419 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30220254 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302756752 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302084666 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303093793 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303174708 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30238238 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303437909 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302465771 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303216851 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302938645 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302854101 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303018091 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303943998 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303389014 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303145715 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305452832 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303259469 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303214209 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305939969 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302854366 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304103955 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304242993 seconds)
  done (took 87.161799433 seconds)
done (took 1754.153943877 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.468253058 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.421858279 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.304420774 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.325808471 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.305449735 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.320094433 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.306091622 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304238951 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.305332506 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.305066941 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.304869932 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.49216028 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.307550771 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.305545044 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.30644307 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.399465878 seconds)
  done (took 42.706313936 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.336028768 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.312829096 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.436130906 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.334775074 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.335355787 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.511010634 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.373606297 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.311801215 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.501645455 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.360771307 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.103978847 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.341728937 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.311461113 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.589782631 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.336897727 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.508889652 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.588875464 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.120349237 seconds)
  done (took 30.939896597 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.813069601 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.347688935 seconds)
  done (took 9.385395201 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.333734965 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.311218993 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.312627625 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.310990597 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.303336708 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.303425855 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.310028648 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.325401271 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.338975593 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.448784759 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.319015523 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.323028272 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.332251281 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.313373458 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.308136443 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.3526017 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.461173226 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.31005833 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.308192836 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317084685 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.313083816 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.402795224 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.356033679 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.310191791 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.447275044 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.348558447 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.316018108 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.321030754 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442788494 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.310813582 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.311714098 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.312983213 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.313712208 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.243130099 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.785039997 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.306606746 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.340110736 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.321019601 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.310975019 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.465051778 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.313980038 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.319323781 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.306422013 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.785050444 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.48189266 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.441311543 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.68156549 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.32053329 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.316320143 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.378127982 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.313858896 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.315589192 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.358571002 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.115944043 seconds)
  done (took 111.612739828 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.350712889 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.698857998 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.47549226 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.331700179 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.041050654 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.91576462 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.32565194 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.621131785 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.337337008 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307653775 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.59698595 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.84081933 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.33354909 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.37288927 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.471426009 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.344699954 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308419608 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.102289557 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.325630739 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.313310077 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834978347 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314197132 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.326414471 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.477424203 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.348105083 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.790566844 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.815858324 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.768659807 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.326492461 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.30807803 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.800693512 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.33569432 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.380398697 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.309880464 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.582085992 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.695485798 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.671544252 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.309217485 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.326242625 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.310409052 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.333913011 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.782763182 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.676535477 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.309100723 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.308847811 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788886684 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.309365285 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.311932192 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.313095332 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.511559653 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.926968995 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.310094612 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.889812966 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.315204979 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.671776618 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.37764413 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.356006317 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.82027721 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309520311 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.419808006 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.344489861 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.311104178 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.317211421 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.31390713 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.310000184 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68317333 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.532306489 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.311717917 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.686927008 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.795266369 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.328921789 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.870153893 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.170034798 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.336571749 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.36639611 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.314015779 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.840415237 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830714986 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.339743489 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310474446 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.670013136 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.311151068 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.603205485 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.329588287 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.311527075 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838835072 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.317733827 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.365000533 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.318117447 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.326021952 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.981484907 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310675878 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.59417371 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.381755266 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.312998803 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.311826717 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.340828224 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.313278043 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.311634291 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.314271564 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865484848 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.334961284 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.453173751 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.3361375 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313834013 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.335311611 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.3153076 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.313698634 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531699823 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.922637458 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.318788731 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.312471247 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.313743565 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.322813934 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.476948029 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.318940967 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.645490738 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.315977389 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312527994 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.320044084 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.963356776 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.369624141 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312975522 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.314560786 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.259873552 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.521546796 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.33329178 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.332089021 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314926167 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.333378178 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.652553488 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.336063465 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.365993159 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.317722809 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040522268 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.367126409 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.3214735 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.584890312 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.322509065 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.299807893 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.332225183 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315349724 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60906674 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.593311726 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.4184991 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.318334934 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.333753574 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.026078762 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.339638966 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454697342 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.336183831 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.359938863 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51275715 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.447297759 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.316259628 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.916071081 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.318054428 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.530296277 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.315938294 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622095331 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.830700713 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.334542706 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.318366929 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.04576541 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.065979982 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.002371852 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.321400578 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.606123391 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.320447216 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.796838927 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.315899627 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.316711465 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.797855434 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.320210141 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.32527591 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.317407739 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.317039759 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.477441251 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492127521 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.829467784 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32482051 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794357753 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335162536 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317404066 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.323094793 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.31981087 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.666772742 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.338783532 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.316600379 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.336335787 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.319710394 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.320177162 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812549351 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.197983658 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.325147481 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.471186406 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.978011127 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.336432751 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.319090871 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.065348915 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.990651579 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.855849092 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.356355169 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.653219257 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.318316222 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.358878701 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.974896326 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.399225052 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.818356923 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.318814394 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.318234405 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944676923 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.337089983 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.365846968 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.319369983 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.319535996 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.883679165 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.33733076 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.321264792 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.658996367 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.340012049 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.568549294 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.319836789 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.36527375 seconds)
  done (took 1107.880902408 seconds)
done (took 1303.747821999 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.319154859 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.325521799 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.312821279 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.326303738 seconds)
  done (took 26.525577924 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.33103023 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.327291342 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.328017516 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.3267792 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.332380005 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.327453869 seconds)
  done (took 9.21543946 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.464783106 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.32620236 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.327524815 seconds)
  done (took 19.360285482 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.550579703 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.691000271 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.685127566 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.730827315 seconds)
  done (took 10.900845151 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.330533651 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.331047344 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.330398895 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.334522041 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.33487545 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.335102025 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.335032557 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.335305227 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.334579646 seconds)
  done (took 13.244182145 seconds)
done (took 80.487904841 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.311232062 seconds)
    (2/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.311406119 seconds)
    (3/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.343160714 seconds)
    (4/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.433761994 seconds)
    (5/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.326672871 seconds)
    (6/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.732666272 seconds)
    (7/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.417421768 seconds)
    (8/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.435389256 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.586455809 seconds)
    (10/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.460949894 seconds)
    (11/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.373497006 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.364690474 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.350868538 seconds)
    (14/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.502691529 seconds)
    (15/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.331503745 seconds)
    (16/286) benchmarking ("sort", Int8, true)...
    done (took 6.325853236 seconds)
    (17/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.329600435 seconds)
    (18/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.324596544 seconds)
    (19/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.335150548 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.301419388 seconds)
    (21/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.351790388 seconds)
    (22/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.389322828 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.313882538 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.224704616 seconds)
    (25/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.433551466 seconds)
    (26/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.522043538 seconds)
    (27/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.614203472 seconds)
    (28/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.842609052 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.331658511 seconds)
    (30/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.411577514 seconds)
    (31/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.380554189 seconds)
    (32/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.356706745 seconds)
    (33/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.366277894 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.435448538 seconds)
    (35/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.32591543 seconds)
    (36/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.593976537 seconds)
    (37/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.836709058 seconds)
    (38/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.031990732 seconds)
    (39/286) benchmarking ("sort", BigInt, false)...
    done (took 6.33093459 seconds)
    (40/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.234248574 seconds)
    (41/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.337258578 seconds)
    (42/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.036093428 seconds)
    (43/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.411077596 seconds)
    (44/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.313793975 seconds)
    (45/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.162688897 seconds)
    (46/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.353054232 seconds)
    (47/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.316783434 seconds)
    (48/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.355200228 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.439203629 seconds)
    (50/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.335246013 seconds)
    (51/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.45527539 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.57554795 seconds)
    (53/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.23516297 seconds)
    (54/286) benchmarking ("sort", Float32, false)...
    done (took 5.352281627 seconds)
    (55/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.867101487 seconds)
    (56/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.007779875 seconds)
    (57/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.328383106 seconds)
    (58/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.395284372 seconds)
    (59/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.570091497 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.40334805 seconds)
    (61/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.352565465 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.257503164 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.327863781 seconds)
    (64/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.081373276 seconds)
    (65/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.419215343 seconds)
    (66/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.338395321 seconds)
    (67/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.429714323 seconds)
    (68/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.354801411 seconds)
    (69/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.353568574 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.118369219 seconds)
    (71/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.71811117 seconds)
    (72/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.208947666 seconds)
    (73/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.347291559 seconds)
    (74/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.318246618 seconds)
    (75/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.565160399 seconds)
    (76/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.393408688 seconds)
    (77/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.791423109 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.316299557 seconds)
    (79/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.355130134 seconds)
    (80/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.165058708 seconds)
    (81/286) benchmarking ("sort", Int64, false)...
    done (took 5.581963931 seconds)
    (82/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.33086698 seconds)
    (83/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.355528286 seconds)
    (84/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.334032968 seconds)
    (85/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.354889169 seconds)
    (86/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.318336486 seconds)
    (87/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.17599667 seconds)
    (88/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.177108364 seconds)
    (89/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.160044035 seconds)
    (90/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.316945385 seconds)
    (91/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.73263484 seconds)
    (92/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.452001586 seconds)
    (93/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.385581216 seconds)
    (94/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.319985668 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.329651506 seconds)
    (96/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.821262138 seconds)
    (97/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.339754514 seconds)
    (98/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.317922071 seconds)
    (99/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.46344671 seconds)
    (100/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.317469687 seconds)
    (101/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.338412792 seconds)
    (102/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.227263299 seconds)
    (103/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.486822357 seconds)
    (104/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.869768384 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.347331836 seconds)
    (106/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.385460419 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.700347922 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.778500184 seconds)
    (109/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.034204475 seconds)
    (110/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.506409624 seconds)
    (111/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.33098336 seconds)
    (112/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.396935686 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.535245938 seconds)
    (114/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.330432669 seconds)
    (115/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.361194954 seconds)
    (116/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.746221122 seconds)
    (117/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.394767481 seconds)
    (118/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.387305554 seconds)
    (119/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.335609081 seconds)
    (120/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.13994819 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.331410402 seconds)
    (122/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.35032939 seconds)
    (123/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.353851694 seconds)
    (124/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.455462106 seconds)
    (125/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.076027402 seconds)
    (126/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.35728556 seconds)
    (127/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.171832303 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 1.870092341 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.355000164 seconds)
    (130/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.595513424 seconds)
    (131/286) benchmarking ("sort", Float32, true)...
    done (took 6.332817523 seconds)
    (132/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.529463814 seconds)
    (133/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.932631857 seconds)
    (134/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.797514891 seconds)
    (135/286) benchmarking ("sort", Float64, false)...
    done (took 5.699418724 seconds)
    (136/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.032137529 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.341266439 seconds)
    (138/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.530521126 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.161424629 seconds)
    (140/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.590687637 seconds)
    (141/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.358135047 seconds)
    (142/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.358981869 seconds)
    (143/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.336775503 seconds)
    (144/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.239662298 seconds)
    (145/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.323859785 seconds)
    (146/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.46600782 seconds)
    (147/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.343197158 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.325660281 seconds)
    (149/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.396567959 seconds)
    (150/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.322449448 seconds)
    (151/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.415439385 seconds)
    (152/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.332899099 seconds)
    (153/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.037087555 seconds)
    (154/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.343525888 seconds)
    (155/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.170204281 seconds)
    (156/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.359559982 seconds)
    (157/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.360359778 seconds)
    (158/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.878131763 seconds)
    (159/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.865327894 seconds)
    (160/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.744320024 seconds)
    (161/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.350137985 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.123469084 seconds)
    (163/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.360970003 seconds)
    (164/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.938195725 seconds)
    (165/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.356749455 seconds)
    (166/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.791796911 seconds)
    (167/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.321929349 seconds)
    (168/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.429482637 seconds)
    (169/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.322009513 seconds)
    (170/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.140299947 seconds)
    (171/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.322324726 seconds)
    (172/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.461110593 seconds)
    (173/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.089965706 seconds)
    (174/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.339864943 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.175653362 seconds)
    (176/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.94380145 seconds)
    (177/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.032514626 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.335165895 seconds)
    (179/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.341505104 seconds)
    (180/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.386681796 seconds)
    (181/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.3514169 seconds)
    (182/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.39190185 seconds)
    (183/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.630124394 seconds)
    (184/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.84228042 seconds)
    (185/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.03935727 seconds)
    (186/286) benchmarking ("sort", Int8, false)...
    done (took 4.363683357 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.367871308 seconds)
    (188/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.604476664 seconds)
    (189/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.94503761 seconds)
    (190/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.122211519 seconds)
    (191/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.32406021 seconds)
    (192/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.345533398 seconds)
    (193/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.377534897 seconds)
    (194/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.083648323 seconds)
    (195/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.382325495 seconds)
    (196/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.334568186 seconds)
    (197/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.384213405 seconds)
    (198/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.880809263 seconds)
    (199/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.324444934 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.961702414 seconds)
    (201/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.42358899 seconds)
    (202/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.324477468 seconds)
    (203/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.972383286 seconds)
    (204/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.965854323 seconds)
    (205/286) benchmarking ("sort", Bool, true)...
    done (took 5.403145614 seconds)
    (206/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.276976443 seconds)
    (207/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.261008593 seconds)
    (208/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.393172429 seconds)
    (209/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.84629079 seconds)
    (210/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.325158384 seconds)
    (211/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.921060335 seconds)
    (212/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.812612586 seconds)
    (213/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.728986683 seconds)
    (214/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.331502032 seconds)
    (215/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.351967719 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.765178821 seconds)
    (217/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.437999761 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.077089637 seconds)
    (219/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.401744393 seconds)
    (220/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.751260474 seconds)
    (221/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.375106555 seconds)
    (222/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.545596012 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.022979411 seconds)
    (224/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.611493878 seconds)
    (225/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.344714162 seconds)
    (226/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.607051074 seconds)
    (227/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.306277099 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.395855453 seconds)
    (229/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.389658125 seconds)
    (230/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.639017735 seconds)
    (231/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.345925009 seconds)
    (232/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.359811282 seconds)
    (233/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.613346714 seconds)
    (234/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.326433097 seconds)
    (235/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.767616409 seconds)
    (236/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.382343115 seconds)
    (237/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.961126979 seconds)
    (238/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.431197355 seconds)
    (239/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.341922723 seconds)
    (240/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.366019956 seconds)
    (241/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.032503433 seconds)
    (242/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.811441931 seconds)
    (243/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.3268405 seconds)
    (244/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.362218605 seconds)
    (245/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.59678207 seconds)
    (246/286) benchmarking ("sort", BigInt, true)...
    done (took 6.35724798 seconds)
    (247/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.35601274 seconds)
    (248/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.36573199 seconds)
    (249/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.34500084 seconds)
    (250/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.88978038 seconds)
    (251/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.241073309 seconds)
    (252/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.571123782 seconds)
    (253/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.836842245 seconds)
    (254/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.444102836 seconds)
    (255/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.466621504 seconds)
    (256/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.428229624 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.340064903 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.804330932 seconds)
    (259/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.384905988 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.709034734 seconds)
    (261/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.744898939 seconds)
    (262/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.328452213 seconds)
    (263/286) benchmarking ("sort", Float64, true)...
    done (took 6.346381028 seconds)
    (264/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.700260994 seconds)
    (265/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.049404971 seconds)
    (266/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.457045689 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.423767344 seconds)
    (268/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.399718959 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.42187504 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.451490416 seconds)
    (271/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.451229098 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.162122238 seconds)
    (273/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.021099622 seconds)
    (274/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.471537593 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.381072002 seconds)
    (276/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.424674317 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.022700225 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.28530326 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.362613189 seconds)
    (280/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.421672039 seconds)
    (281/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.424589517 seconds)
    (282/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.345081601 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.764545129 seconds)
    (284/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.345874045 seconds)
    (285/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.327740779 seconds)
    (286/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.421521499 seconds)
  done (took 951.174586535 seconds)
done (took 952.420670752 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.375122183 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368488346 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.351173378 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.37276665 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.462619019 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.52726978 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.36202589 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.355054678 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.399308127 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.401439929 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.350820629 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.526715406 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.35312037 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.352659695 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.351617842 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367217642 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.485595471 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.35424718 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.368887789 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.360667998 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.368829856 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.351211738 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.402253075 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.528148995 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.35614834 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.354483337 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.354908566 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.372666929 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.464360975 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.354815464 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.355156972 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.364173645 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.485607818 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.351386681 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.348873558 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.372431797 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.363733064 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.363261426 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.357452352 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.385039152 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.931128033 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.353063494 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.355128311 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.354660855 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.355042396 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.359144769 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.354993901 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.359094845 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367055242 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36920001 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.921450265 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.368888692 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.357159951 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.355130138 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.365170601 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.354413806 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.358754011 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373086002 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.373678329 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372361562 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.477383272 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.36025317 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.357317879 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.371048939 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.361847905 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.961854806 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.35092369 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.35978586 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.937071151 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.361584511 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.963529045 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.364016535 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.357881093 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.369463228 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.387556407 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.490995181 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.351440657 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.35545885 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.364823088 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.355320209 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.366960157 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371010401 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.361203967 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.357377811 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371659062 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.532285651 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.367396563 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.358057642 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.367113109 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.376177548 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.364184459 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.366903657 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.360632626 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.35425431 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.367734602 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.362127344 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.360460086 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.359565525 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.36199789 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.368560475 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.936007026 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377346852 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.35547545 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.354395002 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.35721752 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.37133304 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.936093282 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.358525847 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.380053067 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.405596635 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.359683579 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.483729452 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.361147933 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377061304 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.366815121 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.361700462 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.35423502 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.484055219 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.930549616 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.373379296 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.361142427 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.357251809 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375886355 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.361121236 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.356551127 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.496480088 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.361297977 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374290258 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.481132977 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.370214411 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.390413808 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.358497018 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.362610221 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.390247406 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377254868 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.391469531 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.363033282 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377763337 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.376070474 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.356784822 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.372334621 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.371270713 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.362401113 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.366281295 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.355512597 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.391690832 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375489763 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374988239 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.382584675 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.482030911 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.358895949 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.489078201 seconds)
done (took 231.458163851 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.424278997 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.355321845 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.448719859 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.357712274 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.459694972 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.460253369 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.355374052 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.35486337 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.355507718 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.736618136 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.355786357 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.354750922 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.352370623 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.355020015 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.438870514 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.358594544 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.355799036 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.699307676 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.358647457 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.428274075 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.351052685 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.355870581 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.358839847 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.763481974 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.357257257 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.35895563 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.430453782 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.359508042 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.703875548 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.360855832 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.354410017 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.70363913 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.449514075 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.376867801 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.36962303 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.367283113 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.461863129 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.379339585 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.442177704 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.442999593 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.453078365 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.398572844 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.358992047 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.359422439 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.361050518 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.361793828 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.356995303 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.386899919 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.361063497 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.357699008 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.70087644 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.369343589 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.368147264 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.358155006 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.35815268 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.380737702 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.359534139 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.363058 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.45026553 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.361979972 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.422017247 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.767757522 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.739832885 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.362207774 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.355289597 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.358368471 seconds)
  done (took 150.21654904 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.427216332 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.433426834 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.47872841 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.363319791 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.411308894 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.483641528 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.362832276 seconds)
  done (took 11.234024648 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.368696227 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.36297826 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.410530214 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.411619225 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.362997259 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.539920302 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362892545 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.374459551 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.359061285 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.41355777 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.367102845 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.363513217 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.368753914 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.361101906 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.411600072 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.374402227 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.478580182 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.364864466 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.363021197 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.514909519 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36075819 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.370945575 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.415945811 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.375144905 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.368168809 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.37024627 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.188336312 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.363434723 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360711005 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.363338402 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361105106 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.440698015 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.364940623 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.359567023 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360756626 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.479181925 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.364479495 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.361596833 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.365989134 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.35795464 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.364598561 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.365013342 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.365534757 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.361606216 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.364903136 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.387153236 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.364459131 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.366528358 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.365578107 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.365968307 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.416097361 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.365161567 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.362392548 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.363489912 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.419012332 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371889552 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.365991113 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.362030001 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.365352475 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363391911 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.516369728 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.41400683 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.365790074 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.413418308 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365723225 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.366826822 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.366955339 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.366066495 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428778361 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.365365524 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.414067589 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.363551194 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.546647616 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.389554149 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368238083 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.369885886 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.369472651 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366542477 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.360989903 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.373204585 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.364446489 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.367901765 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.373900303 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363627839 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363765522 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.533072472 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473842502 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.364538763 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.379358909 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.374306011 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.365086651 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.420714421 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.36744066 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.365037652 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.420394095 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.482163736 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.419545162 seconds)
  done (took 156.6812144 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.373308259 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.376112526 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.371241865 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.391116333 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.368592456 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.367999731 seconds)
  done (took 9.527227874 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.37038499 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.370627395 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.36881213 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.369471911 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.368925106 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.372641646 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.369256389 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370955845 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.373579109 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.369238363 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.372886304 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.370811791 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.374957063 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.369952667 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.370298965 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.369751513 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.371110428 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367222105 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.370404246 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37000217 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.473015552 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.369943599 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370730533 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.371487789 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.378121739 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.370682723 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378070025 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.371057245 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.370922593 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379579446 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.373934723 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.373343898 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.372234834 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.377857975 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.375139209 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.373010267 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375129703 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.371261611 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368794163 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.374385066 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.372378323 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371431401 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.370805841 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.372010713 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.374292209 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.377204247 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.377384261 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380662782 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.373495345 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.373353632 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.374128428 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.373273227 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.375958135 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.37328082 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.375648294 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396533052 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.37783221 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.374160419 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.374364744 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.374201555 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.374814371 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.37659946 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375450755 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.37749565 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.370937072 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.37386013 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.374110355 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378326794 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373453668 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.373596876 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.374175921 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.371130525 seconds)
  done (took 101.267707285 seconds)
done (took 430.196830092 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.578686381 seconds)
  done (took 7.863641925 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.666948188 seconds)
  done (took 7.955070119 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.813917338 seconds)
  done (took 24.107953787 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.408456913 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.441852215 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.386253668 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.371954557 seconds)
  done (took 26.893961375 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.493400297 seconds)
  done (took 7.779018035 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.367579673 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.374846978 seconds)
  done (took 14.030258645 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.572970004 seconds)
  done (took 7.858085324 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.539324911 seconds)
  done (took 7.834110945 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.379053898 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.408477261 seconds)
  done (took 14.086895128 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.354440729 seconds)
  done (took 7.639315084 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.171715914 seconds)
  done (took 12.458013786 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.36927856 seconds)
  done (took 7.656497787 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.415262186 seconds)
  done (took 7.700869309 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.149016923 seconds)
  done (took 10.435266251 seconds)
done (took 165.584657685 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.368499875 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.368352898 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.368561124 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.368510446 seconds)
  done (took 26.759621746 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.410146313 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.408677183 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.411210409 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.420184682 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.412683452 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.407415168 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.40147445 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.401567971 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.418902551 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.41177218 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.412705946 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.411042121 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.40913696 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.401658761 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.411629109 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.411728231 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.420304424 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.4113694 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.401863174 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.413391094 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.376979623 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.421546123 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.412758388 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.376990265 seconds)
  done (took 35.083957063 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.905235538 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.454032491 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.531348346 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.432574773 seconds)
  done (took 7.610135352 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.428836505 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.430618367 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.445490157 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.482713958 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.518770288 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.440305958 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.404709526 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.399667903 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.385073289 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.430297184 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.505638131 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.447041773 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.520040925 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.377350032 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.559020909 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.378518598 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.377929075 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.428375954 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.48498688 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.507810852 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.377944931 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.429891979 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.434340503 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.447568779 seconds)
  done (took 35.93161718 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.377295476 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.396632043 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.378179234 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.377280933 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.384846853 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.378603055 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.377750322 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.37908556 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.378634972 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.383429347 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.377324588 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.390852088 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.377558989 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.378044398 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.383370979 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.379280138 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.384390504 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.37724873 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.379042103 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.383869311 seconds)
  done (took 28.912981297 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.373033235 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.226259726 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.725180705 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.630131344 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.373745497 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.373312607 seconds)
  done (took 27.991770299 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.460437794 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.602120947 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.38030224 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.802790639 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.892047904 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.388414492 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.381477446 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.647559394 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.033875065 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.017687529 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.452701916 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.456505586 seconds)
  done (took 20.807509402 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.37334807 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.374548975 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.397126533 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.393401964 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.442670606 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.385867715 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.388002571 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.374676233 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.450157816 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.447687132 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.385543116 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.445214399 seconds)
  done (took 38.149903949 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462663515 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426272958 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.436692792 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447029008 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.127235174 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587778486 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.449786886 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.149001519 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.380380702 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649590465 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389886694 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466951433 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633607245 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37760658 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380212196 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.503135701 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610283482 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918095931 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384558642 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.072804011 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407640843 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391542385 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.014193075 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650229165 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595416884 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.361105863 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.639872343 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.153246532 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706407103 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397143683 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389650272 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378345694 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65306065 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098016035 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480557139 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623613059 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39300015 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.931544589 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.376232135 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.916903583 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397642313 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.383414543 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389973324 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379307473 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.313429933 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380008993 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138144874 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.385047563 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.092413047 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379980723 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682364176 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482713882 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.382586965 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.953548681 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431753142 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.392383289 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.38423374 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477880055 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95251781 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.21574067 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393809945 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.317966082 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401435939 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.933749064 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088493344 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.393294078 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.385206496 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384940379 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315011116 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.933664552 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405813783 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520718515 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.406128245 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.04262529 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194399149 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.395481981 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.316585641 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964375647 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384097273 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.320233228 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6115358 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.157181261 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321394949 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.326538526 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315988178 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160000365 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398733917 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.902772907 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410799216 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.132451145 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630328692 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407376072 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40680751 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606548245 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.269178976 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382725126 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.397766253 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503108637 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403788323 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.139126805 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321654098 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.387693196 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639683636 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.5941103 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397703037 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.510703136 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914231983 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386394757 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.401012136 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382883323 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636697366 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.041881942 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407248718 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.245119319 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407462547 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.160228731 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204074108 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408089802 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.389450176 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.388775535 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684385652 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.256095066 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272567469 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452688092 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386833946 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384389384 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.102315552 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.242508726 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.267164232 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.625028759 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421294868 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.396076018 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.386824064 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346469543 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.383060104 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408712133 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.17004414 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610072547 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386262822 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668328732 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320096308 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523664557 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.401653492 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.609481303 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.772078061 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.396901744 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64762819 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401882905 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385757965 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397770352 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405072442 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48618794 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408336753 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.399382022 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650336875 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.390223204 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.39110863 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.95971551 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.171586038 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38909645 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.391858672 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387440668 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048052457 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364680633 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387572865 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281067412 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.40179965 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455063508 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393474623 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637505891 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.90742196 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393604813 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.398661761 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.384668044 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612524347 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398674458 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.945074653 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473642384 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.935681938 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059361576 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409344994 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.322644376 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.099398156 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.08048711 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389240761 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.578947328 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38985335 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.636320037 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4113672 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409647356 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.055129089 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394763632 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.953484165 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.401290846 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402289103 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.395971263 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389251916 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.836562148 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251871058 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401893986 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.406775504 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533444097 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.403552573 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.323866459 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.905842283 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395473127 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390234015 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.167314604 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424109233 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.961190613 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253572037 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651306136 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392773886 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694531915 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.060265327 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.430378848 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.418204806 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390136179 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398322194 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.415217734 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406445408 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.401859038 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.962256966 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.846736736 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960257849 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232984265 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995301116 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.793689893 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.393063979 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.28061725 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157907535 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326631947 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.051263202 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652795419 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198128241 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350874923 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946871164 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.786855594 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249651471 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.695903142 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629528522 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.815212734 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.410238966 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703655371 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612840053 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427348197 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.392620028 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.328032391 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.697709336 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032853037 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405392247 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477290359 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152731937 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393366443 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.175859736 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.454006287 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.236369534 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866391998 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.946305503 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.787460671 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408907796 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403931221 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3273035 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407179288 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921978725 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108114675 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402884178 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.936057344 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335920766 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645756893 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.408977621 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.39990707 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.173098151 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.404135347 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.654778867 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698707787 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337660287 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395779403 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005367608 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.265329215 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.400635454 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395332589 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214044945 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403236889 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.732151571 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.40038178 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.921871971 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406286108 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.329308471 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329465355 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.089740802 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404956918 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365524059 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924905297 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.400721281 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400303629 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434161023 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250732008 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652975992 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.411004783 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.063732709 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625115124 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396594654 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425995611 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.400120304 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39754856 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.387648722 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.278312761 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.632990857 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459793038 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625298811 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.536136503 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.307025961 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.460537255 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634655409 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.294537887 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397132163 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700126124 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.11174598 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.423899776 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226420756 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429494487 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398031132 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418025602 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396830788 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439313098 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467847187 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647933697 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.412839296 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.409522938 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870580066 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402506121 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399761346 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.411966025 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492722585 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310041857 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.933665133 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.175970871 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070161953 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246778502 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.065126942 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711866844 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404813789 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402263863 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33295543 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548021306 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928032374 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673228224 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518016695 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.423566497 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426535209 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408502833 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421437577 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61542341 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673637788 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.276091226 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407528786 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.065944275 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.282642481 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411745861 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.612152295 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922229337 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988439028 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51618237 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400016926 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.170174025 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674311516 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.491396146 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401105005 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.994510884 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.418848375 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.234645228 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.406984006 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414756853 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554066187 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706375584 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136355524 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.419143328 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.561185977 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.174419448 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.00804001 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.662966361 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.936658631 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.655350154 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06889227 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.208039036 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678466498 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473277329 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655047197 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.52929913 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550042529 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.40026916 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.288689559 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403271907 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251864874 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.114154053 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.412311843 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059343269 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672389725 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.406511551 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.400905537 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433127262 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.412534469 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627784988 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197409279 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632800804 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414315867 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.412518065 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.395275595 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069495429 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717311055 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346234781 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.407564932 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68401206 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645247732 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429953181 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.856727483 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.115312868 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998374346 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.380830515 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426510576 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404531334 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23398246 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08170293 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.955759874 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94531846 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.066427577 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40501887 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686848705 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.410658973 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415393836 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68722428 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.409674297 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.419691068 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662644648 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.071701815 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.296450753 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.433176354 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.194240596 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.349648012 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.633136528 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445644139 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369594429 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416258868 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.895378114 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435913478 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526172029 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417702858 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.404511424 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421783054 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.144323045 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.690426715 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.413465039 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.411243148 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.405641708 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.411950316 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515080748 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057242817 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419648285 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.08266621 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.758771038 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.664451616 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.41601342 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.401960904 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.411337569 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407687001 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131610727 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38437335 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407643105 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019660747 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.414081706 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.424137056 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413475094 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.625678048 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620342143 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409921024 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668571024 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417688379 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42819419 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.316722169 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.181926787 seconds)
  done (took 1704.238670603 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.414205831 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.425943255 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.446608598 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.513935995 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.432342115 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.435364441 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.462322503 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.483406835 seconds)
  done (took 52.939179858 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.426868022 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.574660188 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.446551011 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.424129805 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.428768429 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.426947895 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.942921009 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.431722339 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.428692084 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.422624862 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.42618067 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.412420095 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.128046828 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.427222371 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.425010235 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.425852976 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.424856712 seconds)
  done (took 66.959175206 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.234353544 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.50720955 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.093488334 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.428219575 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.419982399 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.432193282 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.018071417 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.431538266 seconds)
  done (took 55.893420682 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.424906142 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.424288867 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.42535483 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.424630376 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.424537989 seconds)
  done (took 8.451723902 seconds)
done (took 2111.017942871 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.418241447 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.420206123 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.417888102 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.419786684 seconds)
  done (took 7.003613618 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.400562664 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.1221348 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.407997167 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.420697256 seconds)
  done (took 18.679312843 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.414353772 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.418344233 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.249079783 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.150080505 seconds)
  done (took 5.729662294 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.165610254 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.178231908 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.161560213 seconds)
  done (took 7.835592971 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.414605046 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.421045198 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.420619129 seconds)
  done (took 20.584907832 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.73031601 seconds)
  done (took 3.061798345 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.564451897 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.614152156 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.743125243 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.743935851 seconds)
  done (took 7.996847064 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.809805584 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.790472939 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.612315687 seconds)
  done (took 6.54238695 seconds)
done (took 91.596282484 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.685013122 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.440704842 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.620852495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.653864814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.645724432 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.617665116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.730030692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.620472795 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.164090063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.150501726 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.654578258 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.64384388 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.679704335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.4402837 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.674301333 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.440139591 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.645235311 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.735410757 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.343957357 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.42039682 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.72779959 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.294098237 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.483855815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.319630406 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.645857687 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.576865802 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.876316733 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.442642971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.42683577 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.899207229 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.577195666 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.418222737 seconds)
  done (took 199.028220423 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.420768653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.419144763 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.452184944 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.418743186 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.418975882 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.438500859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.418221556 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.419449745 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.43947249 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.428361443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.41917249 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.419505392 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.420737662 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.421017324 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.418749296 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425106406 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.419711154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.420456126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.435969976 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.419842203 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.420584606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.420131081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.425668294 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.42931645 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.421007409 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.440990642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.421925069 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.420311982 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.420040587 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.42202846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.445888816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.420829453 seconds)
  done (took 206.936371213 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.421290668 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.421321812 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.420975872 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.429269104 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.420145935 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.421981478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.423084934 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.439401362 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.426324329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.420333748 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.42127369 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.432401777 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.4237108 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.424027252 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.422387869 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.422351825 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.423665473 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.421875145 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.44988638 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.421709405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.443480502 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.423054975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.428600999 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.437868837 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.422746114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.424720642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.42924088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.422162512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.422216258 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.422108386 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.423015951 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.42529154 seconds)
  done (took 206.967589401 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.626409964 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.429951771 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.430613909 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.36317033 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.42966336 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.428492868 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.426082764 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.620293293 seconds)
  done (took 15.091676339 seconds)
done (took 629.356313072 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.968258553 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.676035785 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.648513464 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.449419163 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.358583055 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.475429275 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.448955785 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.642291258 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.416150902 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.658975783 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.811140524 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.449583584 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.96379953 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.448381519 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.729803959 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.559702121 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.383996737 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.468638873 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.805255951 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.06176517 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.73801061 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.07628629 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.65386854 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.419104812 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.984402861 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.023099414 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.320488901 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.352411582 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.449918154 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.811086768 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.409312934 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.64648747 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.502331215 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.503220546 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.559974279 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.558175175 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.52172787 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.518945493 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.64571134 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.785022876 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.12113892 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.222751185 seconds)
  done (took 98.585928014 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.423270844 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.421688565 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.421124421 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.422634 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.424379937 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.421869922 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.422089467 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.422106617 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.422423648 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.421336587 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.421300757 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.422125202 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.420197923 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.421942021 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.421185125 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.4214231 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.422230212 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.423788416 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.421698407 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.421270394 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.422446512 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.421707794 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.42282935 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.421904122 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.422569357 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.423532253 seconds)
  done (took 38.316351105 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.433500611 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.699229686 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.882583908 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.439874496 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.433805527 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.43721266 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.522827492 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.435352344 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.437553231 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.436769241 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.615646455 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.436095885 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.475260496 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.915650923 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.438229996 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.43417808 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.433902091 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.435159798 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.709325758 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443920235 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.546478963 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.435572547 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.523599727 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.44637443 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.46089468 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.435354438 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.442611 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.010085991 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.438745689 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.616337035 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.360905243 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.530119122 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.954784354 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.900631 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.361757496 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.441555846 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.436256324 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.621055201 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.438959562 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.437829204 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.525016736 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.437677193 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.907088096 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.129907655 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.463775491 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.43702478 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.034456557 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.62072155 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.726780283 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.449244083 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.933527738 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.444118806 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.437611048 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.438850288 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.719088622 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.444743551 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.437086309 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.03017633 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.461807171 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.526238229 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.438217332 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.43741656 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.717369211 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.438794196 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.705804099 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.440087865 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.446747696 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.460722078 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.895391437 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.441124473 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.136844668 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.457942757 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.438432363 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.618143846 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.705679513 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.070098482 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.442931503 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.721157025 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.971982477 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.525957086 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.443536362 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.002404175 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.530421342 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.442929761 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.440686484 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.440589223 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.440491472 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.489451013 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.525766302 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.075520018 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.132126596 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.061318131 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.549983887 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.447459767 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.441579946 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.034467296 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.460697263 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.439176077 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.894751275 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.140678739 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.460835114 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.448293997 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.148489883 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.462784484 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.530597271 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.446135602 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.904728461 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.441204723 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.490296993 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.440526888 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.448803314 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.466856175 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.53110741 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.445337908 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.441352427 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.116327886 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.647266547 seconds)
  done (took 190.100787982 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.434078759 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.434145196 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.435933713 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.434891309 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.435230445 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.443766015 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.434772522 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.434605938 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.441086835 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.436343991 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.435844926 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.436127414 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.43710597 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.436845291 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.448402731 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.443395105 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.048105104 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.436218599 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.435883012 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.436196478 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.262916418 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.443106141 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.436971864 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.436968785 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.438149846 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.437482085 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.43753207 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.439484197 seconds)
  done (took 155.039570695 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.443711932 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.085246285 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.446377826 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.595098861 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.467631519 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.44206666 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.591048287 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.508890978 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.445873176 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.442467923 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.442045489 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.809037847 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.449171895 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.031646204 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.671566357 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.598018917 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.0304665 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.464938161 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.44169825 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.442420251 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.595899592 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.457895977 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.788525214 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.088976477 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.446843459 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.087809338 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.436636942 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.44507427 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.443299595 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.090422077 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.44307801 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.790838009 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.53414328 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.512332266 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.09100817 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.033207149 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.052014981 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.621784703 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.448594055 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.443258642 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.443108555 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.43597462 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.091750299 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.447918535 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.446883047 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.087990541 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.466141462 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.446998303 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.452248036 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.442816045 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.51217472 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.514275012 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.795900395 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.096997978 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.533963465 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.458615734 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.602270177 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.836494741 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.450922158 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.033400121 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.436447556 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.096610352 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.468884105 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.437304872 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.44708628 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.452740443 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.618632982 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.602244208 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.068279549 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.470933386 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.066834384 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.639814476 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.445156081 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.444376049 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.448711288 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.098332056 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.064226618 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.640050366 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.600591713 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.674215935 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.44275262 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.447206477 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.439401848 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.53589965 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.446147032 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.09733152 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.09041463 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.471176145 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.448822712 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.449412995 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.44899839 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.653278369 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.103521401 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.537021443 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.068690862 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.822462031 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.798530529 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.45017943 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.514642889 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.467190867 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.800155514 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.450869988 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.512917631 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.89774431 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.799508623 seconds)
  done (took 174.067137118 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.721234746 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.802935322 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.548786782 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.607265016 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.092765624 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.05665501 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.832783158 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.608670201 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.569441094 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.734568965 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.711346618 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.539274072 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.685048223 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.533524182 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.248218521 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.525499483 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.547321021 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.609484638 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.599964524 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.542762582 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.14851335 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.762855027 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.662123719 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.51328092 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.552183669 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.345528654 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.067507204 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.997008109 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.638183244 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.876758226 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.032209913 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.659848781 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.489376482 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.214293015 seconds)
  done (took 70.433112212 seconds)
done (took 727.881328471 seconds)
SAVING RESULT...
DONE!
