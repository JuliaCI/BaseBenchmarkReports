cset: moving following pidspec: 10727
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.17120138 seconds)
loading group "string"... done (took 0.567784074 seconds)
loading group "linalg"... done (took 8.892157655 seconds)
loading group "parallel"... done (took 0.166467956 seconds)
loading group "find"... done (took 2.50599514 seconds)
loading group "tuple"... done (took 1.991962875 seconds)
loading group "dates"... done (took 1.357335874 seconds)
loading group "micro"... done (took 0.628272282 seconds)
loading group "io"... done (took 0.652566223 seconds)
loading group "scalar"... done (took 45.883192829 seconds)
loading group "sparse"... done (took 12.830006106 seconds)
loading group "broadcast"... done (took 1.14812135 seconds)
loading group "union"... done (took 2.596799356 seconds)
loading group "simd"... done (took 2.959576773 seconds)
loading group "random"... done (took 11.302685768 seconds)
loading group "problem"... done (took 2.158986629 seconds)
loading group "array"... done (took 23.060667701 seconds)
loading group "misc"... done (took 1.489593754 seconds)
loading group "sort"... done (took 3.668283097 seconds)
loading group "collection"... done (took 17.792257731 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.893533388 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.258492647 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.236543418 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.562265146 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.30393006 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.199991703 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.196782147 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.200632776 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.564276295 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.21514377 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.18968767 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.399483342 seconds)
done (took 6.966255136 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.285887682 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.091613116 seconds)
    (2/2) benchmarking "String"...
    done (took 0.244160518 seconds)
  done (took 0.940602852 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.092903295 seconds)
    (2/2) benchmarking "String"...
    done (took 0.140806383 seconds)
  done (took 0.841513506 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.129659855 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.200612173 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.143664638 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.130564299 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.145525 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.144682784 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.129687302 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.144022714 seconds)
  done (took 1.645498775 seconds)
done (took 4.454033226 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.521095036 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.926085084 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.554589868 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.21364295 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.341119636 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.358008654 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.312399223 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.264434954 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.130846179 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.097900229 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.248343382 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.473059528 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.454555779 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.97159534 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096810635 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.149342035 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.195530102 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.800451859 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.181000391 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.151914918 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.531793603 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.251740951 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.154319763 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.148642435 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.224391593 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.164149156 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168394808 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.145237254 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.716141207 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.172394129 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.235720757 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.121444354 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168088833 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.203359729 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.275372378 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.148107941 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.717454922 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.240365063 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124590634 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.137755366 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.718593405 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.158845549 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.243229254 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.143243844 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.11122853 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177462022 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.139532269 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.118292766 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.146917146 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.138825754 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.194724204 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.506234487 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.14647086 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.233364034 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.145895089 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.72511686 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.137462103 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.314633865 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.165829049 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.145502441 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.129515003 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.129523524 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.199475436 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.137434446 seconds)
  done (took 22.530311851 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.243285127 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.247996969 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.11840528 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.199963766 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.181539984 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.120320189 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.142716822 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.11821203 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.167718256 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.219822925 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.181334861 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.253685821 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.132656813 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.129291371 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.226932699 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.289842165 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.149971725 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.161124331 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.14421408 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.13437882 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1853793 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.13562884 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.149703325 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.133043873 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.211098842 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.24502634 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.162449848 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.162380705 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.143081673 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.137078116 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.18140163 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.200322262 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.116430658 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.143524397 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.21481782 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.161500495 seconds)
  done (took 6.878898637 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.272470123 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.143230295 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.299671907 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.225359244 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.166176788 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.230281868 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.21527563 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.326877112 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.362484503 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.21635349 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.166014337 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.209508486 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.151983852 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118013611 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.137314179 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.118041686 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.869428089 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.21325582 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.199844058 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.22474513 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150934417 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.120854894 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.408037503 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.123434621 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.140137583 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.133611124 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.109047317 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.261142356 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133637385 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.511774996 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.139204224 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.136376001 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170896662 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.245455864 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.162921416 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.176120232 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.150157083 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.124413936 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.245243547 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.154232462 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.118190588 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.134375817 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170004579 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.154830303 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.147764112 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158933759 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172082986 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.126555828 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163640782 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.145357451 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.23409569 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.218386849 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.125260831 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.316746774 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.162662724 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.138660161 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.146168029 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.86577078 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.159912653 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.135874751 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.118666976 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.149616023 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.341109509 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.119016602 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.509434615 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.142930536 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.293479848 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.122310106 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.199411462 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.149354817 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.155644164 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12637012 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.142378929 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.146562004 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.143058695 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119451992 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.143010295 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.120318582 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.145447477 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.143424873 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.141744632 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.119635884 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.14729394 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.187091878 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.148945547 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.146651959 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.164874877 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.14534907 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.125473917 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.168668376 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.137338694 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.129043155 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.240668733 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153229542 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.159032304 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136269424 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.183520824 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.143321368 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.34865991 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.121811789 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.147350023 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.161812965 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.1394743 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.16765896 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.154958253 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.121203821 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.140193107 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.119068773 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.1369311 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.186872926 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.140190872 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.120610379 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.144672657 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.133905087 seconds)
  done (took 32.184757295 seconds)
done (took 62.200760377 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.480892508 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107528269 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.12639673 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107707133 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.125476361 seconds)
  done (took 1.63930057 seconds)
done (took 2.313908074 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.227243911 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.326488585 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.239081939 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.143352517 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.206926244 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.205749349 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.19313273 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.203052637 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.212081369 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.210266124 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.138147875 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.230696026 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.218426659 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.190745555 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.138749837 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.24176119 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.206748359 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.192379911 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.239106803 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.143616727 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.139044357 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.159005974 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.144098352 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.142774371 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.142131761 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158768304 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.146265109 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159004577 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.136295195 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.143576428 seconds)
  done (took 2.300171761 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.167615868 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.140644141 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.138614763 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.149699414 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.140300313 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.141850161 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.14138879 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.155181954 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.147340524 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.157435104 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.136389481 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.144685857 seconds)
  done (took 2.279435674 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.120137553 seconds)
done (took 9.532878518 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.215335414 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.851969165 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.196667118 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.306420181 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.374181731 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.315814183 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.656249793 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.250619021 seconds)
  done (took 15.962951225 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.238019863 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.135090712 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.138358655 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.148168283 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.133115112 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.153491726 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.136228846 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.153049281 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.132043537 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.147960295 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.132558197 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.147089375 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.135930554 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.147541038 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.137088942 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.14684479 seconds)
  done (took 3.112221813 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.176597038 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.173520389 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.138668961 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.156079066 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.136402401 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.155961523 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.143172327 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.15523699 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.135818738 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.152454792 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.143411813 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.155770088 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.140308135 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.150212119 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.143202568 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.173947609 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.136290725 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.153822633 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.175094403 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.140937755 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.156879447 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.138780078 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.155479758 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.139037233 seconds)
  done (took 4.385675091 seconds)
done (took 24.146411147 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.193156546 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.141466663 seconds)
  done (took 1.034151061 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.206787748 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.221952805 seconds)
  done (took 1.135936351 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.151829014 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.147151673 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.161678102 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.160394907 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.132917321 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.148092784 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.15786379 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.14789262 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.134015925 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.148549965 seconds)
  done (took 2.200690814 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.135476027 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.152217192 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.148094601 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.21573784 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.157598742 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.135942008 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.152471694 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.135496141 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.153383681 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.132440305 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.153278919 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.150129566 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.153126875 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.151967719 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.152033719 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.138687259 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.157538958 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.136546554 seconds)
  done (took 3.421051798 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.132829601 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.135162509 seconds)
  done (took 0.978443977 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.136808529 seconds)
    (2/7) benchmarking "second"...
    done (took 0.132370953 seconds)
    (3/7) benchmarking "month"...
    done (took 0.150599458 seconds)
    (4/7) benchmarking "year"...
    done (took 0.151466259 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.131898337 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.132706401 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.14803328 seconds)
  done (took 1.694368327 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.577169834 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.266118897 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.394178547 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103826891 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.151196391 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.364662574 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.154614913 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104562948 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10445644 seconds)
  done (took 2.958862366 seconds)
done (took 14.130604038 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.133248299 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.324533099 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.638951224 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.170658503 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.132064979 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.206762885 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.380856742 seconds)
done (took 2.707318786 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34959697 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.207380841 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.11825596 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.136093354 seconds)
  done (took 1.524372828 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.123898298 seconds)
    (2/2) benchmarking "read"...
    done (took 0.141225012 seconds)
  done (took 0.988658893 seconds)
done (took 3.233838046 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.152429998 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.149393648 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.136947513 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.153271376 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.137023151 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.153858602 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.135836547 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.149595769 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.136215855 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.149647521 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.135578624 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.151192411 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.134252198 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.151299268 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134124667 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.151251007 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.136190503 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149431433 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.132892109 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.152173331 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.136378446 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150250322 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.137352034 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.151801636 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.13685155 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.152530639 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.134280832 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.151320849 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.135911556 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.151575839 seconds)
  done (took 5.038295652 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.258140508 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.128629346 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.148023852 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.140690377 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.146247159 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.132847061 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.146779629 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.133934001 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.150474651 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.13303654 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.150738372 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.132027125 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.149101293 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.13213028 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.150328055 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.135004598 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.15626198 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.132562178 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.150267084 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.133776997 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.13598503 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.149451827 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.133326382 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.149208849 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.132004356 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.14580206 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.133226718 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.150047572 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.133737118 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.149741737 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.135909182 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.152002221 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.132639702 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.158872368 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.13713804 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.150012722 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.138419558 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.146659921 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.133618039 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.129172502 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.146544054 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.132309912 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.149022162 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.137865367 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.148883108 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.133697099 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.148651376 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.135416661 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.149411248 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.135972948 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.145821965 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.132769467 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.151598259 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.134448591 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.152589376 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.130062419 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.132728959 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.146401089 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.135050135 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.149947699 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.130049219 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.145907102 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.13733129 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.150187046 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.147298759 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.157024297 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.133326242 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.151210639 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.134496503 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.155115606 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.135244852 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.160110933 seconds)
  done (took 11.063783809 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.133156248 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.133227696 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.150586747 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.132937645 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.150003293 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.135661804 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.149271845 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133255633 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149078804 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132639772 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150345376 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.133342305 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149276385 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.13341068 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133125937 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.150192982 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.132419004 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.150791172 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.133304661 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152656703 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.133749969 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.150527591 seconds)
  done (took 3.839868953 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.274233057 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.139642338 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.200218338 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.14709133 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.170529437 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.16284047 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.139278745 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.157376647 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137602903 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.160396793 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143108282 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156113148 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.151602589 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15951379 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.160835397 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.144290696 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.156881403 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.144849076 seconds)
  done (took 3.646145366 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.134984065 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.134535194 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.151345573 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.133880922 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.150853611 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.135644624 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.151022557 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.135559207 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.152709992 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.135264478 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.15233704 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134967372 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.153356233 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.134523461 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135266294 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.151961433 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.134762807 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.151733471 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136152509 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.151280411 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.134923093 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.153255313 seconds)
  done (took 3.884729756 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149697248 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.154743561 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.157210564 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.157065504 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136524624 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.152707548 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.143187482 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.154729592 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.144240759 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.154782532 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.138712821 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.153783592 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.152120741 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.154393866 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.143352238 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.15430831 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.13811051 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.154665757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.137548288 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.1378331 seconds)
  done (took 3.714787684 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.230040636 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170190986 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.170417062 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.160511962 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.17113978 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.151491611 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177395533 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.15322158 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.171230364 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1809654 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.152133452 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.17002637 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161002108 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.174540771 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.152258747 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.17873921 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.159875359 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.177613438 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.171432903 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.153522665 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.182417052 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.153817396 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.178016143 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.153383961 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.170430612 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.171738738 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.152809934 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.175667381 seconds)
  done (took 5.476936697 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.147505838 seconds)
    (2/2) benchmarking "in"...
    done (took 0.164074915 seconds)
  done (took 1.06248099 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.138258713 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138302085 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.155670494 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.137426484 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.155302082 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.13864305 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.157438596 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138428567 seconds)
  done (took 1.910844738 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.245986099 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.250977586 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.142477126 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.165405531 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.250963688 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.230963658 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173255272 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.160413067 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.137957278 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.148290715 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.244597864 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.128856749 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.155054215 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.133590382 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.155037942 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.141462333 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.15534196 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.145780899 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.160361314 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.138973119 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.158516386 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14085646 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.155812621 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.146533508 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.149866194 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.138161703 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.15767033 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.148599134 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.151673547 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.146660479 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.152892487 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.136793372 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.158370768 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.141427063 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.156081021 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.251435744 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.143552752 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.152239751 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.137839107 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.160827365 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.180578411 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.137118624 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.15620932 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.135714395 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.159074628 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.14214133 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.160168483 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.137672395 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.129698337 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.149409992 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.138083341 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.149830226 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.138758636 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.156234952 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.137007576 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.160538851 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.139724192 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.152410233 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.133592687 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.152159922 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.136003538 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.151257294 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.139704427 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.158210762 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.138391691 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.154689155 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.155255916 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.1387131 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.137583906 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.156465917 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.136081271 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.169914554 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.158273479 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.14272611 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.161025016 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.138135653 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134756033 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.161485689 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.136375373 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.15604652 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.141881171 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.178154149 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.157206374 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.133030046 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.152312106 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.144115952 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.139550777 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.158670596 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.129537911 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.16397609 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.139090872 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.157684297 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.130180032 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.152921751 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.134002376 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.158974615 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.130236044 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.155148571 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.136512332 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.16106308 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.143317876 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.154327795 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.140078917 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.161214914 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.143103673 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.15494163 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.207006841 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.134655252 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.153819561 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.138718409 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.16239153 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.132918648 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.15601104 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.137804815 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.135111385 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.152423014 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.142349527 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.158332565 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.140267767 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.161224203 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.140997678 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.157158184 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.140624028 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.157609288 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.134513404 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.159818158 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147365388 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.160096267 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.139705825 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.157293257 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.141176262 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.166515309 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.14218959 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.152908062 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.14371213 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.154181199 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.138718198 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.158081624 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.144978842 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.157496076 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.134876299 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.155591015 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.138491913 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.155767364 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.141614936 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.158434463 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.135326217 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.150958093 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.139825044 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.153167453 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.138411875 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.166606801 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.135639945 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.160327372 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.134325182 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.165637404 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.135476236 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.162290889 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.141330053 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.16302087 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.143832256 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.150112525 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.136003329 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.15928925 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.139771755 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.153404074 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.140420021 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.158367345 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.145094219 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.150931065 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.142108295 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.150571172 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.135191982 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.163798204 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.142561145 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.161010349 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.135203576 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.189114133 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.150555319 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.163259099 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.139512574 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.15667551 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.142921666 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.156246824 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.14407307 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.163514509 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.14429279 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.156358501 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.137858383 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.164393321 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.135269157 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.141218796 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.156554336 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.140930562 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.151416253 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.14139717 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.150792011 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.144604631 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.159318723 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.144512581 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.163101607 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.141397171 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.155964246 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.148445832 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.153967344 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.144044574 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.15125862 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.14445133 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.168474357 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.146492511 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.164039086 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.141295273 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.156769866 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.141253088 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.167309335 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.142105222 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.158239745 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.140241577 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.151711541 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.134401937 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.163053416 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.142860625 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.15500763 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.140079475 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.159822837 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141179196 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.155032284 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.132225823 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.162134584 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.14276187 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.153510932 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.140872593 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.154501281 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.138450147 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.165447366 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.132549118 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.154912995 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.141763838 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.16252381 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.139956555 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.158076177 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.143118758 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.163932089 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.142966644 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.160737829 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.13704962 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.165968032 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.137984796 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.139142694 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.155006234 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.141476161 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.152111731 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.141872511 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.158281651 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.136800916 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.154529427 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.143322066 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.165135804 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.146055165 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.157290393 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.144488206 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.164000813 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.145576263 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.155897618 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.145942581 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.155071116 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.133568312 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.155674405 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.133009861 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.16030565 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.137337017 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.164002699 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.138675805 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.157041619 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.144652403 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.160949308 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.138357538 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.163880826 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.149958524 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.152976646 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.134343271 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155313814 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.139792148 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.155695497 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.137327659 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.16017393 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.140780891 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.163378598 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.142292746 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.156004545 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.141545373 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.168084922 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.136762643 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.166379189 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.146705527 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.165839175 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.136495849 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.164295753 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.138239576 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.163228578 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.134586738 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.158822082 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.140851501 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.159196711 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.137456935 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.157459339 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.138857463 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.153642653 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.136917201 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.165754528 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.139639405 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.164490471 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.139606091 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.158904076 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.138461951 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.156671668 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.147318384 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.158601383 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.14844674 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.160165199 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.135930484 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.153407566 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.146738702 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.159991993 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.146867838 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.13571237 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.163967849 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.148095858 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.164422515 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.142298472 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.169603481 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.149410341 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.166777982 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.147704188 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.153720107 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.138834415 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.164960502 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.142142447 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.16477675 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.144671609 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.15452356 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.144533882 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.166919341 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.143973407 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.158702863 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.135613684 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.163286198 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.148761864 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.164910146 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.144660086 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.162479181 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.143442683 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.157620533 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.146738283 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.166687886 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.141420637 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.167935671 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.141761253 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.165529849 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.139039678 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.168914357 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.144656733 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.155635993 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.135526033 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.15909146 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.14947662 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.15667104 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.147751261 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.148121769 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.158847644 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.140148059 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.167014325 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.139377082 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.164548439 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147337661 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.160009733 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.153083293 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.163998299 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.140377278 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.167577665 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.148744823 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.157875453 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.141415539 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.161809054 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.148737559 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.160953499 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.146650353 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.162779848 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.147284441 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.165625042 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.148717096 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.167678934 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.149513078 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.156657631 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.150755763 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.165612471 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.144871565 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.160589276 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.142010866 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.15710671 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.141315806 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.168899412 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.13970352 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.171162478 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.147359521 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.161840623 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.14167926 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.168685557 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.142543405 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.16944997 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.139385602 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.165164369 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.138724414 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.165612541 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.141389767 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.170550739 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.140351507 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.158012063 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.148460639 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.167412769 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147850226 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.165005899 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.149818633 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.157002298 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.137417685 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.146696099 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.160545346 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.153719408 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.166816395 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.142215711 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.161995251 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.146564587 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.165391213 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.150530734 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.157525968 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.140776352 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.164045302 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.145443495 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.161666159 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.138952377 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.168391176 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.142586986 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.165616661 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.143358104 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.158812164 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.143718556 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.170528389 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.143406784 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.15913092 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.141273272 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.170802517 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.143585996 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.160722673 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.138484091 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.169077855 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.147790302 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.171230154 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.140858275 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.165327518 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.14127865 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.166363893 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.1512853 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.162110978 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.144178879 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.163138483 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149499388 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.169909805 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.137580414 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.162737873 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.153802799 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.169411697 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.145081578 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.167455722 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.142573787 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.172695774 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.151447471 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.16552503 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.139336294 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.159284571 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.143895464 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.158545231 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.14770328 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.169812377 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.143650111 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.16216301 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.148402251 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.16848197 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.147836747 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.166713448 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.138391761 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.151305623 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.161596457 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.148123026 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.159591943 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.138296008 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.167029201 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.14995657 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.164344712 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.145144575 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.167160153 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.147715222 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.160391835 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.143083209 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.167714205 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.148820391 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.170647818 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.143942606 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.163449625 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.14811702 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.175342828 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.146520238 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.163477771 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.152661312 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.171007221 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.146823559 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.164009822 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.149038296 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.171248453 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.148689509 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.171726237 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.143016441 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.165874655 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.152814056 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.173022003 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.154593542 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.164242325 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.139688434 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.169514223 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.142979634 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.159561561 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.148216613 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.172845094 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.15245556 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.164737499 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.143064841 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.175603546 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.149801172 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.165144953 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.143083 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.162949003 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.149688937 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.162226216 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.149270868 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.16238301 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.152618989 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.173350116 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.150871211 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.173943348 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.14060084 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.172803678 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.146943267 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.174094345 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.148448975 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.159336463 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.140779285 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.167962281 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.152099719 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.15055874 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.171168764 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.149264651 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.170065411 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.145394397 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.167115595 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.142684346 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.173387831 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.15139062 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.167266941 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.148701311 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.165236375 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.147235274 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.167777341 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.152739115 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.174069062 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.147207826 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.17684686 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.153240227 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.164756706 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.143277996 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.168614738 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.150341744 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.168017874 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.150967801 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.163449207 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.140320427 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.172498891 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.153998773 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.165469575 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.153167662 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.174798624 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.145360454 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.171175538 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.154513504 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.17100324 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.148558487 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.167431487 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.149583407 seconds)
  done (took 92.035788072 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.192726045 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175342409 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.148680918 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.168413525 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166862001 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.172722244 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.149028378 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.171031805 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.150569636 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.177799985 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.14915535 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.167731525 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.162813651 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.189560419 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.185689814 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.16030118 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.169173538 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.150632144 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.168743246 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.151130462 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.183888957 seconds)
  done (took 4.362194173 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.149607572 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.147762156 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.170110739 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.149586061 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.170113951 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.148623439 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.169758319 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.149876951 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.16848176 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149069445 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.170172338 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.149183007 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.149000442 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.168730255 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149324575 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.170146148 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.148959934 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.169500116 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.149624963 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.169965818 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.149981502 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.169776757 seconds)
  done (took 4.335177609 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.17265345 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.152024429 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.168990065 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.149723649 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.174015774 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.150882315 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.174595178 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.149948537 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.179926442 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.145095266 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.161610565 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.146279425 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.169736529 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.149459369 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.164227937 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.150748709 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.178186416 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.153820747 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.174705666 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.149964811 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.162274197 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.151020252 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.150332455 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.162763505 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.154601364 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.176359927 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.152998506 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.173604828 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.141011019 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.174688276 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.15099469 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.164837162 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.141600339 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.162416184 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.141882847 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.174122422 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.153227236 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.171312916 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.151467795 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.142310694 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.171293081 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.153856157 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.16261621 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.151837255 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.171918789 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.14509408 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.176026504 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.150468576 seconds)
  done (took 8.506590119 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.180313712 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.207277616 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.153397929 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.200834268 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.188255224 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.16034979 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.175578123 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.179766715 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.17460272 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.153966716 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.186864685 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.164105575 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.178178734 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.158610882 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.176576365 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.155905929 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.177033057 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.153721014 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.180654467 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.174374479 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.159696495 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.176903152 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.164976846 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.184608462 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.158058228 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.174448999 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.154837777 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.1778458 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.163481055 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.179414087 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.159552343 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.181173528 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.185023947 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.157030024 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.17438251 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.156247593 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.186044328 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.155789155 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.175724162 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.153361541 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.175792816 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158765371 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.175286606 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.166907258 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.177304879 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.157222367 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.177343012 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.152347376 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.184330633 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.156550914 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.183909001 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.18712638 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.158116197 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.175774796 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.158867479 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.185796113 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.156541834 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.173737666 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.15777565 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.185435382 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.154096341 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.178081025 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.165360763 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.176823603 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.161475702 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.18695478 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.157208539 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.178082981 seconds)
  done (took 12.569218265 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.187088945 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.179660277 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16807696 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.188468938 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.158720114 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.180645458 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.158820336 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.179116702 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.160004426 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.186381523 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.180099508 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.289739987 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.162242978 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.186458138 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.159659618 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.181995769 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159983822 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.180429089 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.159399669 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181152087 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.160386457 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.187594037 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.16040671 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.188463212 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.434864588 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.157579676 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.179510886 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.159344006 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.188432551 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.15972499 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.192103479 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.160060019 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.180251064 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.187489624 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.17027731 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.180896048 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.154576221 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.180171445 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.15962358 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.180575058 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.157202742 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.188910825 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.160713384 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.178225108 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.160114146 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.180187718 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.189568659 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.171238535 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.185963033 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.165309429 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.18111528 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.166574535 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181212708 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.159666813 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.188489053 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.196083385 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.170021411 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.18888212 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.160180006 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.188623079 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.190362266 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.174946688 seconds)
  done (took 12.069164033 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.155741453 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.154118272 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.174990828 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.155694659 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.175094613 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.155558468 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.175728003 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.155192222 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.174336835 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157194082 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.176234911 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.15632344 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.175121152 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.156475135 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.154670017 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.175228009 seconds)
  done (took 3.510706773 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.17217385 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.191893396 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.254450723 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.158080228 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.17828182 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.162373511 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.178267642 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.159054235 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.153919782 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.182101649 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.158504793 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.180604251 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.193223315 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.157037707 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.174921126 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.158468755 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.175618352 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.159367542 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.176799298 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.235302897 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.182469224 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.157162933 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.17981728 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.159110247 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.180611725 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.160500857 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.185332506 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.155875828 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.181895547 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.157011238 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.17825933 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.162308 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.176505337 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.159271162 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.177790416 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.158533637 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.177061692 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.156956412 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.179313585 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.158330539 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.179968975 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.156748564 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.177691031 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.159104799 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.176079724 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.157547688 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.176107101 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.161833149 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.180253299 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.158183872 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.178449997 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.160517619 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.182510709 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.164857137 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.185005998 seconds)
  done (took 10.386021575 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.16777769 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.179529813 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.168662928 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.177231267 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.157669911 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.179217203 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.158317967 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157249955 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.179449077 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.155564336 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.178837476 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.159090063 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.179182912 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157200019 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.180400804 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.158135403 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.176928924 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.158612139 seconds)
  done (took 3.921724683 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.154278767 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.154212557 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.17632794 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.155697313 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.177064835 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.155265275 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.176893025 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.155749973 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.176381298 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.155639205 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.175400866 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.155594018 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154432767 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.177174835 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.154262843 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.176902104 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.155492539 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.177425496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.156377218 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.177510282 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.15690878 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.177384847 seconds)
  done (took 4.529064835 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.167823646 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.281067376 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.183899852 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.291880203 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.152921961 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.175037482 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.161976464 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.176649908 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.191039866 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.154071129 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.174424695 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.153118634 seconds)
  done (took 3.159727365 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.183139979 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.215119395 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.158826272 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17981267 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165862154 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.183654919 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161959003 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.183181604 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168976795 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195021168 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.183396366 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171518599 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192147409 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170730091 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.188489681 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16570955 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182612328 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161685435 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.179410454 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198614922 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162918832 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191504311 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161392661 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.183354042 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162697435 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191616615 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169534059 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194829385 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18383476 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169710827 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188727701 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163609004 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191910507 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.174947526 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.180492226 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170037894 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18370276 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1985983 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166336934 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194150318 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.160755638 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187367612 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171017069 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189324983 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191175428 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163286965 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188599123 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162400261 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.183472842 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.184193116 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189342932 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191965613 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166773163 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192432012 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170898897 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.205707094 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194698782 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171081393 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188818285 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173766092 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194769321 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191073669 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171863335 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196364565 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167367024 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192693777 seconds)
  done (took 12.821493083 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19620875 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.182924449 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.162760362 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19680282 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172387704 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.186779967 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163863715 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184432113 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163261753 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18218001 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.229483302 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163738769 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192614857 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17119251 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18434495 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164390947 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185381675 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191906248 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.159896799 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.204410841 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164234014 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192488654 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171317316 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193194051 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19655649 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169057182 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184270918 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164533074 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18589829 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16353581 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191250159 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164078547 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192832063 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159505968 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192897574 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186982088 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163760419 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191084635 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162989721 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18978824 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172739285 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.200971716 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165024687 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1855685 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19624821 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163760629 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186010875 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160248381 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.185139465 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159754813 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198385702 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174107266 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196767061 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196495029 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163372521 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.186205173 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164928655 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187008977 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164667169 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193313829 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172310389 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18694577 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.208126466 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165827722 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.187544939 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172708904 seconds)
  done (took 12.826206671 seconds)
done (took 225.39480475 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.318231739 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.347631288 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.149346156 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.500788334 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.149991839 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.86680059 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.851391019 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.231685049 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.173741786 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.149995889 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.174328733 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.168044623 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.538635885 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.172797882 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.150538626 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.189142907 seconds)
  done (took 32.043672454 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.35140607 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.396338529 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.165298324 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.17697432 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.156430158 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.180885572 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.153743503 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.18037175 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.154585091 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.182604575 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.17680733 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.153381097 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.182885547 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.152112639 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.177505953 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.155291885 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.183084594 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.155653872 seconds)
  done (took 4.358834877 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.174111945 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.22636915 seconds)
  done (took 1.329119087 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.185130316 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.273790682 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.375309248 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.226972089 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.175578473 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.195659797 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.228135785 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.168450611 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.267656173 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.167779786 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.190274406 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.17741467 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.181364754 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.183340703 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.171466148 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.17581747 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.183378627 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.192578609 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.169638192 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.179185565 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.181170455 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.179258829 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.162775447 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.192895898 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.259233664 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.167506217 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.180488105 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.157331809 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.180902962 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.169592307 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.187230513 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.172491138 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.191548799 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.236018351 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.158516387 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.231335075 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.183162748 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.15583071 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.191336482 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.156069218 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.18098747 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.181544874 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.166389525 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.176325216 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.155910748 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.18231662 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.155890005 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.178929178 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.16498348 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.181764245 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.164170807 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.186486634 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.231362731 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.160245238 seconds)
  done (took 11.155138024 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.99056549 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.203380612 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.179138841 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.149159331 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.201599659 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.169376916 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.986773737 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.183184957 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.309152093 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.088663859 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.197153842 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.165256071 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.325839829 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.315317123 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.363461163 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.417052336 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.847475018 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.192843727 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189442456 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.222953282 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.186275154 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174982028 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.195688642 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.515720959 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.15712892 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.180180664 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.16212753 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.187979561 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.237188612 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.157588965 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.184255414 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.257952705 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.354998705 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.272241603 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156716926 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.178887832 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.156089472 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.244148575 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.353097974 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.280594551 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.249990938 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15465179 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.179366664 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.161260661 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.194683766 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.153352602 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.241070879 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.25120017 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.252900456 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.185349548 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.166725043 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.187018405 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.160383314 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.237819837 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.178817641 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.422559601 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.448949618 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.156799338 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.18582838 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.170304548 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.350630621 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.159649841 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.298171366 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.203151951 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.274418905 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.180492017 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.868284787 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.249235255 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.157993765 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.184378125 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.185784799 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.163329289 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.182815566 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.219348703 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.491164903 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.187250488 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.161578089 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.179899972 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.291474566 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.15854139 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.180494182 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.240178237 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.158460444 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.188192856 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16691508 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.185928741 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.25126631 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.335109514 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.165189093 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.186839123 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.16247492 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.190363314 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.181698804 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.268016275 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.316296716 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.237808383 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.291560121 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162840051 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.24188013 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.247988309 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.185737796 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.250805637 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.163669276 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.193107658 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162558591 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.31569224 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.194506369 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182637541 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.163199175 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.186438304 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.222524038 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.163930763 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.186853091 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.248778214 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.555449474 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.246407522 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.156532895 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.186233389 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164862306 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.240110143 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.208477209 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.327532642 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189536463 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.224519334 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.186467567 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.156614888 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.187575599 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.246390062 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.189051694 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.163842343 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.18556864 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.168329786 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.3407918 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.284391402 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192154673 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.311558125 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.255095498 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.187872703 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.254987733 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164610877 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.247060747 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.192066953 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162378539 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.182200404 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.90327094 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.170219761 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.18691064 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.165995132 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.266530122 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.183143191 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.160923956 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180615495 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.155938755 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.863508412 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.186159847 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.157171244 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.184734315 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.163577784 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.188975707 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165843646 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.186608437 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.243345679 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.312165814 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.190536799 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.164615766 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.181202722 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.241831381 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.159715701 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.183938544 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159215498 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.182440798 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.165425995 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.187532297 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.16212753 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.250488557 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.240201635 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.320131282 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.63103716 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.159352038 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.182059954 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306295723 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.183337281 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.388707111 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.188278342 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.302487768 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.247552919 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156876723 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.449451568 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.24681302 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.26714703 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.163913163 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.253767745 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.180915045 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.165395264 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.243601997 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.184293408 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.166025512 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.240147926 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.192231637 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165902591 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.326430827 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.183490582 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.308801909 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.157949695 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.252051535 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.185630169 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.165105842 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.415458069 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.16085593 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.195463962 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.243295324 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164820471 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.184074036 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.039707144 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.161117765 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.19169833 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.165312293 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.320022819 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.244972353 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.165959163 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.191877962 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.170144122 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.241980632 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.290155054 seconds)
  done (took 61.273122164 seconds)
done (took 111.082211715 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314522468 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.225389276 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.413992031 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229810928 seconds)
  done (took 2.206455304 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.33547171 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.197927265 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.293280521 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.18163008 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.301916746 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.156044285 seconds)
  done (took 2.440101357 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.228576203 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.223060698 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.224422883 seconds)
  done (took 1.656000599 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.265235125 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.266747677 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.409158595 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.320954082 seconds)
  done (took 2.301002313 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.333342949 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.175562898 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.2144177 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.285086322 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.303736739 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.265629938 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.208774314 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.208793031 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.212163363 seconds)
  done (took 3.223506704 seconds)
done (took 12.80501941 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.196848356 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.214187572 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.180347165 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.196036521 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.188963904 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.214394093 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.186594189 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.210904682 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.186535243 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.196202743 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.186217885 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.19398207 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.302421628 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.187693142 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.193462172 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.1854629 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.195986864 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.197310077 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.21039533 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.170573506 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.212676766 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.170671424 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.193834076 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.177749349 seconds)
  done (took 5.725720708 seconds)
done (took 6.712029023 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.30218773 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.151807363 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.168965411 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.194627334 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.285550767 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.175928378 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.211408937 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.17191446 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.204010301 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.170837018 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.182538017 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.181846937 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.192548089 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.297426788 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.172615177 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.185605656 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.160747048 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.224436152 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.184648271 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.209635666 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.28701024 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.162451385 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.204668834 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.161215473 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.285414228 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.189344888 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.169748332 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.194898458 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.183442601 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.195734877 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.172133202 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.185010887 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.186579663 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.208776479 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.160753683 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.195211067 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.16060974 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.157620742 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.172129152 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.196794579 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.181970557 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.195090172 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.170024764 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.186396399 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.171076225 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.194120076 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.159693841 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.197802737 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.16001567 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.194824076 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.163306311 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.210277438 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.169275437 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.184648061 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.159165073 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.186015764 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.181160817 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.185602442 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.183298798 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.160221353 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.186931732 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.16042955 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.196106432 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.160978641 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.194526692 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.161771689 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.194737543 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.172348313 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.194072095 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.165116947 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.186609694 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.170359583 seconds)
done (took 14.59359846 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.165648508 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.232446808 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.312038214 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.304762778 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.21550911 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.177192226 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.201245634 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.184296411 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.200003017 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.177824568 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.222732793 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.192873759 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.304333393 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.204813126 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.203584827 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.172518726 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.199076013 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.167678376 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.302446282 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.210906708 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1849217 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.20342091 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.187502335 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.20295423 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.165525518 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.212747934 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.194868286 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.174238568 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.165238959 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.206909203 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.211897547 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.165143207 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.193338063 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.183650379 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.207014733 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.175823825 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.203437742 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.173804993 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.190086742 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.166363754 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.197292896 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.181895966 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.189853752 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.178529825 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.198550248 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.181803216 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.196632267 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.178314295 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.190063136 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.173231736 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.191449695 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.191312177 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.20254531 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.183631731 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.20372032 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.17843575 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.202544053 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.179307438 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.193708711 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.179153509 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.192377885 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.171450084 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.191202248 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.211593318 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.16863164 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.203918808 seconds)
  done (took 14.024057948 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.184400335 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.222036615 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.176699216 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.202871539 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.171491081 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.185153433 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.159832196 seconds)
  done (took 2.314544818 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.16021346 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.319729346 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.308773902 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.30960222 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.302029609 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.344316271 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.18469695 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.18689779 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.198111297 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.198879271 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.319966666 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.376733382 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.199102763 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.176909787 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.339614765 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.161147657 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.314535878 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.295578021 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.203897018 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.31484716 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.177851946 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.221423269 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.20206578 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.162459975 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.313510259 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.188829111 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.361954198 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.205318986 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.171629996 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.175391507 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.201857233 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.26431315 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.314814474 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.176212702 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.195844248 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.311438836 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.306571946 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.202281519 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.360393315 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.192708933 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.303249666 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.178388816 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.205213387 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.178633331 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.204480332 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.299079024 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.181635318 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.205117913 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.176615407 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.351092202 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.174129336 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.317112672 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.201860516 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.176768638 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.19981242 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.178923451 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.212281184 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.178174124 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.323208978 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.206883152 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.312304589 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.313130881 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.30822446 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.312493928 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.212868759 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.319189333 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.296567392 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.202928669 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.312861852 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.179564315 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.315504785 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.203145875 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.175378377 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.303379152 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.209655222 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.316966005 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.317028443 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.202057259 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.17742354 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.193523771 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.177668892 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.191525123 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.306993019 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.177376047 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.202169634 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182608277 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.204642573 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.178625298 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.306758631 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.215480544 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.204958466 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.175678625 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.209851616 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.178905223 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.206957254 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.319911282 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.174423088 seconds)
  done (took 24.200673285 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.165286521 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.164557867 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.195323023 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.165352102 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.190191504 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.166072027 seconds)
  done (took 2.105546313 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.200815271 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.204764726 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.188075522 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.204800345 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.228359626 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.30827286 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.314282493 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.202151055 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.225387321 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.190586946 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.311206055 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.312619852 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.311267306 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.209005628 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.315298893 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.18236956 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.319020177 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.205060992 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.188163872 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.204789031 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.18039354 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.210933876 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.176145654 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.296825595 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.20860865 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.182120157 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.200629494 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.19126224 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.213771038 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.173692059 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.209723806 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.207062364 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.17151378 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.199726236 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.31618078 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.172745361 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.202023386 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.182588861 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.208876352 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.180315458 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.314559344 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.206042892 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.187129662 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.211110086 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.173470942 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.199391906 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.182383597 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.19906435 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.31771617 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.182657865 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.212360734 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.208376848 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.180910436 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.208228225 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.171288472 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.20037143 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.182928919 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.316342393 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.211511674 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.17220025 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.208973781 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.181714448 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.200885531 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.184084164 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.206140739 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.183949579 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.198367404 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.181398906 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.20325797 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.181427331 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.209256987 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.206804161 seconds)
  done (took 16.554357436 seconds)
done (took 60.20257667 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.591145564 seconds)
  done (took 2.647253188 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.221107726 seconds)
  done (took 2.279259954 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.038042827 seconds)
  done (took 19.127295518 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.481661181 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.406883375 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.081654378 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.234673628 seconds)
  done (took 3.264932712 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.144473959 seconds)
  done (took 2.218571928 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.457263385 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.338087755 seconds)
  done (took 1.859805636 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.801280875 seconds)
  done (took 1.879085043 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.850409818 seconds)
  done (took 2.920622098 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.35864421 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.279912411 seconds)
  done (took 1.718181341 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.710085968 seconds)
  done (took 1.792921083 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.414563123 seconds)
  done (took 14.499182264 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.314351357 seconds)
  done (took 1.400496111 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.351598831 seconds)
  done (took 1.441344112 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.659253736 seconds)
  done (took 4.746333943 seconds)
done (took 62.857859021 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.179646449 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.210412651 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.183761706 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.207365755 seconds)
  done (took 1.853399724 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.183277985 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.205631526 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.182919211 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.205587806 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.183703388 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.208380689 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.177728257 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.21017079 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.178920936 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.180931318 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.205779799 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.179645959 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.207368269 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.178691299 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.203867894 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.182969706 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.208384599 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.180742677 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.208332219 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.181684068 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.207078149 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.182123439 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.210028803 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.182992754 seconds)
  done (took 5.717899322 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.175462467 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.172605958 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.198901271 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.170399951 seconds)
  done (took 1.808226032 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.19107779 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.221901054 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.192666679 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.216662398 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.194657296 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.219457307 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.17927168 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.204191468 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.17968549 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.216400074 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.196214267 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.221276602 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.194082152 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.212252689 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.193410628 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.20180611 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.184989027 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.218927072 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.196999283 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.217121744 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.184317014 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.21569363 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.18070622 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.217468996 seconds)
  done (took 5.942828763 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.255122527 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.221016094 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.207308974 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.252539307 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.236673951 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.178193819 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.23628277 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.185328246 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.212653369 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.188431574 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.208191489 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.227199702 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.212087026 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.181613039 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.207626752 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.187245529 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.215747128 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.186076595 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.249274856 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.212211832 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.186244214 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.219460729 seconds)
  done (took 5.764594785 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.329265195 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.171464751 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.197985023 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.170005836 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.213113623 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.173875952 seconds)
  done (took 2.352166013 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.169636935 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.166403074 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.193818082 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.166752699 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.196188217 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.16721037 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.190990768 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.16702529 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.192485232 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.165984655 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.194262203 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.166136351 seconds)
  done (took 3.238823248 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26543096 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211727064 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.343046557 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.459115018 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249939605 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.249514551 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.366511971 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22139205 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.268375957 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227219467 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271747965 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225407295 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.243418733 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280864696 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204107171 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.242171368 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263078845 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27123512 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233250192 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307211134 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247807001 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.267444345 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255956781 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239297679 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230167398 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225249733 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.211934912 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19219546 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255979269 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255102831 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266963138 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214123947 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23248061 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278358442 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320982089 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273326308 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.356880508 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223051828 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.253455206 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.256019707 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.325450603 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234554687 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284307732 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244695363 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192385219 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285555446 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24206479 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.278899363 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.196110343 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235166078 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272398536 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243244061 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.260427741 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231217042 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391084509 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197505562 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.231670172 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271524403 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281883262 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296738643 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242463305 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.215210118 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.262497207 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281564716 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307610346 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.204366631 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.256400133 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218264208 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227597238 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.300676992 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276281432 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252517796 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.284903339 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195772311 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266779106 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259228565 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219598246 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301707012 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265142026 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.212591 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214477693 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22534821 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190088698 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.280811129 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213276563 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.310786728 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195494553 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.269939634 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269160624 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216133351 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252976723 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252376716 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225293314 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23965813 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.154759275 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236374332 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.251702888 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220877878 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22151099 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2441594 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202862249 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.218793326 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216339871 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.217149681 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263954585 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.189267504 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25259525 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265688814 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.194607149 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27336458 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240841032 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.22866567 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261395391 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292677022 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195239911 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225863009 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318210088 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26664997 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.200380788 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26391289 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.293062546 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.23591799 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198149081 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257951238 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287611783 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206324562 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295858643 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232523284 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198891074 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.220893942 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266867386 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.253272151 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.223170488 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22259807 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.230567728 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281801477 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.221253276 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202531201 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276211312 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226037822 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189027739 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229609226 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231595861 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.206318555 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.244026632 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.202326218 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246776004 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263936426 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230882503 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248976982 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229331398 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267214497 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195123556 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.264506192 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243215147 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.182705706 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.268111957 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294276179 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192891777 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273393774 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.253586158 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271781348 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265621487 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192209848 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.276356093 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193208438 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.215685388 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256391333 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234735297 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257044419 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.284702685 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269176268 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.256151498 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.229211201 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24396133 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26328816 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.281403522 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221828209 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.234897468 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267854243 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263605868 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.185522894 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.217446227 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.191877613 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230715163 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193959512 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230226414 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274780124 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228050369 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.265639576 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.261556864 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232376129 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.293137207 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.188469078 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25504172 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.270935222 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203302389 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.285578844 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288801041 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275946823 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205140961 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258604114 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.215884785 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191167047 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.228128871 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225696997 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.231960573 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202449837 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235067113 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.288696628 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263553696 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21287316 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.309090842 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22869214 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.298617513 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.215804119 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.226565963 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26053781 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264543278 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.252093021 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22364031 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.225460095 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.28950979 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237632384 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288129517 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265516585 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246581356 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289105549 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.261693614 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196686674 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.239664905 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255754311 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203156072 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.255115403 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.236788211 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195793474 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241748969 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.202548383 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234180338 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281931592 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240125787 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269889488 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.219224806 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264210065 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220809993 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207137095 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270366015 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240306536 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.160300063 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259381867 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285190806 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213919312 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24676029 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264912249 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195415004 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.410899808 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27614147 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234500909 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230909531 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234064751 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238103044 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251959904 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255184057 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.279671808 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20622839 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305425711 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.267020129 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.205242999 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225501232 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.242082391 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215441154 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.225339829 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.217580671 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.25983821 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.238930034 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285896691 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20388284 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270196161 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274782219 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.2114602 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.243040543 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235032192 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324635905 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23667458 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268590859 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.263382516 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.258109778 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248583636 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219181573 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191941936 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.227259696 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.281067656 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195009994 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276248886 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.259093632 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272889311 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268559012 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227488356 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235382935 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.194092279 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.263838788 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245082842 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276981241 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20094378 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.232115481 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283072729 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.183175528 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22624581 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226084895 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.385144647 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240139685 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264327049 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.161799486 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.377249858 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194266883 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22563372 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254324031 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235168802 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.228982121 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.276963432 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242537686 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236351215 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.256363117 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2004551 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.270594606 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274032962 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263654826 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271808867 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.210971102 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257605733 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253055923 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236408694 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242270403 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.242876416 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22453847 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294778616 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.273263311 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.198239315 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266315919 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268026821 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.267596319 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238890783 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235265951 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27977168 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194014616 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262826439 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236521418 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191229415 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257524229 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.260113524 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195267708 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267446021 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270331234 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198292535 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224147847 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213241502 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264186877 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236874606 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.196719499 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281778919 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.226458336 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281182125 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279551261 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227763601 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.264470573 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208740721 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226501848 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205920041 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24102674 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228347614 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.242323483 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268502021 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.197223334 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271574409 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264188903 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262090103 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220295053 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239433311 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.362762611 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.193587746 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292522743 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248791763 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293156832 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214123877 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275163623 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.268751774 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216238392 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263496496 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243795946 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.289892731 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262366674 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.26598082 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199228896 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241197152 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234961722 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.201116567 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247365953 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237580422 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238814656 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.234776922 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.234993082 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242093216 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.243629794 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210162339 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300386802 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.247701052 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286317555 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252293605 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235496357 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276301686 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271223177 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195778249 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.260296508 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269030161 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211705832 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249879262 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.200911163 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.234229297 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315294983 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.192965461 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256901803 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273672301 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270119615 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241745267 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.231173042 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277617147 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208108307 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277167579 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224388451 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.217925268 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.269822301 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201917786 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.224311276 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271445133 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227744953 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.263960382 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240712244 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.24635137 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292011435 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.192466235 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232480471 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.383965726 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256737326 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294135309 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.188071472 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204883247 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245669159 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257513543 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.264365112 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23959199 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.228577391 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197318877 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.243851959 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.244324506 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.194868775 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.271496466 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249980462 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255900908 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287717174 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.20404557 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.355238121 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241283615 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241483501 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.204431583 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.198494865 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237196574 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234877774 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209755095 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.275075413 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314975948 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.262861569 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.215507642 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233068605 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.195276648 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227401893 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.260650673 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219184786 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268664332 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245286708 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.161081727 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240107767 seconds)
  done (took 119.535732514 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239808219 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.237123869 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.255812139 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.306880645 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.282431655 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.377833731 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.318859193 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.333449457 seconds)
  done (took 3.569327705 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.186711941 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.23229211 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.244607153 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.184758411 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.207788225 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.559713634 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.236021214 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.216817166 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.227875696 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.220689586 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.204803069 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.637695408 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.21784509 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.185430074 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.241323216 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.175471057 seconds)
  done (took 5.396959488 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.435446226 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.742767359 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.398715717 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.413518367 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.372860822 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.292917626 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.948393857 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.285129136 seconds)
  done (took 14.11670269 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.238827577 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.272117914 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.467887851 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.439699001 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.284745078 seconds)
  done (took 2.93598795 seconds)
done (took 173.305373055 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.192537613 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.196403328 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.223786977 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.196709233 seconds)
  done (took 2.024687287 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.248782545 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.149780919 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.184499788 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.148454353 seconds)
  done (took 1.966693111 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.465543488 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.149556099 seconds)
  done (took 1.865758278 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.213073045 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.233366058 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.203473011 seconds)
  done (took 1.891463293 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.20375566 seconds)
  done (took 1.440214848 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.187060799 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.188628317 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.372206898 seconds)
  done (took 1.984860994 seconds)
done (took 12.399363914 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.208900727 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.034803728 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.647115949 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.202255049 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.819147812 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.46709187 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.541159599 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.246916874 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.272029565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.209840232 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.212102601 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.791150048 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.528910974 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.953823807 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.513435822 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.949833634 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.81641611 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.180127445 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.216220373 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.180047546 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.521195957 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.178889368 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.210526772 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.179974353 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.794190309 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.485664971 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.208947381 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.963083713 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.209028606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.18857824 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.500645997 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.178990569 seconds)
  done (took 23.837710439 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.180204829 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.267651564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.234658123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.213208677 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188226799 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.21324667 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.191436564 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.223478349 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.312754506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.179941458 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.231889404 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.179781172 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.216386176 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.180869578 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.236524421 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.179897388 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.214101667 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.181426702 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.21920064 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.181992417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.233210522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.17952262 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.213460734 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.181601445 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.211085921 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.19785854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.211292093 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.192106552 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.211272747 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.190476806 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.215389541 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.181691261 seconds)
  done (took 7.893847255 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.221776945 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.278211566 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.237306714 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.250064202 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.267302427 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.182722957 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.301318973 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.248934588 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.286371263 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.212947191 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.202253723 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.212404594 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222454545 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.212742138 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.206130472 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.210870041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.184585205 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.211770016 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.218864703 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.183366754 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.235194783 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.17999307 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.214624081 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.181303083 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.212373096 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.199833722 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.212162524 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.192920483 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.212452017 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.191292831 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.21798163 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.181970696 seconds)
  done (took 8.238523488 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.19408781 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.197187994 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.236175005 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.237382491 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.191040844 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.197844223 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.227540108 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.192263136 seconds)
  done (took 2.930906088 seconds)
done (took 44.138094098 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.20351303 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.230862248 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.201881539 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.198682109 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.372129305 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.187371174 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.232953715 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.188357682 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.196539868 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.236338643 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.183254868 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.221504843 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.202790662 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.224983079 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.344630975 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.197265169 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.380496291 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.346360316 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.190218044 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.230188141 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.189919892 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.348241281 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.228916959 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.191814755 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.328718897 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.187329548 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.368098555 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.191826559 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.19295254 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.214931382 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.347473377 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.226719054 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.19047953 seconds)
  done (took 9.218451732 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.291417575 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.223632628 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.190615371 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.222115536 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.192097542 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.221885897 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.330582123 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.704044907 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.227469569 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.190746393 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.223895301 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.279959274 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.230191493 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.186046145 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.224689467 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.170257335 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.331146719 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.224706508 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.1833377 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.154178404 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.219302399 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.191542863 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.343840442 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.22040638 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.189869745 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.222817161 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.191273555 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.196974769 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.224265251 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.192874317 seconds)
  done (took 8.468612315 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.19597555 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.205654085 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.24144893 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.289639485 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.220785479 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.23618632 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.20822606 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.234994478 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.212852626 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.218472684 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.200599252 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.256109873 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.201583735 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.227087537 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.184735434 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.232768217 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.200304592 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.219001592 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.193671137 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.235846472 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.205487513 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.23358983 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.209057031 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.228400064 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.183560633 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.22492099 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.195596731 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.227883169 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.19327786 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.232252789 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.186605503 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.219212582 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.188013853 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.251579618 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.18706038 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.230115576 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.205892034 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.23082663 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.199244821 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.249778272 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.188154932 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.219731574 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.213071998 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.273657355 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.188049681 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.2273148 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.18728031 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.232428998 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.184055039 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.236833609 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.227796146 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.21801222 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.239040733 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.184814004 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.183806055 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.22635092 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.186637351 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.220546761 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.200188167 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.218271262 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.207561171 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.225912946 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.198162489 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.21907311 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.19765614 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.217364373 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.187279891 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.222096609 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.212461306 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.226386051 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.222376393 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.217828399 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.199375493 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.231685956 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.197627296 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.231122337 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.185141071 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.229505651 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.196879994 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.224006768 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.198454566 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.222916755 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.187215148 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.236557805 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.206799971 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.232711716 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.198503874 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.22849854 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.187848679 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.219703917 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.203798751 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.220489351 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.18956873 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.232908318 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.186730519 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.224088343 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.196678363 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.229470033 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.183842792 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.245025013 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.188973682 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.220004583 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.210522302 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.223069987 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.189664482 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.197063118 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.261379746 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.220116609 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.195098483 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.230825302 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.186909383 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.229351023 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.187567637 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.187301402 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.234669367 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.202772852 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.227208711 seconds)
  done (took 26.309248893 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.438736588 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.434773514 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.288411746 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.515337041 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.200062522 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.352969117 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.465596708 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.435832239 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.221756412 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.220000323 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.275398359 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.399128269 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.22215765 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.215848329 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.473636975 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.516280946 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.215243433 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.258529385 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.254564005 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.20087736 seconds)
  done (took 7.900928324 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.195068521 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.253969726 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.210161921 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.238532847 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.196109226 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.235306529 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.187171567 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.241235496 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.19735303 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.225903727 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.189057631 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.226121911 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.201112446 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.203242606 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.234097018 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.209735539 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.227987581 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.192106343 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.240923514 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.192131066 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.195814356 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.211749413 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.228330782 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.20863093 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.236615005 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.196663137 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.218847942 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.192194971 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.224993206 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.197597893 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.223239282 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.195348165 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.22532614 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.167712808 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.231474338 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.201808344 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.225956458 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.189663085 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.19253014 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.221304609 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.202851564 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.230145677 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.19609002 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.194218971 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.206380155 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.173126345 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.233540382 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.199627341 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.201513265 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.2075266 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.233726928 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.200916332 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.226972368 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.209130505 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.225517994 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.203925094 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.230611518 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.20086891 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.224295352 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.186385014 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.21732142 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.190153021 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.226891842 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.200903481 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.231634134 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.195903403 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.228439385 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.188914456 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.223949289 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.190473662 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.191877682 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.231342617 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.241155178 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.197439493 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.195240052 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.230005506 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.196485461 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.190697294 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.195991194 seconds)
  done (took 17.950351578 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.211130968 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.23092755 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.204648091 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.254577555 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.201171462 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.228174268 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.197160337 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.24014639 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.201981761 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.206724682 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.234499652 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.235527925 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.209584892 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.23360722 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.197379429 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.236782136 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.199972985 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.260688737 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.199458744 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.249199427 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.203321526 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.227905867 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.20024802 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.234345164 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.216248379 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.233294052 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.215181763 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.234775944 seconds)
  done (took 7.519471226 seconds)
done (took 78.62551516 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.504645947 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.730312842 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.407982957 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.409924544 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.418195359 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.42017487 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.407448741 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.421729956 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.970573702 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.386139326 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.409368887 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.416209282 seconds)
done (took 31.257335169 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.467241609 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.210413908 seconds)
    (2/2) benchmarking "String"...
    done (took 2.22326645 seconds)
  done (took 5.748231322 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.18984586 seconds)
    (2/2) benchmarking "String"...
    done (took 2.207710283 seconds)
  done (took 5.700257135 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.409651256 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.3970595 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.593647907 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.397276847 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.398818733 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.398805951 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.407606791 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.39938759 seconds)
  done (took 17.295029347 seconds)
done (took 34.92210022 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.448781302 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.709927638 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.663689845 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.398487615 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.401557698 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.406254106 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.400116453 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.465080999 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.41342045 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.390100585 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.925346932 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.685892599 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.401471794 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.82960396 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.398623457 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.414216151 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.414978469 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.756866638 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.403130873 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.383953504 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.385740813 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.384651638 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.41677353 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.41503958 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.414857294 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.398540624 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.409122556 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.420451651 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.70822812 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.408066626 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.443973008 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.403436778 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.405362861 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.403942847 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.410043833 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.407407116 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.707044451 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.415931313 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.39137882 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.412314234 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.730611973 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.418157574 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.410220462 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.409228646 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.386634362 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.460307278 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.393500948 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.58392174 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.435665597 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.402343832 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.408526811 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.844771811 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.404066537 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.404417838 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.416113948 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.760877273 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.433977324 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.514942089 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.434403845 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.401960123 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.412284482 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.408487281 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.474237052 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.408332861 seconds)
  done (took 157.73692067 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.402046098 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.402159451 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.402025634 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.40962723 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.406386803 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.402765044 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.403091623 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.402797311 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.404383197 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.411754456 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.406185661 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.404327393 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.406311725 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.411731059 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.413426526 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.429181672 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.407011394 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.407697934 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.411940024 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.40448768 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.410129249 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.407909763 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.404198885 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.405876962 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.416753555 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.500848816 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.432835838 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.431142396 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.414630101 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.404196022 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.416855384 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.415703771 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.170360282 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.359439632 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.424207366 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.408514449 seconds)
  done (took 87.880261312 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.405160112 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.403599508 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.405236169 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.443246659 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.404558708 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.042206065 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.031364673 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.475601611 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.058285485 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.987570975 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.730853763 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.408239763 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.405635102 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.499554308 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.420416731 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.406459509 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.503230683 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.432800638 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.405388772 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.406674061 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.054108976 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.4237256 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.428444987 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.596272403 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.406363337 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.442652728 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.810586528 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.406154232 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.443206919 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.751287647 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.443397027 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.407883781 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.821503629 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.057146862 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.525271195 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.408711331 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.445227637 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.406879395 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.700093426 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.409134011 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.410167662 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.410448633 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.122716234 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.411280233 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.044458727 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.413743326 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.457551271 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.410754049 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.408456061 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.923424131 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.286920634 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.440839718 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.409413026 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.412257662 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.409082538 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.409586233 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.445629853 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.911305691 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.379776576 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.411147605 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.412818697 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.445922488 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.409757275 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.411249294 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.468569502 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.411283796 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.158381035 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.473730982 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.619258007 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.060402234 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.414959821 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.509184723 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.53330022 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.410708234 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.411465242 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.410443255 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.410259294 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.525939158 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.411210252 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.258674166 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.598035337 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.411710316 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.410800005 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.072626833 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.51367391 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.410659415 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.849140732 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.413834958 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.411102347 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.238022028 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.513343771 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.411903706 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.442455707 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.413151771 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.258661734 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.037381988 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.731195915 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.415917694 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.535001205 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.424068661 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.413963326 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.388192661 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.030871244 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.157474005 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.419532958 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.527516174 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.6004098 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.415449618 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.420290248 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.019139934 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.415478323 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.472990944 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.412870589 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.81978665 seconds)
  done (took 405.702633634 seconds)
done (took 652.622145961 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.395993443 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.39784738 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.417812838 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.398822713 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.399494656 seconds)
  done (took 13.324121873 seconds)
done (took 14.637631574 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.425202465 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.420821879 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.418156527 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.2683923 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.420674724 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.439016023 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.437544747 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.440683205 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.438351064 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.451824775 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.24737615 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.421661442 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.419984623 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.41806259 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.255751238 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.422012953 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.377065547 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.422280864 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.440270372 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.789172213 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.423558191 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.545504145 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.769501834 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.488649848 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.787315831 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.83561918 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.427556186 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.676702323 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.468048626 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.466757749 seconds)
  done (took 20.994311638 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.363656649 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.784856859 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.425833551 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.54903986 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.767414069 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.488783106 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.777819861 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.839747987 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.427920478 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.669472494 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.469337197 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.468420041 seconds)
  done (took 20.9870017 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.224381955 seconds)
done (took 93.470886349 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.475598747 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.553550211 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.471766835 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.456058344 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.454101741 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.45679489 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.458997056 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.456417887 seconds)
  done (took 13.101775582 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.454234438 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.456334426 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.456009105 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.454026451 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.454973639 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.454468058 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.45502623 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.455529017 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.454333474 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.455424813 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.45498181 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.454421055 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.455523499 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.454967842 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.456034039 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.455488578 seconds)
  done (took 24.599733808 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.458442516 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.455136439 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.455496681 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.455806077 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.456304883 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.456168833 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.456361525 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.455020712 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.45544821 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.45487635 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.456799081 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.455268299 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.455968178 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.45608677 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.457370242 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.458421564 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.456208223 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.456453716 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.458626827 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.455257893 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.455966851 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.456199633 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.456300903 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.457888534 seconds)
  done (took 36.27222568 seconds)
done (took 75.292343533 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.425088134 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.434308441 seconds)
  done (took 6.180361273 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.556167931 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.554723334 seconds)
  done (took 4.432906727 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.45704995 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.458142128 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.459521284 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.458911151 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.45703221 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.459237938 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.459183532 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.459803163 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.457228255 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.457684807 seconds)
  done (took 15.904596877 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.45825604 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.458200096 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.457933722 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.456946306 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.458116916 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.458121456 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.458158681 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.459206929 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.459423297 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.459503894 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.460122408 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.457738446 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.461326053 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.459828097 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.458989094 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.457899849 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.45986232 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.460109906 seconds)
  done (took 27.582756998 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.481547548 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.484428921 seconds)
  done (took 4.28698419 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.638866996 seconds)
    (2/7) benchmarking "second"...
    done (took 1.542918481 seconds)
    (3/7) benchmarking "month"...
    done (took 1.627352473 seconds)
    (4/7) benchmarking "year"...
    done (took 1.6137608 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.542426589 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.487946337 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.539340932 seconds)
  done (took 12.315083155 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.460621843 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.807046273 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.988045547 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.67525158 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.454021912 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.476949199 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.421340731 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.476482659 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.481325244 seconds)
  done (took 16.564392162 seconds)
done (took 88.586146606 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.426233183 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.500488994 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.458240396 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.44720652 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.871139479 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.48869734 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.431873215 seconds)
done (took 17.947864949 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.422809493 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.427037964 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.428753685 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.435731317 seconds)
  done (took 11.039873088 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.426708871 seconds)
    (2/2) benchmarking "read"...
    done (took 1.834930057 seconds)
  done (took 5.585539265 seconds)
done (took 17.949628371 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.461380179 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.461610446 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.461851818 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.462454757 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.464040015 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.462044789 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.46146378 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.462711145 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.463525075 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.462568529 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.463681729 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.463576269 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.463903126 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.463935114 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.463792708 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.462582498 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.462653107 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.463723844 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.465614168 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.463899285 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.461359437 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.461560579 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.46283644 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.469334823 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.463855355 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.46394538 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.46287178 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.463086611 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.463477025 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.464581774 seconds)
  done (took 45.223874001 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.470126753 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.469694645 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.463606162 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.464446701 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.465741977 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.464454313 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.463808701 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.46468451 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.465067171 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.463217564 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.464095051 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.465829768 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.464764339 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.464766714 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.464835298 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.466867749 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.466411197 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.465396333 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.466886466 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.464818676 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.465175984 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.464153926 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.465886968 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.464067323 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.46592985 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.464656085 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.463923939 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.465439494 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.465377615 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.465430765 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.466143006 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.465382364 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.464936987 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.465521139 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.465430765 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.466338492 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.471150556 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.472655147 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.464858066 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.466487464 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.467072104 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.466072118 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.465347164 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.466718777 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.466628822 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.467027127 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.467195654 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.467448899 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.467465591 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.466719337 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.46563959 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.466551927 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.466576371 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.466820466 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.468339235 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.468600931 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.467268918 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.468868004 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.467653254 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.470257985 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.468093953 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.468784753 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.467589489 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.467729381 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.4685042 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.467369419 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.468126149 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.467591933 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.46947241 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.469921629 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.469423591 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.469131095 seconds)
  done (took 106.924215366 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.468030327 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.468452657 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.468676639 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.469123204 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.469002169 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.469118803 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.468355717 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.469817287 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.469722092 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.471216138 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.470821673 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.471222283 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.470034004 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.470123471 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.469836702 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.469740112 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.471293172 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.469925261 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.472070296 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.470297795 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.471220538 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.470218036 seconds)
  done (took 33.670676698 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.471768093 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.471432925 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.469211623 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.470942988 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.472963985 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.472834499 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.471586995 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.473761084 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.472018404 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.470206023 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.470576042 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.471993121 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.474875681 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.470530226 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.472054861 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.474907948 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.470242829 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.473857604 seconds)
  done (took 27.828411351 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.471203007 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.471773122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.472838201 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.472336043 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.472381649 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.473222049 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.471972867 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.472456169 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.470869865 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.474027529 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.47561558 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.471326696 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.472884716 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.473147807 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.47283862 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.47297928 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.471724791 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.472983541 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.473396093 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.471834023 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.47230636 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.474757929 seconds)
  done (took 33.732329929 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.473703045 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.4733361 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.474540513 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.473839656 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.473355516 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.472253839 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.474416824 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.473738874 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.475312119 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.472533763 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.473948048 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.473975636 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.475216646 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.474689135 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.473113865 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.473974798 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.474807586 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.472283451 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.475135071 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.476158595 seconds)
  done (took 30.815547495 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.475871897 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.475798075 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.474751852 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.476145535 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.475518011 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.4765657 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.475639675 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.47500377 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.475438601 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.475074938 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.476285427 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.475310932 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.475585408 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.476186112 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.47660949 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.475553351 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.4764601 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.474604348 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.478619663 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.475414366 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.477373903 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.477137701 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.476195751 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.47854172 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.47773631 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.476592938 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.47703664 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.478587326 seconds)
  done (took 42.673493676 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.502427928 seconds)
    (2/2) benchmarking "in"...
    done (took 1.50299874 seconds)
  done (took 4.343554163 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.476925663 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.478120716 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.477433059 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.478091033 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.4772565 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.478888272 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.478195377 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.478592215 seconds)
  done (took 13.162468495 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.471055363 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.478860056 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.478612539 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.47705892 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.477360494 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.471693503 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.487842413 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.482772076 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.471420073 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.474058957 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.478773593 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.476045662 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.477761663 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.474333573 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.474386861 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.478586697 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.481931745 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.479868844 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.481273003 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.480113777 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.478591726 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.479249631 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.483717448 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.482602781 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.473579846 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.493525957 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.491173284 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.484816959 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.474572151 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.488389341 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.477490748 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.483007092 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.481254564 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.479917942 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.48045565 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.481042248 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.492311697 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.481180393 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.49067336 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.485519702 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.482173396 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.480985536 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.481553625 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.477867541 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.482644825 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.483853918 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.48160021 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.482014298 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.475392786 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.482153422 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.488371601 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.475717478 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.482549143 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.487974832 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.481486857 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.495505539 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.489125538 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.479243485 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.481281384 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.495783926 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.504130029 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.490308788 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.48603576 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.487277118 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.489345258 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.487944661 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.497573749 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.48973588 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.483174292 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.482500324 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.493310008 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.503242137 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.49724773 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.488237086 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.484085651 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.48310885 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.47875264 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.48684515 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.495935063 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.493863221 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.488982083 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.484637397 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.490645423 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.488334515 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.480622711 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.48797567 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.485459429 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.485777975 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.478450228 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.500362442 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.492532465 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.484086349 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.478703611 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.483381232 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.484053523 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.486507606 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.47754704 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.485311435 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.488198953 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.485557835 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.485712813 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.485560071 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.49394731 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.489861734 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.486551746 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.497019 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.492095469 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.480788234 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.500581603 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.493944167 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.488877252 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.481435104 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.490105201 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.490215132 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.485036331 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.491555316 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.492356884 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.488569811 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.492382586 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.488174719 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.494780586 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.501230918 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.493356662 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.48788781 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.488697131 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.494688187 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.488339544 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.491921214 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.49704072 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.487854915 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.487287594 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.491471856 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.493673252 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.482402894 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.492535817 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.483787219 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.492518287 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.48878122 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.488107321 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.492714123 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.48815195 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.486509004 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.492304154 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.496245158 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.493843525 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.493317062 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.504022404 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.489201106 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.494870891 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.489946242 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.493429507 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.489385487 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.487468763 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.49304049 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.482866082 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.492775374 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.482019117 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.493408554 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.488158166 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.490245931 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.488567576 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.483601232 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.48790988 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.494083361 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.497794587 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.492122497 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.494668142 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.490316192 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.49089811 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.485667207 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.493129748 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.482865663 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.491357735 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.497369324 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.490064274 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.490894059 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.496511742 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.496953768 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.491940212 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.491998808 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.489176591 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.496049044 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.496993368 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.503016061 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.500163812 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.491630885 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.491602389 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.487140159 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.489101932 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.49420663 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.490442185 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.499794771 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.508319599 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.504375731 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.491444129 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.502513623 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.486225727 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.497815679 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.502900823 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.498290181 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.491600643 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.495229177 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.48668249 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.497020606 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.492589386 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.504335782 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.485752134 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.497754847 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.495181615 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.492713843 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.49392978 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.489261798 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.492948789 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.498262454 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.495542205 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.493790936 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.489072179 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.49892881 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.488211315 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.490704509 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.498252536 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.496424301 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.507484926 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.501587667 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.499533984 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.507686138 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.497648619 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.492808268 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.497922885 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.502786632 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.495880028 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.511168774 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.497826086 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.494512047 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.512728889 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.498489997 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.490938967 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.504854074 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.504035325 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.495850345 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.492476383 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.503335305 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.49839159 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.496781399 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.495169742 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.491620129 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.501490518 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.510470779 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.505650544 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.492769646 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.502332245 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.497415279 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.499864403 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.50412996 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.503168385 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.500119673 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.507813459 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.505835554 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.499209502 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.494790085 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.502766238 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.498071019 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.497812326 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.49391644 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.505295122 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.510234786 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.500492835 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.505744969 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.497834816 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.502210372 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.493286192 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.50269102 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.493624504 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.518092559 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.51976023 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.512104158 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.50333314 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.501972911 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.512303834 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.501558194 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.496521171 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.497732778 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.499604664 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.496245577 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.497078644 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.502943076 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.49653004 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.504583928 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.504400734 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.502513553 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.502832309 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.501245026 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.494398345 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.505082455 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.502626626 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.500692861 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.493087424 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.503081293 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.501836371 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.509015706 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.500675749 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.496045692 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.516020369 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.505227865 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.499362873 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.498633171 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.498631425 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.496545126 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.503367363 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.507397833 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.498465831 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.508470735 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.499203635 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.503673756 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.500783654 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.515463663 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.509966456 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.499651527 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.509186189 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.50118587 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.494168148 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.49752926 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.506704938 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.515043568 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.512497016 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.497409831 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.506978925 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.503340683 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.503033941 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.503531839 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.505037338 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.502804372 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.504607953 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.518050794 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.5086621 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.504200848 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.513115948 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.509944596 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.505769134 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.511145376 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.495305654 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.514047911 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.512086069 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.506273388 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.503446842 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.500869908 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.505398906 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.504894791 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.503590784 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.503963319 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.503382169 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.517972363 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.51052777 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.510722488 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.504641408 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.517235536 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.51715075 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.517850699 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.516927467 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.505243509 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.510743859 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.505361611 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.502022917 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.502327705 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.503115096 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.511576786 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.499220606 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.510159917 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.506425642 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.510089376 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.514759175 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.511891073 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.498297583 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.514249543 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.518940153 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.5013222 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.510249872 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.505543128 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.500768079 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.509953536 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.506316131 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.499266073 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.504158455 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.50896591 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.515774527 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.502235933 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.511724221 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.504302607 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.510659072 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.509241433 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.507839858 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.507861859 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.507530113 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.503446283 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.511708786 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.516804826 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.51548727 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.508879796 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.512799637 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.505183306 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.523054852 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.518821353 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.511257612 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.513354317 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.50952883 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.504617592 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.511432564 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.514879441 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.504392563 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.51370513 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.504379991 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.50797102 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.506709478 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.520178998 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.512920114 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.513357879 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.502621598 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.50633464 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.51166772 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.509435034 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.509117954 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.51523619 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.516676457 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.50365448 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.505007166 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.510606971 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.508354589 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.514807574 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.507160652 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.511086012 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.508881611 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.512220235 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.510960018 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.509227047 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.503457457 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.507070976 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.524363958 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.516090279 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.512084742 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.50970979 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.516954845 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.506588792 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.512506653 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.512765624 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.506969567 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.5087501 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.514483232 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.508844036 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.506137477 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.509227814 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.513138787 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.524207792 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.513681384 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.508574659 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.526832498 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.524221201 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.519998947 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.505506461 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.512241186 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.510538317 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.513644647 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.513008394 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.507398252 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.529997844 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.518440648 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.518125803 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.517409022 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.513742774 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.507995465 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.517042984 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.513639339 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.518091441 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.520338027 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.51788534 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.523294687 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.513596247 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.512278551 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.506836728 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.507256265 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.513625929 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.511511834 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.514733543 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.519244521 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.516665423 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.517063937 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.522492071 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.514493219 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.517516647 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.513468298 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.508535687 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.518389175 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.507596881 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.523256834 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.5160064 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.509310437 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.520099728 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.516033918 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.514162311 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.514847454 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.521368604 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.516828292 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.511226533 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.517589982 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.526435101 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.522360072 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.515085962 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.510922653 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.516816908 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.521665988 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.51585652 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.517323117 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.51579506 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.536083604 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.528280726 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.512601009 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.516109555 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.529312492 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.524805005 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.523635792 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.517727429 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.522214661 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.521507449 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.522507926 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.51595786 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.530062098 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.522685182 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.51495459 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.521033994 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.515869372 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.51835174 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.527295406 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.524438757 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.517821226 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.520818744 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.536711407 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.528971806 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.524828402 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.543109078 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.5251151 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.523416211 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.525951519 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.51056758 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.519835169 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.523192928 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.526181646 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.518065461 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.519090312 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.52142727 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.512002888 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.527861818 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.532078206 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.529651571 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.518688096 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.512815981 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.515737371 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.523992053 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.520049582 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.521270547 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.519736413 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.51789868 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.522125684 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.515039657 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.538574074 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.540687611 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.526624091 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.521789537 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.519040445 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.529310187 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.527116053 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.521202242 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.526515557 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.518920807 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.520549924 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.526580929 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.53146514 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.5217007 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.516246445 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.517428717 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.518442813 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.526165094 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.537521147 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.540827015 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.531026816 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.524972345 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.525026472 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.521560039 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.518024324 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.525642961 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.522269347 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.518242787 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.520563683 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.525561176 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.524682015 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.523144179 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.520085969 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.530336156 seconds)
  done (took 897.108266514 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.523202008 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.523933526 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.52251875 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.523286446 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.524112878 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.523087957 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.523301672 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.52376891 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.524526268 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.522594877 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.523125531 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.523291893 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.523352865 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.52416456 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.521607043 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.523586904 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.525094357 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.524582001 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.524091297 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.526441386 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.525022631 seconds)
  done (took 33.37509805 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.525325182 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.526143024 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.524501545 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.525505513 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.523579709 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.525569278 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.525294732 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.526992434 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.525514522 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.524065316 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.525231596 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.526725919 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.524471582 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.524803468 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.528816619 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.52739451 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.526316929 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.525238649 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.527924047 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.525764694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.525985672 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.524923735 seconds)
  done (took 34.945520797 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.525647151 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.526573875 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.52254103 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.530981698 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.526323774 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.526718656 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.526135901 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.524929043 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.524913329 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.521397518 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.521927823 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.524111132 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.526538676 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.531458994 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.531946136 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.534448829 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.527189666 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.528053951 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.527032942 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.527282764 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.539919636 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.537349967 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.529354396 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.522507297 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.531634295 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.526661177 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.534511546 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.526484339 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.521433207 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.532841921 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.526498377 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.521917487 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.536984975 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.528972085 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.524224065 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.532432232 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.52849926 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.528371729 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.528467412 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.535099121 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.539692233 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.531675223 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.541023058 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.540452386 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.528378923 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.527823336 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.534124975 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.530064752 seconds)
  done (took 74.784848271 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.528995762 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.527494034 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.530656587 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.529302923 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.529570206 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.530103863 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.529885121 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.530490714 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.530533876 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.529500295 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.529380028 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.528253209 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.530776156 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.530427717 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.529767088 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.531063343 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.53048771 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.530333431 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.530081025 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.532300302 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.529676085 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.529733006 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.530529126 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.529728187 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.52980152 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.530862129 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.532228993 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.531898715 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.531218181 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.531735774 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.532656493 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.531367292 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.531379654 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.531207285 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.531335934 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.532632467 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.531756727 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.531518079 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.533137908 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.534780226 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.531511793 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.53088811 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.532106213 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.532014441 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.53240206 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.531661882 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.533210892 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.530603997 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.534447292 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.53877836 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.532992289 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.531181026 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.535010004 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.531464232 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.53351093 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.533742175 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.532738067 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.531447051 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.533068626 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.534717368 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.532720187 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.534023147 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.533857344 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.533768645 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.534600664 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.534728893 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.534059045 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.534736715 seconds)
  done (took 105.543793037 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.533324664 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.536594633 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.534693483 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.53412714 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.535386239 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.535506226 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.535589197 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.53482262 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.53560114 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.535866397 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.535670912 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.534324511 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.536608601 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.534788677 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.534367604 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.535455242 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.536158893 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.536148906 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.535008886 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.535721337 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.53651662 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.538398633 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.535923458 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.53634495 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.537886627 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.537917147 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.535534442 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.537839204 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.53720714 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.53839137 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.538136868 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.538148392 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.536277065 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.53757269 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.538397446 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.53631003 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.543858056 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.536687522 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.53737909 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.537747712 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.537953534 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.538314544 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.537925529 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.540650595 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.538416163 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.537822512 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.537288296 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.539651236 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.537473586 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.53781036 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.536061395 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.536991191 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.537785636 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.538345973 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.538196233 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.539937725 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.539875147 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.538232551 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.537448233 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.538490684 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.539546125 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.539072951 seconds)
  done (took 96.691731192 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.537809103 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.540207732 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.538108443 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.537269718 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.538652017 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.540597027 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.539036633 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.539371383 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.539483757 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.539576646 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.539732253 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.539586354 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.539673656 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.539816411 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.538836678 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.539669046 seconds)
  done (took 26.018043566 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.541847256 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.539735605 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.539792456 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.541713579 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.540859072 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.540376468 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.53955751 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.540413554 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.541094995 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.541238239 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.541580043 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.542081364 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.54092591 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.540866055 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.540992817 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.541294113 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.54144085 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.541487364 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.541557833 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.540858723 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.543499631 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.542559008 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.539709344 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.541760374 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.542704069 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.543133662 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.540514964 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.54363184 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.54264624 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.543545936 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.541898938 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.541948037 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.542028494 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.543530919 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.541952158 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.541817713 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.542089116 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.543845904 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.541985332 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.543230742 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.542144081 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.540915643 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.543773269 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.542823428 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.542932869 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.542613345 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.542085484 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.542217903 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.541157922 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.543292482 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.54306012 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.54483346 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.544097053 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.543988171 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.542881954 seconds)
  done (took 86.203963997 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.543380272 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.545006736 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.544135396 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.542928888 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.543523866 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.544479364 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.545508056 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.5461844 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.544160399 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.544262647 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.543396405 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.545902311 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.54453007 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.546223511 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.544734773 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.546733073 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.544783384 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.544959244 seconds)
  done (took 29.201514802 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.54448572 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.547192349 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.545209765 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.545240145 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.581806108 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.544238412 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.545153752 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.546357676 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.545855866 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.546734889 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.545161644 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.548930978 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.545649974 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.547936089 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.545636494 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.546732793 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.546106806 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.54715233 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.545809352 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.547659029 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.546692914 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.547699187 seconds)
  done (took 35.450284146 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.540030125 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.5385805 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.538156702 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.560835774 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.549175283 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.537497541 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.53975069 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.539418525 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.56347326 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.570246468 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.568470892 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.549228292 seconds)
  done (took 19.992284913 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.548579327 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.547273644 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.548431543 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.5480676 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.547534641 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.548399137 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.54751313 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.547818825 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.548515911 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.54705113 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547678654 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.547404247 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.548741708 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.548296051 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.547696953 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.547796127 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.547039676 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.548285016 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.548669772 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.549777593 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.547946844 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.550227581 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.548351085 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.548527575 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.54812941 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.549551378 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.549518483 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.549483842 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.549306165 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.550026509 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.549287378 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.549287309 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.55044814 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.548737797 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.552123772 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.550370197 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.549719486 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.549804133 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.550902388 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.551445264 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.550768083 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.550029581 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.550744896 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.550784636 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.550406864 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.552852216 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.55076934 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.556761512 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.550295676 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.551801664 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.549893391 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.550601023 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.551020211 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.551831347 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.550768292 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.551935689 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.551584179 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.550371943 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.552344471 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.552490997 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.552675658 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.552033887 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.551465378 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.552747036 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.553017182 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.551218349 seconds)
  done (took 103.695184565 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.553742414 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.551630344 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.552676915 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.552720216 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.552010559 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.551692013 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.552014681 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.551533474 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.553133467 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.553882864 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.552866395 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.553465493 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.552853893 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.55249009 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.553689124 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.551400147 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.552377017 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.552992388 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.554661665 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.553826852 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.554018845 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.55432922 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.554035748 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.55343148 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.553565715 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.555493963 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.553194788 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.554307011 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.554425392 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.55366063 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.555416649 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.555744135 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.554666554 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.553787391 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.555102154 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.554103703 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.555658719 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.555847011 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.555107531 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.555206427 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.555270191 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.555099919 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.555381169 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.55642383 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.556121208 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.561025742 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.555718992 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.555239671 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.555033989 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.55660863 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.556691881 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.555580357 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.555878998 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.55454489 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.556553386 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.556077976 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.556879126 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.554780395 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.554793804 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.555986763 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.555599424 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.555862446 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.555200281 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.555567716 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.555968465 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.556532923 seconds)
  done (took 104.006306461 seconds)
done (took 1986.716834503 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.520927208 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.523021677 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.547488266 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.870862978 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.543272368 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.201733335 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.177975355 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.544579028 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.549041467 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.549219493 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.544571625 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.522556604 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.872076261 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.547448108 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.550240921 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.52509296 seconds)
  done (took 58.998297899 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.587190033 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.568175255 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.708935263 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.556907202 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.587295703 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.820990504 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.629672949 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.557143615 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.763279604 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.560008504 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.533569039 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.587126757 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.55089715 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.524667697 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.579319479 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.818883742 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.915727691 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.540720786 seconds)
  done (took 33.798455796 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.152920493 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.536480302 seconds)
  done (took 6.098026572 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.579789231 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.554101538 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.562063654 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.557298942 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.525189342 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.52653232 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.553952706 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.528984028 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.542040926 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.713240211 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.558938116 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.576158673 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.555955335 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.556835196 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.563005044 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.612967124 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.749786617 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.562652415 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.560444873 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.568726443 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.555089024 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.798143325 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.612278838 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.563675171 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.713174559 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.531990346 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.572288068 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.577777942 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.769155631 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.565758886 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.556949316 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.556604509 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.560591609 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.52887319 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.208127933 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.54372885 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.597772943 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.572373344 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.564368276 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.771635695 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.558012021 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.571113967 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.528619107 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.185087223 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.732513402 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.848148636 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.533277032 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.563210517 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.56003232 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.762070861 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.556410072 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.561945552 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.664967312 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.530158479 seconds)
  done (took 98.802601576 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.567816061 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.528985635 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.796388144 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.549833467 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.528127914 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.528946174 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.529628174 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928249465 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.529721273 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.531952702 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.951005432 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.315154742 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.534510848 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.578268577 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.578821302 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.568044442 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.531911426 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.536172792 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.529564619 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.53032526 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.222639136 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.533145172 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.531151692 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.731463128 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.606749434 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.222706113 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.533171502 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.531899832 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.534157591 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.531501946 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.273670975 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.53248161 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.596785736 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.530965844 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.927369745 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.06540727 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.026393301 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.535683553 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.538784366 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.534201032 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.534670226 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.221291548 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.044292015 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.532934391 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.539403299 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.225908057 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.532053901 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.543926501 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.534622734 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.892148226 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.531933565 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.534605832 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.53363888 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.533380816 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.533518892 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.602947414 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.591960333 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.224694845 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.533477476 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.534749496 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.55814458 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.533431381 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.54540993 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.534577477 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.537439642 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.0467762 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.722015488 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.539955395 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.0470622 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.273247317 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.53504695 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.35621087 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.536213858 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.558551545 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.653039539 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.533191826 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.533736029 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.22123826 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.544518196 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.533249444 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.030619187 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.538123179 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.964707034 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.556789659 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.536328816 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.245128169 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.54253631 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.605718995 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.535620906 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.536568931 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.553245563 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.536915135 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.935709213 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.570206239 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.537004951 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.535039058 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.576401091 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.535502943 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.538131769 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.542633669 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.360374947 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.543153986 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.53601907 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.540006449 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.538010595 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.537385725 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.538621636 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.539211306 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.911135487 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.53810062 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.543669834 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.536964232 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.537294652 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.539586843 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.739354704 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.538394233 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.984719077 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.539712836 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.537545312 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.539379414 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.537038474 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.540172392 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.546125105 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.54122036 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.53924476 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.961084996 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.556459031 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.557293494 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.539939402 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.550441156 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.549745467 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.538828995 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.575568164 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.542309117 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.508984977 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.562492549 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.570301992 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.538052779 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.551827576 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.546549669 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.545395612 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.540155351 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.959399027 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940748541 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.756612136 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.542102666 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.541345027 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.501125178 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.581758407 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.808254388 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.562387019 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.5409169 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.931486748 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.741182102 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.544153206 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.539854405 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.540809973 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.916300739 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.541857313 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.957912386 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.3058266 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.54159918 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.551594096 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.504703427 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.402560898 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.542669637 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.543139319 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.959544227 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.560387323 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.540915084 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.542944742 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.543953949 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.557332116 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.542967021 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.546577676 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.541026551 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.541685504 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.617322985 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.824678753 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.561704949 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.550662413 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.229210642 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.553673481 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.541790894 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.551607156 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.544769276 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.542362475 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.578457917 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.547726285 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.573421104 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.541893072 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.542004259 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.260539417 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.552695283 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.548209448 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.827305483 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.463209882 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.547261213 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.543655726 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.54330659 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.582994388 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.279285306 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.615296052 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.0102219 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.550328572 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.617092089 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.542355491 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.591993367 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.279305839 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.554670954 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.544717313 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.443481395 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.547387276 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.328002953 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.544627847 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.546601771 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.378068538 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.550895474 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.545263682 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.554515417 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.545359294 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.951555711 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.546556025 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.574793904 seconds)
  done (took 551.277616462 seconds)
done (took 750.38038177 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.544936406 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.550434521 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.549925728 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.545213536 seconds)
  done (took 11.616699302 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.583718991 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.575543161 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.584324376 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.574839091 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.583959035 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.576376786 seconds)
  done (took 10.908105005 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.545935066 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.550726248 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.550753137 seconds)
  done (took 9.074853653 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.868141263 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.567616874 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.057507872 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.564746746 seconds)
  done (took 10.486675924 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.584628325 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.583696851 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.58490734 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.583367899 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.585399442 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.58370209 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.584370401 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.583522039 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.58430021 seconds)
  done (took 15.683637564 seconds)
done (took 59.195601062 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.698538341 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.707898818 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.548631847 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.621445017 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.759358924 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.703482964 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.70660026 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.708545619 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.712729461 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.614866388 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.709392933 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.609447333 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.709767771 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.840816559 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.615061245 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.707130145 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.607496945 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.799746881 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.705508431 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.617246439 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.730955103 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.615307645 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.61726348 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.584908667 seconds)
  done (took 43.680569996 seconds)
done (took 45.108503394 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.613183213 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.741286235 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.582695537 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.582619899 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.593100771 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.570490354 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.615527645 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.590337989 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.602863535 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.60331017 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.553789277 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.595219826 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.606989199 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.590573075 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.625445177 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.590546745 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.582944242 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.591164142 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.603913599 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.607504837 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.586815614 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.594215019 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.616772705 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.583382287 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.600466023 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.603839706 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.597612518 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.553147226 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.59261677 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.60536071 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.555764459 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.601598709 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.605166412 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.592169717 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.587423582 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.592732358 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.594154396 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.746250762 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.610908622 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.593799812 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.59126611 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.607079923 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.598107343 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.599465197 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.592427571 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.618387087 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.602402862 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.609494057 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.554528198 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.55866357 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.619907252 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.60482342 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.593633311 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.556704452 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.555818656 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.614518788 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.596659114 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.619070414 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.592598612 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.595838549 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.629167229 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.615897105 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.603695274 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.603545185 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.592974219 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.609669218 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.594194067 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.608943777 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.591778326 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.597369401 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.597078442 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.591993577 seconds)
done (took 124.609006917 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.764412919 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.555131277 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.806592235 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.591072441 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.810258623 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.760688772 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.590736783 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.591569501 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.589300916 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.450626508 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.590948681 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.590255786 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.557389596 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.592228034 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.762235617 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.592324485 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.591228466 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.35387021 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.59176757 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.774378362 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.561522872 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.591636548 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.592685983 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.453104267 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.555378027 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.563833432 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.776327074 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.591829729 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.349908113 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.563703457 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.556106611 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.351285383 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.779072953 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.612139435 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.602813668 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.60085015 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.811831169 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.595811869 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.766601815 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.766913935 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.805243879 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.630718334 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.565107337 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.561613038 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.595128263 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.595563724 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.593571571 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.624114352 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.558104561 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.593515069 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.356702133 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.605391999 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.595645996 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.59642801 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.593885158 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.623790009 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.594708587 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.595707387 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.777895848 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.596835463 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.770597364 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.456137544 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.45602084 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.596339241 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.559377557 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.595664784 seconds)
  done (took 126.481911705 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.716885646 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.722667247 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.767384526 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.594142174 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.681981137 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.765471293 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.590189577 seconds)
  done (took 13.277780715 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.601767097 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.596600517 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.68181729 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.680968997 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.597152543 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.8225766 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.596305438 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.608871002 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.595983679 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.681633468 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.5962606 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.596895806 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.604558163 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.564090238 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.68144301 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.609747091 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.763102836 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.593604675 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.598375743 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.80352753 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.597761629 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.606744126 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.683912598 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.611936476 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.597474092 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.605403243 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.414448583 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.598694778 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.597281819 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.597485406 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.596724766 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.711047683 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.597984702 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.564639889 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.598011312 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.76244975 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.599940398 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.59981168 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.598479318 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.568299712 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.598799121 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.597516904 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.597575991 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.597988473 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.597705825 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.625255279 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.598077171 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.600693286 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.5976466 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.601515668 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.684489557 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.598035406 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.597861362 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.598331953 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.68768277 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.610408209 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.600443045 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.600306785 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.599955693 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.597199267 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.804460469 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.685549538 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.600415528 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.681672439 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.601092639 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.599870975 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.599876492 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.599250435 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.741960552 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.600622467 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.685153678 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.600247909 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.836830577 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.628064295 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.60229356 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.59998789 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.600821515 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.601409718 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.566516454 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.609160285 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.600488721 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.598020321 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.611280108 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.600057103 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.601977179 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.81053282 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.766774322 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.601493598 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.619705411 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.610585816 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.601369559 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.688152103 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.603040652 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.603098621 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.689441374 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.767322437 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.686897894 seconds)
  done (took 164.519995599 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.61339986 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.613902438 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.599682334 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.630264086 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.597025921 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.595725686 seconds)
  done (took 11.095229847 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.597973877 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.6050349 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.604297935 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.603985185 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.603690945 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.603022005 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.60300161 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.598438042 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.608435681 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.602961452 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.606162209 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.605957503 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.606383606 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.604605306 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.604095535 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.604177529 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.603866944 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.603989935 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.604828728 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.60557198 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.569761769 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.605667453 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.603411789 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.599937394 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.608967314 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.604663205 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.629829883 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.604988455 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.603288519 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.616136382 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.607107789 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.605234437 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.601276182 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.605279414 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.610174241 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.600601235 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.609557473 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.607108697 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.604936145 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.606814247 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.608649117 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.607566576 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.607219256 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.609330837 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.606360139 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.605104812 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.612763607 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.633820544 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.607008684 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.610267618 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.60923313 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.606087967 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.607259065 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.607638792 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.604615503 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.60481043 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.612865435 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.608474723 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.609112653 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.60446283 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.611457015 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.608872399 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.607158214 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.613528229 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.60767546 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.611376558 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.604691211 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.611836743 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.609334748 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.60849833 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.610307987 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.60980478 seconds)
  done (took 118.131395133 seconds)
done (took 434.940697847 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.957770678 seconds)
  done (took 4.409079745 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.707731409 seconds)
  done (took 4.160133143 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.329349844 seconds)
  done (took 25.784516454 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.613838534 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.579177981 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.604100215 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.575974361 seconds)
  done (took 11.823002283 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.202207767 seconds)
  done (took 4.654431126 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.592025564 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.582377969 seconds)
  done (took 6.627207413 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.949183971 seconds)
  done (took 4.400738949 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.205488072 seconds)
  done (took 4.663320105 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.587761823 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.587894522 seconds)
  done (took 6.633345134 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.558556224 seconds)
  done (took 4.009410764 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.268749679 seconds)
  done (took 16.71999533 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.599127515 seconds)
  done (took 4.052987954 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.654241366 seconds)
  done (took 4.105364446 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.662582372 seconds)
  done (took 7.114055915 seconds)
done (took 110.608249837 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.575411929 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.575660914 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.576865396 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.575885873 seconds)
  done (took 11.755281591 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.728166341 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.727427908 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.730186639 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.719488561 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.719725882 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.72777488 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.645006254 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.645534044 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.70723833 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.704792278 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.735560018 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.719165545 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.733729199 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.645973905 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.702603243 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.738293815 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.707406298 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.732406334 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.645900921 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.720858916 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.611640698 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.720761208 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.706294494 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.613079149 seconds)
  done (took 42.243039846 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.169246243 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.733928037 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.818442066 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.699892074 seconds)
  done (took 8.87605009 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.777588128 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.779279265 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.793676207 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.83474386 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.883408428 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.78822307 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.646971797 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.642285377 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.62768387 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.781521728 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.852935419 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.776273505 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.998268495 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.612377105 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.996037276 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.612746984 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.610671232 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.779098934 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.827992233 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.856660404 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.616743162 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.775763594 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.783874682 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.775094864 seconds)
  done (took 43.883857928 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.626992371 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.639412736 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.615540426 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.637776703 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.616416446 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.614888597 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.617801957 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.629440657 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.615547969 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.614973245 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.615631429 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.637845218 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.614560413 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.615392293 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.630676009 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.617810827 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.617916356 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.633564296 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.632888093 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.617396458 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.617057867 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.630424232 seconds)
  done (took 37.165910415 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.581583454 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.580600299 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.019532093 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.922820493 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.580393988 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.585397697 seconds)
  done (took 15.727067876 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.70836913 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.896330811 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.610524984 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.05213596 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.196778654 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.614722585 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.608837758 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.948569088 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.325073182 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.309427477 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.677605162 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.704147085 seconds)
  done (took 24.111654842 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746282611 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.590219259 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.59912968 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633639026 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591766313 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.59043891 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644193511 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.210572378 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.617426699 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95505448 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.589883183 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748120414 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.928122494 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.604953465 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.597759604 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.575719999 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904965149 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.292808394 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593516955 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591073907 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.654326014 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.605302392 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.615395226 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.887182651 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.596341616 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.59148618 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.952565616 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.590725748 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020267941 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968614863 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976671126 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.601520696 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946917272 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168619836 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.769599053 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884544257 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60162483 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.593952415 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.575672367 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.611940597 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.594319222 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.615516261 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965192641 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600071071 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.593418898 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.600888702 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224493702 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.624001977 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.593748968 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.595819343 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980221647 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.760090581 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.622115284 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.592932034 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685766675 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595340022 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.621155804 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793263026 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317324151 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594193926 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605092449 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.598686327 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.607637117 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600431172 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.410944995 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.625551825 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.623835475 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622842611 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594095171 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.595047037 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646956851 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595089501 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.643731372 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595433888 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590814796 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.602742779 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596798517 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344271922 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606846723 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.598996074 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905765391 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595828072 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596174485 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.595304752 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.597040866 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.579511333 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.625619082 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.572831643 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663103178 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.218612227 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.891802792 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.651113106 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657121202 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.902153828 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.573792379 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.59729467 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.596253825 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598926861 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.648517106 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.225864826 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596611064 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.624896574 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931996939 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.896001789 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596987229 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.597121184 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22720487 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612726101 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.654639322 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.605100272 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.897413142 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.402952429 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993691097 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605470011 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.667792253 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.598508302 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.608808215 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612446178 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.630262969 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.599239191 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990249388 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.578285619 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600242042 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.751129945 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.603965002 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.600868728 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.600399674 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.598473381 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.599677306 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.894976449 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.606019383 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981275552 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.607892526 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600084201 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.602988131 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605170741 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.602250886 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.905366528 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615457454 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.955879864 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600513236 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602431496 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599397591 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.904387352 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.616721651 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.628433197 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028665378 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599479166 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.60687005 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992157453 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668950151 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796881922 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.665669776 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.603685217 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.945546916 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.631049242 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.636351802 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.603063211 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.603704075 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610434609 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.632761819 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600170385 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400317806 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605239186 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.611682324 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.604080449 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.645962172 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754962485 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632327337 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.897830025 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.621559139 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602014614 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.63116036 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.606886463 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908066871 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981099971 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.607259974 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852326891 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.228481569 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398327329 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648020534 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.602038569 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.603771261 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.602911656 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603737668 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603374144 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.604345496 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899979879 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008357627 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.602758983 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413098411 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609558869 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.604728366 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.632769084 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987893224 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.638798342 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60504796 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.612963004 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610225225 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.62326571 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.990617243 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914735805 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.651363836 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.605135401 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.25479511 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636216798 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.606285129 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.604243738 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661588809 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.606620437 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307500556 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035958763 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.60613036 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990599154 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.613049258 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.653244942 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.604874824 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606627212 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615843886 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.61230915 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637790811 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.904555042 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.612108705 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.608042196 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.327898331 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.607544996 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.349791409 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.613719314 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.615275798 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.61188193 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.243411819 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609499853 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.606789033 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972178166 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.23783611 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608619294 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234917723 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.627618987 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.600040481 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995081777 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925045915 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.609062437 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.614780204 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99817386 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.91197051 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.665831878 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.623680986 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.613676432 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.586316109 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311159331 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.611686305 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863974322 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238303908 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61624261 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.611134837 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.675817715 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.618219956 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166111836 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.611169549 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609754565 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.609811486 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.620373722 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312973947 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.620837398 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.609935383 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.433698727 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.612581531 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.252746177 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611437181 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.909309696 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.998748723 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.986324099 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.625339298 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.612838406 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.947320256 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999793758 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61619435 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.614905918 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.353920425 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.615096515 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.640598361 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610998019 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.625556504 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613163866 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042756764 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.624664282 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.619351665 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620070681 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.614376661 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.612338623 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.613487511 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.622145456 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61399407 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.3035034 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.615732769 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658836784 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.632806379 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.617202788 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.949273019 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.657901958 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411572798 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933224888 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.606537396 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676991257 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.640448761 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622637488 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.592187875 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.613239016 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.613064762 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615874268 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.918601171 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.613964806 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.590758224 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.698834817 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.913419857 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.614465569 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.616696089 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951840454 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.619953488 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.614686127 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61467188 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679492274 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.618023633 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616098388 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.631744163 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677096019 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.762509814 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913363005 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.007882077 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.003844693 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172266529 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616995918 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.617644604 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.661714175 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.775171969 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614372191 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.632804004 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.614473949 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41553699 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.618731195 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431588542 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007605506 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.621106706 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617342889 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615689188 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945229976 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.615799746 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973852052 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616234928 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.630869889 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668346164 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630697451 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635131255 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919128263 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971716445 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.614492946 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616098248 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6214659 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.619047157 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013767393 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.919027273 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.327725824 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377043408 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619331132 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.627338365 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.262464103 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971828262 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619607563 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.618722745 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61989978 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.625522282 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.624289863 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.647644997 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617713538 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928489719 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99652791 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210419774 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.9948557 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.648024375 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.574303548 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634773877 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.956534976 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.53773584 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.918176815 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432264885 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.561047673 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963015479 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772698749 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921770429 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.62498625 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943788662 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.631018232 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.625717977 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620584713 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620125017 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.620349627 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.997920476 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435064613 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961846196 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.650171156 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.631603363 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.684284643 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.919457845 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.930335695 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.621901081 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.928167681 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018427972 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.635846291 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.620917367 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436875178 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01583253 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626515705 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.648878953 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95811276 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.626875387 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68954432 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.581056991 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.622999824 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382857764 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.92368869 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672188831 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640926265 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.572624703 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439587744 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.633593001 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.318539669 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.625298091 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627077158 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.982382327 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.654283482 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.623109545 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.997684901 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.650906446 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.637278735 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92969937 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.427824446 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.625518091 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.634820811 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.626102733 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.626498035 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.625943704 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692987914 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62521107 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.629710664 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.179761337 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.624416485 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623977393 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669472284 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.637318615 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.62404444 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.629278555 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62587072 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.655165437 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.622101875 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.613154438 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.626962689 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829778843 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33911547 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631975338 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.326080363 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.05263323 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.963392691 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.62583985 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.606286665 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.654881602 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626784593 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626925672 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.627090428 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.62349423 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.389849645 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.644707123 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.012682339 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655997806 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.923804207 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928138068 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.638462475 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928715027 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649332642 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680793626 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.604530715 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628053609 seconds)
  done (took 1115.538699398 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.674748304 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.663103736 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.637812392 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.642810374 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.631613489 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.687346275 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.662211655 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.657033203 seconds)
  done (took 22.745806782 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.635023629 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.653559437 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.629811375 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.653890624 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.622596561 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.255108558 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.629266054 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.653502306 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.676893968 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.633870551 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.632437407 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.411858938 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.654305411 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.635433179 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.627634632 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.654359678 seconds)
  done (took 37.158350655 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.185034564 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.093465167 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.370834378 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.66716822 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.706359238 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.632023319 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.163043429 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.642889644 seconds)
  done (took 30.952962735 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.668666875 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.666974899 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.666416029 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.667803357 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.667589014 seconds)
  done (took 9.829121846 seconds)
done (took 1401.43954811 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.65701211 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.659394397 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.659144225 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.657288752 seconds)
  done (took 8.125460997 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.607039066 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.607865916 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.608245993 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.647046667 seconds)
  done (took 10.962758323 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.134313169 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.339584175 seconds)
  done (took 5.966784464 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.630722734 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.485419829 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.462668053 seconds)
  done (took 9.072728523 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.020733363 seconds)
  done (took 3.514019765 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.126580202 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.220671777 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.625309895 seconds)
  done (took 8.464242137 seconds)
done (took 47.597682849 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.632112506 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.397558866 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.7810107 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.625303818 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.789837172 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.781979887 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.918571559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.622417907 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.641069231 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.643170965 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.624797399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.79085902 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.908825207 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.399357558 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.908243429 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.397832643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.793529051 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.641546107 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.625438263 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.644040978 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.921216168 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.625978765 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.640787282 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.626515914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.794093928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.773136096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.626913311 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.399793297 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.625786143 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.646801664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.773315517 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.627372168 seconds)
  done (took 91.144222812 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.626037222 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.643970717 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.627682334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.627981114 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.626436923 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.626679622 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.626473311 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.626919597 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.645029092 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.626640371 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.627811679 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.625789704 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.630346848 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.626193806 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.628596905 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.627271387 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.638658379 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.628930746 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.6265926 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.64649527 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.628181139 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.631138918 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.626445514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.657383526 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.634777928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.628440879 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.627670599 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.627501304 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.628501711 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.626776422 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.627693158 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.627658168 seconds)
  done (took 85.679171704 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.630377648 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.628708581 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.628489209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.641247955 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.633285909 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.630274144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.630133622 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.628961895 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.6267598 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.629288333 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.630309623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.628005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.630344892 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.633202588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.632869934 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.629023076 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.628639438 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.636456633 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.62962874 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.649871119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.629058066 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.629038581 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.63854363 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.630095978 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.630128594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.62997641 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.630796276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.644859238 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.629856701 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.640872977 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.631674182 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.644765441 seconds)
  done (took 85.744869305 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.954378137 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.666374404 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.667981382 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.637063484 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.670581923 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.665494544 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.64033024 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.960658685 seconds)
  done (took 17.36274969 seconds)
done (took 281.42544517 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.657290009 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.643813295 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.697150944 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.648671943 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.688437336 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.696392607 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.947651304 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.695516168 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.937420603 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.64003551 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.687250453 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.644709848 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.649687785 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.864914736 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.636223852 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.640523771 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.65347863 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.633990677 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.64180033 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.977946148 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.696218772 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.634195941 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.641529066 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.643953187 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.618815773 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.745448147 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.749607824 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.886961533 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.846133017 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.746478376 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.643112578 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.640838406 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.659644079 seconds)
  done (took 75.937347901 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.661790372 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.669541986 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.669441065 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.669504341 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.670254856 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.669635922 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.664267642 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.670365345 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.669781612 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.669961383 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.67049029 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.671227466 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.672750215 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.671170684 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.670109237 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.652995328 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.663203749 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.671483923 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.664414588 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.651627767 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.671222158 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.670418005 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.672212716 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.670878189 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.670811491 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.670595472 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.672701256 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.672163967 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.672822011 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.67098358 seconds)
  done (took 51.563171547 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.670870646 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.637942088 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.640743561 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.688618015 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.667209916 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.668897211 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.064315232 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.67311339 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.670955853 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.670303536 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.641705136 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.674309911 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.733512481 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.638771942 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.690460917 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.67222445 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.672325859 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.666191629 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.637246888 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.691039482 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.073965761 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.673565821 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.066405861 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.691764854 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.672112075 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.669420252 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.68004353 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.63929212 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.673003111 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.642772311 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.652546459 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.061763859 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.639395066 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.659851717 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.660296117 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.67901833 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.67303419 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.653416961 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.671365472 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.669636272 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.062872311 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.671420996 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.640652488 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.658908441 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.670858354 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.67568327 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.656599139 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.649473093 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.977674954 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.683305608 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.650388084 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.673206558 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.678525461 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.672965396 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.979220403 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.673584679 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.67130925 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.647545264 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.683987328 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.062561726 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.681148909 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.671929859 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.640718069 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.671746665 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.642320647 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.673853777 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.692702612 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.672961835 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.641707092 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.675856615 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.642643942 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.6730205 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.677658731 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.647578997 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.642799549 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.663861165 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.675220781 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.643730812 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.643476311 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.058007517 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.678712007 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.659368905 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.083352708 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.677759302 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.68285569 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.680352089 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.679465594 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.800859104 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.058344151 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.643583727 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.644500254 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.667352042 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.068365258 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.689600472 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.674677066 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.646988978 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.680379956 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.680455733 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.644474063 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.646071822 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.676908285 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.696599756 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.667995839 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.676534006 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.070197683 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.68840053 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.660607819 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.674701231 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.79847612 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.680974794 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.693958079 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.679129587 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.084202397 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.678815302 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.681024382 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.659821895 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.665769579 seconds)
  done (took 240.279262543 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.647607772 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.647439314 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.646239721 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.646360756 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.646798521 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.67840673 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.647935118 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.647465645 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.676886355 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.647958934 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.65057456 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.679774781 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.677970292 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.647053721 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.653275183 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.649231442 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.6481452 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.654671799 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.65233917 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.649670255 seconds)
  done (took 50.609938528 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.683214605 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.417668267 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.388468534 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.682114534 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.683050827 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.678835486 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.753193964 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.684150756 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.684298261 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.090489859 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.908758579 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.68513035 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.683024427 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.723169126 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.388698451 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.665498804 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.090096373 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.419851993 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.685345741 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.422369004 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.665366036 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.683528052 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.675916679 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.420548871 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.100494273 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.06677155 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.75544425 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.424390978 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.684791131 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.685495132 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.42125294 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.686436453 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.677908412 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.415322577 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.685741532 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.705489434 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.683843595 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.757307896 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.759320582 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.095381403 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.428525234 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.076313825 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.704912545 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.915747666 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.687455088 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.665126899 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.432680721 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.687158542 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.666833541 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.686674472 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.697935541 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.397888167 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.680962991 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.403762448 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.687681234 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.686523963 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.423279944 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.40279319 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.393748884 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.910165392 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.679490108 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.070618407 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.688776206 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.434496314 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.686541913 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.687449221 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.688557881 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.909979056 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.426078065 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.069960852 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.095443282 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.096052229 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.688481406 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.767082183 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.689841704 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.09878889 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.767107256 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.166261366 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.096910089 seconds)
  done (took 154.429359283 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.054649338 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.806421333 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.220592018 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.438224582 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.365807831 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.88705547 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.823435578 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.014619597 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.668670366 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.846445697 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.569182715 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.802635936 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.573238329 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.775993372 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.855543642 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.875958598 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.245402436 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.655777177 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.517104584 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.542032265 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.66589222 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.840105225 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.554671093 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.154495065 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.656788758 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.513028228 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.656402745 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.380506627 seconds)
  done (took 64.480007131 seconds)
done (took 638.798623152 seconds)
SAVING RESULT...
DONE!
