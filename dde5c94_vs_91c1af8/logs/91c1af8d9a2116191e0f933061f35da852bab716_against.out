cset: moving following pidspec: 14120
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.170367265 seconds)
loading group "string"... done (took 0.567859572 seconds)
loading group "linalg"... done (took 9.621481126 seconds)
loading group "parallel"... done (took 0.166182306 seconds)
loading group "find"... done (took 2.563355019 seconds)
loading group "tuple"... done (took 2.23146002 seconds)
loading group "dates"... done (took 1.410834436 seconds)
loading group "micro"... done (took 0.635700112 seconds)
loading group "io"... done (took 0.660493978 seconds)
loading group "scalar"... done (took 54.91124081 seconds)
loading group "sparse"... done (took 13.518444979 seconds)
loading group "broadcast"... done (took 1.332392129 seconds)
loading group "union"... done (took 2.532115013 seconds)
loading group "simd"... done (took 3.689611508 seconds)
loading group "random"... done (took 14.027206114 seconds)
loading group "problem"... done (took 2.172387355 seconds)
loading group "array"... done (took 23.32267141 seconds)
loading group "misc"... done (took 1.527400866 seconds)
loading group "sort"... done (took 3.723776536 seconds)
loading group "collection"... done (took 20.380065511 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.886411394 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.177900206 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.242115844 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.573184132 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.308975743 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.203899951 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.190168526 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.206050574 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.674981225 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.230151543 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.193525657 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.406776518 seconds)
done (took 7.08815283 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.294295804 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.093166666 seconds)
    (2/2) benchmarking "String"...
    done (took 0.236948218 seconds)
  done (took 0.979698047 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.094683409 seconds)
    (2/2) benchmarking "String"...
    done (took 0.144879108 seconds)
  done (took 0.891586632 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.134851995 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.207690099 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.149324645 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.147975382 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.134802547 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.148787776 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.133826306 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.148955744 seconds)
  done (took 1.725582841 seconds)
done (took 4.679299441 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.522178554 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.921520816 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.534156963 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.216184125 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.345701712 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.361241398 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.316090405 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.273416263 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.133397759 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113231229 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.236766421 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.541740469 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.44314064 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.056968627 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097202095 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.152650627 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.201788509 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.82103171 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.183562588 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.151783687 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.534244334 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.250777631 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.160220793 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.151072703 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.229894109 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.167517461 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.167849906 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.146100981 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.71932576 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.174716562 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.236933481 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.126207181 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.167766445 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.202638198 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.278815763 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152497745 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.718286313 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.241871609 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.123755402 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.142774999 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.730763738 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.160957688 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.250076005 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.14777382 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.111903545 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178570403 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.139023964 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.135619481 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.135712509 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.142399812 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203990745 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.477816139 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.148383814 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.237479152 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.151970023 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.734369015 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.142490955 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.317612037 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.181024976 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.147563947 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.120987592 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.146750156 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.195372121 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.138204865 seconds)
  done (took 22.875426757 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.249601713 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.25283285 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.120125681 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.20511959 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.183880367 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.124423714 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.147772702 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.121764436 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.171664079 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.239608542 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.170272631 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.255696133 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.136071145 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.131770388 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.230375106 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.295450141 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.1687415 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.149249845 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.15055434 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.137561627 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.189904038 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.138508465 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.153721643 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.153127085 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.212372467 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.246603426 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.152808468 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.167110985 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.144677965 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.140468561 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.186529656 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.205688097 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.1194573 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.148981724 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.234969964 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.150376036 seconds)
  done (took 7.069126249 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.279169928 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.145370511 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.304856574 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.231211106 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.17046609 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.235076961 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.221235675 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.33001131 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.32761282 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.224237594 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.171602338 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.140079056 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138653805 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.123889777 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.13811938 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.857665978 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.213639946 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201012154 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.228770223 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.154855447 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.123817072 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.409413166 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.142888422 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.127251936 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.152929433 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.094794527 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.28041024 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136483766 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.520815392 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.142451076 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.139543793 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.174030231 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.250142563 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.166235106 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.180345629 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135752109 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.144049463 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.250110158 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158116056 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.121492475 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.138204795 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.159925645 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.173049729 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.150742773 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163053835 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.175721368 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.129295701 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.169422243 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.17707154 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.238236091 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.245085077 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.127883022 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.321050184 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.173029475 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.14115091 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.257559359 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.134050217 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.895821459 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166069093 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.141614726 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.121728329 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.155244811 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.140817488 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.499980479 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.162104343 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.560830327 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.127941828 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.202566052 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.154892602 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.16006861 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129572832 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.146478474 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.150419198 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.147379426 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123387059 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.145424918 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.124997878 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.150070411 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.143371164 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.145998943 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.123788297 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.145831953 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.202375246 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.13969493 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.165748661 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.167388814 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.133403277 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.146809382 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156149256 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.140440065 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.149270588 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.246908563 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.138739501 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.161813524 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.128701911 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.157075771 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.187821301 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.147194626 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.38374866 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.127431778 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.182478233 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.143008479 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.158201473 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.156106653 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126580622 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.147272639 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.141840663 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.125588177 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.203634903 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.132308026 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.14189486 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.132357753 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.144989666 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.13814131 seconds)
  done (took 32.863081612 seconds)
done (took 63.463524169 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.483600254 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107683596 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.128209181 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107013748 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.128642057 seconds)
  done (took 1.693204352 seconds)
done (took 2.416259218 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.24229394 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.332688605 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.245614753 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.147944582 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.21404775 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.212374143 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.197103556 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.209434524 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.217274837 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.233075728 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.126094108 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.235148967 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.225715365 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.214204893 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.126737485 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.248162982 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.209248257 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.197668851 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.244525648 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149131884 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.16020047 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.149445331 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164852388 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.13154466 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.164426915 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.14810843 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.16765463 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.148002201 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.157540844 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.131937309 seconds)
  done (took 2.401703247 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.189353967 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146372804 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.158419517 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.138567482 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.161142139 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.131876756 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1437298 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162398515 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.168978681 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.148157737 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.157432589 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.131678058 seconds)
  done (took 2.373087946 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.123354164 seconds)
done (took 9.914474599 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244566365 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.895421059 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.20012042 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.316235814 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.378312144 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.323537372 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.678084413 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.252320075 seconds)
  done (took 16.128229435 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.159411403 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.153149782 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.139401037 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.24445867 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.154920887 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.140288231 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.156331123 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.142186028 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.156452018 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.140138002 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.153272773 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.137334223 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.155700666 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.141635469 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.157295561 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.142849101 seconds)
  done (took 3.269725291 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.181445909 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.178372683 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.14383966 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.161732299 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.140311767 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.161691302 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.147547185 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.162587366 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.140059779 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.158497321 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.147567368 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.160633765 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.158465962 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.139278396 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.160389321 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.164690426 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.159081123 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.144438689 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.176187628 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.144934562 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.160700603 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.142219551 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.158872229 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.144125171 seconds)
  done (took 4.53890156 seconds)
done (took 24.666102652 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.199602128 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.148404207 seconds)
  done (took 1.089874627 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.212667477 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.230457449 seconds)
  done (took 1.187048088 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.160306489 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.15330923 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.168078427 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.165778833 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.137337506 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.152465058 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.179304854 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.1384183 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.152653142 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.138030262 seconds)
  done (took 2.294466635 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.142581888 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.156793472 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.152391446 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.221863688 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.16206188 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.139088846 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.15740144 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.140144078 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.157954514 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.13697077 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.157204698 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.154937929 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.157549155 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.156302278 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.15763499 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.158391999 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.147085953 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.15583986 seconds)
  done (took 3.562423825 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.139449367 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.138163729 seconds)
  done (took 1.024443332 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.141637565 seconds)
    (2/7) benchmarking "second"...
    done (took 0.152721935 seconds)
    (3/7) benchmarking "month"...
    done (took 0.140603983 seconds)
    (4/7) benchmarking "year"...
    done (took 0.155227142 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.138157723 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.152351915 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.137215075 seconds)
  done (took 1.767609205 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.581288375 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.269297863 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.398619754 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.1038007 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.15433904 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.367213037 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.155805707 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105224833 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104158427 seconds)
  done (took 3.015469914 seconds)
done (took 14.687792142 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.141333336 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.330456408 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.648299271 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.175470079 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.136396604 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.214237509 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.392445087 seconds)
done (took 2.797964602 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355036699 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.209543546 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.120087618 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.139942097 seconds)
  done (took 1.578380742 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.131202578 seconds)
    (2/2) benchmarking "read"...
    done (took 0.161228673 seconds)
  done (took 1.054320315 seconds)
done (took 3.394205576 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.159430679 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.155161142 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.141034904 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.156399427 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.140124942 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.156028501 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.140515983 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.153582589 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.142019526 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.15322584 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140712238 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.157737517 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.138562941 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.157996698 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138310954 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.157634711 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.140673685 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.155889516 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.139149399 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.158358476 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.142197063 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.154786583 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.141043564 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.158120457 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.141237304 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.159205301 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.138357818 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.155468094 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156827834 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.142279196 seconds)
  done (took 5.228377087 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.265445417 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.132725607 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.155122869 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.143691317 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.151815954 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.137602275 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.151661046 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.138803405 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.155823935 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.1378023 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.158458139 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.137398128 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.153932843 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.139733901 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.157484901 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.141525469 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.163743448 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.13812783 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.15499485 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.139792637 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.157556348 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.137214725 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.155409567 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.138287487 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.15517476 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.135197988 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.154670995 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.13920611 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.155088297 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.138720155 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.139094433 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.15824219 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.137557227 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.165994852 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.139213164 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.155733561 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.142103546 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.153037478 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.137801811 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.15264902 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.134504674 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.1553773 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.137355316 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.162358426 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.137837082 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.155724063 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.137880174 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.157440552 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.13913089 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.156972894 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.135574852 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.15601551 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.14123479 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.156351028 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.142167869 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.152072551 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.139492599 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.153391992 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.141751197 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.136803081 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.155018106 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.135016122 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.160607714 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.13965931 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.171250478 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.143001914 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.156606787 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.138890637 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.158509751 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.143698441 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.158355612 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.148274373 seconds)
  done (took 11.509563821 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.142871241 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.137820109 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.155989738 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137171215 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.156992101 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.141050548 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.156351237 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138009379 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.156233345 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.13873091 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156425618 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.138631945 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155345522 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.138918643 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.156330703 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.138408871 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.154703472 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.138759544 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.156331053 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.13895524 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.137702008 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.156772589 seconds)
  done (took 4.004829804 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.285971491 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.146021571 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.205549323 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.169650973 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.158940114 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.17125411 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.143398333 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.162999499 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.143343018 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.166112045 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.14796749 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162279994 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.173774472 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.148438988 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.165875842 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.150855217 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.161478845 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.149633204 seconds)
  done (took 3.792551064 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.142479571 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.138034173 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.158063536 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.138534097 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.157594971 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.138252009 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.157893822 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.138640116 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.15625318 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.13920632 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.155973606 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139402433 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.156859961 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.138820027 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158100761 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.138683208 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.157783682 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.140442371 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155327084 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.140599653 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.137776947 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.157241435 seconds)
  done (took 4.024103834 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156911434 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.159626584 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.161339022 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.162577518 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.140302688 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.158491663 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.146719077 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.159972438 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.147734499 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.159095441 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.141172351 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.158104882 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.156953478 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.15958447 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.14823163 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.159793085 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.141016606 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.160067562 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.143295597 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.157878457 seconds)
  done (took 3.864038786 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.256867441 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.156430647 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.174856174 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.165023499 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.177690822 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.156031993 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.184555801 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.155591154 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.176025457 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.187057935 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.156705402 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.175622333 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.166160096 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.18111081 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.155393923 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.183626563 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.182921655 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.163843321 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.176162904 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.156462355 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.187762006 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.175012339 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.165403156 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.176501635 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.157241644 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.177627896 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.155823376 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.182075737 seconds)
  done (took 5.650441652 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.155257593 seconds)
    (2/2) benchmarking "in"...
    done (took 0.168535328 seconds)
  done (took 1.112879648 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.144719521 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.142536282 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.160656533 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.141622688 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.16221993 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.142118631 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.162078572 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.142002415 seconds)
  done (took 1.986052766 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.254818228 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.258851632 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.145751426 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.172949438 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.255593186 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.236933621 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17676326 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.166129505 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.141721793 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.155422208 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.251304932 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.151726627 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.14076385 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.15850179 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.140271958 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.164969931 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.142527622 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.168530299 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.148676309 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.160637047 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.145206664 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.164568693 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.142788479 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.170767875 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.136520992 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.163220336 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.143590745 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.173577869 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.137497792 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.171709475 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.138879183 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.163340534 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.144032701 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.165744191 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.14251086 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.25735214 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.168473589 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.136617303 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.164706839 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.146269299 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.188213319 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.141841082 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.162845429 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.158837866 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.146424835 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.166278896 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.147097477 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.16186346 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.135965125 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.15576031 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.143044238 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.156096456 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.141631209 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.161283149 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.142957145 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.166535632 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.145151629 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.158641822 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.139040167 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.15760426 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.142259012 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.157276006 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.14358907 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.163780394 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.142674428 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.161407117 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.141332358 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.162420654 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.142872777 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.161595479 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.141313151 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.175284231 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.142973139 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.167637659 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.147650061 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.162659861 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13783345 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168997399 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.139872815 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.162614603 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.145607343 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.183965084 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.143266961 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.157690583 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.136842472 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.16863562 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.142694123 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.165059816 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.135054185 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.169240935 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.144264575 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.164015829 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.134348369 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.159556882 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.138680764 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.165221289 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.134556008 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.161772946 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.141411348 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.166920458 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.148036353 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.16003292 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.162249334 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.148275838 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.171078319 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.141733317 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.21413156 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.139018446 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.159711651 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.144031095 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.1691815 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.136394858 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.164884235 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.141148675 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.159429632 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.137896725 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.166802356 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.143106536 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.164609899 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.147388575 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1653843 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.143880657 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.165691251 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.142807266 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.159761657 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.146256308 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.171708358 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.144330924 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.165214166 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.144206048 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.164404146 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.14270432 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.17681166 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.140023322 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.167320789 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.139073202 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.163618712 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.144760308 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.167637309 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.143582016 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.158852882 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.140258129 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.164438857 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.142349876 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.165672744 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.143799781 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.158998851 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.134533518 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.163322655 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.13864745 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.163431467 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.151358214 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.159852521 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.145192555 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.159668698 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.17275451 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.141088332 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.168208122 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.148195731 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.172094441 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.149251731 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.155733141 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.14159552 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.144083476 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.167121392 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.159049345 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.145133539 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.143499743 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.171416002 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.135925246 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.167497068 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.135280541 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.161311296 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.149385477 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.165855868 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.146206512 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.15908671 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.195331333 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.157236964 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.168324827 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.144247533 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.162018159 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.147770118 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.161585003 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.148731064 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.168634084 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.14955575 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.160891619 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.143226663 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.168800446 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.141150072 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.16446428 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.143100529 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.164184915 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.137393658 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.164422165 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.13788157 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.166564547 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.147707819 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.168630243 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.149805293 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.165252229 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.143243844 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.173398447 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.140792555 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.166985411 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.137289804 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.168584986 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.155133275 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.16863995 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.149793839 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.164315029 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.142633921 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.163641759 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.152779554 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.165965239 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.143578734 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.164923347 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.137825697 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.156337967 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.150415217 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.165814592 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.14005517 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.161965429 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.14506279 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164725626 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.141903241 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.157242062 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.149111001 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.166261017 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.140437761 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.164687912 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.140934891 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.162985531 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.152186672 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.15865139 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.14223792 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.167063493 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.148531597 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.165853703 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.146028556 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.167405436 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.150159947 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.168280618 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.147560035 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.162216927 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.152902195 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.163848629 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.145549445 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.161452863 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.147547115 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.158719415 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.146288226 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.163880617 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.142114441 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.160843569 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.148238543 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.170148313 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.149531934 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.164185334 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.148717165 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.171285329 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.150119089 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.162434273 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.150171611 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.161326591 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.137060377 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.161817574 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.136883119 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.166277499 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.140402492 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.167903195 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.142536142 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.163668438 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.148277655 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.167561671 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.141400313 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.170477335 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.154841478 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.160790699 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.137570916 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165009042 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.163573874 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.143565463 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.160178819 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.147413997 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.166485557 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.150058887 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.167188648 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.142058009 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.165222966 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.155273307 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.162066349 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.152547122 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.172024809 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.153105364 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.161306057 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.149949306 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.163504172 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.150747242 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.159599625 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.145558174 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.164123664 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.14652841 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.162625149 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.143950638 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.162958013 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.139821552 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.163991804 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.152731573 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.164270959 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.149864867 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.164751816 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.144291812 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.161364305 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.144825749 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.170810897 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.145738295 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.17226597 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.14666048 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.158963161 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.141039025 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.170404909 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.148212702 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.171526072 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.140915057 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.169673043 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.15300591 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.168553837 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.14724554 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.173373094 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.156295503 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.170406167 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.15256549 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.15996252 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.144564403 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.169132821 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.14778262 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.168066554 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.148980118 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.160051917 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.148436264 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.171635862 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.147811953 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.165627627 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.139972269 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.168010052 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.152991801 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.168872313 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.149448963 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.168603214 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.148611915 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.161977162 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.151721947 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.171519646 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.146448372 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.173790606 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.147877115 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.170362307 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.144518098 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.172258497 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.149064067 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.161357809 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.140914078 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.163476514 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.153867053 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.160578241 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.152703567 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.171515735 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.145603571 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.164586293 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.152264964 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.162396839 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.150768474 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.171001633 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.145765953 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.176021755 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.14879462 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.164606546 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.153611782 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.172779024 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.142063456 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.167160572 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.147127717 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.173259043 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.145370372 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.172911094 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.147801616 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.17299218 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.14992095 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.172153596 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.153209637 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.172222529 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.141913577 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.173885939 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.150732576 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.170226326 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.14621594 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.165245734 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.143622803 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.165022731 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.155407542 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.164874877 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.156773008 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.171427037 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.146376366 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.165160388 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.153255732 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.166310115 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.155422558 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.164259017 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.149317661 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.161848654 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.150404112 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.166772465 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.155373738 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.165505055 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.14235204 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.172822187 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.15367003 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.171928148 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.151604335 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.176117648 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.14278778 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.162807784 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.151092887 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.164987741 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.158750215 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.170722828 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.146983495 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.167589957 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.150658683 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.169706497 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.156007059 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.163406394 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.14625519 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.168563195 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.15053262 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.167705824 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.143571818 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.172357532 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.147114169 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.170828148 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.147349673 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.162841658 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.147195534 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.177376606 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.146342771 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.165830585 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.147368252 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.176126447 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.148352874 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.165808235 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.14253698 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.174958003 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.150570474 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.176767032 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.144834619 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.170405678 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.145650016 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.174040707 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.155330018 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.167235163 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.147950448 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.167459982 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.153844424 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.175805387 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.140813996 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.166284344 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.157851079 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.174910929 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.149004981 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.173216719 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.147747419 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.178809609 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154870672 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.17317712 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.142878924 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.164526019 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.146751133 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.164520852 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.150819598 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.17508707 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.147859724 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.168779563 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.153680855 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.173850949 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.151134722 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.172135577 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.143469362 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.177249775 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.146328664 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.174121444 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.142331647 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.165565118 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.1538945 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.176806213 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.147840797 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.170977609 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.150234258 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.173731311 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.144767642 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.167772522 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.15245598 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.174859946 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.153945275 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.169902262 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.148027134 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.173410878 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.16024007 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.171472084 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.148802162 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.178908365 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.156349352 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.171851044 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.147608156 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.175857838 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.177961178 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.153428379 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.156069009 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.168474636 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.168483436 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.156457116 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.177553444 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.15907365 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.170403303 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.14442493 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.174437685 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.147739737 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.163974762 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.154033693 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.177686912 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.156406761 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.169450599 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.14684912 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.178308638 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.154352379 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.170945482 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.148860201 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.16788329 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.154223592 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.168111322 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.153746436 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.167850534 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.157177949 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.17726919 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.156962907 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.180381667 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.143917045 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.176902104 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.152445783 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.178896981 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.150811706 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.16555136 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.146371057 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.17367858 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.15834779 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.177622029 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.153914055 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.174851983 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.154775268 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.171564763 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.151910518 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.168491677 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.1581852 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.176131476 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.152428881 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.172206675 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.149735801 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.171664707 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.152513947 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.176405673 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.157603352 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.172331272 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.160738038 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.179215109 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.149750607 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.168744503 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.150855147 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.174204345 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.151576747 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.17739693 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.14794116 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.166675455 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.15624913 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.17815848 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.150370519 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.179873292 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.157535117 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.171427666 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.15318631 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.17977314 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.155906976 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.173552587 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.151554817 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.175053685 seconds)
  done (took 95.268100995 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.205065672 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.182546957 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.152452417 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.173940066 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170854758 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.17618665 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.152087706 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.176474048 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.154684754 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.184933153 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.151982036 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.17388538 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.167024242 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.196166426 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.194436876 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.163259867 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175731146 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.154641313 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.17534681 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.154338901 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.191041891 seconds)
  done (took 4.514208406 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.158493478 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.151375744 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.174499774 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152686106 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.174636872 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.152412119 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.176359088 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.153874665 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.175442352 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152889414 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.174617876 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153889751 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.17322971 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.154362227 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.174907996 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.153356303 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.175459603 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.154574405 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.152718443 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.175755241 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.153204258 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.17522773 seconds)
  done (took 4.481113835 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.181227445 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.15602417 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.173900955 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.153923624 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.178610352 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.152972176 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.179542314 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.153438437 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.18471909 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.148448347 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.167380782 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.148571827 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.174906529 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.153068836 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.170503316 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.154934996 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.185414919 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.156791168 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.181518334 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.153357002 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.167627531 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.154971452 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.178392239 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.145220212 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.180588398 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.158949403 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.180422873 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.159047111 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.167450693 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.156877002 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.178917585 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.149369763 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.168409055 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.146860366 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.145197026 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.179980359 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.156364228 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.178670835 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.15368337 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.168303456 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.154685732 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.181458341 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.14546745 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.177906632 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.153563871 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.171655558 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.157608031 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.177521527 seconds)
  done (took 8.797599122 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.187547523 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.216544925 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.156854374 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.209598721 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.192046978 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.163697144 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.179699318 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.184255204 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.180998436 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.157148336 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.195409277 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.191789682 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.161329105 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.183734398 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.160570209 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.180761395 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.160954616 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.177640955 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.162957943 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.182038024 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.163004807 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.186389485 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.168264903 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.191507034 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.18332408 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.159445276 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.178881546 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.162920439 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.191109917 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.163994248 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.185244646 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.162297943 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.192087975 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.159370546 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.181251331 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.15935958 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.194143054 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.182416773 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.161634312 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.178503705 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.160044724 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.184397262 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.161764705 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.19285141 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.159381371 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.185525478 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.159491929 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.179012848 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.167334337 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.184009503 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.187365237 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.170825564 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.184220843 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.160090959 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.183946786 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.169941932 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.183392455 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.157950952 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.183476824 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.167562998 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.180079394 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.161396571 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.194459365 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.183313186 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.166852922 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.191423015 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.160019231 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.184775592 seconds)
  done (took 12.980634898 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.193807607 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.185075421 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.17192305 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.193850419 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.161921219 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.185805122 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.162415207 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.185581351 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.184443986 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.169232833 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.186758665 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.297240661 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.16530028 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.19205054 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.161865835 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.187290367 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.161970946 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.185135973 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.162749537 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.185539166 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.185069275 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.173051126 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.18559944 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.172233565 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.445101294 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.158789676 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.187248602 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.184055249 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.172616224 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.184691223 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.173620262 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.186142386 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.163338229 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.194166171 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.196141702 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.163996413 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.179400677 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.163756299 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.186480208 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.163583652 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.184215814 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.170790084 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.188120711 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.161327638 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.188940368 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.163757836 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.192879765 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.197520997 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.169149583 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.191612215 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.163782769 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195205898 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16328494 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.187744265 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.194865702 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.178287686 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.194757937 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.170438364 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.187364678 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.193923124 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.171767932 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.203699367 seconds)
  done (took 12.424098833 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.165788052 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.159119327 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.181020785 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.157380977 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.181825845 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.158562063 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.183252144 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.159437524 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.182238747 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158507237 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.182375706 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.159471606 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.181841839 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158707891 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.182463915 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.159911327 seconds)
  done (took 3.631612931 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.181734563 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.1983431 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.262599664 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.163165163 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.182357128 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.166429125 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.182995827 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.161779791 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.179321616 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.166111207 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.18608337 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.162305905 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.200980726 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.161309549 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.18196008 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.162275664 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.18072815 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.163968407 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.181842397 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.264454579 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.164474895 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.184982602 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.162105809 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.187036494 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.160858305 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.186448081 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.16817404 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.183692004 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.16170967 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.183166309 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.161308152 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.189861783 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.158654253 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.188219047 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.160663727 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.183440017 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.15965494 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.185695541 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.162727188 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.183534513 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.161967105 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.184710011 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.160161848 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.186419865 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.158826482 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.184773287 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.158595028 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.188649059 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.161055187 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.18653238 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.161230978 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.188832253 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.165253486 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.193782603 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.166924928 seconds)
  done (took 10.702724418 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.176845673 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.184528983 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.173812116 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.181211452 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.162662585 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.184784531 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.164178978 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.185828728 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.162827061 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.181752652 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.162705747 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.185721592 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.163558229 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1847105 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.16281421 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.184001402 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.159591245 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.183928976 seconds)
  done (took 4.079338442 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.164154184 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.157223066 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.182874093 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.158142247 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.184042328 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.158363225 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.183167915 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.159239872 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.18202168 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158772355 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.182165274 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.160362781 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.183872684 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.160529143 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.181736938 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159904133 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.181710747 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.161081169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.157775301 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.185166424 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.158926704 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.183044576 seconds)
  done (took 4.67425739 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.175825292 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.287893384 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.191206507 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.298904142 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.157246602 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.182108912 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.189055047 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.159772622 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.197685264 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.157254075 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.178346632 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.157220831 seconds)
  done (took 3.269459964 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193182317 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.220094119 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.161898312 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.186757688 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170269697 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192063041 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16506261 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189232932 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172368846 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199342528 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190150158 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173811418 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198490115 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172762821 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194386381 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193362858 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167377429 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187300005 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163520445 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.206014466 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165864597 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197065912 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165381366 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189532132 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188421656 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174313996 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198005487 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176850841 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.190304158 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173098199 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197108725 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188698576 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176522168 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.202433913 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.162243747 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197725912 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164878089 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205339869 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194211708 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174427977 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.187946736 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170980961 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198653754 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171698301 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200197595 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189441059 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173511031 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190629898 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166104921 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.212091076 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195267499 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.175494384 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195682356 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175516733 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198845468 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.208401921 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.179566759 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.198998699 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170931304 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201962065 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197601385 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172842161 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200830078 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176671559 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195770635 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197786464 seconds)
  done (took 13.22777715 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.207163914 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.186871598 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168685766 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201739412 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.176058142 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190609994 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189203459 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167456281 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188964532 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164654737 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.2352575 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167860452 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199158356 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199298877 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.168141843 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18978866 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168348713 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201562154 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163858337 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.212394118 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192090977 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.178926804 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199352585 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175949399 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.203106973 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194414737 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169630579 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19065958 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168944319 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191079397 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173841101 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191921891 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.174137368 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.189192285 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17434759 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19217765 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190152323 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173533171 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190889498 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172643323 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198990668 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183226792 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192418603 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166576979 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.206034092 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192525809 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.169198821 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18748711 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168837322 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18920779 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.180069058 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.204954485 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.20323185 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.176319349 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191425949 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168068789 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193292737 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169018141 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194090045 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17118371 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199497436 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193235676 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188685447 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194933518 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16735976 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200271976 seconds)
  done (took 13.233610014 seconds)
done (took 233.216468106 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.330242484 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.357687664 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.152798271 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.322539829 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.153093909 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.872061594 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.707927664 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.260911112 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.154978088 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.177981572 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.155300545 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.196790528 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.542109929 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.176408117 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.154485358 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.195294806 seconds)
  done (took 31.859544989 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.361270801 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.404798753 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.193593962 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.159332064 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.183690678 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.160688171 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.179998029 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.161761353 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.180542652 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.166537449 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.181950302 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.15574697 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.188385199 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.156563415 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.181269 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.160388692 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.188795027 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.159136647 seconds)
  done (took 4.485716445 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.18336822 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.243867464 seconds)
  done (took 1.39963832 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.195434699 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.279713922 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.381945218 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.233817303 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.179065299 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.201766369 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.231966859 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.172514047 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.272452034 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.19443499 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.173288098 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.182057928 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.18477203 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.190428126 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.175633577 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.183235941 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.187469231 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.199736852 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.172672936 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.187605351 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.206764142 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.163035257 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.189100514 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.174757209 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.267665043 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.194524039 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.163125632 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.183218062 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.163420642 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.197091753 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.16908044 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.202386002 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.171736364 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.23939811 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.188797123 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.239551622 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.163440197 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.184501256 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.173560618 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.185594341 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.163903384 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.187510717 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.193582717 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.159791619 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.181782684 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.164757823 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.182022658 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.161722521 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.192080571 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.163585188 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.193935625 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.166041366 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.235409963 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.190870851 seconds)
  done (took 11.50163467 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.00702729 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.207543292 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.188377167 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.15939478 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.207548041 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.174987825 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.029146654 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.185679967 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.316059186 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.097999474 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.204336948 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.168797862 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.335216022 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.346231948 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.352801289 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.424745913 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.853866823 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.200665602 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.21535504 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.205007145 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.192098171 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.20145851 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.177297267 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.513083402 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.161063848 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.18628605 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.188894482 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.170142446 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.242813768 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.185985662 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.166328903 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.267470466 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.365075824 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.279230132 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.189824628 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.159558698 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.186358614 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.254378298 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.336423158 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.285930565 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.256734324 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.184136125 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.160789511 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.189921428 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.175932288 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.18521203 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.250242437 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.260215633 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.260130705 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.16628574 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.194860185 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1698151 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.190921555 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.24570429 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.15865593 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.456943582 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.42926611 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.188927447 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16631249 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.200564472 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.333537805 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.187699637 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.306553648 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.206758904 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281776125 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.160151301 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.888231038 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.253494666 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.161169657 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.191345072 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.166843284 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192686653 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.163616337 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.247533502 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.489789868 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.166637741 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.194619442 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.185290113 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.296797588 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.162181169 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.185717612 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.246621236 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.163439569 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.193023848 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.169751824 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.19223967 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.259325924 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.342081349 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.168465836 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.194392388 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.167580529 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.198003182 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.162213784 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.298154046 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.326678344 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.24219274 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.296042883 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16728489 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.249881078 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.254095162 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191886762 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.258599714 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.166318776 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199416281 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16576668 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.319213638 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.222427028 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164438928 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.192127994 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.168565151 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.227107581 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.164103341 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.19398633 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.25686807 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.551011061 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.254468113 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.184149465 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.168162026 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193995689 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.220403865 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.200752693 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.328325202 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.215537953 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.254135389 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.168283621 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.186190996 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.166769951 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.247764538 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1975115 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190461511 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.170714796 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196988109 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.347756513 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.288851257 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.170374808 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.339369063 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.23674051 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.193123162 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.26273795 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.192146641 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251440913 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.174537698 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.190367924 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164052984 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.873127861 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.201200865 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.192394927 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.169808325 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.275709501 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.162437905 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.191716698 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161610356 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.186463447 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.860487217 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.191173612 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.162274407 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.164050401 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.196940616 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.192910774 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169363646 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.192785759 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.247211325 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.316233021 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.196555092 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.167731805 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.189006088 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.246858486 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.165021963 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.188081948 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162788439 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.18845518 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.168862745 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.193925847 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.165742655 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.255281905 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.247151122 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.324185359 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.648723905 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.161970038 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190886076 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309812302 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.190137028 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.39572197 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193499606 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.306416898 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.253744419 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.159992552 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.454292407 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.253768723 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.272596606 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.167122858 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.261955658 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.185873846 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.169791005 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.250479128 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.188643262 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.172422625 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.245512855 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.197661239 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.170381164 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.358847867 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.164433271 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.313693522 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.185940335 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.232425157 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.195088566 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.193268083 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.39798399 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.162860305 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.202564167 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.248963224 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.192292819 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.166887213 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.955234601 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.188963974 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.173312053 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.193874374 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.304655641 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.250647447 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.195339365 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.171076015 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.197253715 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.25112097 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.301094434 seconds)
  done (took 62.549576382 seconds)
done (took 112.755164958 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322129581 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.255938273 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.398421335 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237404422 seconds)
  done (took 2.279854163 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.347338862 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.204088733 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.300337285 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.186050126 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.30718173 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.160554635 seconds)
  done (took 2.52291929 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.237725901 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230491321 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231537683 seconds)
  done (took 1.720459075 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.272720714 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.274463673 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41548419 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327388839 seconds)
  done (took 2.373971788 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.343452265 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.17839594 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.219833402 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.292194908 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.309220886 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.272223374 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.213016334 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.212585763 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.21959685 seconds)
  done (took 3.313798284 seconds)
done (took 13.233455386 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.209284994 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.219085263 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.18457389 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.202617107 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.192872641 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.220792392 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.190692685 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.217183274 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.189679078 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.204227786 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.188918995 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.200344681 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.307782854 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.190823917 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.203132884 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.215452398 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.177059457 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.22548007 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.193302584 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.199082859 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.194662324 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.199999176 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.175131279 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.207324758 seconds)
  done (took 5.920914105 seconds)
done (took 6.944004821 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.313156583 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.163864343 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.172677056 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.204761932 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.291832572 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179929166 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.219635681 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.201442236 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.186275014 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.197686731 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.16517282 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.210723026 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.174917146 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.304055146 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.202451862 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.165464616 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.191070666 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.185434474 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.237645933 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.189458101 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.291607334 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.194877714 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.183786849 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.193140412 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.294338896 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167895652 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.199941417 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.175209851 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.214039718 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.174189958 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.200535068 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.163880617 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.215526011 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.188904888 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190503625 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.175161939 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.190307301 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.134947049 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.199358243 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.177346435 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.211635782 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.17520112 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.199586623 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.165562325 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.20070569 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.174846326 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.190182844 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.177219743 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.189001688 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.176096975 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.192005282 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.190645403 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.199322484 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.164086788 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.189385326 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.166152553 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.211907673 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.165702776 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.215054652 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.164657461 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.193290153 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.165028458 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.202362884 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.165603671 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.200757932 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.166251937 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.201052173 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.175833952 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.199463703 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.167404877 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.190018856 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.175014086 seconds)
done (took 15.03577075 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.175888359 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.235314421 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.310989826 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.314192538 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.218765948 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.182088169 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.207374695 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.188233922 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.203116542 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.185082614 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.22878454 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.197530636 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.309420842 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.211484226 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.208084841 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.178734111 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.202630935 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.172971507 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.30840528 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.218353884 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.187063452 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.209274517 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.216714151 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.183057985 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.194754166 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.202039869 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.200766871 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.178047292 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.196649518 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.178424855 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.217787681 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.16873689 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.198660737 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.186737783 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.212523045 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.178557972 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.20960347 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.204381227 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.17329159 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.194828686 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.17754248 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.210903216 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.170952884 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.208594333 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.177899996 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.21084874 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.176680638 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.209241762 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.170745875 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.203616186 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.170702923 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.221452253 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.181822632 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.213786684 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.180507731 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.213278588 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.207446562 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.1845433 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.199081182 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.182795452 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.195992731 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.175387946 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.196866027 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.190913314 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.201825595 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.182611281 seconds)
  done (took 14.397109158 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.196817207 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.228008883 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.181567363 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.210054296 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.175045793 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.192680088 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163703918 seconds)
  done (took 2.406849223 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.172861158 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.324333143 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.314352964 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.317672729 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.306338816 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.357441613 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.188776729 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.194034172 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.204892116 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.20650985 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.327757531 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.411291757 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.179107413 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.208115012 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.321026368 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.165082585 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.319714609 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.300798027 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.210425642 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.32283379 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211446022 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.200222528 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.208160479 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.167557131 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.318076342 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.197892344 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.368882663 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.213710207 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.175904562 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.208585044 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.181755725 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.271542701 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.320384945 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.209414689 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.17468206 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.315247071 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.311638303 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.211100728 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.394376548 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.174863438 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.308686041 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.20774227 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.183696684 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.209233102 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.182911947 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.303165996 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.215964055 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.183054214 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.210524536 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.333522719 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.204493602 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.325454445 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.179579889 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.20903154 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.178526193 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211623489 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189242012 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.210231832 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.332915589 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.18340328 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.348029034 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.319893752 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.314604043 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.321414057 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.220806081 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.324477436 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.3040534 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.181618207 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.316918723 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.215346379 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.322437372 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.179647775 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.209536353 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.311313121 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.213015077 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.325739677 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.323410051 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.178192562 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.210678397 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.170236383 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.209816696 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.167473531 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.308144842 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.210742511 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.180143648 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.217562303 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.210521813 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.182768563 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.312226367 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.221794755 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.181739172 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.209460645 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.185909604 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.214726468 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.212080671 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.32664908 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.17817147 seconds)
  done (took 24.856158665 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.176489692 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.167555735 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.202745824 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.194667352 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.170850567 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168524643 seconds)
  done (took 2.177283508 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.211688861 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.209712841 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.192156558 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.211367242 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.231650128 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.312710157 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.32146972 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.209190428 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.230492578 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.196642115 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.315909167 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.317453637 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.316943726 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.216804455 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.32113539 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.18394497 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.322488845 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.212298086 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.189876031 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210274785 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.20990267 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.188270869 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.206884129 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.306542194 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.184228874 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.213801001 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.176440454 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.223496158 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.190616977 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.206396777 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.186119757 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.21278502 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.175184079 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.207325736 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.322049263 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.204234212 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.181276125 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.214826969 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.18708238 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.211757375 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.322222749 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.180306588 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.218230195 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.185081008 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.207411222 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.175869292 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.214551097 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.201806389 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.321766965 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.187563446 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.213323147 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.185390893 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.212794588 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.188284279 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.203352325 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.177791533 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.215170589 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.324067257 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.186258322 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.205833437 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.212447058 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.186738342 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.20614891 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.190002862 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.211733 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.187749783 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.205690262 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.185574995 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210007572 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.184877071 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.215427884 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.184309262 seconds)
  done (took 16.949908016 seconds)
done (took 61.833620953 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.649727943 seconds)
  done (took 2.743123969 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.251004544 seconds)
  done (took 2.349633218 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.445190412 seconds)
  done (took 19.577708939 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.499448289 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.412836716 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.08942876 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.241781584 seconds)
  done (took 3.346826506 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.154944704 seconds)
  done (took 2.26998545 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.468372759 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.343459108 seconds)
  done (took 1.919583559 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.822364143 seconds)
  done (took 1.94057268 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.874399182 seconds)
  done (took 2.977409487 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368234955 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.284271903 seconds)
  done (took 1.770297326 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.718449881 seconds)
  done (took 1.843379524 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.424349913 seconds)
  done (took 15.549812096 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.32370115 seconds)
  done (took 1.446920519 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.361281766 seconds)
  done (took 1.488105994 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.730698645 seconds)
  done (took 4.860100087 seconds)
done (took 65.197515831 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.190781733 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.214969795 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.189230418 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.211999236 seconds)
  done (took 1.918824105 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.194561124 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.209112765 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.18992464 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.208894161 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.189174545 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.210542556 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.184255903 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.212911502 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.185605027 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.211976746 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.184104208 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.209323266 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.187650678 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.210332403 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.182472646 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.211104918 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.187942126 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.211097165 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.186555567 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.211594645 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.185531973 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.212660353 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.186646151 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.215063871 seconds)
  done (took 5.903584038 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.186496691 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.1736702 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.208504098 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.173097361 seconds)
  done (took 1.872244648 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.200606515 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.224939638 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.19729108 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.22096064 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.198581398 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.22333224 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.181829407 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.209159209 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.183166588 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.220899249 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.197906103 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.227045981 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.196325874 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.219086799 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.220787294 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.179844169 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.187223739 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.227141245 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.219404157 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.196143378 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.219389421 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.192235619 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.209834854 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.194232451 seconds)
  done (took 6.080709984 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.265442275 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.225654463 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.210849578 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.258217962 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.23911211 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.183810875 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.238454345 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.188581033 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.216085858 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.192087835 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.213693166 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.229843404 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.218164894 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.184852068 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.214219908 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.217781605 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.194375625 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.216100665 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.226108013 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.217401948 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.189001758 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.225592305 seconds)
  done (took 5.908211442 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.341383706 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.175660048 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.203289748 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.174362327 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.217646601 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.178164625 seconds)
  done (took 2.431784447 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.180938931 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168779284 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.198735328 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.168856738 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.204494161 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.16990289 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.198154179 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.170109062 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.198950928 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.169786395 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.198333112 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.169216212 seconds)
  done (took 3.342556829 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27681048 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218191224 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.349928018 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.462988345 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263386077 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.253796241 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.375853731 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229088559 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.273925546 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233393856 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27733869 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228561258 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250365916 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284556367 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208557946 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.243743914 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266931151 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.305658072 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209629101 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311821916 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254991783 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272583057 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.288277371 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2160765 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.236316783 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257710146 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.189323586 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222943923 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232026293 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259875506 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272513844 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249094944 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206663571 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282388145 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323160228 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275148397 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.394329893 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203730866 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.257654203 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.290597778 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.329913811 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208006968 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319863091 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220558355 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225826413 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288735529 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217565656 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.282746779 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.23027202 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211959077 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279852068 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27839483 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.267633126 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203321386 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399125335 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234936091 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.237338282 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245176918 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283480183 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301366257 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278705623 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.21902499 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.268372605 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261427448 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315968882 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.24014639 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.262158547 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190700647 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261258432 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.306596181 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279980715 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254977326 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.288024056 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198847982 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271529082 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26175235 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221833238 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306372619 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273286428 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.216063579 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218449217 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232703754 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192868241 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.286464152 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218491961 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316960348 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199974941 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.27094018 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274511794 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220074843 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259668216 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258304635 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257766648 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217435471 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.153238621 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242234784 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.25410913 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22523828 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229206172 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247193934 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207731794 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.223721606 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248390385 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.191163625 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268726142 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.190489097 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257786064 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269409818 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.200210935 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2788789 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244708772 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.230547543 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265205093 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296770211 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228694375 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201634788 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321033143 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271806212 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.233856833 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.239215406 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.295706598 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.236138687 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20178369 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267034656 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292041536 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242006473 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300422211 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206531501 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.23340936 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.192076311 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273266734 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.260179943 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.256887415 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197415327 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.264575963 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286644761 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.194726578 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23806512 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281869364 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200647931 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223659937 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203902326 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237894078 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.241244854 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.21935464 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.237119748 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251381618 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236347373 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.267451469 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257087091 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201230129 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271946104 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229184941 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.267562656 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216668195 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.215879826 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.271935349 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269214612 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23020155 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278639972 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.226561562 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.307289705 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245260868 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228228185 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.279847668 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196948369 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.218356818 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22847214 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.273493857 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262473182 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.290097086 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271404695 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.267048833 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.232485151 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250597858 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268486865 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.282573084 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225128838 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.239387286 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272583545 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266921373 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.190077872 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.220602704 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.197820687 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234876097 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198921175 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233856345 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280313439 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263018363 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270030568 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238897837 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237238269 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.295381277 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.194076985 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25965362 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.278483528 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206616986 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.290115664 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291838298 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278876874 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208062352 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26389948 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.220033707 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195650578 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233917037 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.257063905 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207683323 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234211557 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209543546 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.294282045 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269095742 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250081522 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283182031 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265379627 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271542841 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.221419567 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.261063087 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234227272 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272323596 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.285042602 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202721659 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.259771232 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.294211994 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210173514 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290690876 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268869387 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280866932 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293668071 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.234799621 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231127086 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241328733 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228842369 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238790631 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.258389841 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211275191 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230521633 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216525928 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.237913843 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238010504 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285561104 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212175445 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273870302 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.255389739 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26929018 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195450203 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242565971 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27507667 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214991097 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.190028774 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235401234 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292655651 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250649611 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252174456 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238891203 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229690731 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.411359015 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249299998 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271848606 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238105348 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207047279 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274365197 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.257886286 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255998476 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251753942 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242594397 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31086069 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270334727 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.208941444 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230642388 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214693293 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251529821 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.22391807 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.220702018 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.265054865 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.243386048 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289325828 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206464802 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273885457 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27982057 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.213437827 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.248428589 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237241133 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.331837868 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239821978 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272142917 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.267109455 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.26225842 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251344253 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226100819 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194177207 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.233045138 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.285241999 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199550237 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278864582 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.262760858 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278735166 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278230772 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261460902 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211517749 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.227643892 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237666186 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251301091 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280540773 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234405926 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.208121787 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289342171 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.213358626 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200781887 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260765353 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389887359 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222596323 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269982866 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.161174476 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.386059149 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.23373489 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201848712 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.261458178 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271592009 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.200439665 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.284218196 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277664011 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210104441 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260183156 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235407729 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275235909 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250083897 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267295862 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278467255 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.247018353 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.229754426 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257861701 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272268492 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247057046 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.216846988 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259849384 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29721531 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.243725197 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.233392319 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272596885 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240108885 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274451661 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274350321 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239034936 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254178133 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231058433 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266690198 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207476313 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227208991 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259920832 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.23445691 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230929855 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275615286 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274657831 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202489017 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228242851 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21857996 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269165932 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24144432 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.201530795 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286397174 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.230395569 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253406805 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313283693 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232725056 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.268380288 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214051312 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232582788 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209443952 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246163287 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231777868 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.249384716 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278071115 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.198962521 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275576734 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269063754 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267145773 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223217073 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244616511 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.369697291 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.197377335 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298351976 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.25462798 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2981215 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21979911 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280748131 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.275733737 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218955008 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266977875 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248812925 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.321275282 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236968682 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.27156952 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233274218 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214628131 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240098898 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.205757799 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252583865 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272626079 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213543845 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.238693203 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.270904561 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215934791 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.250045205 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211622302 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.305475718 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.253811187 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289788458 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.290480375 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208690085 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280834385 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276500803 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230096648 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.235375811 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275223546 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245537788 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224058521 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.238360478 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.20714387 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317373669 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.228296978 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262773919 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24989337 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.274325038 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278079775 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.204982142 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282440386 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244681673 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281948633 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199031106 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.254226532 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241921546 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23853564 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.228650934 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.244742086 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262549308 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.269375177 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212995242 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.281912735 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298443957 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.194798165 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23700912 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390196058 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236186948 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296179214 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.22355287 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207863864 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250466347 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26114473 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.239330365 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276499337 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.233121545 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202882922 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.2488813 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.218950329 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.231972795 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275876702 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25421452 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261378559 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290126698 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.207035545 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.361117011 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.245339718 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.243949039 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.205899716 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.201332515 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244233083 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2054014 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249035859 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.280230328 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320887524 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.268875741 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.21794189 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238903285 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.197500674 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233272192 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.264908128 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223143809 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273689342 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251505586 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.161850121 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245181807 seconds)
  done (took 121.982999099 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257350673 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.228502521 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.24489008 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.298617723 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271018543 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.368534854 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.305744676 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.322422146 seconds)
  done (took 3.559219576 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.198367963 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.241350244 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.2480365 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.219469808 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.183687116 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.566872016 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.240091984 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.223605809 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.232971805 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.226838273 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.211313534 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.642089472 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.221965447 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.22037998 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.222530603 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.181152296 seconds)
  done (took 5.533483344 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.463575362 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.754629063 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.405664366 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.423647379 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.378817656 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.2987375 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.960561256 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.29066308 seconds)
  done (took 14.244097172 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.249910272 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.277551775 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.471229477 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.445636138 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.288509175 seconds)
  done (took 3.007720884 seconds)
done (took 176.899729293 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.20289745 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.227470197 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.19680722 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.230321677 seconds)
  done (took 2.110571882 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.256881828 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.149805642 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.185579954 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.148992899 seconds)
  done (took 2.006276008 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.471965115 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.150628163 seconds)
  done (took 1.918796378 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.222882951 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.238586345 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.207738987 seconds)
  done (took 1.957106906 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.214134843 seconds)
  done (took 1.492367081 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.197748261 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190722927 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.384749974 seconds)
  done (took 2.053392893 seconds)
done (took 12.809467251 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.220763478 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.037774985 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.653463055 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.206244523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.824797762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.470799813 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.537762867 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.251978271 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.30808359 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.18392276 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.247705662 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.765669922 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.520066972 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.9525682 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.508234881 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.955619565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.799969326 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.18340335 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.22118546 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.184296131 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.514950749 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.181850499 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.216470684 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183769249 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.796551852 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.489408115 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.215876684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.962104748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.215616874 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.192496755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.504302048 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.183893427 seconds)
  done (took 23.952178416 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.19140779 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.272491006 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239555254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.217504545 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190638559 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.217868139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195765398 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.228469277 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.316895814 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.183886792 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.239343495 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.181821026 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222667072 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.185399623 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.240991609 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.18360142 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.21999718 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.183794532 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223800178 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186316081 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238579152 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182951268 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.220906304 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185280545 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.216778056 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.231636439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.184153306 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.227771562 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.184812189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.225403314 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.188935479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.217478703 seconds)
  done (took 8.115639845 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.23201016 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.282905179 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.240826574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.25523106 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.270730377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.187525592 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.305374028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254017079 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.291067461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.218208265 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.204750199 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.217794037 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.257141149 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.186114728 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.240735431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.185532531 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.219373986 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.185747503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.224067949 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186354285 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238790212 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183930722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217800811 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185251141 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.21797751 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.20403293 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217033186 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.195643525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.216225751 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193726241 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.225729333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.184885522 seconds)
  done (took 8.412431008 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.204881431 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.231141334 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.2084462 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.240077736 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.196139397 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.230076534 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.199598497 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.225376356 seconds)
  done (took 3.037150953 seconds)
done (took 44.792445954 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.212643871 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.234154916 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.205130415 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.230232559 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.34642017 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.190951727 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.236504516 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.1920724 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.23147748 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.206955787 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.215736582 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.193744609 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.23616432 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.196047695 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.347123681 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.234559367 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.352294101 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.350637815 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.19318958 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.233922345 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.193046825 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.351139415 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.233082433 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.192481879 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.328578376 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.224161467 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.339234619 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.194649823 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.231040693 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.185189122 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.350178538 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.230074928 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.193602133 seconds)
  done (took 9.365706352 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.302572694 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.230908205 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.19359054 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.227530121 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.19520974 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.226957771 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.334897336 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.710700502 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.227509657 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.192299453 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.228002667 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.317969345 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.19934155 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.222584869 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.194949302 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.170046135 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.334141723 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.228246414 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.187707529 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.153096633 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.222998399 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.193526146 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.346697161 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.223925333 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.195128165 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.227928565 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.196105176 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.234921494 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.195293829 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.228314299 seconds)
  done (took 8.655053203 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.204322631 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.24104818 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.213366309 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.294734966 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.223549587 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.239961101 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.210227432 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.239579628 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.21623504 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.2229456 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.204232954 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.2580164 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.204316484 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.234533037 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.187599205 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.23787606 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.203395837 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.224449632 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.197659354 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.242998359 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.24103526 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.205967742 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.2428526 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.20008976 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.220293446 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.196554045 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.232682173 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.200183348 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.231359519 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.203980339 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.224109504 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.19103847 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.224271816 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.22324878 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.224829009 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.202925805 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.243959794 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.202389913 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.238031247 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.220604519 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.225200496 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.190285231 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.249857681 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.245313877 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.225351772 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.200273024 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.224338514 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.203801475 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.221199008 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.207709374 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.265058287 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.223341111 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.209978518 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.221359713 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.186690221 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.231589436 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.190709866 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.225556685 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.204298675 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.223520323 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.210331565 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.230339486 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201423868 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.224831524 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.20126931 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.221474533 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.189523262 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.227008616 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.216470056 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.231360637 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.226442413 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.223613841 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.201738853 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.237252307 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.200824421 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.23542917 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.189319465 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.235431685 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.201886776 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.226253283 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.202451513 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.225433416 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.191314901 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.239154644 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.210591515 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.237828497 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.202533995 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.233925627 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.191701891 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.227136495 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.208131984 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.226133505 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.192959175 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.236324675 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.190291516 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.228581581 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.200718681 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.233504764 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.188602196 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.249165134 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.194452171 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.224219783 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.21641495 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.227634184 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.194326248 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.23218637 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.231263068 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.223562507 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.198667443 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.233667703 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.191205809 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.231975239 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.191347447 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.220888495 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.205851596 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.239689139 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.198088738 seconds)
  done (took 26.868324667 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.45132059 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.437158594 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.294144946 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.521605855 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.204360764 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.39364084 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.439126512 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.440543521 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.227991074 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.226687207 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.282795319 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.44133182 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.192388851 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.2534925 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.445634672 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.526002155 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.219106285 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.265195665 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.261255708 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.203597189 seconds)
  done (took 8.065823315 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.205351603 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.259223886 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.213512137 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.242908613 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.201963811 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.241041615 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.191863854 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.246411851 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.202770897 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.232233513 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.195133473 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.232948897 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.204392053 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.239003997 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.206839012 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.244334981 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.20037576 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.229174324 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.212954944 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.230415614 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.165351893 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.249274576 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.200310179 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.246798353 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.20867479 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.234744726 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.19001292 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.229951448 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.198988642 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.233054078 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.196256801 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.231986065 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.198573366 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.167371004 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.238365717 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.205846148 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.231373696 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.193704591 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.229945372 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.193449879 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.239381209 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.202903316 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.233809551 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.162237531 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.244638931 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.173699603 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.206236072 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.237530764 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.168954515 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.245488411 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.202416662 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.239863742 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.199240001 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.247255255 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.199455671 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.243758092 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.201426173 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.239724898 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.196822514 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.225715155 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.190105111 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.228914166 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.200689487 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.239456079 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.205036688 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.234077601 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.200602953 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.226864394 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.196239969 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.228203112 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.194124686 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.23833331 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.212694435 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.237173386 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.199889246 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.236827672 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.200989315 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.15805739 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.235603284 seconds)
  done (took 18.404681489 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.22174824 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.236116129 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.209804613 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.260003803 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.20369371 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.232301748 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.203119615 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.245777483 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.207029609 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.243949807 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.20672126 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.240840612 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.215575668 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.237100611 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.202199246 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.240900466 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.204259983 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.265446325 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.20444611 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.254175618 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.207221323 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.231775283 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.204306916 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.238882193 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.220290374 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.240575774 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.252945434 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.205149621 seconds)
  done (took 7.692890485 seconds)
done (took 80.341380844 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.527784085 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.76769064 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.451527461 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.459812243 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.474224899 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.450015466 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.449380958 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.450242311 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.081793642 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.425648611 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.450735042 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.452078927 seconds)
done (took 31.837383581 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.733951293 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.249798037 seconds)
    (2/2) benchmarking "String"...
    done (took 2.26486769 seconds)
  done (took 5.869045847 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.22784762 seconds)
    (2/2) benchmarking "String"...
    done (took 2.246971629 seconds)
  done (took 5.818634619 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.446292857 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.440276099 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.634531458 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.441219097 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.441832652 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.442377484 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.453493842 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.464946416 seconds)
  done (took 17.665464931 seconds)
done (took 35.873999201 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.511042781 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.64049353 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.694962955 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.429854663 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.448110475 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.454137849 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.448288292 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.48127433 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.454740299 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.429752275 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.964492761 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.700136798 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.456389951 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.825167572 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.425947392 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.459062078 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.459361347 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.693229425 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.444656754 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.488670452 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.43218799 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.427215011 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.452944889 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.455370757 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.458054687 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.444219338 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.425491957 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.452166158 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.644685473 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.454503677 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.4894503 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.447667402 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.43473126 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.443459116 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.456069379 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.454109074 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.698457324 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.463039469 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.435583254 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.455702154 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.688890326 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.46984599 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.45158934 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.454510241 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.430808834 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.471836747 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.428173233 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.630797185 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.485677264 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.458416186 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.475251287 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.841210604 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.449252171 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.467057857 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.458322947 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.749281316 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.455392338 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.549314826 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.476227598 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.46693333 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.452137733 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.458115798 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.491680332 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.463105818 seconds)
  done (took 159.905931478 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.446248298 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.449761105 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.450181549 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.457743894 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.450050108 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.449755448 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.44728132 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.445088862 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.448551244 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.457663995 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.44968372 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.44616379 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.450943448 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.455468953 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.454653906 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.472371521 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.448480775 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.449008495 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.45627122 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.447259389 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.45788623 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.449161377 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.448049923 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.446801301 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.465103418 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.52781293 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.465667247 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.462962294 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.452912134 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.446617199 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.463783628 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.459387119 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.217108265 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.405022455 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.466316492 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.490119798 seconds)
  done (took 89.505849245 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.447602031 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.447182425 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.447780475 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.48508501 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.447646939 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.097071842 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.099886934 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.457951601 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.709979879 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.110959083 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.740106895 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.449132463 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.544332767 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.463820504 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.44853071 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.54500485 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.47507843 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.453471772 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.451235803 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.097432712 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.466044041 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.663443446 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.638795339 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.449566317 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.48536249 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.853280295 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.45081012 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.487240592 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.79444041 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.486843404 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.450282889 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.838780755 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.358414293 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.568096404 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.453072629 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.486809252 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.452231251 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.739759365 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.450351194 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.452838241 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.45381169 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.145954105 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.452795289 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.100866319 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.45295774 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.465807 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.451764083 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.450344838 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.215620506 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.261111138 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.453713143 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.450771708 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.45480602 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.452464312 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.450637962 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.451054146 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.489077975 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.190932312 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.376108862 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.451783568 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.456366274 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.488489214 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.452552451 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.609574864 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.452547562 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.384124825 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.511902456 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.593630168 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.101197925 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.456292173 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.551009524 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.57362504 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.452731873 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.452019981 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.451554768 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.453217689 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.568408246 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.453906674 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.286888018 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.641520825 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.453451658 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.454253506 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.053790779 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.554003341 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.454175703 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.88019091 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.457557347 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.453383213 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.22941388 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.552546592 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.453544896 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.453588127 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.45484981 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.285984272 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.452509568 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.090348291 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.823903235 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.458839634 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.669462158 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.457757583 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.420255747 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.076744186 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.209098866 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.459434192 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.570607408 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.642938603 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.457468579 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.455015684 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.007239888 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.45497343 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.515831028 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.455942616 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.45429988 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.862403732 seconds)
  done (took 411.05341672 seconds)
done (took 661.81019662 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.438300569 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.440208284 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.441349351 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.440492607 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.441256532 seconds)
  done (took 13.556771081 seconds)
done (took 14.911647843 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.465728848 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.46119964 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.461105564 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.304932213 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.461662827 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.492045043 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.464452009 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.482126812 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.478212348 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.468755489 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.278195712 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.464016479 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.480140177 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.46345719 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.28397424 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.477904697 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.395877157 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.463808003 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.482051734 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.838716222 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.470097768 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.589332555 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.820129711 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.532379362 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.837673911 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.882369119 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.469693178 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.71460023 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.537067668 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.501384429 seconds)
  done (took 21.554259799 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.399240364 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.848687043 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.470999839 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.590111005 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.835713676 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.53157493 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.844558655 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.900808266 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.472713605 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.707479841 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.50467982 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.501501692 seconds)
  done (took 21.569227414 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.257059435 seconds)
done (took 95.467299929 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.519184178 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.594070726 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.515034558 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.49574684 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.493953735 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.496323939 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.498776486 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.494988923 seconds)
  done (took 13.468836226 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.490394484 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.494320612 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.489207183 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.49135103 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.490975284 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.495185946 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.493088472 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.490011195 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.489937443 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.496077469 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.496956841 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.48932235 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.493727868 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.489754528 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.491994199 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.492286763 seconds)
  done (took 25.236224174 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.493548517 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.493256998 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.493975247 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.491526611 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.49631912 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.492360935 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.494483621 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.49186562 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.49623105 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.495480396 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.49761272 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.495643196 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.49180849 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.491912275 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.492991462 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.498245133 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.492628706 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.498214263 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.496927507 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.495842802 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.492152878 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.491846205 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.497066492 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.492620465 seconds)
  done (took 37.227548001 seconds)
done (took 77.29386733 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.461619456 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.475323014 seconds)
  done (took 6.301007272 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.596590181 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.594639583 seconds)
  done (took 4.55488851 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.493762021 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.494128129 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.498216638 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.49763479 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.498618714 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.494843094 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.498124237 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.492867564 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.493138548 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.497942161 seconds)
  done (took 16.323991341 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.498727736 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.495261234 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.494172199 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.49352477 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.493869297 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.494158859 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.492854574 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.494499615 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.494606612 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.492437271 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.498681292 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.493294294 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.495600034 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.496022923 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.494891075 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.495186853 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.494284783 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.494701736 seconds)
  done (took 28.271172893 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.517137968 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.525104694 seconds)
  done (took 4.407793128 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.681438331 seconds)
    (2/7) benchmarking "second"...
    done (took 1.581106718 seconds)
    (3/7) benchmarking "month"...
    done (took 1.664293972 seconds)
    (4/7) benchmarking "year"...
    done (took 1.652225538 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.579846012 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.525641913 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.583983341 seconds)
  done (took 12.634327383 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.500951483 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.847088447 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.030899111 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.715356471 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.497712872 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.51401732 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.450043473 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.517663524 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.518980521 seconds)
  done (took 16.957918742 seconds)
done (took 90.812590835 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.466926137 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.524810173 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.493912739 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.489019448 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.905843125 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.530272879 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.472268297 seconds)
done (took 18.250239993 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.461824859 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.452936787 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.454715156 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.478557434 seconds)
  done (took 11.213963243 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.467613794 seconds)
    (2/2) benchmarking "read"...
    done (took 1.873931944 seconds)
  done (took 5.709081092 seconds)
done (took 18.290327842 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.502747242 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.496426466 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.496944339 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.496023901 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.498612498 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.496776162 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.496977933 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.496228885 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.501711775 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.497255901 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.497239768 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.496373945 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.498828447 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.500394219 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.504251274 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.498392288 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.49974281 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.49767006 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.498679127 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.4980178 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.498590009 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.502344258 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.497741438 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.498711603 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.497605945 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.499301761 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.498994041 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.50023086 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.500640758 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.498069483 seconds)
  done (took 46.330804708 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.505993884 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.506701515 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.498984612 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.499957711 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.498000549 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.500406791 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.501741876 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.504288151 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.504434468 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.500982562 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.50159542 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.503357026 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.501501343 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.505849522 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.502481077 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.50026194 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.503446283 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.503714614 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.500161857 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.505304271 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.503125502 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.504545446 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.502251648 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.503529394 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.50376902 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.506748938 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.502646321 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.500428581 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.501179934 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.502583744 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.506520767 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.507016081 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.502958302 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.50344775 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.505565547 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.504619687 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.509871123 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.507222881 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.504387115 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.503612715 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.504584208 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.504664455 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.503025489 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.50596029 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.507151782 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.505179674 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.50478088 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.506513433 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.505626868 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.509112856 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.503392156 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.507595833 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.505776887 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.504788074 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.513437079 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.506735039 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.504016328 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.503334607 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.508200729 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.50822217 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.503713356 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.508272666 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.505380607 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.509499427 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.510356869 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.507662113 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.508596519 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.508303605 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.506813821 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.507060849 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.505952817 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.509783192 seconds)
  done (took 109.720569078 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.505186728 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.508697649 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.506599058 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.503658601 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.506914392 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.506711852 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.504849813 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.511066387 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.507383656 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.507304944 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.508866526 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.511952253 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.507434989 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.508749821 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.507586056 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.507190265 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.509669281 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.507557491 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.506491014 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.509970577 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.508831885 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.511672888 seconds)
  done (took 34.547937627 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.508899491 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.511029999 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.505772557 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.510734291 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.51227066 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.508774754 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.508535198 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.51129812 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.506514132 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.511533275 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.509619345 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.506100112 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.511903504 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.512243212 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.507828195 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.511803422 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.507818697 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.513676495 seconds)
  done (took 28.551011411 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.510157751 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.516769905 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.509023669 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.51257852 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.511565402 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.510527631 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.512707377 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.513767567 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.508439725 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.514601333 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.512005682 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.512607224 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.511209212 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.508875745 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.508516341 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.511517771 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.509634361 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.508404316 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.513463479 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.509381535 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.51182619 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.514358984 seconds)
  done (took 34.628666887 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.513411866 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.513748152 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.512247542 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.506443871 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.507860462 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.512205987 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.508234113 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.509300868 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.514470171 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.5078437 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.508951941 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.508427573 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.513795504 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.510279205 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.508395656 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.513239638 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.508570818 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.511910977 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.509624862 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.508803249 seconds)
  done (took 31.584849583 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.516294146 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.517853912 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.516617232 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.517945263 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.516644539 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.516785898 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.517833169 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.515941308 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.51381052 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.517564071 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.517746845 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.515124375 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.516386476 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.515826978 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.516581473 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.519629976 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.516340521 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.515569334 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.517021892 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.516042718 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.517271296 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.517074204 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.51816275 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.516381028 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.516553885 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.519103302 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.517233651 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.519431556 seconds)
  done (took 43.853625801 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.542400399 seconds)
    (2/2) benchmarking "in"...
    done (took 1.544689796 seconds)
  done (took 4.466432149 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.512280227 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.515116273 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.51288659 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.514138216 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.513334202 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.511758932 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.515630585 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.517763117 seconds)
  done (took 13.493854561 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.50383949 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.514738781 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.517762978 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.513964031 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.516799169 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.50774704 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.524268066 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.518697035 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.510218374 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.511340513 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.514665238 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.510349395 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.512343504 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.509666278 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.510203776 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.513236844 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.516439486 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.519965354 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.518687747 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.514850387 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.520370432 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.513220711 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.515513391 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.523367322 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.513022221 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.527628129 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.523433183 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.522839182 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.51225285 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.522023157 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.515182692 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.524834618 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.517617568 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.517369283 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.516229822 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.518700947 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.533420555 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.519657632 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.529259691 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.523991703 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.517460286 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.51576866 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.517207181 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.518657366 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.520845214 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.52367637 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.518055962 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.518953632 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.51332247 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.51825955 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.523114706 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.513114412 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.521428947 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.523435837 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.52071503 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.528844485 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.531599095 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.515567028 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.519896141 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.535836366 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.540670081 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.526198897 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.522687557 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.522044389 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.527672269 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.526317488 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.534818709 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.526758745 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.525366599 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.520396273 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.53292601 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.543064799 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.531786549 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.522981658 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.520980427 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.521431042 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.517142369 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.524451329 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.531026816 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.532196797 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.527059691 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.524473259 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.52759272 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.522718776 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.519097784 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.524792224 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.520990484 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.526381812 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.514901162 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.536134658 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.530055184 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.528644111 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.515978324 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.521401639 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.52386578 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.528476701 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.516664934 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.521084769 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.526855196 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.523381989 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.522242668 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.520222649 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.5289702 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.524871983 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.527132256 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.535356836 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.529997355 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.518385334 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.538255109 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.53424587 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.524866047 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.517705499 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.5298722 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.527160472 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.520613899 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.531584638 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.52559044 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.529312003 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.527706561 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.525272244 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.530981418 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.536553985 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.530555946 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.525403126 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.524312415 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.528855031 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.523221773 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.527668846 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.53293509 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.529796841 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.526424206 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.533473705 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.534234277 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.524882668 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.52698119 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.523799151 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.528122116 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.528979139 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.523750052 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.531650568 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.528553945 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.528624415 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.534137547 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.537987129 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.535677617 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.529802428 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.542957941 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.525795913 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.534912157 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.531602029 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.529857742 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.525992377 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.524693957 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.530922473 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.519861848 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.527120383 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.521980274 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.527787088 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.525601335 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.527452478 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.525094986 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.520823005 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.52733738 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.53205481 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.535915077 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.528601089 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.531462486 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.526623253 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.526570104 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.521295131 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.529845799 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.521881519 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.526646371 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.529074402 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.527680371 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.526081075 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.536163921 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.532287381 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.526464085 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.525751215 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.527446123 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.534887432 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.533584753 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.544030984 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.540901186 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.526240173 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.529509304 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.526390262 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.526654891 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.533828988 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.526824256 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.533435152 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.546736844 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.542102317 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.527752027 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.534545489 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.52359703 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.530363463 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.537622416 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.543002919 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.53176399 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.527822149 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.526198618 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.533524061 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.533386124 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.536962487 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.524156319 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.531178023 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.534444918 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.528666599 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.53088832 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.529225399 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.532429647 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.534436467 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.532917629 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.533919642 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.527386268 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.533168708 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.523854465 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.528947501 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.536071452 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.53067733 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.542271332 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.538178493 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.53669276 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.542750304 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.537304988 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.531764759 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.531591063 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.537446627 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.530373241 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.547521232 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.532917489 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.531402073 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.546909911 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.533741337 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.525805202 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.540656323 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.538690081 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.53045293 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.527778428 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.540030614 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.536965001 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.530179641 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.535792366 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.528069666 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.535351039 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.542511237 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.541261776 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.527784015 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.537930836 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.532479165 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.537020245 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.541014748 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.541248507 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.540550024 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.547356546 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.540262278 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.532725286 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.532765934 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.536663216 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.532995152 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.532584975 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.529774073 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.536793401 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.544477619 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.539986474 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.544969511 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.532990892 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.536780201 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.526960376 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.533529578 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.530332104 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.553558172 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.553100084 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.547199124 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.540072589 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.538961065 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.544962038 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.538029383 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.536612931 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.533558004 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.541240964 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.533729184 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.53291281 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.539275909 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.532797362 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.540158493 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.542222374 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.53798601 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.538072404 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.534971661 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.530194517 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.539366773 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.535104219 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.535986106 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.529372834 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.538344575 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.538051941 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.54595106 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.535564404 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.533857483 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.554818318 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.54602132 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.53702241 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.536079413 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.532843458 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.532549775 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.543339625 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.540775821 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.534463636 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.543004317 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.536318341 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.54290158 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.536568232 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.5515392 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.552766592 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.535536118 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.540825757 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.535733979 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.531448377 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.535202347 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.543322932 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.555225843 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.548918546 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.532837171 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.539610379 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.536297947 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.536576404 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.537688138 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.536778874 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.539750061 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.536804925 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.553504185 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.543728361 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.537148125 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.549832489 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.546088996 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.540601078 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.540407617 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.532103559 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.552335671 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.545310546 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.542344386 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.540753751 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.538564227 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.540886589 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.538210271 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.538419865 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.543648043 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.538059763 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.552954394 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.546271492 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.543707199 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.538601941 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.555426916 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.547327213 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.554680731 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.549512547 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.542324901 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.544400304 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.539421947 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.538380125 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.543698469 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.538190157 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.543370564 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.53653862 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.545719676 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.540128322 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.547276158 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.551748445 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.547380991 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.534975572 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.552211004 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.549398565 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.535415223 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.543288082 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.540983529 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.537875521 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.54623678 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.547703378 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.53550881 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.541690882 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.543441802 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.550187632 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.538192182 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.545479771 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.539838691 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.546248933 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.541440361 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.542002862 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.544824241 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.546412501 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.538447731 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.549218514 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.552262338 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.551462096 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.546623492 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.549149581 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.54038904 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.559377208 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.550141537 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.549230807 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.553816306 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.54369812 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.540811021 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.5486572 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.54724892 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.541201433 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.54543158 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.538942487 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.542925466 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.540211014 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.554639246 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.546503085 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.546172736 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.538485516 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.543050063 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.544950723 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.544052215 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.544094539 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.552822743 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.551144318 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.539251815 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.539704665 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.546340146 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.547641638 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.549206082 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.543384881 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.545904755 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.545058907 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.551736712 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.5451944 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.547207225 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.538806925 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.541136901 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.560790447 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.553762109 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.546642489 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.544249656 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.546227771 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.54150664 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.548698197 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.54658026 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.543283472 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.544762571 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.548432032 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.545361879 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.544410571 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.541653237 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.548234591 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.562937159 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.549074083 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.543024012 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.564258276 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.564209387 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.554839341 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.542319244 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.547339644 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.545441288 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.547455301 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.547043657 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.544713332 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.564607762 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.553901093 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.550547245 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.557084878 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.545630908 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.542852412 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.55087529 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.54577492 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.556876891 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.555821938 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.556540954 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.555022256 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.548792832 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.548882647 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.541060355 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.544636926 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.549300647 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.546256756 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.547574939 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.557819049 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.554023595 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.555292471 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.561137907 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.54749986 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.549257696 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.546854596 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.545078603 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.554503475 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.543682056 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.560451717 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.55083562 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.54686193 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.551602197 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.550742731 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.55046148 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.551771073 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.556159341 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.549913506 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.546523688 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.555162147 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.566319013 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.56451173 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.551049684 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.548451587 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.553019208 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.559796676 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.550535512 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.549930616 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.551287982 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.570847242 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.56118519 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.550016241 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.551520343 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.566006753 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.559684999 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.550204813 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.550320959 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.559549088 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.562239444 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.5538983 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.552158413 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.56874481 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.562653463 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.551450013 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.554488878 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.557527392 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.550248464 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.563632568 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.560310637 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.551858235 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.555946046 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.571212303 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.560369723 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.56212218 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.575749053 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.564928613 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.56149738 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.56311253 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.546769949 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.55376609 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.561078054 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.558115107 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.551245728 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.551210178 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.555462814 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.548122146 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.564162244 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.570926163 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.566545369 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.558777831 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.548449283 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.551724141 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.553636604 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.552517398 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.561246231 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.552726922 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.553027518 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.560075062 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.551167435 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.577654114 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.576444254 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.558187951 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.554871398 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.552204438 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.566404429 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.563636549 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.556927456 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.55626117 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.554445786 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.555436344 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.56514575 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.563765616 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.555903792 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.553936782 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.558163367 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.554156293 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.55796397 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.576139186 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.573205713 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.569893351 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.560461215 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.556857615 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.555120732 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.555131208 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.557401119 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.554482801 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.553968629 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.5574051 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.559087786 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.558887901 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.556249646 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.558417868 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.561489279 seconds)
  done (took 918.75674409 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.561943037 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.555514636 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.561917057 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.555514288 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.554477633 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.555846592 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.560726333 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.556293087 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.555436623 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.55615096 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.555850922 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.55582557 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.561227304 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.557050796 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.558352148 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.560127513 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.557454618 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.55561416 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.55884823 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.557062459 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.55590023 seconds)
  done (took 34.126155848 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.557625031 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.555088185 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.558332802 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.561539914 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.557611272 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.563429191 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.560549844 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.558184599 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.557711913 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.560426015 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.559747298 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.557507278 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.557504414 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.557945113 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.556523494 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.559578351 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.560953457 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.561931793 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.561860974 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.560904707 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.558506706 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.563981775 seconds)
  done (took 35.726960322 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.559039386 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.559385589 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.557765342 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.564027102 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.558459634 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.560566676 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.558803323 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.562192162 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.559432802 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.557208147 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.558798923 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.559866936 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.565046854 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.56356978 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.569399852 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.565655172 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.565131502 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.564409762 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.563462504 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.558975132 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.576241154 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.570089954 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.558772244 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.559751767 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.566852181 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.559834529 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.562087539 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.562114707 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.55871211 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.566776264 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.561274238 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.558710643 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.575634164 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.564638143 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.561283037 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.569597223 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.564636746 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.562397914 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.562412581 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.57358551 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.570843681 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.565494188 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.578815644 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.572865516 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.565237451 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.563761565 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.569711553 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.563380721 seconds)
  done (took 76.497728798 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.565104613 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.56366679 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.561509812 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.561170104 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.564451667 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.564592047 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.564134028 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.568206195 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.562592981 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.563636061 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.56465686 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.563899711 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.568812696 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.563927438 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.564184175 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.56979655 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.565320492 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.570911218 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.566825293 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.563714632 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.570323224 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.565752321 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.564182847 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.563200251 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.566082182 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.563769247 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.565843045 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.569554969 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.565923781 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.569453281 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.566234296 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.564080041 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.564171952 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.564922257 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.565756581 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.565305686 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.566680651 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.564527863 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.564314358 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.565768873 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.564847807 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.564876371 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.566228709 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.565697914 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.565825235 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.5719001 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.565797299 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.572486697 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.568548557 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.566519527 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.566884588 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.566000816 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.566745325 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.572061084 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.565987127 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.56632893 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.56649648 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.565757908 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.566011851 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.569432887 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.565976093 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.567051649 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.565972251 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.565575622 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.567113877 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.566219699 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.569040728 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.574289999 seconds)
  done (took 107.928774744 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.566447032 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.568665051 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.568996938 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.568448893 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.567718073 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.570762944 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.572880183 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.569339369 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.570449357 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.57461036 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.572690144 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.568764086 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.56867022 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.56939594 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.569521445 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.576105104 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.56956349 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.569898868 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.570014525 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.576684577 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.570714544 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.569336227 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.575926938 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.571393261 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.572673802 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.571400944 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.571610957 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.571426367 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.570370506 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.57071196 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.572734703 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.574657713 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.572927465 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.57043895 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.57131951 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.571003477 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.571012626 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.569975693 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.571159084 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.572064785 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.571200569 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.571716906 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.572162912 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.571611934 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.576581631 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.572557376 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.573585161 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.576528761 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.571015141 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.572085528 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.571057953 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.572269212 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.570992582 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.572457015 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.571800296 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.571869859 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.572916081 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.57198824 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.573955738 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.572479573 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.573101161 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.574581307 seconds)
  done (took 98.87019865 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.570726626 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.571880894 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.5722169 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.574428494 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.573916348 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.571030856 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.580294883 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.574646469 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.573043681 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.574672309 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.57183438 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.57208902 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.573674767 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.572594323 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.5737877 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.575358641 seconds)
  done (took 26.608390006 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.572853084 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.574315211 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.575631231 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.574754373 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.572567433 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.583033778 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.573783021 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.573669598 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.573776945 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.574396506 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.574517053 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.576713841 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.573839732 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.575727403 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.574272748 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.576652659 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.574155135 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.581344737 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.574567409 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.581773911 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.575524444 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.57512537 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.573771637 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.576004183 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.57456685 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.575196259 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.581138007 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.574004278 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.573747751 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.582345771 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.575237815 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.575778666 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.575547212 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.573530824 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.575822247 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.576669422 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.583057524 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.575600571 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.580613848 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.575135218 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.577852253 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.575953269 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.576805612 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.57733019 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.575694646 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.577454228 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.576301986 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.575991751 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.58019473 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.577235345 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.583393461 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.579968165 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.576879714 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.576995371 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.577870063 seconds)
  done (took 88.141336481 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.57619478 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.578799161 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.577859587 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.577687986 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.577150139 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.578737911 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.581064883 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.58421703 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.578124355 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.579790419 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.577961415 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.584013093 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.57851826 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.579411181 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.579277225 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.585660718 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.57793285 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.579124412 seconds)
  done (took 29.866732146 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.583336889 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.578061148 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.580369054 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.61458821 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.57879958 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.581874832 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.576378183 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.577444171 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.577963929 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.578933047 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.578875638 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.586723563 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.579462165 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.586233627 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.579610019 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.57844744 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.579374933 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.585591645 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.578440317 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.579185873 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.579991073 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.579796635 seconds)
  done (took 36.237156765 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.573152564 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.57382737 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.580155479 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.598696943 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.582990407 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.573211021 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.575864361 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.572270957 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.602586754 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.605162081 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.607303066 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.582353454 seconds)
  done (took 20.465960302 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.581696597 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.581350743 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.580066431 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.587517518 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.582342908 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.581919111 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.581877556 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.581908565 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.581284533 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.580743473 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.580494768 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.580583886 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.589142516 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.582970433 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.581740666 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.580981283 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.588794636 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.581879581 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.580706876 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.582954648 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.581539315 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.581379867 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.58313882 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.581896483 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.584816757 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.583262718 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.582653911 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.58140487 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.582064171 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.582832706 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.582840457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.582793245 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.584989055 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.582946686 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.589310973 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.582672838 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.584029366 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.582946337 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.583342546 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.583353022 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.58343788 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.584763538 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.584095296 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.584325702 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.588325931 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.584721144 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.58317402 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.583999124 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.585047652 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.591708205 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.586022706 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.584312014 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.583992978 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.585440718 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.584808027 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.585920388 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.58667642 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.58530809 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.584120718 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.586369189 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.585099335 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.584836731 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.58730143 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.58626289 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.5858891 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.585667493 seconds)
  done (took 105.978483719 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.584667785 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.584324515 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.586231252 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.587034077 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.5851675 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.586813169 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.584607442 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.586466337 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.588024287 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.586354102 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.586561462 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.587281804 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.587067881 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.58510981 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589838345 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.587839138 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.594367971 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.588395843 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.587477361 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.591039126 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594100549 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.587070046 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.587343684 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.587924694 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.5879483 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.588902542 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.594588879 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.587066205 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.593348498 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593806726 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.58771063 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.587510954 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.590215977 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.58918917 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.588512129 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.588509824 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.58856884 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.595635381 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589109132 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.588211392 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589368033 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.58879289 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.587752674 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.58940037 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.591176294 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.596047864 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.588695951 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.588962326 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.589149081 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.588554383 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.593978955 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589460154 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.591180554 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.590800548 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.588249106 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.58968644 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.591186281 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.590873322 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.589509811 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.596251521 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.590115405 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.590362923 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.597142835 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.59042997 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.591105126 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.598379026 seconds)
  done (took 106.352612511 seconds)
done (took 2034.101052916 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.563773787 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.566945419 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.582678775 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.941964478 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.584426204 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.241549292 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.137928224 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.584212769 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.584127493 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.583940528 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.583934381 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.566354423 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.936229321 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.583868661 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.585978566 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.565873915 seconds)
  done (took 59.640406578 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.622577354 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.602009166 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.743719785 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.591522776 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.62535606 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.853388758 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.669372062 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.591289228 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.8056792 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.597093877 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.583966299 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.623749361 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.588950662 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.572882208 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.62049329 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.853786435 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.956993693 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.568706817 seconds)
  done (took 34.519053926 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.187143631 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.589984313 seconds)
  done (took 6.225568629 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.618448337 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.589302033 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.596693755 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.590495062 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.566853578 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.568237553 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.590797126 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.5714425 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.578811663 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.754224473 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.598760499 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.612614984 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.590625735 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.593955349 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.59598752 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.653544142 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.787094015 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.596721832 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.594690009 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.602225255 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.589793157 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.829184284 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.650419722 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.604835224 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.753433939 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.584756274 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.609160006 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.611801263 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.810135492 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.599717744 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.592609298 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.594068003 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.595230791 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.567797763 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.241060892 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.569300049 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.648652876 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.605966723 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.5970658 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.80703433 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.592197932 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.605164316 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.570406823 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.224349758 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.774452673 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.888900118 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.571934462 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.601108632 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.595991292 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.801149993 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.594595305 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.595722403 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.703813941 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.581406685 seconds)
  done (took 100.875628321 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.593073812 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.569697725 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.835622183 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.589391779 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.569844322 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.571279001 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.57136735 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.973975182 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.628800702 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.571524633 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.984504035 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.35071038 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.582295136 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.62885413 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.627418752 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.611456317 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.571676049 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.570096169 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.571628767 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.57338723 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.26638171 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.575617472 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.590360897 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.733684779 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.637642678 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.261666445 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.571281935 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.57158351 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.57152617 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.571583998 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.322310889 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.589058706 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.640135872 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.57495845 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.961802056 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.101344033 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.065485911 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.575804856 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.605248405 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.57616817 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.573521605 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.271095508 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.095697854 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.577791282 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.576991599 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.264926846 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.573436189 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.581565086 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.576801561 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.934607816 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.574147034 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.575320716 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.573266405 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.574016151 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.573059745 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.64885814 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.623667367 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.277849509 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.577608368 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.57488791 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.596280086 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.574227072 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.580628864 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.579601219 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.575782857 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.098399943 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.744499702 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.577601104 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.095287187 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.324777962 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.578292463 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.390857315 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.578501638 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.597775946 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.651986541 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.575814494 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.574831129 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.269150986 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.621117043 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.576421625 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.074395354 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.57725553 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.991490328 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.596932822 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.576495307 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.28647379 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.580841111 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.645994717 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.574972068 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.577797568 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.595669324 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.579227289 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.96900353 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.64897722 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.57594398 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.575478348 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.607893853 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.576094069 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.575979459 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.584291411 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.398820269 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.58756536 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.576056425 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.57910779 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.590288611 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.576558444 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.577364691 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.578332552 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.952190988 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.577562552 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.582897238 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.577525676 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.578125822 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.584212839 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.735745307 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.58536522 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.022827972 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.581562362 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.577320133 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.598185495 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.577938507 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.624814371 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.57776579 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.599110334 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.57881767 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.983088422 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.598206098 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.596808714 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.581399143 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.594172974 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.589635456 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.578768222 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.620575354 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.578835339 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.547691226 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.592371558 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.599315039 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.578455054 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.59132771 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.579136564 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.582400248 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.579526139 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.001184509 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976399303 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.77700181 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.58148002 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.58079739 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.541494348 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.586457608 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.847420123 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.598870429 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.582664667 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.971764426 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.762855388 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.581575422 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.580274349 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.58437976 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.957771306 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.582508782 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.010584028 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.35336854 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.584499188 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.591112599 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.551950496 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.430758968 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.585397557 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.586436306 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.995938311 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.603875674 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.58144852 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.582680801 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.581751772 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.593108942 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.586881893 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.587078916 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.584290781 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.581804432 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.696799363 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.861925458 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.600774931 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.5922163 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283717294 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.618889455 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.593658663 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.587028211 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.585841118 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.582678147 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.621319373 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.585895315 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.626611596 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.585929188 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.588896326 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.316294621 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.585400839 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.604219154 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.861702037 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.492515564 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.587431894 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.583203213 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.583316776 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.626019621 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.311799287 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.635073776 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.038965081 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.599133102 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.651623576 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.582836127 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.616463378 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.295186559 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.586821062 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.582893677 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.460294916 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.587509766 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.277917185 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.583234153 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.584777854 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.403421343 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.586468364 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.585749068 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.583829201 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.589309507 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.98682535 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.588700281 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.607988767 seconds)
  done (took 560.29915789 seconds)
done (took 763.004867748 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.583993328 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.589036008 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.588563881 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.588789957 seconds)
  done (took 11.815539602 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.622849526 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.6078025 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.618277785 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.607368925 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.617735677 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.60803619 seconds)
  done (took 11.147552213 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.585249772 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.59074691 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.59025837 seconds)
  done (took 9.231884726 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.909569226 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.602612176 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.089242424 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.605938506 seconds)
  done (took 10.67358405 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.622878021 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.621489926 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.62291776 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.620697297 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.623577063 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.624076916 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.622559265 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.623426834 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.623442897 seconds)
  done (took 16.070291621 seconds)
done (took 60.403792551 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.747960966 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.74156099 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.588134986 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.67217158 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.797409642 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.742127054 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.750067659 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.748161062 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.743954521 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.654700224 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.740699847 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.645480058 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.737950755 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.870143473 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.652802357 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.746752851 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.643184514 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.840575607 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.744702242 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.656325361 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.773621003 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.653296414 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.65479437 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.590635933 seconds)
  done (took 44.603671739 seconds)
done (took 46.070878428 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.656354135 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.779752858 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.621971411 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.615137651 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.629264168 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.591099888 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.672623104 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.617183372 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.642785161 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.643505924 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.590849158 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.652306344 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.643707974 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.632024086 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.663870035 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.615938661 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.621940472 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.63106328 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.643590013 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.646507213 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.624742504 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.631682283 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.657505399 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.617522103 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.639568342 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.638899541 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.63704805 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.591713304 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.62563724 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.645812711 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.603721185 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.637239903 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.64710701 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.635866265 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.623950714 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.634395686 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.630526829 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.775112394 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.651884294 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.632765801 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.630718404 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.646081112 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.637111535 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.635146201 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.632333693 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.658862625 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.640574546 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.645954908 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.603263725 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.603547491 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.656804053 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.642736063 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.631607832 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.600115629 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.605166341 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.647841531 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.633063604 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.654657132 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.626800727 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.633312239 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.666384881 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.654128364 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.642894673 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.640787422 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.629231971 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.650126738 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.63392328 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.65124762 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.62952733 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.634774436 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.628438015 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.632750785 seconds)
done (took 127.436288445 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.801502831 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.594646079 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.839549359 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.624486745 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.850490974 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.799834532 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.624702555 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.625293133 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.626699108 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.497743603 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.627895419 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.627293387 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.59663914 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.6303546 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.798734811 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.629981718 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.62654378 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.396699469 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.631158403 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.8129355 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.601309566 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.626204631 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.630988829 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.488363639 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.596271286 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.602282385 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.814208637 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.62991481 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.389175746 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.601486893 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.596897064 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.388323474 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.812413995 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.647358927 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.638025757 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.637568716 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.85224427 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.63372109 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.803211498 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.803577187 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.843505798 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.668972081 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.603817985 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.599303026 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.630325826 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.634898405 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.629017559 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.659171742 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.598631782 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.628513374 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.397060897 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.642853815 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.643314489 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.628406657 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.634590474 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.652558122 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.62871312 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.633079947 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.817154332 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.63386161 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.808526909 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.492546713 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.499975451 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.634048925 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.600677573 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.630365915 seconds)
  done (took 129.00793544 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.748335246 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.758957476 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.803549879 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.624793628 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.719829386 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.805559562 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.625826231 seconds)
  done (took 13.564221191 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.635056595 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.628342264 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.716543564 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.718191468 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.63098408 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.86046836 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.634096417 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.643491117 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.632892144 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.723108016 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.632704619 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.634357414 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.639854132 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.603811211 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.716830541 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.643830197 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.801697339 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.627162854 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.630529623 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.839640362 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.633498506 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.644689873 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.723253075 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.643989155 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.635446937 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.637726208 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.450352381 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.631889153 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.633093357 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.63221189 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.632630029 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.750726471 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.638487408 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.605543763 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.630332042 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.804214069 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.633429712 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.630586403 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.636543865 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.609003701 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.636173986 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.637088767 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.635539198 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.632292068 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.638480983 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.663905654 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.635492265 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.633213972 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.637462277 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.632160696 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.725130828 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.633241211 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.638869929 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.634291414 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.726769654 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.643545035 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.643982591 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.634285128 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.634693979 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.634283103 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.8449659 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.720915557 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.639073377 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.725296632 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.635648639 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.637125992 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.634377668 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.634428931 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.780441493 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.63609311 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.723582167 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.633714316 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.873116896 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.662141603 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.637248284 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.632619204 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.632614035 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.634193077 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.606410563 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.642849136 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.633190855 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.631596797 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.641097866 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.633863915 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.637718316 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.850892072 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.804267987 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.639079383 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.652436319 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.649081143 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.640650323 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.727757489 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.63633497 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.6392741 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.725588988 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.806703842 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.728339826 seconds)
  done (took 168.089806886 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.64788162 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.651146769 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.636081725 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.667095236 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.629739368 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.628485578 seconds)
  done (took 11.345278754 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.636345864 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.639571345 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.64104772 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.636234678 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.636002595 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.642303745 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.63859643 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.636222526 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.642683124 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.636901173 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.637938316 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.642219167 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.639197904 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.635992258 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.640632304 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.637270633 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.640181758 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.638119344 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.638529313 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.642440355 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.614704775 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.638368888 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.638287034 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.635849154 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.642698907 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.638371681 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.66382415 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.637745065 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.637119916 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.653410745 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.641304177 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.64258786 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.637501319 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.640451554 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.649921474 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.637256106 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.642180405 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.645237568 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.640816266 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.641671962 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.642845086 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.643656851 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.644489428 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.643879784 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.638129681 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.641349365 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.647590382 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.666502982 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.647107359 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.644501581 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.645068413 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.645462178 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.642837612 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.644557664 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.639893243 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.642551332 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.648584502 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.642915625 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.640172957 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.640033555 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.643488463 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.642234394 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.639771999 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.647057423 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.641071047 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.645172826 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.638677447 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.645108501 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.64167273 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.646340362 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.648088489 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.641260526 seconds)
  done (took 120.697359772 seconds)
done (took 444.177297557 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.055174265 seconds)
  done (took 4.545418311 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.747548833 seconds)
  done (took 4.238550866 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.303988378 seconds)
  done (took 25.798649535 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.643198482 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.621302961 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.61300407 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.616218655 seconds)
  done (took 11.982644092 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.253209294 seconds)
  done (took 4.74161868 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.624940574 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.618859773 seconds)
  done (took 6.735155846 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.000386431 seconds)
  done (took 4.488736871 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.291346826 seconds)
  done (took 4.786387431 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.645830311 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.631181382 seconds)
  done (took 6.774746216 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.597585629 seconds)
  done (took 4.086855808 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.213890748 seconds)
  done (took 17.703280634 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.623534668 seconds)
  done (took 4.117321135 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.657522161 seconds)
  done (took 4.149535706 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.690511203 seconds)
  done (took 7.180056067 seconds)
done (took 112.817769986 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.612001708 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.619512649 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.616526865 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.618396864 seconds)
  done (took 11.955190531 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.763238189 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.767604107 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.768181904 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.757691673 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.755422809 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.768670025 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.677538673 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.679038934 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.747513493 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.741509308 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.774335759 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.754856117 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.76978944 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.679402947 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.741942114 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.773675898 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.746861943 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.769656393 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.679498908 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.756681559 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.645728971 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.758440232 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.743232362 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.651662897 seconds)
  done (took 43.165660034 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.226573156 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.768816412 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.853268072 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.73569977 seconds)
  done (took 9.076595564 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.814321151 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.812209779 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.83191878 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.870396577 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.911935031 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.826399782 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.685643475 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.681214699 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.665352696 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.814755564 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.884535037 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.812538522 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.035346883 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.645805169 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.03479835 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.651622459 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.647548407 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.81510903 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.865994971 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.893825325 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.645471816 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.811825443 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.82389688 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.815324281 seconds)
  done (took 44.790835274 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.666597896 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.675471929 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.653323373 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.672230526 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.651357969 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.652206751 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.653277278 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.664757438 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.646363061 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.649622414 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.652953634 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.671258963 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.650927747 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.652300268 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.663596886 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.65067583 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.654185144 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.663774422 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.669009446 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.654581913 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.652992745 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.666625135 seconds)
  done (took 37.981510499 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.620331398 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.61904562 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.05954186 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.9614789 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.619771271 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.620591697 seconds)
  done (took 15.995754977 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.738954444 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.932615105 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.643286901 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.092370965 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.216611972 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.644426711 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.65032397 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.984905343 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.349174011 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.334380301 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.71166948 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.738667327 seconds)
  done (took 24.53226629 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782379868 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.630775185 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.630405514 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.695344219 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631633045 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.627777248 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.661963787 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.273887552 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.658845724 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.980442416 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643205326 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790331438 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.963524132 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632112505 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.632761541 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.61838136 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950493076 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.335492105 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63525257 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641915428 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686753602 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.634812569 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.632904087 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922269864 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.633764042 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.629805089 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.972110839 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.62956707 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040667183 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995301358 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00237614 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.635686913 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.97670458 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213795832 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808449874 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917291787 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.632142258 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.631343134 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.627131844 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.651900846 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.637587922 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.637979452 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990874678 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63772097 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.632034283 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.631047915 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280900804 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.661221724 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.631192556 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.631106721 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006796953 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796982703 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.654511513 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.632509414 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652476757 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637584849 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.652308021 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828559064 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.356833435 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635545624 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655418752 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.6360225 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.638244151 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639071142 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449327599 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.656243507 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.656430752 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652673221 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.631996778 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.639524551 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686296281 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63212808 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.676745206 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633049356 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633803363 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.652537309 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637543993 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383401478 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640214863 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.639687701 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946231571 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634242246 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63453921 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.632519401 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.633697064 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.635060786 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664976321 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.609090514 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701521681 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.2796313 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.927988049 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.685310262 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.690819203 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.936999321 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.609761759 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636107357 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.651172402 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639972304 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.682239201 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.28333617 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63873765 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.657156123 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969826401 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.93179384 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649161881 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.614531499 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288114292 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639867122 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.689161799 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.648665099 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.930414545 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.445860189 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021516144 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654443278 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.701648024 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.634632589 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.636027808 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641859625 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.661802245 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.639015269 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04818008 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.61491856 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641274215 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788540987 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.641924578 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.639427611 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650425728 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644930196 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.638010253 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.93384892 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.642287612 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025943592 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.64631054 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638549427 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.640341136 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63999144 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.643141142 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.940384319 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642432952 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991162214 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638541536 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638275091 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637676341 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.941956376 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.637380145 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.666898144 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062237105 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6386405 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.683924191 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014336181 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700712919 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833348011 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.698203382 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.639945554 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.001267619 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.661052638 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.660474143 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.639611434 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.644575892 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647210026 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.668392119 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648423658 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451863467 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646180985 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.647852426 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.6413208 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.68033435 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788066136 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671351504 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.930798881 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.645969855 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648287886 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.667642512 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.648457741 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944032269 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006247513 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.646960343 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893887344 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.288012743 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453513606 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685641729 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.640618475 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.640285332 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.642532755 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64285165 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640535155 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.642266171 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933735707 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030603473 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.668307262 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.460879976 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648172857 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.643772787 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.670139758 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009809278 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.674318291 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643224253 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.644515619 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65762371 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649794293 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.017880067 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949125374 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.684251468 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.643231517 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.24512768 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667539706 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.645817531 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.6453644 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.69688855 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.642492038 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390723778 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078777266 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.643920781 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036086084 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.648928261 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.689361476 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.644429086 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645345892 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650734636 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.665426728 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672481046 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.93748814 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.650467493 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651507849 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366704174 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646500927 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.397049792 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651678192 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.651278351 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.651271856 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299664155 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649885227 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646048565 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010500777 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296386922 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652878205 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295528642 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.650509677 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.650182332 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025115274 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96513167 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646559803 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.651676725 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02693911 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.948012035 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702124132 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.652664001 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649626535 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.623381367 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38892355 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664948315 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902757117 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301158827 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65227708 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.654320567 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.694936277 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.65322378 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214141197 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.652570414 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648622147 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.659684029 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.652586896 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400830301 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.660047203 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649452839 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462305787 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.662704594 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.306799489 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653149329 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.941287297 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.02446617 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.013950936 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.65958632 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.66071712 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.986343096 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022972963 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655671018 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.658323241 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.397227329 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.603700792 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.679182737 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649173404 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.649389004 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660566054 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067599239 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.655389068 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.655648041 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659116847 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.651103817 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65118155 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.650066534 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.660521425 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651668135 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.347245485 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.661251826 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.687212878 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666253928 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656773254 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.984510321 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.6917094 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.466063527 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972152535 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644940603 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720007971 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.677958838 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651496395 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.633666893 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.651967474 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.650739525 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.750478535 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.960324843 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.669365637 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.631904308 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.736258989 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.952803217 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.652112604 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.652993652 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99037224 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.657583831 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.673737561 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658434637 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718302306 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.653906269 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659165806 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.651284566 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719062319 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805191568 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947660244 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.030990044 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034083105 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219930971 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657148301 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659347882 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.698286563 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815776993 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665668448 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.663198721 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.658146542 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469199261 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661057807 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.478548424 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04006571 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.659142339 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656501989 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655860776 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983275527 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653513551 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.007012274 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655330472 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.674492894 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702063649 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659702955 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669708417 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955054271 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005453487 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.655173818 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66806603 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658234263 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.657463984 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040969735 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.958899312 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.369657552 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427849938 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659909057 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.657798733 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319879504 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009001494 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657662612 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658223018 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656318167 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.68285562 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.662674842 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.687331329 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661199095 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973587982 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019476778 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259604451 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025951764 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.681867436 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.605369021 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656938986 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.996624361 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.576337047 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.953302093 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482122064 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.60418144 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999276793 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810577309 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953752918 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.663185871 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980733933 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.658383165 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.661555425 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654962338 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656152504 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.656624142 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.023065643 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481422044 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003556947 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.681358014 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.675061124 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718328008 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.953679026 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.966496158 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.668294342 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968507308 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042303424 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.674324926 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.66080072 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472126937 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042853215 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663726931 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.680886236 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99484746 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.664870233 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.725213171 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.614825949 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.658387495 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427182954 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.962016887 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707314527 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667586639 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.603521579 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476834868 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.674488215 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.361794122 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666197986 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659704003 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.018520023 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.686580256 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.670138291 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.033244102 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.68373129 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.666912322 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963297497 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.47468669 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.671751345 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.670192767 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667630081 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.671398717 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663012594 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.760189965 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665441254 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665916455 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.224951371 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.66965478 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663950213 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.70081363 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.666570868 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674514895 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.666149166 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662729877 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.691932054 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.641732164 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.64523687 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.676278318 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865616919 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418942101 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674864729 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.362087176 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.086214106 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.996834164 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.666841991 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.643955841 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.687557336 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666366652 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663690264 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665892499 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.673033212 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434060504 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.6746008 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.035415537 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6932758 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.962862316 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963115701 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.670277205 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967539308 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677827536 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715807646 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.642760438 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665086741 seconds)
  done (took 1134.042411847 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.659778105 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.703476748 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.678209988 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.693507184 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.673195733 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.729188677 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.705883618 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.705951574 seconds)
  done (took 23.078976314 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.664087032 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.685442891 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.662099349 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.692524238 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.663112188 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.292834445 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.660028904 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.687718739 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.71509254 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.672254901 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.667306087 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.466991577 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.688641062 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.668625808 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.665792207 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.694694277 seconds)
  done (took 37.783622416 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.091567929 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.126153263 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.32423774 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.698707776 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.733898424 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.665813439 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.189625231 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.673989898 seconds)
  done (took 31.036483411 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.698918348 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.700850926 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.700315732 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.701323471 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.698696322 seconds)
  done (took 10.031595708 seconds)
done (took 1424.960257204 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.694745749 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.691868498 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.691059387 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.690597526 seconds)
  done (took 8.298511634 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.645274724 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.6452192 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.645492908 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.682799398 seconds)
  done (took 11.151269934 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.176623299 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.400969914 seconds)
  done (took 6.109749641 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.669973814 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.517425994 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.502845858 seconds)
  done (took 9.223872254 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.046580714 seconds)
  done (took 3.57788913 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.169159709 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.239522568 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.662660454 seconds)
  done (took 8.604599231 seconds)
done (took 48.494472448 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.663494429 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.433843298 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.824771432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.681883709 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.831212544 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.822903806 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.949023057 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.664387839 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.67849061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.673698311 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.665620118 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.831996932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.935440743 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.434275615 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.935753283 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.436972607 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.830625598 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.671338303 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.678400165 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.664984143 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.948806269 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.665252684 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.675407048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.67919894 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.830525306 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.813580414 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.68191402 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.432198047 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.677500401 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.664871559 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.832911922 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.66556243 seconds)
  done (took 92.409783258 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.664545331 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.666391585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.686399157 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.668073922 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.665202398 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.663787134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.66588775 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.664584372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.67754433 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.663770022 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.666990614 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.665599515 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.689066815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.663926118 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.6678813 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.666180036 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.665571788 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.667182468 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.666943332 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.666156081 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.667009052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.676654762 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.666465686 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.698968703 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.673236101 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.666664036 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.681765188 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.665809458 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.667668423 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.680072724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.668194119 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.668733293 seconds)
  done (took 86.990635055 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.676357517 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.667709141 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.666630582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.678684838 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.681230553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.672159986 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.664537858 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.666851141 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.666825369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.689591602 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.67610113 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.667974678 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.67028789 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.668952456 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.665441534 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.671730812 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.684898478 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.684394503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.668523421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.668120995 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.670207433 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.66990097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.667293515 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.674000025 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.668237281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.667830316 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.683118643 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.683800433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.668924938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.674308932 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.6755864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.682240737 seconds)
  done (took 87.081596552 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.992894906 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.695642791 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.704059085 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.679182178 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.703646812 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.699084081 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.678436413 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.99434593 seconds)
  done (took 17.684735958 seconds)
done (took 285.700055859 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.677029739 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.677587423 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.731645694 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.677132965 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.741599334 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.72996615 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.981651438 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.735843294 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.975955671 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.679402178 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.720191374 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.680194039 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.68123209 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.904908369 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.688445228 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.685826808 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.676137238 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.678046838 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.688390891 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.019802239 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.737354729 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.673432774 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.695561077 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.68192282 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.655201894 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.783814688 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.785869907 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.924396671 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.884184783 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.784252243 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.675647581 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.684836948 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.68121442 seconds)
  done (took 77.21767021 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.695426772 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.702902304 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.70257782 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.701639713 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.706686932 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.70241551 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.695112625 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.703121605 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.707798596 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.701843719 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.704023395 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.705206786 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.705606698 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.709281397 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.702745021 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.690745381 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.695839883 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.703979396 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.696648645 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.689090281 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.704515357 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.705813637 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.712948274 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.703466481 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.703508456 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.705370355 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.705175846 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.711852394 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.704462977 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.703742983 seconds)
  done (took 52.626492658 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.704699389 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.678348204 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.694438936 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.711821594 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.701487738 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.70482252 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.107688065 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.709593867 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.704607199 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.703837199 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.678589225 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.737524723 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.772606978 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.678036642 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.707672743 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.706338146 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.71223715 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.698892576 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.677064101 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.726484911 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.124811752 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.711938299 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.112244861 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.730065883 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.707794337 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.704079408 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.714183277 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.679758299 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.707429415 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.67816927 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.691866892 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.101688559 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.684374109 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.682306738 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.69291507 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.716698192 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.708055473 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.680362217 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.709457397 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.702925351 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.105361164 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.708744108 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.692177895 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.682184097 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.706026793 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.712288413 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.692848441 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.683907988 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.012722288 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.715263722 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.680912147 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.734723389 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.712433683 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.708645701 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.013002631 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.708154159 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.713620077 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.697210379 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.719475221 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.099499455 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.715673551 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.704181028 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.680940922 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.707161155 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.681614052 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.70622151 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.727958492 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.707386463 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.680497988 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.709731245 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.681690947 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.705646996 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.710739822 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.681500141 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.687206941 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.694832492 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.705878869 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.682488953 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.687339151 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.094893632 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.714676078 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.692460822 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.116898315 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.711790235 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.715692967 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.712999677 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.709684939 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.834952685 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.096456191 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.686644859 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.684557722 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.68447098 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.108518618 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.723280035 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.708751022 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.683109703 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.712822071 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.711839613 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.683492922 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.705873142 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.708476266 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.730194112 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.685529564 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.711666267 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.100983651 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.72042611 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.697933376 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.710393689 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.837845581 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.713158007 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.730720226 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.713140826 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.127065181 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.717546345 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.716568986 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.684847424 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.712962731 seconds)
  done (took 244.577069618 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.686242574 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.686325544 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.685446731 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.684724852 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.6854871 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.708472146 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.688818878 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.690434516 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.710429029 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.685233506 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.686384142 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.714526058 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.710734375 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.687923653 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.689248961 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.688101189 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.685174281 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.695386404 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.689731494 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.687512637 seconds)
  done (took 51.396681521 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.715465912 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.452358222 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.437095947 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.719842517 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.716246389 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.711217816 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.786849361 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.71930411 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.715280135 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.141126536 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.951540067 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.721592111 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.715444192 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.71470576 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.438957357 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.704970374 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.183564125 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.496894822 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.726038765 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.486779569 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.706082247 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.716775227 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.710271048 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.484863264 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.137586561 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.109862854 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.793833699 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.458060205 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.718245805 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.715322179 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.454576731 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.717811602 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.711842128 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.44322871 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.718783373 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.741932476 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.717445284 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.79150135 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.793790118 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.135495164 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.482273619 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.124613402 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.748393773 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.954743198 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.719991069 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.701136995 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.466636924 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.72257366 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.703424576 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.721509349 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.735149212 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.449339542 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.719358167 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.44961381 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.723287857 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.722847228 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.486963671 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.454764185 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.44590433 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.953477673 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.718131824 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.114316981 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.729344074 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.473625871 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.722573311 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.718012396 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.721247514 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.948392739 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.490839233 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.120441434 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.151950538 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.153307414 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.725017336 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.803057497 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.721197787 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.146703223 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.809548198 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.208418263 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.144611756 seconds)
  done (took 157.694384325 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.09730113 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.844175436 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.273563838 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.499605781 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.397564942 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.946243932 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.865552665 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.049888118 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.708270723 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.886807533 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.603186341 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.844232147 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.596766112 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.812396185 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.850902339 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.917511996 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.273692625 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.698096874 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.581353536 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.584377455 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.703514113 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.882306891 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.607353351 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.189416266 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.695138607 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.586229436 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.703429046 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.426398008 seconds)
  done (took 65.684811247 seconds)
done (took 650.734802327 seconds)
SAVING RESULT...
DONE!
