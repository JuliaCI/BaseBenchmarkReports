cset: moving following pidspec: 2725
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.275842451 seconds)
loading group "string"... done (took 0.569674733 seconds)
loading group "linalg"... done (took 8.134076795 seconds)
loading group "parallel"... done (took 0.173465572 seconds)
loading group "find"... done (took 1.23601914 seconds)
loading group "tuple"... done (took 1.950668606 seconds)
loading group "dates"... done (took 1.344023921 seconds)
loading group "micro"... done (took 0.221269015 seconds)
loading group "io"... done (took 0.951773491 seconds)
loading group "scalar"... done (took 41.104014765 seconds)
loading group "sparse"... done (took 12.859912708 seconds)
loading group "broadcast"... done (took 1.023722444 seconds)
loading group "union"... done (took 14.479644286 seconds)
loading group "simd"... done (took 5.206724298 seconds)
loading group "random"... done (took 9.527538948 seconds)
loading group "problem"... done (took 1.865436156 seconds)
loading group "array"... done (took 21.525107425 seconds)
loading group "misc"... done (took 1.787456238 seconds)
loading group "sort"... done (took 3.368623166 seconds)
loading group "collection"... done (took 18.214487549 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.558383804 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141862893 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151068158 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138060106 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.168321664 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.125818475 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140840405 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100020447 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.870345541 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.168194257 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.131863646 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.433975456 seconds)
done (took 5.533603695 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.188038043 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094092668 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096887528 seconds)
  done (took 1.251384579 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.08363825 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144154327 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.085543532 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.085041035 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.085608226 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.085417204 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.084956519 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.084984781 seconds)
  done (took 1.718518046 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.089737735 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.086793044 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083905038 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.086334113 seconds)
  done (took 1.409543255 seconds)
done (took 5.722269568 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.80662543 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.234857923 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203857773 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.435570655 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149290018 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.201322897 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.660923129 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342751339 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.207008565 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.093828183 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130111238 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.373899526 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.146816135 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.653118649 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.094418103 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110144999 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158877771 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.429771022 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086106565 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101489007 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.110208831 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146671584 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102251829 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092759847 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167961849 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.087839442 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.161037014 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10420284 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.086828687 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.241015748 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.193433196 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.678655353 seconds)
  done (took 10.894465454 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115273741 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114904826 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.085199995 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142611523 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.114654613 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086152485 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.093427634 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086130138 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.11230021 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.14895786 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.10795043 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121759393 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.085313798 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085929963 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100042057 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233072995 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.099580908 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100613066 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.0872565 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.097275254 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126935079 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094266677 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096554224 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095847047 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.145094741 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196615438 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112363415 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113504144 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.080832656 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097806601 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130993528 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142962656 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.082920525 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079811718 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141700104 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110798036 seconds)
  done (took 5.165687187 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.008396581 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.16443307 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106620192 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143809256 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082537802 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.128423369 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.087238736 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099710921 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.225194558 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.411940544 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.639001479 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.151907612 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129145096 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.121028596 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087136613 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088331632 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.086618438 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.557574971 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.119834154 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120493768 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099066473 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087693854 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08646846 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.081896497 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088708052 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080818785 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085402443 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.129704685 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091190536 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.313836431 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.13749897 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085537438 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.970199326 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.185503397 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085313415 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117233312 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.18228442 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105993343 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.155569239 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084518446 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082331302 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.320045472 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111722765 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083118825 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090596405 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082930474 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085744829 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10420262 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12388162 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135961099 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.081911263 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083838072 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185634052 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083962043 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.094855432 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.181058274 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168525487 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082583647 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082452063 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.108113282 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088241738 seconds)
    (61/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.314055879 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083815922 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.209909374 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138652524 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08552667 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084111019 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086130318 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085495437 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.42255803 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086264534 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.19496898 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086414923 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.093389549 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08919816 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08813671 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092326769 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092767728 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.109342762 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088189015 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.092982787 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085401351 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084055474 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084893039 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096049575 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.407149479 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083651351 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.089584389 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082115281 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110778499 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114971437 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083361195 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082238595 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116593528 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084706943 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08264016 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084499795 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095501638 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086892937 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129154154 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08281216 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.181653344 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.112452588 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115427316 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085725851 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115911103 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094676389 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084977371 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.479881098 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082092946 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091604572 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084777456 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087352994 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084943584 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100119622 seconds)
  done (took 24.101262276 seconds)
done (took 42.230358579 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272740829 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084797132 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08566973 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085661401 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085419495 seconds)
  done (took 1.767107693 seconds)
done (took 2.899320291 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.143560192 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117199537 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083203521 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119838922 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082717451 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.120930562 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119753488 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095537847 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119274261 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082804254 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116653724 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08291255 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082527375 seconds)
  done (took 2.516899693 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09758161 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097739248 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084594435 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096901012 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077652562 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096438046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095322916 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102653557 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095743273 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087014545 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077627402 seconds)
  done (took 2.134963203 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095939909 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097602346 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084076925 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097609134 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081953021 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098043435 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097637854 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102175838 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097651709 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089775683 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079714893 seconds)
  done (took 2.146068508 seconds)
done (took 7.916750574 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091508163 seconds)
  done (took 1.204987296 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.55273046 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.61702928 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.09371837 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116645487 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.206321579 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.124770249 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.256616787 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.098114776 seconds)
  done (took 8.35047602 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.121871718 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086931059 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089147244 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084806456 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087539607 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086241366 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085168287 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086218486 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083814945 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085460146 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086652799 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08442559 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08576557 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083261201 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08433319 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082453673 seconds)
  done (took 2.599494424 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111102826 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109793544 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.087729641 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088963103 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087030336 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.085942034 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088047165 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088480681 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08721921 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088619437 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091885044 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089629106 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087674417 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079778118 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09047789 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092329275 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087556605 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090883074 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091081491 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091871625 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091338163 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.079965974 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087957279 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089830861 seconds)
  done (took 3.388319263 seconds)
done (took 16.665907469 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.121530591 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084667625 seconds)
  done (took 1.322828559 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093682728 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.094930866 seconds)
  done (took 1.31634952 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.094153913 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.078877008 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.100395447 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.090580485 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079587646 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079505208 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.099139604 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079165789 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079506145 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079933967 seconds)
  done (took 1.989622121 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081483584 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088764223 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.083221499 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093936297 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.086981892 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079812928 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087585736 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083800275 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.092341065 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078491045 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086758513 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099006974 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086057643 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100641282 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087533629 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083908823 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085906289 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.082739054 seconds)
  done (took 2.69875926 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079120767 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080011478 seconds)
  done (took 1.292482021 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079860328 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076883819 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08189017 seconds)
    (4/7) benchmarking "year"...
    done (took 0.081784576 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078856275 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078513826 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079291647 seconds)
  done (took 1.685403679 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.420971924 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135300074 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340317679 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088842638 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.098348278 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.273010154 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082537798 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08817922 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088836365 seconds)
  done (took 2.789776366 seconds)
done (took 14.229378143 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096474756 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.103372065 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114024016 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.399816583 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109299347 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083441732 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132486027 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.199425737 seconds)
done (took 2.381818839 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.22751443 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.793215975 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.488353666 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.217266077 seconds)
  done (took 2.634935953 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343375403 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.103271548 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074841661 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083933882 seconds)
  done (took 1.752861845 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.0835986 seconds)
    (2/2) benchmarking "read"...
    done (took 0.084376049 seconds)
  done (took 1.310699263 seconds)
done (took 7.06725354 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081493892 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081344275 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080378327 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.108477157 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083037464 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.080715049 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080593647 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.196775685 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083284619 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082409534 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.0823788 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082514885 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082821903 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080312482 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080109829 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08231835 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079902194 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079793417 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082127654 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07983193 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079996244 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082295935 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079656343 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079772063 seconds)
  done (took 3.269934793 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.096875517 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.080845707 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.087048851 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08721956 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.085196877 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086297475 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087208441 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.083212383 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087063281 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084953194 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084638404 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08447836 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084195478 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085322998 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084519023 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084641182 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086792579 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082626848 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084820694 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.084746427 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086898032 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082795222 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.08472094 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08645251 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084666437 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084533934 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085072912 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082691317 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086743299 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084691874 seconds)
  done (took 3.713606156 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08492174 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076901328 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077769254 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086351669 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078760133 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079415507 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078813177 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079447882 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079472132 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078729324 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08083312 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078752235 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079127129 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080184617 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079757464 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083625087 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096515012 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079605838 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07885994 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079572676 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086569263 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.0789762 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079250644 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078946307 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.079863291 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079044593 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079839129 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079488927 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079721598 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078949421 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082991714 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083248709 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078352243 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087494151 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083947579 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079031562 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084048428 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078801272 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079708969 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078777761 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078509369 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07885777 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078898018 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088333503 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079298015 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.080287149 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079316864 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080351304 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079957674 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082018914 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079166084 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.07843622 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080267407 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079244918 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084082927 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079508859 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079991608 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078806579 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079712085 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079798041 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.078923489 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078711273 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082405081 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080685948 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097307705 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088671604 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079707761 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080855093 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080271874 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082603976 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.081061204 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095590093 seconds)
  done (took 6.997914321 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101448856 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101200916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080272484 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.080283947 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075510593 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07843699 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083790787 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078167674 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080636364 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.099738457 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080630377 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082735395 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082093753 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082919713 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078197114 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080956395 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086759929 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076114999 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078423808 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08233551 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077817636 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083921391 seconds)
  done (took 2.997461233 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.162711608 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0843389 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.119491307 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088858749 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084833087 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089507377 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085992467 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085623045 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085188266 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083237786 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084017049 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086624247 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086293631 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085240126 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083916865 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083969847 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086334906 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084466535 seconds)
  done (took 2.808371002 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091287886 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.080532913 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102578543 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.082042456 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081590322 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08326744 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08624682 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.088540664 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.0832024 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082255077 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090089177 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082720727 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082945416 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0809449 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083007088 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080732037 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.082665579 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080896869 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088278366 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093670223 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084642977 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088090308 seconds)
  done (took 3.03941817 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093960118 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082824853 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095676388 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082274241 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076590835 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078153003 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084169387 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080681551 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085434155 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084317148 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081886821 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07990176 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084178648 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082385775 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084844308 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082469633 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08433174 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082476532 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084509114 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077299148 seconds)
  done (took 2.829647441 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097881351 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081353205 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082887631 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089622737 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083121523 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08319765 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089914674 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08348457 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08363292 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10439285 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083719256 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083778933 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090482234 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090912044 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083460585 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089863334 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09010528 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089321178 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081271697 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081623482 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102879639 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081459677 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088181325 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081432424 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081937983 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081874103 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082673105 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085800501 seconds)
  done (took 3.591257397 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081255468 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080514016 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079165769 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.080221408 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080128118 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080756343 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080638118 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080798077 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083128829 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080684818 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082996257 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083408241 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083147755 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082526592 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082968011 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.08260949 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083187503 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.080804592 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080818224 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080879118 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08258648 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082499888 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083158339 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080154045 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080533571 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082690542 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080604992 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080493972 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082868531 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079986092 seconds)
  done (took 3.610455326 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087395486 seconds)
    (2/2) benchmarking "in"...
    done (took 0.084954875 seconds)
  done (took 1.337241093 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077388417 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094210091 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07744374 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08645363 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084067166 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081984768 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.087975237 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084548505 seconds)
  done (took 1.835959509 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099919821 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.089799907 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08107973 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.090274473 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08969184 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099693076 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.14292624 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.080385913 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090807081 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083293953 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098911534 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0840667 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092313744 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087803861 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092729972 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096077217 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079763566 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087004844 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083689309 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080819374 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082773194 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096096479 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092105824 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.077506432 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087705739 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109992381 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099003441 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081355374 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089174709 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094573624 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091914671 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076069738 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081602814 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.082160934 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079769023 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.091503703 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101510399 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089553429 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094945392 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082570249 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091163032 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.07646797 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091192961 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093234193 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098107626 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082228226 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082621368 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077165447 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08295332 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088820814 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.077083768 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086336483 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076808155 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094476222 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089962672 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097905196 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08105949 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088448829 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08862935 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089276143 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094552122 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088613476 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09197628 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081486151 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097781333 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091807434 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094388337 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077310993 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076212091 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079549057 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096008884 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110732742 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091939487 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.0817738 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082082273 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079711357 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089446573 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082392782 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091241331 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093618982 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081547679 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086348858 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094397422 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08664139 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088921645 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.088422259 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080135131 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084625374 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082764977 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102411834 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083601976 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079820325 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082899811 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.098057779 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08838756 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081335436 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083139369 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09405005 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076140226 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.081575583 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082664356 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087609534 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094511016 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085111046 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08548721 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094915228 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088155249 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086212537 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087608983 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.077665418 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081866179 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.082620149 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092134023 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.074539035 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08791572 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08454344 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.079221393 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089619571 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.077159704 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.077738267 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091195439 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.215394493 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080100022 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078239545 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088428855 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.080746818 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083460965 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094334243 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078970873 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075665621 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075874081 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087801879 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.079835683 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087778126 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084315917 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087605173 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074543058 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.078888127 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084646385 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09180415 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084114993 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086155017 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090530933 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.088960374 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081335521 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094192046 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089492906 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084736422 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092132382 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085591765 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077427493 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084450959 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088998887 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081173601 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089444495 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084541002 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088663065 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.080964951 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079202293 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086086327 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080186071 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082201026 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085202741 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079054405 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094859369 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08655058 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076348333 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077303646 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.087291116 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081514267 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.079575619 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082063885 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086507653 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.080386068 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.07846124 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.079694349 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087065482 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089212392 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08342627 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080515865 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089285093 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.099114952 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08138977 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088500723 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081281599 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082176806 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.082495298 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096576774 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092470097 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086234246 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089199785 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079922751 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091588055 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094103625 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084267556 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079965927 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08379483 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08402618 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091516437 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085266785 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.081464073 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078289266 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085032563 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082832688 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087771447 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08122835 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084055512 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087282043 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.079577469 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.086836524 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081216738 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093955524 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086970699 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.075439034 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082717909 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078458031 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093158216 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077063566 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082810855 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083974342 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.081781695 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080990284 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088083722 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076055049 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094114586 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094347285 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08736765 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083495016 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.080279995 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09287636 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086637604 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08898257 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087847359 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090312172 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096197931 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082812847 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090219945 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095883448 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.080613952 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.074622834 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08901149 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.078157572 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.077722037 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.078931764 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.077577665 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.213523984 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088561863 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090677808 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07515417 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088162746 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081097445 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085727949 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077977404 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092071572 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089520892 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086525613 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09539686 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082186674 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082635133 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090458748 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082007716 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083264952 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083094155 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089041229 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082142222 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088879366 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084131016 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087835517 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084206222 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080429225 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088798261 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082174517 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087501377 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091084925 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081888345 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088167227 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088895447 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.081862995 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088475784 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085456946 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084404651 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089485503 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088321178 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087249524 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088878128 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077493955 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094752424 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081399098 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094890018 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086998919 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078733342 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087828524 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08719694 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.086277436 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08080314 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.080324884 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085322513 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081125175 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088626015 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094484587 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083013595 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097679991 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093211701 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087199102 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089484005 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087446318 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088128462 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083875713 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086188972 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082833005 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087097682 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082033046 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090617517 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089139554 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087035056 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088612838 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082323255 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086362465 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.082866138 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076446778 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084150359 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084632028 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.081513514 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094917401 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.081399777 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08512311 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081082351 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082635937 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081060949 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078772909 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.087601824 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088251799 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.079926473 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090151127 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083697934 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087923695 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097078741 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076698096 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080321081 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079711378 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082971986 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094728026 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.081801033 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09586605 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087257045 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084964361 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079225901 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.082289427 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080148144 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076349917 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079420447 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090297815 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083796318 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081061433 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.080972931 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088710458 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081603136 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093767946 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.080298211 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084911703 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.080693314 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078352133 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083005667 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083458606 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087561548 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.080771427 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081940785 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078021356 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.080099587 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08445901 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086700737 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.080003971 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.218189486 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093710624 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082327033 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089289666 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083550301 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076138563 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08861087 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082550626 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.081548226 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083577017 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091926699 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090024922 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08281353 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09626977 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081447626 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088321167 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081925929 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080229452 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081546652 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081929928 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.081420046 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084461445 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.082498083 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095097492 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079499457 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088337405 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08748915 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085876022 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092788663 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08247024 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088265822 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08763636 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083856637 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088985751 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095573721 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085614803 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089402921 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082594561 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087807567 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092728805 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084102307 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093959696 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087134208 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08245401 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088633428 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083065706 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082050145 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081810206 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081205665 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092658077 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.082274675 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084335549 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08457218 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080775795 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08649903 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084595648 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09400259 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088941309 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089358466 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077267925 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079720107 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08278791 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083574153 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087703329 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088915878 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092247318 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089079205 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085235611 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081054157 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096857574 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092250903 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090018609 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083050457 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089763061 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08321329 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088798691 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085933339 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086663739 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082836739 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089325896 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086874891 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08344563 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091158519 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089806772 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082793005 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087302743 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087833676 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087128953 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077336112 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.081881244 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088302735 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090743043 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088528409 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08214278 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09758791 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082846653 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086782593 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084519787 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081096074 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090624006 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076895934 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087991418 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082751466 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082440426 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076960369 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084422849 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083359193 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088451426 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083858574 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077161221 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097634321 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096165647 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086699748 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079471743 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079070602 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076019317 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076042928 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083580332 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081416369 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087315958 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095952431 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083155211 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082805613 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.076218492 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080502725 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087713106 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.088498718 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.078318963 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.209120798 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084018579 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086872386 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093779472 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082443723 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082707063 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090163216 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089812598 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080496442 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085102479 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079410966 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090462686 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099401007 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.082504185 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087247029 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090283002 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092866211 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.080220688 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07590948 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.080092958 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086031162 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08584724 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.081131483 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.081325597 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09948455 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087311146 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082674451 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.080079615 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091358895 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084755998 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096196073 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082274753 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.080582651 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089055208 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086502193 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087779593 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09023518 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093663977 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088415287 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08776035 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.080560396 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087335369 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080897736 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084426162 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.082628217 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.082889001 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087406251 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.089107358 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084708457 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099926993 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.0964935 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084345822 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.078961455 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084548938 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083982417 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077747634 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.083296478 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079936452 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080878758 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080129546 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081394314 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088435555 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091271918 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086391052 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.082427503 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.081995848 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07687525 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.092462017 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089081074 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088155807 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080391803 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.081647894 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08040192 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088792765 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083994161 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.079378183 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086394416 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085621875 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087782812 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077470671 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093400999 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080604127 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087799778 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084430209 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082204823 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.082402994 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090236238 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085851027 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083652566 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088678166 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.088990485 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083345327 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.079744303 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079511903 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091658735 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080153007 seconds)
  done (took 52.824471644 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114464285 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076907545 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07733634 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077664852 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088018414 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079366905 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078128109 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07906735 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079161925 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080658504 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078610655 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077787548 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086057887 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09329772 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088584877 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082255173 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077770403 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078710599 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078147734 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078811653 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08607465 seconds)
  done (took 3.002602989 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.085994614 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091865576 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088146824 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098381838 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087111509 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085350866 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09064788 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085655928 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094393116 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08860342 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094667886 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085808211 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088069363 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.088739399 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088783258 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086602223 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094255595 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08715017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.086010292 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091432455 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08605802 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090694932 seconds)
  done (took 3.203264647 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.080154542 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.079573479 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086188517 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.077466815 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.081282831 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.076825052 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.084507662 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.079389815 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.084952394 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.084111099 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083473176 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.083281131 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087922086 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.077048858 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.084233342 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080127741 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.124898983 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.084788264 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081316959 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.082154202 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077230873 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089149302 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.077727878 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.077389068 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083457354 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.0840427 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.082046139 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.079849849 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.081725732 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083028774 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081784577 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079578253 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088022016 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087505491 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083252897 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.083678539 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083302167 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.081030932 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.076952301 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.080088758 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08754117 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.077752656 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.081645048 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088735856 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079951645 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.079340928 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08817162 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.081885954 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.07689456 seconds)
  done (took 5.307846527 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.090901856 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.126524866 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08143567 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107471304 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.093111478 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.085666149 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.084741531 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108559566 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.077714367 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.077859665 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.094581724 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.091660926 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.079618332 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08543321 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.086318159 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.080985635 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.081935759 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080422716 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.084025871 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.080888245 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.084434594 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.087942684 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.094858352 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.093697218 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.08510602 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080463063 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081068467 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.085207394 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.092442348 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.08523085 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.085559539 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.085879305 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.095789622 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.086400821 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.080577825 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08296575 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.097314352 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.081337583 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.083309489 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.079104424 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.083511918 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.085210083 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.088354121 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.097259658 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.080989646 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.086587672 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.080656688 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.079129595 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.093397505 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08230919 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.086601242 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.091640057 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.082546751 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.079432172 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.083709103 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.093019268 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.079816339 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.07794279 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.081754591 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.090728503 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.077876165 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.082632318 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.091293026 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.081153437 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.085337794 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.091800097 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.085703915 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.083799255 seconds)
  done (took 7.274431264 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.089491222 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110413222 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096811431 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098922478 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092281555 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.092272956 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092326664 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09205031 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09281148 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09596565 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091963606 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133148616 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087520977 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093924488 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09218727 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09227094 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092352494 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091745852 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092133654 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092503242 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.091681671 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.098679375 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092055721 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.098567783 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095256272 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087951326 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092267312 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092489639 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098786808 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091692123 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094997303 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091778354 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092102668 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098504428 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.09496558 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091675359 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081293803 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091308081 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091986392 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091935228 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087419948 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099310602 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091556549 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087225459 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092013362 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092377949 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09927837 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.095483502 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094205033 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096065033 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.090625138 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09662086 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089551079 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105137573 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095213414 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.098137301 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095669266 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095502367 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089529846 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095869298 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095787286 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.098914327 seconds)
  done (took 7.123445092 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094095143 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086202156 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097912259 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074918196 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07775456 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085439492 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07802228 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.078135486 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08673335 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.086250644 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08870233 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086309555 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088284623 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088510282 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085579853 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088472371 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085449131 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085624866 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086298157 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085607547 seconds)
  done (took 3.001116206 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.089341099 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.096823549 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082038222 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087631532 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085289393 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087130076 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084601518 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085660308 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083556742 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085445964 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091910623 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09137099 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083323751 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08779381 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091266671 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087864075 seconds)
  done (took 2.670943347 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096144616 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.086228145 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.091936593 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.079699211 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.081900934 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.077916293 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.080820184 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.076815707 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077908179 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.095081599 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08095895 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.092606344 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.081380213 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.080040847 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.07845929 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087312721 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.078078081 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.078853025 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08131049 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.092556412 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.085791088 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.080004711 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085287591 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081607471 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.084749037 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.086459773 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.08034922 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.082503858 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.078764392 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.081860349 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084805367 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.085700907 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.078524806 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.079246112 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.080842795 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.096273145 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.080910169 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.081784271 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.087168753 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.081663417 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.079572778 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.084086972 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.080794109 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.082431854 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.07747113 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.081475262 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077559089 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.084438881 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.078752126 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084514467 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.080893719 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.082844607 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.080994421 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.087966575 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.083046552 seconds)
  done (took 5.838756367 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094719568 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.084289234 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076865653 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079283353 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084699517 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.083596709 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085096473 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08344795 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083777684 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080068143 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083438674 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.085651765 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083365716 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085473259 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083899129 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085391126 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076966838 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.082740969 seconds)
  done (took 2.788408916 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086011225 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08083254 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.088256886 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080241176 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.080571913 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084413564 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077895714 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.07994243 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080073575 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082206919 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082759597 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08470877 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079779566 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.084754342 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082343915 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082422373 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.084393208 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080149733 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082126368 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077203401 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085100155 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080642409 seconds)
  done (took 3.082884862 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.109645935 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.101366977 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.158188752 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.097512152 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.104686582 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.090274392 seconds)
  done (took 1.939884163 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105541416 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117429199 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082890117 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084965754 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091318421 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086461146 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085834973 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086310544 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093217486 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091350446 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088752773 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093724663 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093264114 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093067605 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091027889 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091088248 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086491576 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086134095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082630036 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098292224 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086438666 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093467445 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086132992 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085986055 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086428225 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093019891 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093479315 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091209752 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086321918 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093183607 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091079924 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086222553 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093578881 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090847354 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085434201 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094228959 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08601895 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098772479 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091630003 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092680222 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084026446 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088943305 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091338524 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087764102 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091892422 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084072692 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088463161 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084128555 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084500339 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097852476 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089208208 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09073722 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089423633 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091666606 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091459603 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098252525 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089300725 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090453668 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089652043 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089675608 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090724962 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089124804 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091509406 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089771322 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089469457 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092320073 seconds)
  done (took 7.252828196 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118626555 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080940431 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084067987 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088460174 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090644715 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085132891 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085995281 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084816216 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085711783 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083084767 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122007686 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084862897 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091585644 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092264905 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087541961 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086805723 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08705137 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093551608 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082457736 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1003222 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085713921 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091484971 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091493227 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091164146 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090102692 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090971211 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086713899 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086269771 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086984304 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086020983 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090948724 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086628993 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093066786 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083562799 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092967085 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086294701 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086712523 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090385098 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086392741 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091053021 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093861336 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099240002 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086576453 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085804543 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091147763 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086444604 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086155716 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083321042 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086133392 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082914349 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091225597 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091006313 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090798237 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092619096 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086299654 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085901448 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086529885 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086388115 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086300491 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091431628 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093137337 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086507429 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102090937 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086304963 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0865195 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09265838 seconds)
  done (took 7.211116197 seconds)
done (took 149.696283988 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208306247 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18245602 seconds)
  done (took 1.65744565 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.090001305 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.118088849 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098307598 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151775862 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087357552 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122157944 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120745311 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098324517 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087646114 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086855619 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.087786754 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090435168 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153956928 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.088014736 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087431328 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090512551 seconds)
  done (took 2.945394411 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.120687103 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.180627624 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125224562 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.085157172 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.120245102 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.094431283 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088482035 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.108073411 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092712704 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087473389 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093798282 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092966017 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.089929468 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094585715 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095449161 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096101986 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.089907371 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096080843 seconds)
  done (took 3.139589388 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119375377 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.114575527 seconds)
  done (took 1.527628957 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.172654062 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.149553248 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.218696655 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.363000344 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.17283162 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.15923478 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.158733994 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.157241238 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.130246201 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.151891575 seconds)
  done (took 3.121198899 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119165801 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170324714 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310367819 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13855888 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.095072571 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114021705 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141864314 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100747097 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.103156401 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10278232 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103214701 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097913145 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.122061377 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095186736 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09166205 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097452836 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125537905 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.090428426 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.092063723 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097241376 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.124949739 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088496717 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095243486 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.090486096 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.099757411 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099554411 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.090145136 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088000068 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097083991 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091313797 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097959644 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112504996 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099888105 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.12639539 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.09254659 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.12755441 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097720481 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095607091 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.091478556 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09558629 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099769809 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099032728 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.097436448 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097197876 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089418686 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097317812 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090380263 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088232969 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098991896 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.089659466 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099253302 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.098381378 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.124356861 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.087548126 seconds)
  done (took 7.081405694 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.123686145 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.122937221 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086948004 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.128439545 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119426168 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086410361 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.121860675 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116618521 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.12750999 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089441618 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.08742643 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.089570445 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09900349 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.101169622 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.132380376 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.123686569 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089007126 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.086322594 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126219542 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.127320977 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088448767 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120696191 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116833315 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.126761897 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.086101223 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087937741 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.08696754 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.088603167 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.094142144 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.096602991 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087495215 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.097621819 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.106139662 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.094002881 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086377541 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086956208 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087162863 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.096875606 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097468578 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.094376977 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.092863208 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084169997 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085101248 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.086174348 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08630904 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08460964 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.093369594 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.094633181 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.092916255 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085615511 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.086401755 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.084813011 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.085388255 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.094425431 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.091927492 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.094673636 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.094512398 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085205987 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084745668 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.089368674 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.098626345 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097817823 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094675386 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088067341 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.094361137 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085202391 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095744634 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098298881 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085126541 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.086275944 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.087174073 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.086824144 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.088333154 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.095233048 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.095305259 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.088528109 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.087110351 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086918355 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.097440861 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.095378567 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08742559 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.094487194 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08639371 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087137521 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.088845708 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08849773 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.094807335 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.096575418 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.088833935 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.087245 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.086716995 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.086940558 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.085864876 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.093959396 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.095459492 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.095780448 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.094773812 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086855173 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.094292059 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.092778928 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.08686417 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.092069542 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.082914664 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084671988 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084637587 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.090660488 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.089558686 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091899246 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083034784 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.214856226 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.093859939 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09625095 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.087163023 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.093054686 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097577601 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.097233731 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087707075 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.099245431 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.089274673 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.097175895 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085903444 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095048815 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085395993 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09639699 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088047686 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086986961 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.087539941 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.096550532 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.089260728 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.087648524 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.088705012 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.087364034 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.096786352 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.100423278 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.089757655 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.096062464 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.0967562 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.08881843 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.095622758 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.087504501 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.097740417 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.087361712 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088067062 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085946517 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.099885459 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087766897 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.087366746 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.087961756 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.097889192 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085250709 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098415125 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.095577515 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087013212 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.102153327 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095708409 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09337556 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.096077156 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08681837 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.086675646 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08761852 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087591993 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.095045286 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.097300972 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088989937 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087119671 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.094849027 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.09793021 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.086405279 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.0955298 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095491975 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.09584985 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.08782541 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.087429781 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.098855227 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.09593505 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.093585132 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.093186313 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.093680959 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085415579 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092732885 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.093576365 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084934445 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101163905 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087917921 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.100600245 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.096603362 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.094619509 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.096865145 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.097983926 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.097621257 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.098340234 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099242157 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086780746 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.087391124 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.09629591 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086966635 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.087855618 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.095281951 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.089129657 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.088760017 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.10052098 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085291987 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.095454791 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087014277 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.096292545 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.086472937 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088101798 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101022832 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087275351 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090808331 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.094661599 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.086462274 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.093116446 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.09710598 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.092397768 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.086258812 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087031514 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.094278724 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.094627087 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086007756 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.220851475 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088038011 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.09432053 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.092993776 seconds)
  done (took 22.502904546 seconds)
done (took 43.279928429 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.218220484 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168178852 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180051133 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.132410793 seconds)
  done (took 2.092785633 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123654491 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.114506082 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.103346196 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.083256483 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.112866514 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084831705 seconds)
  done (took 1.951239957 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.292359368 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209033734 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192221221 seconds)
  done (took 2.019641548 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.226372251 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213164811 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.488379527 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.30501151 seconds)
  done (took 2.657678839 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.156952075 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.099172201 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.081557499 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.099704342 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.144204386 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.169469976 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.11062589 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.135725322 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.093996086 seconds)
  done (took 2.473354425 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.160741414 seconds)
done (took 12.687315862 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.11993928 seconds)
    (2/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.226970512 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087474122 seconds)
    (4/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.213766224 seconds)
    (5/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.283643745 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.082808089 seconds)
    (7/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135980187 seconds)
    (8/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108903819 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.195198797 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.156008181 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093895249 seconds)
    (12/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093739467 seconds)
    (13/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.148449603 seconds)
    (14/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097231314 seconds)
    (15/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093968216 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.091642255 seconds)
    (17/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.098908926 seconds)
    (18/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.136484518 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092847719 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.165325599 seconds)
    (21/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.106929236 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.136507319 seconds)
    (23/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089195244 seconds)
    (24/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.085659239 seconds)
    (25/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.124399827 seconds)
    (26/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.18245288 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.092139534 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.34601021 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.086593266 seconds)
    (30/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.193918104 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112988923 seconds)
    (32/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.246088754 seconds)
    (33/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.098911063 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102063878 seconds)
    (35/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.101770553 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.112136147 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120785042 seconds)
    (38/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090797289 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.091159242 seconds)
    (40/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.233859974 seconds)
    (41/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.099227158 seconds)
    (42/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.092211466 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191744801 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.081233131 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.101180978 seconds)
    (46/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.205869448 seconds)
    (47/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089687979 seconds)
    (48/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.18570175 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.107457099 seconds)
    (50/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.08967541 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.161455804 seconds)
    (52/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.133856525 seconds)
    (53/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.199561196 seconds)
    (54/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.131942394 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103156132 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.082535616 seconds)
    (57/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.2379908 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.100041764 seconds)
    (59/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.202368273 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.085671283 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.09907123 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086670328 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.088596552 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.105030994 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.187795118 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.114268121 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.10424542 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087914825 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.079623279 seconds)
    (70/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.078785385 seconds)
    (71/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.080743585 seconds)
    (72/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.137470014 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.089500065 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.233930859 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.209303941 seconds)
    (76/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065527446 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.090566559 seconds)
    (78/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199576286 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.10840985 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.193305044 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.108355849 seconds)
    (82/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.184377012 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.105199737 seconds)
    (84/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091437231 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.09283164 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.097353809 seconds)
    (87/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086276273 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.081244019 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.17414045 seconds)
    (90/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.165091171 seconds)
    (91/309) benchmarking ("sort", Float64, false)...
    done (took 0.148134764 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081728259 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.321247101 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085716619 seconds)
    (95/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108991398 seconds)
    (96/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.086098388 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.087443133 seconds)
    (98/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.207373516 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.138559839 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.17408221 seconds)
    (101/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.138064778 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199654488 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.093919827 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090434226 seconds)
    (105/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.096943082 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.089258531 seconds)
    (107/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.094527852 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.093548353 seconds)
    (109/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.194602837 seconds)
    (110/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.17338918 seconds)
    (111/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.088758076 seconds)
    (112/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.195370933 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.082901876 seconds)
    (114/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.123414703 seconds)
    (115/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065357869 seconds)
    (116/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.150541783 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.113031598 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.108568038 seconds)
    (119/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067590256 seconds)
    (120/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.202364314 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.100337327 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111330866 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092974373 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169694063 seconds)
    (125/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.095446365 seconds)
    (126/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068182347 seconds)
    (127/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.085560906 seconds)
    (128/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.135674391 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090874159 seconds)
    (130/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.095678931 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097104263 seconds)
    (132/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090492717 seconds)
    (133/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067773843 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086908834 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142521766 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094679763 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.15988913 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.218811914 seconds)
    (139/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093221521 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112553202 seconds)
    (141/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067418102 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.13232844 seconds)
    (143/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.119709934 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094254328 seconds)
    (145/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084460886 seconds)
    (146/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.091349986 seconds)
    (147/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.083585719 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06741548 seconds)
    (149/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.193109677 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068388934 seconds)
    (151/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.10037934 seconds)
    (152/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.088660096 seconds)
    (153/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.084969876 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.189799875 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092614043 seconds)
    (156/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.142144022 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091036517 seconds)
    (158/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.181175053 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.108901012 seconds)
    (160/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.089013328 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.19100007 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198904332 seconds)
    (163/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.080817728 seconds)
    (164/309) benchmarking ("sort", Float32, false)...
    done (took 0.151430689 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.084434922 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.200395198 seconds)
    (167/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.090520315 seconds)
    (168/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066583327 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066184127 seconds)
    (170/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080536246 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.113335604 seconds)
    (172/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.104120033 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079491814 seconds)
    (174/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.081101082 seconds)
    (175/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.136220918 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.218502997 seconds)
    (177/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079397693 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065598501 seconds)
    (179/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066776967 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.129892412 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.165870834 seconds)
    (182/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077648356 seconds)
    (183/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067955205 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.170756367 seconds)
    (185/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067101189 seconds)
    (186/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094826069 seconds)
    (187/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066241508 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.091448497 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066285716 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066198893 seconds)
    (191/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.085975011 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066790829 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066544128 seconds)
    (194/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.17218117 seconds)
    (195/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.128883625 seconds)
    (196/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064497168 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.137768357 seconds)
    (198/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078250721 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.08198772 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.107956899 seconds)
    (201/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.089171488 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.082238735 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.093256104 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06560337 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065622531 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067315211 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.226107232 seconds)
    (208/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.07924356 seconds)
    (209/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067913998 seconds)
    (210/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095814472 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.143353101 seconds)
    (212/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067758859 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.090273371 seconds)
    (214/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.230929521 seconds)
    (215/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.082738008 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091129114 seconds)
    (217/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068008175 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093464659 seconds)
    (219/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.090034406 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.10811885 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.090483749 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.092673016 seconds)
    (223/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092943205 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.097186939 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162334921 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069909042 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112597611 seconds)
    (228/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.081821645 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067570112 seconds)
    (230/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.09211897 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.089504213 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.081483633 seconds)
    (233/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.087709858 seconds)
    (234/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.085162358 seconds)
    (235/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.081891704 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.084996463 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.110262066 seconds)
    (238/309) benchmarking ("sort", Int8, false)...
    done (took 0.16767805 seconds)
    (239/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067357494 seconds)
    (240/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067597502 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.105398032 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.152030274 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.095309224 seconds)
    (244/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.079166212 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087537854 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.082186521 seconds)
    (247/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079038212 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065395477 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.201994628 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.079429719 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.083753456 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068889084 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.128147096 seconds)
    (254/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.068626736 seconds)
    (255/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.087960985 seconds)
    (256/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.18006311 seconds)
    (257/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06731423 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08515164 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085455423 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090199012 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067860088 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.084938747 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.086016054 seconds)
    (264/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.197782954 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.106348643 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067289267 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067493202 seconds)
    (268/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068550121 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.090786485 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068393055 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.088892464 seconds)
    (272/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067968921 seconds)
    (273/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067514857 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.145730916 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.109376296 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067280624 seconds)
    (277/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096892406 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.084712966 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068297348 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068004771 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06812068 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145622156 seconds)
    (283/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.082560707 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.084390687 seconds)
    (285/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.084461238 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.090175082 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067611188 seconds)
    (288/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068016819 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.091601004 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.084715515 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.08567077 seconds)
    (292/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067441307 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.084124442 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.156527141 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.081082999 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.084223417 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067054118 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.167729491 seconds)
    (299/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08934591 seconds)
    (300/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067356635 seconds)
    (301/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212679476 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.085222628 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08411422 seconds)
    (304/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.084839149 seconds)
    (305/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067977257 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.145594279 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089021951 seconds)
    (308/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.079190476 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066663411 seconds)
  done (took 36.428889472 seconds)
done (took 37.766128787 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103587204 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111510302 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094747625 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.112284999 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.103226272 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095763972 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092408705 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099719315 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.100050877 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.101538235 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099861831 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072526725 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095608846 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.095439891 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.093834665 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111704481 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.099520343 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093759783 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.093983152 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.082517777 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.094126277 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085375771 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.084806289 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071371731 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095528347 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.090008052 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094573586 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.094150654 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085147848 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.085070048 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.087131223 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.093418226 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08493795 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097187432 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092099907 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.092987093 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.094923239 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093248375 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.084443854 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085139266 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.094443023 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08451193 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093021123 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.091323183 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09023918 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.081767776 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.092757572 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.096888424 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110794859 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094413411 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095301892 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.096119827 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096915624 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.090536406 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.087719654 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.093281088 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.082288511 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110799915 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.09374694 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094545087 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.094790752 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091554696 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.081897454 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09342742 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.093416819 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.096053355 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095063115 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.081860171 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09551837 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.089606095 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.084477134 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.092562309 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.08664546 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087569047 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096010279 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098096724 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081500632 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.089450401 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092726442 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093276893 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.082171516 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093049925 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.083956037 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.088843113 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093513337 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071098668 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.086931736 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.091697861 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.081968601 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.093170217 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09172135 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092019573 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.084464603 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094663278 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.082136857 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.082117508 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.084578164 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.084602152 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083899545 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.086872768 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.084909888 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093912735 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.093768403 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.083947871 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.089553323 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098189173 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.084494413 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.091882244 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.081411564 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.082066549 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.098089797 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.094667408 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.084399963 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093989165 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090134462 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.083838003 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.081468001 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.08422663 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.083602896 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.083466434 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.088310081 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.083513098 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093486334 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.083786108 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.096443096 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.083329731 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.085580835 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093104674 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.08340656 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.087558142 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.083398646 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08354744 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091332882 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077612236 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093345001 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.084080293 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.082962554 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093036482 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.091042644 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.082919345 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.092085828 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.087443341 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.087977649 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.080946372 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.080354524 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074826942 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092550103 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092090947 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08226184 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.082512736 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.082065508 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082329328 seconds)
done (took 15.139466555 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.091329034 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.150999721 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.114142833 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.112030485 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106564218 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.084588461 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.093157129 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.114745926 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.08521617 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.113720584 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.106720519 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.101783821 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.125392463 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.080430911 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.083201549 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.084862884 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.082427638 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087279627 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.11804588 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.105448614 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12933508 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.082614776 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.108664148 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.104206382 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.101789492 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.117829077 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.087717257 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.08741906 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085549699 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.110431684 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108008324 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.084139767 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083494283 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.111965254 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.107112711 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.098701112 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08592824 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09950786 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088810525 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.08793269 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.10311914 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.114057138 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09928886 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.099980798 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.087246775 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.09023105 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.085590811 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.098234123 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104628183 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.092184046 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097080885 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.112156509 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.083631895 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.093201147 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.080387947 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.099418721 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.094228986 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090208944 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.088771322 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089447006 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.08798197 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.085417325 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.086542902 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.095857976 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.088008129 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.098558788 seconds)
  done (took 7.85269291 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.098942883 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.113490489 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.09871014 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.098409079 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.083422343 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.085620331 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.085808991 seconds)
  done (took 2.105408937 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083455908 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104802115 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108009549 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108259881 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.097571385 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108918882 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093651927 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085529771 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.110088029 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084644036 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.104160536 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115634049 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.086966646 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097554608 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109034897 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.085720942 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.108924525 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.085835724 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.086518015 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108988177 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088378421 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.110689895 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.097529897 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.086343239 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096951847 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.085772077 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131323309 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094017365 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084377639 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.087569501 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084070432 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.126357249 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09681895 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.099059735 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084401571 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099412996 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.097364451 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086496331 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.094928806 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095493464 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.097400957 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.086816225 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.084757284 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.084602763 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.088240488 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.095870693 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.08511525 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.087584672 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.087057084 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103944602 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.084377641 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.096645646 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.0877225 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.087693022 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089692037 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.086365517 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091474198 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.082432436 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.10225542 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084608315 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.101770287 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.101051647 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.097371005 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.100992041 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08584404 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.097244351 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.097420931 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.087126445 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087951253 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.087672169 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.101129683 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086429844 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.088739562 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.095350909 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.085892223 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.108799716 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.108331352 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085632955 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099591055 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.087231493 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.08445017 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085809789 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.108466814 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089489438 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084566889 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.089492704 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08816517 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086629376 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.084904466 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.089650987 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.084342746 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.089315902 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.085258145 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.087149035 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088332888 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099328167 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.085524655 seconds)
  done (took 10.52283744 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.08853547 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087204911 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.086267062 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.084109654 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.086912338 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087628938 seconds)
  done (took 1.988661608 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.108056684 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.084070268 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.088723694 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.087105716 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112696602 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.100367445 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.102168861 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09617433 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.094623371 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.090349382 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.101610607 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10159191 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.105272793 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.089302972 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.100430217 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.086530379 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.100833065 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.089164832 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.087181742 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089833947 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.099500086 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.089193893 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089194987 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.102004144 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.089547903 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.086173374 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.089757241 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.087604749 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.086883074 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.094210125 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.08924546 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.090068541 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.091309676 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.093564442 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.100196076 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.091426962 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089006713 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.091101456 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.088813189 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.090202056 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.100873563 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089632363 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.08960233 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.090467534 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.093638725 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.090864763 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.091295834 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093163409 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.100613908 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.091530809 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.090860701 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.086130421 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.089569526 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.091316622 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.091453111 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093821542 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.090617646 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.10034403 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.089114219 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.092344583 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.085346744 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.090554691 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.093523183 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.090271167 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.091415451 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.091474921 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.091654718 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.088811085 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089452333 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.086384004 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.090706915 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.084171712 seconds)
  done (took 8.099220773 seconds)
done (took 32.035014422 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.531685113 seconds)
  done (took 1.949595507 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.630881079 seconds)
  done (took 2.07776997 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.403248915 seconds)
  done (took 7.846486049 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.384741471 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.459645171 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.755603856 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150197753 seconds)
  done (took 3.228925833 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.740132226 seconds)
  done (took 2.192583543 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248962813 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23983154 seconds)
  done (took 1.950400313 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.373766317 seconds)
  done (took 1.815148481 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.089645757 seconds)
  done (took 2.533848314 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.246797818 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177332382 seconds)
  done (took 1.874148781 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.465854496 seconds)
  done (took 1.912239269 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.241680083 seconds)
  done (took 5.690852396 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233941988 seconds)
  done (took 1.715576 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.261149585 seconds)
  done (took 1.710908438 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.761636216 seconds)
  done (took 3.214524354 seconds)
done (took 41.16900946 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09876044 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.100067152 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.099544144 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.097660692 seconds)
  done (took 1.830281321 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.090898723 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.086440517 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.090793126 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.08638621 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.090741041 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.08704698 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.088469173 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.089918981 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.088499647 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.089936452 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.089748412 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.089110986 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.093223055 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.091156219 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.088437595 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.093106039 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.093936402 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.089666346 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.092280859 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.089611455 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.087530438 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.092672814 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.092882123 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.0873173 seconds)
  done (took 3.613603376 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.094209936 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089183113 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09145743 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088113977 seconds)
  done (took 1.822733823 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.09275126 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.103810065 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.101821997 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.092471425 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.104022421 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099762799 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.085349486 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086283272 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.087361943 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.09512153 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.084470758 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.111011779 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.103574249 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.093684722 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.094768377 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.07932173 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.081098568 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.100570818 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.092930937 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.093474828 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.08474475 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.092917079 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.083080785 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.10618538 seconds)
  done (took 3.705418634 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094433961 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.114964488 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.093727439 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.104147067 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.106420685 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.082475172 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.096505751 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.109676727 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.147676397 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.082270939 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088325717 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.082838911 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.091054296 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.085273721 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.096542319 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111391354 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113780399 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.085843083 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.114582428 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.082664946 seconds)
  done (took 3.451321542 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.088534039 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.086304135 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086705727 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.082111147 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.092489538 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.088984449 seconds)
  done (took 1.991359502 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.085093187 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.083675387 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.085132128 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085652905 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.091594132 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.086302149 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.085070579 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.086651886 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.0865032 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.085840478 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085704984 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.084849138 seconds)
  done (took 2.490885368 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.197728984 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.084620205 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.084953751 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.082286986 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.086469436 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.085068917 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.10026148 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.086249681 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.112875555 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.085412848 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.085608869 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.08806364 seconds)
  done (took 2.641930995 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213009584 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089871302 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24956819 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164420612 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12295685 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127848423 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127704366 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131830487 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.149296772 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111664818 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172855172 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177079234 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119824819 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149449816 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103731149 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.113519078 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162830589 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177722362 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117989723 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174015428 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155190225 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138414115 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157370386 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115488105 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117170909 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12916677 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.085496333 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094357938 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184265674 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146274751 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155198296 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123298803 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103082768 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203744957 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174684358 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152030391 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15961234 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098094095 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.114718386 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.144903527 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209756347 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101898181 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169505423 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120258292 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09250459 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13974911 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134010103 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.279982355 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.116878402 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104730495 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154519932 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192827956 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143563984 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099756782 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135508648 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125064989 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122932787 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131355106 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190759933 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168167417 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13902557 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.085634047 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12285695 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159000132 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154424722 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.117952081 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.133178153 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104015585 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142550271 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164362387 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132455052 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150817552 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126117957 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102671953 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14066441 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147400549 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138042736 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181917483 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135755955 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.087112767 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132994016 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111617463 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093818674 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.157036559 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092477691 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18827875 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118510678 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.118014956 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141634531 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127415173 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121922018 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167239254 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151251356 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115987444 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.079396975 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116287823 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128411799 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150494999 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099627087 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12502895 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123153438 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.088935992 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289244391 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.090087892 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136273761 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090388043 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142531667 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141332742 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.09243464 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134728944 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118561754 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.121307396 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143351631 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168509947 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102134744 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094503992 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173324197 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133443992 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.113502002 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152384329 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162820236 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120215142 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110848376 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155639135 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177197857 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104059209 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170917514 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116847121 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097552476 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.099679228 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135228401 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123228495 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.131739885 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094821163 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.130763332 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173241383 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.088400876 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109080856 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145691877 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09232395 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094254235 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116925136 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116231127 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.109214063 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110996996 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.114213785 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146296814 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137942059 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11819411 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135493316 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111743553 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174838911 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101638226 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.114429403 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115939583 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.083505529 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139605299 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160560766 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091449102 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165098834 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.288847286 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129916218 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140869388 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097276654 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146638135 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093290991 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.085126959 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149759528 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13175199 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121705794 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156359411 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127074103 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.134377078 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.127719633 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140945483 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140313334 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138438538 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118174546 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107311596 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132472996 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137121318 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.087624265 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.102755423 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.093955404 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118316724 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108525842 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09800867 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152558342 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135998785 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122655788 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132589521 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110188543 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157768392 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.090365656 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137729595 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.139488775 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10878014 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.158611421 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16020096 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143278771 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113259845 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146537371 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.084475129 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088873554 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.099083651 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142161687 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09693657 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097145752 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125527077 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156568241 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14741767 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144800723 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135017361 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129297676 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162544577 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.08406581 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.129580816 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149607373 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130038319 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.262925976 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104278679 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.112191073 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151675992 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116796608 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1913072 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133919235 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145446108 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17398523 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.114538148 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093336246 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121996987 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141716211 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115362371 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151567358 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116798594 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1025857 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12739213 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.089511109 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106326004 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137083006 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129228438 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15573393 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123637105 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143406703 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091742205 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126198761 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134617889 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132668863 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.077591908 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138010559 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173264078 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108505324 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138142333 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158764913 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093249978 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.150821055 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179547377 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16388083 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097907126 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119081587 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132036448 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135067181 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138572285 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146588718 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118397323 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159121451 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122131622 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.103283804 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099417057 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10972081 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11554416 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104350138 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.112129916 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121955574 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.10778372 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289276755 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116703244 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123247226 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138440583 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.112527086 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.105872043 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110304421 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183349429 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130057734 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185165575 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.113690595 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147745019 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168604334 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089056025 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092617675 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.091438268 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147196902 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097887751 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14102294 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124490415 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128123594 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135274339 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148677751 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109205534 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.082992368 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128148945 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143754917 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13529823 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111102832 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.113819022 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168737221 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110924062 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09302759 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124122908 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12911628 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116713312 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181254115 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.075310443 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121658161 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090562069 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093484777 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135639589 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162157914 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.093910852 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.113031367 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141540557 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123265336 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135310769 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110486062 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122373461 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141398684 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155905559 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137947234 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.101889851 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122363536 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14661513 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159236325 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112422441 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.258402016 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180922036 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158673195 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.163852023 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.099069811 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134775911 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13446133 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127693287 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145803643 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09903762 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167379575 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095919172 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148063535 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116063591 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100630706 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138097925 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.123854933 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101716286 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153196265 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128954764 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096677931 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091715973 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126626994 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131437557 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118347552 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.08977713 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148915795 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.088193229 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143868217 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181337162 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094378114 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117164568 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114254892 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093201454 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11776015 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114593346 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100179658 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.112708521 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177861076 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.102866862 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154679727 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142769843 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123064893 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155153081 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115408561 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.653739326 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.091118349 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158981607 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126597092 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178516481 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112964945 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136442693 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126032197 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128950328 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299455812 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115454278 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.190658418 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140375259 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.127244203 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092925874 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114998126 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11610935 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.099664875 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119208305 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133454273 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126150407 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.105616885 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.12746949 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133644854 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.095811054 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109622423 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162381194 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126736703 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152592909 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1467104 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099066291 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140144362 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150916863 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096262338 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.130811601 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16579793 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121591368 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115312477 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.09722359 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.11504549 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182966673 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.087640446 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168040336 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170402615 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129052048 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135496583 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120292162 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141197386 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117891134 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132601952 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104075554 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.127079911 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126349269 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097863006 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.093074414 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120344422 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123938269 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.118008123 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109587616 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.112465422 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160819921 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.088959046 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113676526 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129652691 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15246908 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173957385 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.252188652 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098728416 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133434706 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12722996 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.123182992 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132146994 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.093949209 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095875504 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.097459207 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.093791177 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115368896 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124888407 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130561585 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129589848 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1678487 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.096739088 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.238405128 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108813131 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117598645 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.082920795 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.091482386 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108884547 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109410098 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116852186 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122685557 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180546075 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.108658211 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.102739469 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10348298 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.08859948 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097097292 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136102973 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123665568 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130454745 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113309038 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.076147532 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118680671 seconds)
  done (took 64.727480894 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120865037 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.098320504 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.110160677 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.158450051 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.142980827 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.215710182 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.164142984 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204457924 seconds)
  done (took 2.784704924 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.083765091 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096956286 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.120118054 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.100610133 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.083771077 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.084466943 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.238965208 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.096814432 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.08272114 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.10892945 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.096108987 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.08803406 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.425833708 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.083980033 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.084261075 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074599943 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.083822309 seconds)
  done (took 3.585849171 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.395637601 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620477058 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.35955844 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.093889292 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.877557085 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.10458758 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.219916478 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.154069837 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.098261606 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536259343 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.382320258 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.150628772 seconds)
  done (took 18.555278004 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099978563 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.095387553 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109449217 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.109013629 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098486496 seconds)
  done (took 2.156685561 seconds)
done (took 114.828414372 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.097295802 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.447926252 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070913933 seconds)
  done (took 2.107662136 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10513423 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.106264889 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.106316638 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.103947629 seconds)
  done (took 1.992307259 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.090550378 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.095641308 seconds)
  done (took 1.749550736 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.244836576 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.203782738 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.118237119 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.097546518 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096101617 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.098880424 seconds)
  done (took 1.862757506 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.086816404 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.091112026 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09035546 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.094038821 seconds)
  done (took 1.927342393 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.090606416 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067768558 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071656541 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073490129 seconds)
  done (took 1.869307056 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.101130859 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.099574321 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.097044984 seconds)
  done (took 1.866101166 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.118024135 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.107347067 seconds)
  done (took 1.791561847 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.095287767 seconds)
  done (took 1.66271482 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103321703 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113609651 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.14923259 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.130548219 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.154371742 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.130285658 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.100407515 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.102525939 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.097664107 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.10551788 seconds)
  done (took 2.752250621 seconds)
done (took 21.804453892 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095898219 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.389601052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.379056159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107192523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.685624348 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.375060786 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.998330696 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113879866 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162755709 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089108397 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105085632 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667874326 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.99714959 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348310149 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980878296 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.352075307 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.671925682 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090418089 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.089997843 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090374556 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.990434352 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090368088 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089813922 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090999464 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.671525667 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.396089933 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090243959 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.351345761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.090413548 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.092002874 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.377633469 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.090312942 seconds)
  done (took 16.755392629 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087643399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.139111755 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09416803 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105681667 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.091528211 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090557796 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093137254 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08970952 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142320813 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0892056 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106340461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.08875259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093388661 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088854173 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.110025064 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09253864 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090848487 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091059387 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090458969 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090702427 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109306857 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090513765 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090424665 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090194137 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089905207 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102737867 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09063253 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.090589499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091011982 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09238745 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092989527 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.090731249 seconds)
  done (took 4.670797163 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.134758226 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148099745 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.094296769 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127845304 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133416304 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090712351 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.168950539 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116041982 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150371654 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089931485 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10813956 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.090073073 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125274391 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.090720237 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.111124966 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.090429786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089925274 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088734937 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086954893 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.086995874 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105684312 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086869612 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086692998 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087854389 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.08736987 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100817932 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087340238 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.086961684 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087441604 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.088524468 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090357896 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.087806855 seconds)
  done (took 4.889999724 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.088277577 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.090696009 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.098116951 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.098385908 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.084276382 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.087072497 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.088240851 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.084777334 seconds)
  done (took 2.305415618 seconds)
done (took 30.19158563 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.094304759 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.084302434 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.089802918 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.11219018 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.093284967 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.097954973 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.089859424 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.094462896 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.091383045 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.091874654 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.093650324 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.085546187 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.08721897 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.087750236 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.089494253 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.083394458 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.098039539 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.08741401 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.096416369 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.09763337 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.085336172 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.088815231 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.091163038 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.097435442 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.096846015 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.098730815 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.09532213 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.091653126 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.091071663 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.088395081 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.095055289 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10246646 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.088644513 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.098632945 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.084880935 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.085114137 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.089201993 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.08774609 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.09967033 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.094750903 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.087315374 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.094376916 seconds)
  done (took 5.435642376 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.101987283 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.10593344 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.099265519 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077026322 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.081738183 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08030832 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.103926412 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.0748624 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077433056 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106483808 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073491459 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077788017 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.08017177 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071857476 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077304359 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073952407 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079512139 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072674036 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075402334 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076321003 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.104721724 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.069430115 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.093331369 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077027247 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071364369 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.0776404 seconds)
  done (took 3.753881097 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.090508231 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102310141 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111427846 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.174656015 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.130590636 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.097663183 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098545788 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109052405 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113911654 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.085499343 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090881811 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.110627469 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109878594 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.091175571 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.085273537 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.10096738 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.100779495 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.087504375 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.091980576 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116489674 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.106150128 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102568326 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.111396201 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.101680719 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.084816253 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087677425 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.089801482 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.100928768 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.094514021 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096969043 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.088009833 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.089028901 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.086922966 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.100558768 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.08780267 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.084739459 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.109833095 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096351316 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097920735 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.085883313 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.094630405 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.086363386 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.108565933 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.142603884 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.087123877 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.090621062 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.089950325 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.099720272 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087576757 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128041849 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100252534 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.087474689 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.088438721 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.087035002 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087315534 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106967525 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089707815 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09108735 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103069605 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094986045 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.110120249 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093281502 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.106550101 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.087298179 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098143484 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.086983814 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.089196694 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.084835038 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113749358 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086617073 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.127590903 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.086423817 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.084237903 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096736268 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.095209953 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091075183 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.084204515 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102506257 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096625933 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.090069258 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100838999 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.088226154 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.088548462 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.123488593 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.085895386 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.084699824 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.084040817 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.08904152 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.088697659 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.085588792 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.094230954 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.084082332 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.088022032 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109168267 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.086774767 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.087297871 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.090526088 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.088993131 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.086958231 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.099049043 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.091580405 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088589185 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098351194 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.08811429 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.091215619 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.09962001 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.092436091 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.083833022 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.08690546 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.08820026 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.086737374 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.086339445 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.088264132 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.086791262 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.091853379 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.091771875 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.090904724 seconds)
  done (took 12.824836795 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.179579722 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.172129646 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.088224707 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.162777023 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.093733009 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.095325294 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.16667587 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.110837672 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.08579301 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.087422411 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.085937495 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.126249111 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.121437975 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.132518515 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.096620775 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.086235026 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114769607 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13037424 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.167917414 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.161910951 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115089336 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.093910491 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.089101504 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.087071618 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.087503566 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.095032475 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.102439382 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.094323027 seconds)
  done (took 4.861180629 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.095097321 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.120337538 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.090760596 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.107697708 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.105211405 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.083147405 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.087728541 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.087648912 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101746437 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.092633056 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.083089239 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.090821015 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.089973652 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.086130671 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.08640779 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.089744138 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.092977408 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.085271607 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.087041521 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.090638499 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.095633468 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.105366824 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.088999085 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.086120444 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.090203619 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.086400973 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076814512 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.098253107 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.086594968 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.111111806 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.081744017 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.08833518 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.100352659 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.086430242 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.08587979 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.08651675 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.083107852 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.083799373 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.087832265 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.083399059 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.081607979 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071822811 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.084620553 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.097000366 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101215734 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072567011 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.090985399 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.091340954 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.091059123 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.083595441 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.08908413 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.089210863 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.08994215 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.095625425 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.087766253 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.090711461 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.088774024 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091568688 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.092894326 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.087441827 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.082088039 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.084938694 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.090716727 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079177484 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100576724 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.091041732 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.083136731 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.085214978 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.087682108 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.099667151 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.086541624 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.090917493 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.083398783 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.086043487 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09093186 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.090449665 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092589837 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.084027823 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.087939025 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.088247844 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070817405 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088092494 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069315619 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.091531122 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.084215882 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.084639673 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.087481713 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.090065563 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.09504729 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.085126463 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.089538002 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.086699027 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.084295247 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.08831468 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073508032 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.089291682 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.097467024 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.098928374 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.086032172 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.084005075 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10256888 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091130442 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.085048658 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07364656 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.091770248 seconds)
  done (took 10.961921132 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.109042559 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.085534905 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.102294244 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.10885234 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.103559011 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.089848531 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.096974679 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.086671359 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.104617257 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.091840571 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.095015031 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.085427307 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.098782801 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.097728289 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.087556582 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.099198453 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.090314003 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.105991572 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.102042611 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.08346704 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.094311879 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.097781667 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.106453247 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.100183839 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.099732005 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.100162953 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.107110225 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.094198451 seconds)
  done (took 4.359524328 seconds)
done (took 43.773606381 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.68870515 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.851461856 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.662915343 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.897648007 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.714193335 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.893834864 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.745118511 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.654732274 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.015374652 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.700927971 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.011162318 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.767472422 seconds)
done (took 64.336822694 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.681419628 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.793149082 seconds)
    (2/2) benchmarking "String"...
    done (took 1.892468028 seconds)
  done (took 5.270682068 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.893344816 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.361619435 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.902827439 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.661182372 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.669005488 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.935978865 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.467646309 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.112188928 seconds)
  done (took 29.695831687 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.821428625 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.892413058 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.36641321 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.394985092 seconds)
  done (took 15.104367122 seconds)
done (took 61.322044559 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.696216016 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.701928676 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.703332353 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.642777251 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.760240273 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.67453406 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.756492194 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.887036502 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.66160313 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.649645903 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.663811493 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.091924536 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.67372619 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.876083952 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.662504378 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.664176128 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.701159027 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.132975457 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.821314779 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.675997978 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.687379826 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.710519078 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.664932511 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.801783844 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.696947393 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.665085625 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.0821587 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.665689782 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.291619437 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.666447411 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.696397519 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.994117213 seconds)
  done (took 201.305553169 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.664078691 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.809949405 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.882801022 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.703709947 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.183496987 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.845670194 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.757998989 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.218242215 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.667476171 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.669860843 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.838901261 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.661732227 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.838132207 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.610149778 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.688635419 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.771144453 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.829104419 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.843773194 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.691438282 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.806769588 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.654346602 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.70737022 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.646108439 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.787858681 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.690959328 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.75262061 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.668516077 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.665789683 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.84104563 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.786353726 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.700564007 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.6604149 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.855114434 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.526967459 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.668461001 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.661598222 seconds)
  done (took 165.844574561 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.833033364 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.656906184 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.653627004 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.65497816 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.66065358 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.65374352 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.778370633 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.780319214 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.284682244 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.362510445 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.710842843 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.654837113 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.445841309 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.656455373 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.721015613 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.669022835 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.655677954 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.670939988 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.683679513 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.655930023 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.653486748 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.781728754 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.666418868 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.65398845 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.663309257 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.655965305 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.660057139 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.020447752 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.655265011 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.681434265 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.656335714 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.659195665 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.892096761 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.649339568 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.648497147 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.504128645 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.685887743 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.724995397 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.64375396 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.653443376 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.644590526 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.868878797 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.642860918 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.645744617 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.647063315 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.646089463 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.646271565 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.653343767 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.780001544 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.644522654 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.770536117 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.650982412 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.122065269 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.646608862 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.646134836 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.402594659 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.465862019 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.644635652 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.645614672 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.645394847 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.642681543 seconds)
    (61/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.649829805 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.65973226 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.459753402 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.719542782 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.648778199 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.64989872 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.646593622 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.647684474 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.684689454 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.637879166 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.409931105 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.700962118 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.775787411 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.761382062 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.637875687 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.70500438 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.732131657 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.639007579 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.635541728 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.637789056 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.637657179 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.720806762 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.635935954 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.811390869 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.647987783 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.641142298 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.692597696 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.709847581 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.641174438 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.493956043 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.637604981 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.640049423 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.910052818 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.704933423 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.640430594 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.637468006 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.777110514 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.760629676 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.36760209 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.637076053 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.638351906 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.639771685 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.792853283 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.640292213 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.77232598 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.637583889 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.720217181 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.646022943 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.639683007 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.671079358 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.639467371 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.697650115 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.63722877 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.012588309 seconds)
  done (took 388.6891076 seconds)
done (took 759.317066202 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.235409563 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.203527478 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.306676418 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.219980382 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.195739784 seconds)
  done (took 12.720897388 seconds)
done (took 14.281285669 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.731013748 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.726382574 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.661074389 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.7247039 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.657062584 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.724910627 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.709019399 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.663109368 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.695699961 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.666173127 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.69380534 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.66794488 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.649510783 seconds)
  done (took 23.527632107 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.876731298 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.883827679 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.708141237 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.876410586 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.684368233 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.865654452 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.799881527 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.788907924 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.794312524 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.654473322 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.648860937 seconds)
  done (took 21.141665392 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.873437866 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.877280778 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.715038123 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.8778991 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.685811761 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.874041932 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.800069218 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.788604298 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.790059886 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.652573578 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.645224638 seconds)
  done (took 21.138398142 seconds)
done (took 67.36792356 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.64467617 seconds)
  done (took 3.203931903 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.667587232 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.83870901 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.648853145 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.64536123 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.644505138 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.646901281 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.645365792 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.641125402 seconds)
  done (took 14.939476963 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.643398252 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.643677467 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.644415568 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.643075433 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.643745045 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.64237244 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.641943404 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.646203402 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.640291375 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.645376795 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.645820678 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.641913259 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.643043878 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.639869187 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.642392899 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.642313068 seconds)
  done (took 27.850815698 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.643301391 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.642006242 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.641990646 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.643757245 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.642494764 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.642960418 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.643138657 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.640006387 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.641635558 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.640799772 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.644513882 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.641705785 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.64089994 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.640297435 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.642948831 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.641910934 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.640784032 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.641399993 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.645587179 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.640712306 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.640847655 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.639744904 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.642120421 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.643770469 seconds)
  done (took 40.971348834 seconds)
done (took 88.524836342 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.43540267 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.40976977 seconds)
  done (took 9.406138664 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.643444521 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.644131302 seconds)
  done (took 4.852813509 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.645679416 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.643152456 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.643260887 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.644049731 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.644956177 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.642337618 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.643393096 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.643367768 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.643763914 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.645275765 seconds)
  done (took 17.998838142 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.644813014 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.645658881 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.64076182 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.64438674 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.643519075 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.643374187 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.643469423 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.644967649 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.645013421 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.639501452 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.643993424 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.639853867 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.644410086 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.641698765 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.648491047 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.643276861 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.643341117 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.642231246 seconds)
  done (took 31.142457922 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.643403655 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.645889292 seconds)
  done (took 4.848781678 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.64035667 seconds)
    (2/7) benchmarking "second"...
    done (took 1.641391189 seconds)
    (3/7) benchmarking "month"...
    done (took 1.641158854 seconds)
    (4/7) benchmarking "year"...
    done (took 1.64076159 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.641811938 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.640706891 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.642355987 seconds)
  done (took 13.048012636 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.645088221 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.779886931 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.841489804 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.26313403 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.646916681 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.64671303 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.573026243 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.647965186 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.648271233 seconds)
  done (took 18.252218011 seconds)
done (took 101.108817585 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.495272732 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.636799565 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.918891567 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.700260062 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.653041363 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.975469327 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.651327222 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.915416132 seconds)
done (took 41.506252914 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.638294759 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.393113725 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.410524824 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.766546469 seconds)
  done (took 15.129602815 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.626914697 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.926125922 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.650090296 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.471568618 seconds)
  done (took 21.240122872 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.006304057 seconds)
    (2/2) benchmarking "read"...
    done (took 1.988168001 seconds)
  done (took 5.560586992 seconds)
done (took 50.12931919 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.64365695 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.644719015 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.640414053 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.644301697 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.644889988 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.640712927 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.641808301 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.64307223 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.644776696 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.643740454 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.644704534 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.645727367 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.644370493 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.642526465 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.641596836 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.644769542 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.642903327 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.642498798 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.645667809 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.644290834 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.641999851 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.648342454 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.64249488 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.642670444 seconds)
  done (took 41.007518356 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.645229371 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.643804008 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.645103849 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.644853995 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.643671911 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.644967562 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.645966248 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.642389177 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.644556014 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.645347305 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.641819184 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.642753515 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.645193816 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.644920267 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.645914914 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.644005019 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.645829745 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.643958725 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.646094779 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.643944879 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.644301575 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.643098154 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.644533398 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.646053449 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.643323184 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.643901672 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.647409797 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.644108515 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.647427422 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.64384569 seconds)
  done (took 50.898631857 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.65057296 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.653391433 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.645420125 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.646796464 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.645083908 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.646065583 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.646199492 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.646981705 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.646583326 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.646177677 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.646550008 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.646802676 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.646962756 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.645233233 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.646241765 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.645814479 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.646827972 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.647569767 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.648033086 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.647687564 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.648456937 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.648548935 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.646374124 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.647391198 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.649542626 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.64697878 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.647074142 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.647976893 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.648776997 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.646887498 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.648531931 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.647017174 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.647681194 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.648380654 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.648290848 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.646882838 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.653729009 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.653593948 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.648285436 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.649182618 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.64898854 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.648024331 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.649505951 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.647850045 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.648271445 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.648853448 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.648296155 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.647830694 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.648656624 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.647527209 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.64747799 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.646832038 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.650299543 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.648387958 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.648632861 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.64935628 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.649042438 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.647942644 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.649435042 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.64870987 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.648802 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.650266408 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.648552548 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.648553279 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.649338576 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.648999403 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.647844954 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.650472567 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.648079199 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.648533629 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.650269464 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.649106018 seconds)
  done (took 120.233724561 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.64937048 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.646687386 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.646304207 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.646514642 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.646376158 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.650407599 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.647780812 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.64932901 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.647475084 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.650108611 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.649187451 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.647623167 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.647533652 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.649913195 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.650107948 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.648623252 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.650222686 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.64778629 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.65032556 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.65063695 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.650529913 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.648539669 seconds)
  done (took 37.836126705 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.65011413 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.652985021 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.646116833 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.650490442 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.647947615 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.650070996 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.651537939 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.651613432 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.650930264 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.64830227 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.64787126 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.650054764 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.648988822 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.649373775 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.648128992 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.648567219 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.651913277 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.648335479 seconds)
  done (took 31.25935806 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.650122314 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.647934315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.650414128 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.649214225 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.647955958 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.651474857 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.651048026 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.650825039 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.650814851 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.647675097 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.652265987 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.651730128 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.650158344 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.649273804 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.651889608 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.649528066 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.65098298 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.649031751 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.652037364 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.649015818 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.648986675 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.652426616 seconds)
  done (took 37.871282383 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.652096372 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.650961059 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.650092542 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.649957215 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.650139719 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.651919464 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.651626833 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.650220546 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.652358496 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.653668101 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.652940711 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.654782905 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.653328771 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.65205978 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.649375147 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.649046487 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.651845729 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.649064088 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.652371635 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.650302461 seconds)
  done (took 34.595091914 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.651183995 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.6500219 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.651689686 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.652068233 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.651637381 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.652122793 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.651334034 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.651782991 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.653785653 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.652213813 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.651518304 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.652318052 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.65109366 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.651165419 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.651889741 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.652075624 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.652391941 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.653751351 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.653659951 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.653439786 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.653650036 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.653058179 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.65286055 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.653968591 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.652766928 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.653133997 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.653708703 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.652847568 seconds)
  done (took 47.835752656 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.654100053 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.654875773 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.651537343 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.651692895 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.651367762 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.651061056 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.653547436 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.651210966 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.654485177 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.651416504 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.654944649 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.654145134 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.656656968 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.654454061 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.654278823 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.654900947 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.654479515 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.65207702 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.65446034 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.652727037 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.654909441 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.654459869 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.653862918 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.652802571 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.654623576 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.655471647 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.653235064 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.652485974 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.653814592 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.651372093 seconds)
  done (took 51.175932505 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.707002466 seconds)
    (2/2) benchmarking "in"...
    done (took 1.706623343 seconds)
  done (took 4.985326022 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.651487616 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.655439821 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.65557512 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.652605169 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.65141058 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.654942745 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.654127598 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.652014366 seconds)
  done (took 14.797817073 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.656094519 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.654927006 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.655433904 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.655187896 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.656039706 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.657657963 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.664590044 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.655810876 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.656114829 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.658769835 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.661339152 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.661958779 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.660916459 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.655908204 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.656060973 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.660712104 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.657967716 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.656744216 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.656966324 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.656588889 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.656662402 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.658375886 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.658055726 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.654040232 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.658932292 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.668253223 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.660665694 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.656451035 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.656818584 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.663261597 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.658119378 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.655988785 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.657655488 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.655479874 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.657201181 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.658652218 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.667981105 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.658616126 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.665067918 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.657809838 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.657383635 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.656290196 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.658854314 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.65958192 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.660203323 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.658094691 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.658532182 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.655034098 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.662284632 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.66049236 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.660483818 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.656798373 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.65636118 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.663347178 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.660880122 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.666675836 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.657594904 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.66221075 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.665066562 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.668447341 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.671087178 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.663357011 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.661025409 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.659773578 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.668392332 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.678466028 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.665971019 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.657784693 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.656756801 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.657744317 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.666001389 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.670879131 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.666704587 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.659195782 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.658886954 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.658443225 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.658438804 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.659938196 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.667495774 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.663772197 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.66008299 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.658994153 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.669263037 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.676979116 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.660422395 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.659962023 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.662683804 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.659336054 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.659525642 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.668128856 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.661403107 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.657216339 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.660780262 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.660489278 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.663702024 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.659847548 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.660801172 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.661732388 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.657482949 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.6615214 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.659227213 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.66241193 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.668904188 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.66116646 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.660231267 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.666813267 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.661500721 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.659637542 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.670476069 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.661132351 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.661254459 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.661787942 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.665194599 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.658669536 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.662538119 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.668874531 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.660666396 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.662583574 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.660919242 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.662495043 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.671340465 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.682370044 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.664392262 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.661048654 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.665899052 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.673965978 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.661500271 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.663519641 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.664174956 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.659008787 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.658921235 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.662698353 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.665083728 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.663196357 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.662961161 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.662395735 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.660522695 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.661349578 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.663450304 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.666918225 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.666169483 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.662364985 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.665055694 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.665708567 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.662856764 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.664906971 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.668009104 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.663921683 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.664221544 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.666225302 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.660294415 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.66307736 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.665212546 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.662547546 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.66344842 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.661809771 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.663694077 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.663658415 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.664329395 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.662649194 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.664525703 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.664666195 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.66826045 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.664923885 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.670527505 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.663435285 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.66055651 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.66277923 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.666733473 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.664642695 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.662989767 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.66383804 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.664707136 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.669730599 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.664870168 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.663514947 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.668050113 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.666993482 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.664720341 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.664053032 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.668109268 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.670598414 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.66566312 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.672119458 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.668479027 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.665287271 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.666415972 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.664808936 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.665569383 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.666240496 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.665716233 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.670208229 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.676436382 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.669527336 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.6673849 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.66876981 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.666221953 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.668062414 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.670022503 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.665882237 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.664869826 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.665495812 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.66785108 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.667899082 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.669783546 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.667158898 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.66781833 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.667116393 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.665992953 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.664139195 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.67021888 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.666825453 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.670380382 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.667358637 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.667936176 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.665697435 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.666741924 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.667549706 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.665910811 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.668023954 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.667148549 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.666432164 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.673710374 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.664089356 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.668453102 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.66882049 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.66875212 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.66836649 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.666221567 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.670974291 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.666789112 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.674861061 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.666977513 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.66802036 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.675529232 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.668618484 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.666605639 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.670777437 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.668686275 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.663284502 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.669738135 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.671578675 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.665846457 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.667444214 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.667692821 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.66751594 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.670287906 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.675684201 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.667506653 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.66743772 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.669546193 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.669284495 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.666334862 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.670028956 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.671527233 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.673793561 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.670831629 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.669433859 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.668627502 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.669185137 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.671034434 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.670595956 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.668945407 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.670522269 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.673582098 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.674154293 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.670379674 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.671517661 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.670713354 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.669192456 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.670780109 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.66932523 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.669381981 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.680902093 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.676641055 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.677027698 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.672669973 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.670621506 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.673312763 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.672271265 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.671463467 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.668485882 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.671474473 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.671330844 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.669964642 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.666634103 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.67044329 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.668135101 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.671516375 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.673697366 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.674001506 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.669893067 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.670743055 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.67274952 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.673170898 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.672043198 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.668160177 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.671643175 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.672597348 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.673190172 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.673888501 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.669473367 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.680305887 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.673000769 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.673534474 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.672614711 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.67312915 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.671642982 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.671193491 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.670208997 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.674996576 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.677084861 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.676239367 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.6763792 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.671637483 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.681263348 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.673224622 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.672520211 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.679460175 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.668882514 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.667876681 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.671772103 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.66958528 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.679555122 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.671157136 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.671420384 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.672226229 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.67303706 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.667590663 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.673257247 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.671477875 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.671268361 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.671828958 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.680326643 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.676231843 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.675848879 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.675472026 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.671010995 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.672885137 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.67264297 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.670910628 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.674333589 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.676313648 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.671990104 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.671564042 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.675514621 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.673100903 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.673030042 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.676317848 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.668800814 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.672382621 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.680518632 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.676584119 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.676627314 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.674568154 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.681575086 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.674509146 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.681515494 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.673660222 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.673473682 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.67581388 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.67541582 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.676349618 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.67385167 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.675747339 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.675357987 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.676192376 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.67725125 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.671146993 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.678234359 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.673283505 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.675261782 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.674028018 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.681274018 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.694416427 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.676340287 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.675628188 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.673157636 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.672982836 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.677782823 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.672196495 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.673229026 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.676469133 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.683114351 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.678409948 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.67428121 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.676658892 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.677679838 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.675614672 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.67751746 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.673528795 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.675680133 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.674219934 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.675236045 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.676294905 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.682523438 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.676232375 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.677107086 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.675390747 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.678768458 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.683586456 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.677067334 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.677081614 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.675710423 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.67605449 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.677677425 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.67631744 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.676967808 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.676235743 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.676699067 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.678202889 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.683580656 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.682832177 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.681684583 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.676961149 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.677997288 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.677675074 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.678761635 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.676922828 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.67792029 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.67745063 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.677050158 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.676325066 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.677492228 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.677073902 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.678539099 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.677820055 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.676043531 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.679473439 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.684668931 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.678221689 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.673660544 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.675193988 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.676757139 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.676008376 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.676373816 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.684602156 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.6826597 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.686343281 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.686346935 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.680475022 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.676264697 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.679686198 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.689186584 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.677632877 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.679165316 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.676862299 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.677642524 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.678668945 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.681381361 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.677241107 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.68555604 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.680646698 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.678604742 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.686728 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.68239875 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.67763721 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.681809837 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.682553213 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.679128451 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.675170326 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.68166378 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.678846478 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.686173218 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.68105222 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.679459218 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.680460639 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.679259608 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.679632718 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.68140038 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.679549201 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.680214733 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.67462356 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.680277592 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.679093799 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.6826799 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.675518693 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.678812038 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.68130266 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.684371068 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.686177036 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.676304251 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.681170406 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.681647542 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.6840828 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.682147606 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.678422885 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.676481864 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.677756047 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.67837759 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.678901016 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.681694215 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.682486223 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.680010136 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.682157862 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.681354087 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.681234241 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.684111569 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.691237959 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.687309916 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.678776899 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.681104881 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.682227664 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.683868447 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.681482461 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.681153886 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.681990183 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.683206333 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.683402371 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.681865883 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.681179672 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.685017836 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.697510651 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.68231983 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.681848914 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.680501199 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.687391845 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.682859385 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.677999461 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.682244424 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.684640673 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.686507471 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.689698067 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.683394178 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.690236309 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.682632849 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.685223782 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.684096307 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.685830452 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.692272289 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.684451786 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.68305656 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.68366752 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.687277122 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.698590482 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.685073767 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.692689299 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.709188788 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.68574167 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.684154199 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.683961284 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.682780057 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.682482424 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.68586534 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.683806717 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.682766739 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.682010894 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.683008641 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.684240024 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.688307155 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.68783791 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.683976531 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.683363811 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.683658994 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.686550685 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.681342922 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.684613279 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.682540318 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.684056704 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.684088582 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.68374702 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.684020918 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.694487267 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.695723576 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.682636998 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.686388997 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.682300301 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.685797318 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.687747179 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.693972435 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.691497258 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.68460032 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.684106482 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.68681578 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.684322279 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.68006186 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.684809353 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.684746378 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.683977575 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.682048113 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.697838656 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.694317305 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.688885139 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.687811854 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.68587124 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.685362018 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.687578652 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.685384532 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.686396633 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.687496891 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.686727743 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.690033342 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.685048212 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.686271319 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.686774941 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.692954996 seconds)
  done (took 998.43250205 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.684473648 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.683095782 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.683051303 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.683050479 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.682304453 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.683710537 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.683400235 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.683476748 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.683966781 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.68271015 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.683110768 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.68426221 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.682883772 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.683908086 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.683327785 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.682147588 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.683753812 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.682267149 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.68360869 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.684380994 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.68406747 seconds)
  done (took 36.947243304 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.685926264 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.685626908 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.68332506 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.686881609 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.684576804 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.68690892 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.685275238 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.686254741 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.688647231 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.682679845 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.685253585 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.687313264 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.68491763 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.685175654 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686633907 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.686682055 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.689524454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.685499434 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.688129122 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.685124095 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.688318172 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.684436032 seconds)
  done (took 38.690751409 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.688007744 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.688267796 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.687699128 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.686463923 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.687372419 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.685973879 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.687801849 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.687805228 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.688643546 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.691996935 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.688877188 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.690827437 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.69403333 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.693344454 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.691582313 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.687088309 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.832192126 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.688882556 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.687921954 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.68868533 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.686468853 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.694078404 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.686117181 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.685786955 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.688915684 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.690144659 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.689551627 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.689804414 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.689462292 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.691905924 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.692419605 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.690437442 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.687719549 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.692954551 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.691860646 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.691194781 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.69252741 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.690025616 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.689947082 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.688446129 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.698666336 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.707172387 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.68999276 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.697410369 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.692907972 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.688984062 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.692716211 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.696269035 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.687577053 seconds)
  done (took 84.573293843 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.692009799 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.691160523 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.688945809 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.689017171 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.6890455 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.689855392 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.690511576 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.689800867 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.688465676 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.688776894 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.690407091 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.688838508 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.689347407 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.690355993 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.691996986 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.688254077 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.689654343 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.688993153 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.687858761 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.689334786 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.687297461 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.689613203 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.689450702 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.688327447 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.69349189 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.688640999 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.688588138 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.690404926 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.689383427 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.689836113 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.693236793 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.690135966 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.692105468 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.68674879 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.688795929 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.692208778 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.693243514 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.688809046 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.690438175 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.688569463 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.692126606 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.692481449 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.691003649 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.691324216 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.690278959 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.688943203 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.690215767 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.689254313 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.690731747 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.692840103 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.693250803 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.690229048 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.691307921 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.68953118 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.692230061 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.69119044 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.69003919 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.691490063 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.691937253 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.69187949 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.688523222 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.69287025 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.69134188 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.694735137 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.692539252 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.690221488 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.691939806 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.692134674 seconds)
  done (took 116.551381249 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.692921057 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.694377972 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.692896687 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.692651359 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.692399583 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.694470464 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.692232338 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.693785559 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.692677509 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.69345793 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.693889279 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.691934601 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.694193078 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.693186117 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.693917906 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.693245831 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.693721189 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.694540015 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.693025835 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.694781191 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.694662321 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.694198457 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.693934892 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.694834303 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.693301842 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.693950248 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.694780969 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.69443058 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.695514107 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.694589369 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.695822416 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.692905019 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.695518431 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.695961223 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.695625313 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.694341465 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.694764057 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.69402097 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.695967443 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.694162056 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.694058114 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.693866247 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.694165988 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.696029172 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.695504906 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.69382856 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.694377244 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.695837561 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.693283564 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.692316083 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.696444441 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.693460586 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.695222208 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.693876294 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.693887429 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.694666563 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.694450948 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.693528664 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.694819399 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.694884177 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.693893518 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.696599855 seconds)
  done (took 106.644743614 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.694176798 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.694191845 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.69160175 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.690714596 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.696651947 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.693767358 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.693135828 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.696108394 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.697411745 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.69311516 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.696658566 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.692174732 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693863506 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.694288225 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.693304123 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.694100561 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693268037 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.691722342 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.694963557 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.693058827 seconds)
  done (took 35.482060931 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.693390645 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.695517572 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.693391489 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.694074674 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.696672606 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.691178224 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.695557497 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.696528064 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694307321 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.694779557 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.696715685 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.695800823 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692110459 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.691708814 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.695223543 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.694721881 seconds)
  done (took 28.716403989 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.692577884 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.69677675 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.697847237 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.696287482 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.694459485 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.695515347 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.694843689 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.696830516 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.695661577 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.695394088 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.6983971 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.696995524 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.696918791 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.698084311 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.697380401 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.697358244 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.694530786 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.696553907 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.69827843 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.697558536 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.697377962 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.695231618 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.698236201 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.699819548 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.697034927 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.698134247 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.695759752 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.69583578 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.695032207 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.69880052 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.694231418 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.698023288 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.695419092 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.697172712 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.698391599 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.696594845 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.696850155 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.698360129 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.696939459 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.698433847 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.700046889 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.695545302 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.700293638 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.700568261 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.697426376 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.697468052 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.695743477 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.697511478 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.696706109 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.69942641 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.698289378 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.69882005 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.698083698 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.698094041 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.69809095 seconds)
  done (took 94.949750449 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.696902953 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.697257158 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.69644576 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.696805623 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.700433865 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.69864947 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.6974776 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.696145111 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.698806202 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.702014335 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.698594368 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.702971604 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.698870055 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.699951758 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.699948129 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.699698874 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.698770508 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.699078861 seconds)
  done (took 32.189135693 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.698145443 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.701317191 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.700357712 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.697616833 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.699281583 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.701189867 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.697766276 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.699151185 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.699643285 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.697673958 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69807052 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.70050281 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701497535 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.700285546 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.697968388 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698464128 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.702070777 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.699923823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.698881542 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.698767321 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.701026943 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.700142007 seconds)
  done (took 39.001014409 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.700579779 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.701025215 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.716680632 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.72036756 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.724153831 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.732089689 seconds)
  done (took 11.906090975 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697900191 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702509864 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.696152877 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703787655 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702474166 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699022417 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69807513 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69781689 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700846574 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699648255 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698363771 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701124751 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702977531 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699713981 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698742888 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702281945 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699207166 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698365124 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697883481 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702272243 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700341428 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702610028 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698983206 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700316413 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699713275 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697154293 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700682708 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698959882 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699035428 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700449581 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704091934 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699099694 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704067528 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698512161 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703855564 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702898156 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699402738 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703625897 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703619202 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70160852 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.702370565 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703850783 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703626886 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702068586 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703239549 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69980848 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699024084 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70144156 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700087048 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703535044 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703325081 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701024156 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704217124 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702623212 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701933158 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70301861 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70024073 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700158063 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704403829 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700319087 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702284775 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70420249 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701965226 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701660282 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704007889 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702230436 seconds)
  done (took 113.889098024 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701284139 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.702353881 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702379156 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702344055 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701823981 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702802511 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700425398 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702224252 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701493637 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701010047 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703311694 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701472774 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702414078 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70302219 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702063987 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702858828 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701006088 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701221299 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703177876 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705381955 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704712832 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703105547 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701783243 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701662291 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703743536 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704859754 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702984237 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702540223 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703501748 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701905498 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702434384 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703704618 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702168427 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.701240342 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702176625 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701344694 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701264982 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7011752 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700291471 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70594802 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700548297 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705141108 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702356742 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701376817 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701400141 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702251442 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702304225 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70229282 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702666274 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702285529 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703054998 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702385497 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702737474 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702528006 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702858218 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701644089 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700402297 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703106405 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701582025 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705913318 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702812199 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703575097 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705325256 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70300358 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70284509 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705588305 seconds)
  done (took 113.984913569 seconds)
done (took 2326.018188353 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.730633942 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.711874533 seconds)
  done (took 15.057671728 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.871025646 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.820037909 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.703977723 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.747725384 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.70289093 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.703076415 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.7230771 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.701909991 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.705956977 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.705774287 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.703485661 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.889480499 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.703549598 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.70175082 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.704659181 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.79725367 seconds)
  done (took 49.504821602 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.708126768 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.710827798 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.720876934 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.710644062 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.709900594 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.718405007 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.743401528 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.709451777 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.741660519 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.720773104 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.774241544 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.716319726 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.70800416 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.755326606 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.719176707 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.72134175 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.799241402 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.777316981 seconds)
  done (took 32.779700857 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.782280211 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.705701301 seconds)
  done (took 10.109802222 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.7269283 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.744005932 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.697449177 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.723730127 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.705342676 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.723093694 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.700091124 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.707946859 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.707485565 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.715316023 seconds)
  done (took 68.772723266 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.71726917 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.712860207 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.713110787 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.711309024 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.703988638 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.704550669 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.709285847 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.707376154 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.356107542 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.74181144 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.715281428 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.716541608 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.711059459 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.712754386 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.709258773 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.736649752 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.814636149 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.708002325 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.708268893 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.72078778 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.712747241 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.769953288 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.721869377 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.711270951 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.740574736 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.358772325 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.714313232 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.717554954 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.816247025 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.706910391 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.712020341 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.711170399 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.715155088 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.113706949 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.979294573 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.70760442 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.720916195 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.719929864 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.707523824 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.824910806 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.711748051 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.722052853 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.448602306 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.959287455 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.816169912 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.751714991 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.029705125 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.721848509 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.712612969 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.739436944 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.714782161 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.713726916 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.726675595 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.204023236 seconds)
  done (took 123.507281321 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.708494106 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.056042582 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.878802151 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.707334691 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.992263773 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.913841762 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.704977815 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.757138846 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.705968503 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.938461034 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.966427845 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.812579349 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.707306374 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.709722317 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.704653774 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.704922152 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.865072844 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.780903158 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.705439858 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.705256227 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.739175314 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948378026 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.830215555 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.712409319 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.734494566 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.921828872 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.830914608 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.813475698 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.432499752 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.70654189 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.773366377 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.709462206 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.709017175 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.704903736 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.867334196 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.805319468 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.797031319 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.708366908 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.70949515 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.706330578 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.460249304 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.909938588 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.80681123 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.841470217 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.963698929 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.91682525 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.493041768 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.706759237 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.457208217 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.877187897 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.936054674 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.940358564 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.831243288 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.71358693 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.245861121 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.709310203 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.710613259 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.959065117 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.931728868 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.808407747 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.710879096 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.70996138 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.705104373 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.003283156 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.710253348 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.805765769 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.70964494 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.708679425 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.809211359 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.806892598 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.937582197 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.925787557 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.740403038 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.059954977 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.227495195 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.960715614 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.777314556 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.960887359 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.711834471 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.707940537 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.792163827 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.567957269 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.966829456 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.996835916 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.957932364 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.745784806 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.429786704 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.710989842 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.942373388 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.932618955 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.970455339 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.955236209 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.949394706 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.035762547 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.713171457 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.713379497 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.965250307 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.83548299 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.714604388 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.065635719 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942884512 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.238937514 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.741377947 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.017730002 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.840835864 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.716238197 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.343716199 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.709734295 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.945198265 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.753645838 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.710413993 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.711867743 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.928964584 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.696390664 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.712731925 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.602716797 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.775386797 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.713149131 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944563881 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.711117465 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978557897 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.708531295 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950363115 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.133987956 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.744698606 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.94076564 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.957262735 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.713889362 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.953523224 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.956924949 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.825595113 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.985632838 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.616022634 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.711282904 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997991438 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.709108278 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.712161556 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.885183796 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.712227031 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.859014312 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.714879923 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.008057591 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735718691 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948616602 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.716697115 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967172858 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.745266629 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.765174902 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.711895733 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.842362314 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.71189608 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.646638075 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.872261949 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.715819728 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.711755902 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.425382567 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.712018098 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.861424034 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.938056698 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737036068 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.789522021 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.380040403 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.71432454 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.795634947 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.738471739 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.110897969 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.714942203 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.969021709 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.715662899 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.714597469 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.712612533 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.003246039 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.361890347 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.712918404 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.71039819 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.621997436 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.713937628 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.711826554 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.898005453 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.081879229 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.712533904 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.916984485 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.711574773 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.841174577 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.71757924 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.794383676 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.055019823 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.710410755 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.713113479 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.712654829 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.715939012 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.712351606 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.980934381 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.738338652 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.223789257 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.852534212 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985913736 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.02476341 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.95897932 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.756835152 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.714418408 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.979258041 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.711937575 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.776866979 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.712291224 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.738387422 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.944382035 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.715136742 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.927247844 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.98655041 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.618623798 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.766553429 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.713717937 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.713891699 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.709763878 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.861320707 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.801905682 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.715293684 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.71942338 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.830300897 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.837098464 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.92525428 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.712364268 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.830256019 seconds)
  done (took 868.957332236 seconds)
done (took 1170.305011671 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.715896872 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.714890327 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.694899723 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.718001325 seconds)
  done (took 28.471512619 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.724317678 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.724064665 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.724731982 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.725543989 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.724031939 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.722475188 seconds)
  done (took 11.975756333 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.761449875 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.713933223 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.717095785 seconds)
  done (took 20.823060596 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.792426322 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.100238706 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.854693258 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.134244815 seconds)
  done (took 9.513148163 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.722280131 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.721998723 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.723046984 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.725232868 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.724727654 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.724426754 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.722775414 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.723067162 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.72570817 seconds)
  done (took 17.146095917 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.775275881 seconds)
done (took 93.333719314 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.888608954 seconds)
    (2/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.894617972 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.800139535 seconds)
    (4/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.882005145 seconds)
    (5/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.060241765 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.832592193 seconds)
    (7/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.771779103 seconds)
    (8/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.754015727 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.729735966 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.709801783 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.843633809 seconds)
    (12/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.754073423 seconds)
    (13/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.795270714 seconds)
    (14/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.811500053 seconds)
    (15/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.104366682 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.912453555 seconds)
    (17/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.903069338 seconds)
    (18/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.733082133 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.757633929 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.729205114 seconds)
    (21/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.739502331 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.519126358 seconds)
    (23/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.794810089 seconds)
    (24/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.821533129 seconds)
    (25/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.790402895 seconds)
    (26/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.881166226 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.829000279 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.049397344 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.80176374 seconds)
    (30/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.861916586 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.408244981 seconds)
    (32/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.057968478 seconds)
    (33/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.227294278 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.952246366 seconds)
    (35/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.728544737 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.118991546 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.730515118 seconds)
    (38/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.412356084 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.902963898 seconds)
    (40/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.930560749 seconds)
    (41/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.292830879 seconds)
    (42/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.751535338 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.730111642 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.838390941 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.918852811 seconds)
    (46/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.00718061 seconds)
    (47/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.748896322 seconds)
    (48/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.955226025 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.352375643 seconds)
    (50/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.737931401 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 3.499242691 seconds)
    (52/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.972036297 seconds)
    (53/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.050903534 seconds)
    (54/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.923940046 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.135306901 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.441392478 seconds)
    (57/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.167299638 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.989134837 seconds)
    (59/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.037975917 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.73579306 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.79157125 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.896365354 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.752555529 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.746533123 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.027475816 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.841783879 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.72927582 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.020785495 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.827158174 seconds)
    (70/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.846312782 seconds)
    (71/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.761781573 seconds)
    (72/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.96506822 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.831638035 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.712495072 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.182414824 seconds)
    (76/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.93510825 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.751618387 seconds)
    (78/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.732233751 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.360256415 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.900651183 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.669135507 seconds)
    (82/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.960612753 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.649432639 seconds)
    (84/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.737568143 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.09045361 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.607635056 seconds)
    (87/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.129588235 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.052425954 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.825921862 seconds)
    (90/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.822734047 seconds)
    (91/309) benchmarking ("sort", Float64, false)...
    done (took 5.517303011 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.718209373 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.894042072 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.873138673 seconds)
    (95/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.732813917 seconds)
    (96/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.243297858 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.954492105 seconds)
    (98/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.713950028 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.887809501 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.964521244 seconds)
    (101/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.738267896 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.731251053 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.891220329 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.896269953 seconds)
    (105/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.73745763 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.855087904 seconds)
    (107/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.735162805 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 3.233028564 seconds)
    (109/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.129593213 seconds)
    (110/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.833652744 seconds)
    (111/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.821814067 seconds)
    (112/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.243502739 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.037586873 seconds)
    (114/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.019806295 seconds)
    (115/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.966043659 seconds)
    (116/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.716130148 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.825250797 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.762341935 seconds)
    (119/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.852470443 seconds)
    (120/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.518172154 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.934443937 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.839770313 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.757345194 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.733601717 seconds)
    (125/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.736588909 seconds)
    (126/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.161542073 seconds)
    (127/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.740645765 seconds)
    (128/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.972466298 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.979219156 seconds)
    (130/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.873698663 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.089966933 seconds)
    (132/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.826154055 seconds)
    (133/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.097026576 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.738331835 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.936768783 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.749967339 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.73442682 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.71548979 seconds)
    (139/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.420463638 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.856969581 seconds)
    (141/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.086405248 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.844725752 seconds)
    (143/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.681711557 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.774472933 seconds)
    (145/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.71733114 seconds)
    (146/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.427261396 seconds)
    (147/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.830621777 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.898864324 seconds)
    (149/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.019383157 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.92440425 seconds)
    (151/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.002361701 seconds)
    (152/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.087105447 seconds)
    (153/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.740548426 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 7.463366832 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.76629436 seconds)
    (156/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.716611265 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.096314332 seconds)
    (158/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.611939515 seconds)
    (159/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.740725935 seconds)
    (160/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.093078341 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.736825222 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.738023077 seconds)
    (163/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.763822038 seconds)
    (164/309) benchmarking ("sort", Float32, false)...
    done (took 5.478374874 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.423773201 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.466480025 seconds)
    (167/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.875560644 seconds)
    (168/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.933328991 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.921404636 seconds)
    (170/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.763683624 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.730187641 seconds)
    (172/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.758640392 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.906366736 seconds)
    (174/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.825125334 seconds)
    (175/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.981665834 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.719584629 seconds)
    (177/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.845472883 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.018776573 seconds)
    (179/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.727452048 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.979345192 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.737630374 seconds)
    (182/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.186163359 seconds)
    (183/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.131671821 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.915924205 seconds)
    (185/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.042696473 seconds)
    (186/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.756323029 seconds)
    (187/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.972406879 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.740757822 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.066548628 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.070569541 seconds)
    (191/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.823376168 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.095279816 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.47294994 seconds)
    (194/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.887620196 seconds)
    (195/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.190181792 seconds)
    (196/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.015413648 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.848159284 seconds)
    (198/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.626015149 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.741272972 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 3.720037782 seconds)
    (201/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.7737284 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.737687155 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.551456846 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.721279931 seconds)
    (205/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.815698767 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.72047347 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.798730015 seconds)
    (208/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.464412541 seconds)
    (209/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.840641336 seconds)
    (210/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.825972794 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.741542995 seconds)
    (212/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.359915981 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.807561809 seconds)
    (214/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.720216065 seconds)
    (215/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 3.093790634 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.006296732 seconds)
    (217/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.806595586 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.833699875 seconds)
    (219/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.869949267 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.870548166 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.952882954 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.407201171 seconds)
    (223/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.756874657 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.08241242 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.741147706 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.723737228 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.951982427 seconds)
    (228/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.762025931 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.973566674 seconds)
    (230/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.750211446 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.76116807 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.764484211 seconds)
    (233/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.843059186 seconds)
    (234/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.836660773 seconds)
    (235/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.800356909 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.100246688 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.68302429 seconds)
    (238/309) benchmarking ("sort", Int8, false)...
    done (took 4.625350347 seconds)
    (239/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.83973461 seconds)
    (240/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.830544383 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.698529113 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.784771889 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.235757454 seconds)
    (244/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.815622224 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.079871577 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.753660991 seconds)
    (247/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.766462198 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.169082209 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.72288605 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.879117333 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.741714859 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.802632623 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.292247816 seconds)
    (254/309) benchmarking ("map", identity, Int64, false)...
    done (took 3.102967175 seconds)
    (255/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.742299293 seconds)
    (256/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.397510658 seconds)
    (257/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.980354525 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.096830776 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.03891293 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.894651025 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.054398962 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.167291742 seconds)
    (263/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.743610326 seconds)
    (264/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.968250605 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.679071144 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.848933755 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.091165422 seconds)
    (268/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.857978485 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.241617612 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.042604697 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.771388678 seconds)
    (272/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.117034157 seconds)
    (273/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.845432476 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.892265825 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.538165189 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.834481549 seconds)
    (277/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.440706336 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.14679579 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.722113019 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.061356419 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.924120241 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.779959084 seconds)
    (283/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.74413455 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.181643373 seconds)
    (285/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.899963301 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.00519395 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.903800251 seconds)
    (288/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.501220788 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.502071976 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.425253302 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.742154228 seconds)
    (292/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.888036125 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.00077129 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.885152931 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.775333537 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.139114565 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.664699491 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.744311852 seconds)
    (299/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.841651927 seconds)
    (300/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.806459463 seconds)
    (301/309) benchmarking ("sort", BigInt, false)...
    done (took 6.745294229 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.884624144 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.83594738 seconds)
    (304/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.742796426 seconds)
    (305/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.099537624 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.891246186 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.963239959 seconds)
    (308/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.913253874 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.931985431 seconds)
  done (took 963.402813703 seconds)
done (took 965.318153691 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.769732918 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.760592924 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.750105071 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.769254559 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.862418048 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.773763829 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.761173546 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.754383026 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.796198947 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.796705559 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.748585397 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.775483639 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.752886908 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.754558554 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.747733445 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.74864213 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.068488443 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.782512681 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.769680857 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.761100209 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.770049472 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.749882575 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.798248484 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.775010994 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.75493321 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.755177093 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.754987653 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.775351407 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.863960212 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.75807173 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.755581367 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.76533224 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.06849221 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.782802412 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.7474372 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.773922524 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.762912983 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.760924369 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.762044457 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.785635412 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.153728371 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.789502581 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.756636425 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.756549541 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.755621743 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.756551804 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.755592953 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.758232159 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.752236752 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.756571741 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.15047404 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.808280714 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.757455431 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.753681134 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.765041179 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.759779832 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.756707403 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.75923016 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.774836834 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.759902635 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.052983568 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.786877862 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.755446419 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.772651577 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.763411381 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.18655319 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.791042134 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.760160652 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.157042532 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.799459948 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.184971488 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.807997016 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.756095626 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.768661019 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.786159262 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.069677946 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.779334182 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.754208944 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.76468474 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.750830514 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.767169106 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.754959439 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.766347447 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.754815371 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.75635856 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.782975139 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.766836213 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.756544473 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.765010728 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.777802128 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.767244037 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.767257868 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.758555865 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.751601644 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.766493521 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.758036541 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.759104183 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.759868771 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.760376749 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.772242477 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.153269939 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.802433831 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.754208166 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.753556483 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.755541378 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.766794111 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.154746335 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.797016952 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.774340128 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.803505633 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.759521931 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.056721035 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.789588567 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.763856779 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.763502603 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.760196731 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.750991875 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.055214525 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.179421426 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.812106513 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.757875616 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.75752815 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.767684853 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.760353725 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.754485257 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.075049039 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.787855882 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.75682207 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.882120564 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.768181246 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.790543419 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.753823745 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.762557129 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.786643684 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.76590857 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.789525435 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.759090738 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.765828055 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.775582086 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.752405709 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.770364289 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.769436196 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.758298228 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.767305591 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.755011357 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.786034596 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.758788131 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.756594596 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.778900931 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.882785864 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.752953941 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.056325336 seconds)
done (took 276.215421748 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.837237436 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.760147526 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.863538492 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.760253432 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.851444829 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.855304171 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.759562524 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.758656436 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.759141537 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.256131615 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.757559981 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.75867319 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.753952985 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.757384638 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.850299522 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.761912286 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.760650223 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.156200571 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.760313357 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.876016908 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.755414857 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.755327372 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.761019443 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.209089787 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.76027197 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.761601152 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.884001236 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.759358338 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.189609716 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.761127736 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.759463709 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.183361888 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.899538887 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.779405341 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.76964009 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.765302485 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.853247102 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.760009046 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.84754972 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.844090874 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.86342907 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.79852303 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.760852929 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.761046179 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.763479903 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.759564908 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.756617164 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.790446586 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.757872387 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.7575526 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.209563534 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.77193435 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.760078563 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.757891537 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.758007069 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.792443403 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.756682626 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.762053611 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.897356515 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.761641979 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.829584999 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.213603316 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.188578306 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.763755472 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.760686265 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.761423178 seconds)
  done (took 177.892941477 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.860751527 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.840078959 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.868052061 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.76478282 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.811757282 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.868237839 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.767517167 seconds)
  done (took 14.44865864 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.768893755 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.765094914 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.814946356 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.814457833 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.763817184 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.918919208 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.76374494 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.775427365 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.758713321 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.791798487 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.763643821 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.763014938 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.768610923 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.755400626 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.812832782 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.774521719 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.88171172 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.765836577 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.764779046 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.914377191 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.762025102 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.770196906 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.787920427 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.776710071 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.761776124 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.77073942 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.335756717 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.765340736 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.759776681 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.762185841 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.762106948 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.805500278 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.76487257 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.766655261 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.760429809 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.878655989 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.765399813 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.760315606 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.764696444 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.765206051 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.76484585 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.763644622 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.764969261 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.760750205 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.766178793 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.784351244 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.763170072 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.761352041 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.764085173 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.765074596 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.787923064 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.762114794 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.759474595 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.761735661 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.808875943 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.770024007 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.764366081 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.757823436 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.763782959 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.760130861 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.912781177 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.813686178 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.763343511 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.815538437 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.7617067 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.766068727 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.76218624 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.761546704 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.856420499 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.765997149 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.81572637 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.76479064 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.929074751 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.788468924 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.768658367 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.771364591 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.769806096 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.767326391 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.763205248 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.774574191 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.764605899 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.770080062 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.774338436 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.764583379 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.76163162 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.879122668 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.906015007 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.764766919 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.779703463 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.776146771 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.763591768 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.811425928 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.76483613 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.764843122 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.823416433 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.882360597 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.792908166 seconds)
  done (took 195.40853715 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.770671828 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.7746596 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.770022979 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.784178918 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.76724817 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.768738254 seconds)
  done (took 12.30604504 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.772874525 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.768954242 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.766720118 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.767970122 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.768604406 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.765557293 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.765507636 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.769060948 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.77121779 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.768893773 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.765902795 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.765584823 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.768565965 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.764822474 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.765305723 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.767677722 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.767454484 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.765202595 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.76851971 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.770461116 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.925707188 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.767350559 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.768749924 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.771251383 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.76958039 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.767946541 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.776309556 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.769161006 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.765991039 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.776138816 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.771519714 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.767305959 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.769937009 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.77372563 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.773220766 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.769345935 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.771262092 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.767380634 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.767352287 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.767479546 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.766471989 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.766159053 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.76706783 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.768530871 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.771253764 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.778198986 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.770742321 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.777903192 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.767005343 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.767264324 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.767474076 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.765798246 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.767393705 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.767876422 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.773767456 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.776297992 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.769858483 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.76599813 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.769353197 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.770295971 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.770099454 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.765099388 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.773215871 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.773494627 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.768241691 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.767709062 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.772174172 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.774158929 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.770474763 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.768304896 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.768605674 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.767586909 seconds)
  done (took 130.218513754 seconds)
done (took 531.96007054 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.980774265 seconds)
  done (took 8.653260945 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.922139645 seconds)
  done (took 8.644705563 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.212248945 seconds)
  done (took 9.886451361 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.787619207 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.793852386 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.774657848 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.763187322 seconds)
  done (took 28.817306173 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.837967536 seconds)
  done (took 8.512317639 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.78439168 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.754488453 seconds)
  done (took 15.242229449 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.91604986 seconds)
  done (took 8.591670832 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.811330535 seconds)
  done (took 8.496233537 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.785875471 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.776970146 seconds)
  done (took 15.261519735 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.744055751 seconds)
  done (took 8.419193845 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.914733828 seconds)
  done (took 9.679770955 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.78902881 seconds)
  done (took 8.531331476 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.808851577 seconds)
  done (took 8.485018551 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.827670892 seconds)
  done (took 8.503189413 seconds)
done (took 157.396905008 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.770638386 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.76185715 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.762623698 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.761099939 seconds)
  done (took 28.728783723 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.803230648 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.80481374 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.806969153 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.817827277 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.809092822 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.805848987 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.798829327 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.797758651 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.81456551 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.808248582 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.805506276 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.809542565 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.806002264 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.797098892 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.812214622 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.806181344 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.814786867 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.80683974 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.79699364 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.807175618 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.771211891 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.815995014 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.809557905 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.772271201 seconds)
  done (took 44.975152755 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.96603252 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.846554769 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.926633183 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.825547334 seconds)
  done (took 9.240155093 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.820159264 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.825917391 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.836216853 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.873884687 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.899363992 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.837504585 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.795322622 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.794848512 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.781086771 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.827050625 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.901998299 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.821149143 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.91393323 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.773801582 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.959198882 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.774647133 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.773193907 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.827821451 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.878665816 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.889500103 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.775053779 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.826229962 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.827302569 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.821364705 seconds)
  done (took 45.732267208 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.769817847 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.780072993 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.777687792 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.771873125 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.775218226 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.773398332 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.778939156 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.774592397 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.793731973 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.773650362 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.774181626 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.772540668 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.772505527 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.773142368 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.77212826 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.783621227 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.786721309 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.774631104 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.777215316 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.779159833 seconds)
  done (took 37.213478178 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.769092229 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.618881741 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.119617658 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.023871502 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.770536886 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.765992042 seconds)
  done (took 30.746063318 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.789128198 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.784626057 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.773110808 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.832818639 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.915769789 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.779988711 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.778323035 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.78866051 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.822539668 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.846441697 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.800993984 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.80440403 seconds)
  done (took 23.397082922 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.772720725 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.773969317 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.776903786 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.790291037 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.791993743 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.78439288 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.786897096 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.774383838 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.79445601 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.797220491 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.786708556 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.792023134 seconds)
  done (took 43.105940555 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856515474 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.661778914 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219239246 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243786634 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.308561258 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.984298501 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.774920316 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.864570231 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.781159471 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05141826 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.118654758 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975014633 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.024862382 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.580675806 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.777832217 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.214652403 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062963423 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992989228 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798320124 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.43185974 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87643606 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348209662 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.393044785 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880794181 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.980137711 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.902635049 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.030567543 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.734697828 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827297751 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.783455359 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782454369 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.773977795 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046692835 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902085089 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849438689 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783627032 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.19735451 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.485115485 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.761604618 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.444930885 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.269714274 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.883288762 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780876769 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776559353 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.703622439 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355718073 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86997438 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.774656262 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.475725294 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.773320481 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.783575775 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855063229 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.776691241 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.589682928 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469998792 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.047643857 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.771782833 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78060527 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340042801 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768319853 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458753666 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.716522804 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.868818834 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.437191457 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234580679 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.926999512 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.775608303 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.777444955 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711341829 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.381096442 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884221115 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917946241 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.793524081 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424179577 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067849807 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.146981633 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.823935179 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05249778 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.712564017 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.715496422 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001270319 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.730135177 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708354052 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.626694762 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.706707263 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012643354 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81094199 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.343876275 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813945585 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.86227541 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.784881894 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795284367 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781540733 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.996668569 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.651842895 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777697951 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.024862208 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02742922 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797171536 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.870514058 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708880559 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.77805946 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029468862 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.985576183 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.104853406 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.221278539 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863606536 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78812503 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.792485428 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.780712553 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.787487765 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.047273635 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838252812 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.759855272 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893796509 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.744340056 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030211955 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.694520823 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.001815522 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.091206549 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.012366228 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.096369687 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02681181 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846455565 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.780598657 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.781898527 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.44911366 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.389635518 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.000440105 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.770079382 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349962526 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.786924017 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.777041875 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714173686 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.444693275 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.092414304 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.857984124 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999821994 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.803031609 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052671366 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713175967 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.920249149 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.767191732 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.999260425 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.429720593 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.848499833 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036333266 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.106548782 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.097353443 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788197836 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796821404 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874402807 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798516214 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.285012401 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030355321 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.781955845 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.781427984 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.454682603 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.826235938 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787818526 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.781224556 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.315554415 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052688753 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.807568475 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.784471264 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.66293796 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.788056933 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841418399 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780009847 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.787198732 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.30337378 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.290566959 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.783239795 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.427240937 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997973754 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784269868 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.438864864 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956726176 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.799726501 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048375745 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.84648187 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.71150408 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.482368938 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.484301721 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781422414 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.713294811 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.778798263 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787327736 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789818702 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.978363207 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.053078655 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827848579 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.442636745 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.880348889 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790878072 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.788434679 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782193504 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.301564966 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785900748 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35205409 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.907567695 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917158869 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.799182574 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.714770881 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.786774015 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782970206 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.778651528 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.728986378 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824841435 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.432703586 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985956229 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038703204 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.197157163 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795968237 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.402654909 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.892186881 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.797267519 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.042073692 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357257334 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.896711121 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865688938 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.793457355 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.4545586 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.514108417 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348446586 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078935639 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102769224 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126446535 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.210409637 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.115472885 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.87471192 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014939576 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.307335788 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.840727113 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.875563003 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731310763 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802172839 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.435026119 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131353102 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796815868 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006656808 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074806501 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.100712235 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914810411 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.993928156 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818200091 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.648462473 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828356878 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.301709629 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806963753 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.198207167 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981459874 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874130524 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.037658114 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.865279839 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.783534243 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124914186 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827369054 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.491996511 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.146229907 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.235794883 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.215896678 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008951556 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.794529919 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.22929777 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137066193 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.048706676 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.921503272 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.720604298 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.795440056 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.796407246 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.778607255 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.76372743 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.652522068 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.038105885 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794379257 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019157169 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.969001257 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159311793 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.690464771 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.790809755 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786467444 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042100926 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.609224531 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950825657 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.160639724 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.364565485 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794009561 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.716544724 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71442893 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.49053864 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.791319893 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.757866706 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011758193 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.89677984 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.474290096 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.219126543 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108223492 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.036310813 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.792414951 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.055888728 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059325625 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.275569215 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806017703 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.880194755 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.050417018 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.512645931 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.008143115 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.021677412 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336734188 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.013333365 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242046683 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.741977102 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.789038701 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.001936995 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.00959036 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.13509566 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959989959 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.499710381 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.801319067 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15443438 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8517918 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.127455847 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.975345767 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.891522505 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801860238 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870734595 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798238022 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.800130624 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.799335743 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802282003 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.129540974 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901070282 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.801735253 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86918293 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807144081 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.35723056 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.799917911 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064841075 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141204657 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126352058 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853544626 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.789313283 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788959729 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721663046 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922664327 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.233853927 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062300064 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.913796742 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.931987966 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813272825 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.057624483 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.104761981 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111584751 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064274511 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.685153098 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486046376 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.924716686 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.011365531 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798592683 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.998402137 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026187515 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112151475 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261137194 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.9907089 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.988968572 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059770134 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.161288392 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.785970752 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373416408 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.796247337 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197832262 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.827061484 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.1356639 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045021352 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798543792 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915753741 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.798607593 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.991041102 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.241652174 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.483033845 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.138784351 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647031304 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.799163137 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067650509 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.118705592 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100072222 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873104637 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80004212 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.484935509 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928932638 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.696522887 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.035388036 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.792294946 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999274688 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.502427958 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.798872879 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064771161 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101768404 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.787128296 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.725446449 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829401418 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.797293647 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.012492846 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010526598 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044546725 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797730708 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.7989222 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.604058693 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070079239 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852935492 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72280278 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.793946735 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845827156 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.022827905 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808115233 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.304417008 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.491302673 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073523282 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.708700695 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808792078 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.242436713 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179338398 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120869756 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.313567422 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015392384 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.349103268 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.697317547 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16958566 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.78950299 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.250966053 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172059189 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.785997433 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.338509538 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90113251 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.054928827 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11856756 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.789519421 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.514161076 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.82614812 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013349149 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.163077654 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.730443629 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.797415239 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.820957168 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.790240099 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.808435518 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798513462 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.757211222 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29799726 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.639342194 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28088771 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.78831613 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.766380739 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.084181344 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373276865 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910516189 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818620963 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799228311 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.500370847 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.079623556 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.045386418 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.358730978 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.869714308 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.79693146 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793284135 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.72194437 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.996116395 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.990850245 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084394957 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.201837795 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.914502423 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793846125 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.005042258 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000748289 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.146929471 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925994835 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.978186412 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915989278 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.716450355 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.506324101 seconds)
  done (took 1622.110277128 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.809333697 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.832083539 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.840551836 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.844854614 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.810624913 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.836128491 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.807227875 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.83394602 seconds)
  done (took 56.323947158 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.793686577 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.809194693 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.798907299 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.79225293 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.798303592 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.790075027 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.955293194 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.802007396 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.796870672 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.798394015 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.790270735 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.788405176 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.045499563 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.815020702 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.788110726 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.768969967 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.798009701 seconds)
  done (took 72.659625469 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.79040974 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.365471697 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.822470541 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.788984455 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.108321247 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.793623798 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.889715513 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.802385793 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.792244785 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.207394298 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.086158059 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.805256166 seconds)
  done (took 89.956759486 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.806091634 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.796753495 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.797731024 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.797495342 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.798106467 seconds)
  done (took 10.70974584 seconds)
done (took 2116.592677741 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.025305411 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.986448743 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.026491111 seconds)
  done (took 5.718990473 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.938793365 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.987020146 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.106950432 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.126911561 seconds)
  done (took 9.870541333 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.109654252 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.185713966 seconds)
  done (took 6.001322641 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.133996175 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.806625952 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.16964922 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.790191957 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.793934152 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.793821685 seconds)
  done (took 22.09005568 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.79364537 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.797910153 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.794163588 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.796716956 seconds)
  done (took 8.887750893 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.77178187 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.479904983 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.771675827 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.788876405 seconds)
  done (took 20.519276663 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.943340391 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.910840678 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.937786357 seconds)
  done (took 7.498580001 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.016824058 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.023586271 seconds)
  done (took 6.747005192 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.953066711 seconds)
  done (took 3.658940267 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.821803766 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.064111295 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.293570326 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.324143555 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.38284671 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.626193972 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.144068542 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.032340228 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.251959832 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.256707541 seconds)
  done (took 23.904204318 seconds)
done (took 129.738634642 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.145095389 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.827794476 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.996880462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.154026506 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.035343836 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.996813923 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.99765554 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.143111896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.842537657 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.825253801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.156508504 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.029618425 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.954638042 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.824255731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.96236133 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.818622778 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.027078163 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.173878111 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.847662958 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.06286969 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.005948265 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.803328601 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.994059175 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.821612978 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.032052886 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.954179701 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.347521384 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.818393599 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.981379207 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.360334245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.949598023 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.1926181 seconds)
  done (took 165.791569589 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.787466508 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.78828532 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.786549598 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.783810163 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.278342701 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.784156159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.783190241 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.779634157 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.214553479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.213020881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.775494041 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.251155035 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.773801179 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.770576082 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.771826623 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.767427666 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.381346554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.767338345 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.764791469 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.761265382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.760389226 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.084126836 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.757150531 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.106036696 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.378365997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.757036921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.756381605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.756547224 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.756269515 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.755488083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.755484489 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.757277976 seconds)
  done (took 206.072337547 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.713125327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.757253236 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.757081142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.756681697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.757682234 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.759295066 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.757085567 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.756776623 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.529960687 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.520764617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.758995433 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.757780265 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.756329736 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.756765764 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.760130247 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.756558529 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.756413382 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.753326822 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.756974132 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.75819345 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.760728729 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.520130015 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.758110496 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.504144106 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.757948254 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.760322713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.756545035 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.757758637 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.756613679 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.759581636 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.759696707 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.757342291 seconds)
  done (took 216.91863534 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.01195335 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.762198695 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.763186812 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.687358195 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.763009452 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.762131396 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.754241599 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.011453199 seconds)
  done (took 18.189349419 seconds)
done (took 608.688733438 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.206449467 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.062929363 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.939084421 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.784285704 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.140549981 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.832785157 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.778797461 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.846377157 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.388056095 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.853330252 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.433773397 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.806692102 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.513115592 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.807318405 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.901029705 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.841723415 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.363266679 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.437913155 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.961352557 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.965375797 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.960569496 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.708908945 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.865024389 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.430010128 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.546437822 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.760789172 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.85107658 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.356676626 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.790085846 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.936944704 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.472656717 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.068725361 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.798396796 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.78318793 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.837309771 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.816088976 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.045675668 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.796611792 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.9094582 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.523905097 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.955533357 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.307892163 seconds)
  done (took 98.060405966 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.748109501 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.745935949 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.747091528 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.746317802 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.748016202 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.746473253 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.745924359 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.747592624 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.746331909 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.746341527 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.746284383 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.746565452 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.746845915 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.746262288 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.747835971 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.746934685 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.746659942 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.746780252 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.747052299 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.746399004 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.747360799 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.745766768 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.763896965 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.746470298 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.746741746 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.747513493 seconds)
  done (took 47.117104297 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.765739421 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.918284168 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.005024611 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.79141627 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.766268939 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.769026681 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.784373188 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.771177556 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.768542064 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.769089622 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.854925459 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.7726892 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.784304487 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.005045549 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.785573252 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.766362843 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.766195458 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.766726044 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.925072937 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.784265586 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.786817884 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.771456048 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.786488518 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.780258526 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.76860785 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.767454605 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.771805292 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.244930468 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.778075141 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.854535079 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.814698871 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.792011549 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.195216759 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.018682476 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.825777164 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.776969392 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.767782806 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.861132732 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.776064094 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.768456968 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.785628651 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.774198224 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.005679785 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.272704889 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.784282216 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.768112536 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.253968515 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.869113201 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.811499651 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.779881765 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.009058797 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.787204705 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.768769749 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.768572689 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.805089951 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.77776934 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.769191199 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.114321683 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.782652281 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.787547775 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.77348944 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.769595617 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.93029052 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.778320306 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.919406682 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.779882867 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.77584262 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.770431224 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.007689921 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.788129562 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.272252376 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.78517973 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.768692989 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.857353049 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.925255637 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.283865105 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.783672824 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.93141088 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.212004169 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.79457055 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.777111703 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.235227994 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.799047457 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.777731679 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.77072532 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.771186216 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.769870802 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.811781033 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.786909264 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.201366882 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.283000885 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.134830666 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.798696241 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.787115526 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.771528303 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.116457316 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.779171785 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.770425285 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.001198267 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.28757595 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.786724401 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.777615916 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.260171717 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.787296938 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.789500421 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.779399406 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.011940656 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.78990531 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.813105427 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.770727552 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.777373423 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.774978826 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.789717095 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.778474297 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.771115388 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.253995245 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.88067561 seconds)
  done (took 220.313651235 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.768071341 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.771819933 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.767120636 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.77216005 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.766124715 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.770817554 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.766049994 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.767203973 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.771649609 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.765221787 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.765651554 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.767260101 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.767332577 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.772775102 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.777971038 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.77204588 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.370997971 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.76700924 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.766789566 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.766347784 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.424811085 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.773594021 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.767348849 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.766842195 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.765572669 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.76680428 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.771850532 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.772304457 seconds)
  done (took 164.474757203 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.772957405 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.890283773 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.791409429 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.801589017 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.781719024 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.770674003 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.796535704 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.789192984 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.777933608 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.769741196 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.769370852 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.83406484 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.784369646 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.869332548 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.805566233 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.804109642 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.876630832 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.780776839 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.770722646 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.770648157 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.800887524 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.761466611 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.835289032 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.902102994 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.791915788 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.891838228 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.773185111 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.773857012 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.773186674 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.890641485 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.789509643 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.8328855 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.802830894 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.792306733 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.896651975 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.891115514 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.879181852 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.803633336 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.778482867 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.772027714 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.770657504 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.754400694 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.891306278 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.792214865 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.776283995 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.873321339 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.793458682 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.775769231 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.78307213 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.772324287 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.788633958 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.792311668 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.842211807 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.906975233 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.807594068 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.79898849 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.800007587 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.044168183 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.780237808 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.874768755 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.762847048 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.891431341 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.795283853 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.754461768 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.774506536 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.779228029 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.802406774 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.805501036 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.879947908 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.78477114 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.874852455 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.809097393 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.781765613 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.773773283 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.776429371 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.894222182 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.894415827 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.809808051 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.813210449 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.806971944 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.765368867 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.775197506 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.756874876 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.793151541 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.779209226 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.8916683 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.894717787 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.784802974 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.777034688 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.778344785 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.776670844 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.802161227 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.903289962 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.811413633 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.863602882 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.845740601 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.851749101 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.791290681 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.789228926 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.780585946 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.841817941 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.790790248 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.787576158 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.093106116 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.845524666 seconds)
  done (took 192.382010862 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.147965653 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.824563562 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.833754182 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.099353928 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.13475289 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.750028464 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.821726421 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.822144627 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.850169075 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.017594411 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.894114196 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.842354209 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.81355612 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.800442066 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.820751528 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.846989825 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.829985739 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.183990061 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.938550214 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.968771779 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.815042276 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.116122434 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.102894879 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.211953247 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.860386581 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.206396228 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.400390775 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.962756439 seconds)
  done (took 58.612950399 seconds)
done (took 782.634960447 seconds)
SAVING RESULT...
DONE!
