cset: moving following pidspec: 27332
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.380051911 seconds)
loading group "string"... done (took 0.577715576 seconds)
loading group "linalg"... done (took 8.173385179 seconds)
loading group "parallel"... done (took 0.170958567 seconds)
loading group "find"... done (took 1.238367956 seconds)
loading group "tuple"... done (took 1.890696592 seconds)
loading group "dates"... done (took 1.356146896 seconds)
loading group "micro"... done (took 0.221164039 seconds)
loading group "io"... done (took 0.999108463 seconds)
loading group "scalar"... done (took 40.934282002 seconds)
loading group "sparse"... done (took 12.882944334 seconds)
loading group "broadcast"... done (took 0.998440257 seconds)
loading group "union"... done (took 14.442518792 seconds)
loading group "simd"... done (took 5.192308602 seconds)
loading group "random"... done (took 9.840336872 seconds)
loading group "problem"... done (took 1.913385194 seconds)
loading group "array"... done (took 23.320445882 seconds)
loading group "misc"... done (took 1.926750982 seconds)
loading group "sort"... done (took 3.716348518 seconds)
loading group "collection"... done (took 19.789865427 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.558654472 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142265961 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149884746 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138730278 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.167417016 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13439155 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142305522 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101098941 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.877065443 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.168074397 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.131587049 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.433537827 seconds)
done (took 5.553708381 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.191181014 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094121422 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09780419 seconds)
  done (took 1.254697795 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.08345451 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14416604 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.085267175 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.085668098 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.085502573 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084681329 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.084824832 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.085260204 seconds)
  done (took 1.717861389 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.09013422 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.087724554 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084384984 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.086153148 seconds)
  done (took 1.409736263 seconds)
done (took 5.731260276 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.807152037 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.232212744 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204122463 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.437070522 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.151619797 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.201014238 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653315946 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.339764342 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210532463 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09520491 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.13072071 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.370540976 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.145949391 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.659218465 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.096866798 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.113769125 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159378142 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435372815 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08739305 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102952112 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.109482894 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.147265919 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103135902 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092985918 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169541805 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.086449115 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.159144362 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.102256269 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08494707 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.236947216 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.193723634 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.683372441 seconds)
  done (took 10.902265434 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115687315 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11833372 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.087363093 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144211854 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.118052712 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088633488 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.094162011 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086209128 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.112334624 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.148567676 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.111290125 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125005184 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.085454935 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085601352 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.09973501 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.229404505 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103935657 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100465233 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087075566 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.097007033 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126779009 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097522514 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.099049608 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098366728 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.148022035 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200397822 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116098344 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116506658 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.083194162 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099898117 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133107777 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14638257 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.084801267 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082337608 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.145326398 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113073423 seconds)
  done (took 5.227633752 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.010370974 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.16879551 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10966742 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151847339 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.083290753 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.12946833 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.086625021 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100552691 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.228442382 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.466454389 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.654688048 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.155136094 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132122925 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.11232507 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.123720264 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08755122 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083774749 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087881692 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.086195765 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.550695513 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.120064057 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.127311058 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101458967 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089386946 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088986562 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.084022553 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091632481 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082261725 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08764102 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.131410022 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092543591 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.31580165 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144604604 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087765073 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.96274385 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.185454913 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085812147 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120852714 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.183840367 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105785815 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.158719446 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.222467499 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084762144 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.183438292 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083822189 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090391771 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084247924 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086331621 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105054417 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08251872 seconds)
    (50/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123815437 seconds)
    (51/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.140876275 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084484891 seconds)
    (53/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085656711 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.19306096 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084636857 seconds)
    (56/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1012974 seconds)
    (57/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.167600678 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.171829413 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085062856 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.317341132 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111002617 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091015603 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083765455 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.212839306 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138620868 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.087475932 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086530168 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087823941 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.087775936 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.395246689 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08530442 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.103263795 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088613492 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.096807217 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089570905 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090133084 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093011932 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093363177 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111778084 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085897219 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.092231802 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085234115 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08383654 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085092963 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.098734702 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.409082639 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085419143 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.091242338 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083168897 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109846849 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114645869 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086126022 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083979564 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1193101 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085289073 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085180872 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086643759 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.098964757 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.089849791 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.231880788 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089117772 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.121278205 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.119848861 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.089477452 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118499548 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099252849 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087429968 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.496326818 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.08356651 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091453636 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084824975 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087529554 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08562789 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100983262 seconds)
  done (took 24.251818167 seconds)
done (took 42.453064139 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271275838 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084174225 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084369126 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085228958 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084670204 seconds)
  done (took 1.761468331 seconds)
done (took 2.897257763 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146001286 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11851136 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082941221 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116829838 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085917904 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.120468554 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119909715 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095565668 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118531254 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082681373 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116515517 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082873293 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08279765 seconds)
  done (took 2.518599685 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097175158 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10004731 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085987836 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098108897 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079135729 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098478515 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097367941 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105369575 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097814624 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08873984 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079376947 seconds)
  done (took 2.15227478 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096584528 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100404204 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085873253 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097326941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081586344 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097436227 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097884094 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101893515 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097912015 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0900081 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079704676 seconds)
  done (took 2.149781263 seconds)
done (took 7.941572729 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09214344 seconds)
  done (took 1.205661598 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.554685773 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.607226724 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.093371092 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.118629442 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.211359156 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.126400384 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.25389792 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.100483946 seconds)
  done (took 8.358037451 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.111711277 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.097181972 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086111947 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084366058 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087866894 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088217311 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086228691 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087817786 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085465884 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085675476 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089695448 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086386567 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087324006 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088330635 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087305016 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08485994 seconds)
  done (took 2.61968301 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111875128 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112251543 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089050637 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.090640266 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088734173 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.088150996 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090458552 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090152378 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087125073 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088439178 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091333289 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089546133 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087913348 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079716749 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090243536 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092240286 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086898181 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090222007 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091048367 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091194655 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090702426 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.079741735 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087452581 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089814944 seconds)
  done (took 3.399951896 seconds)
done (took 16.706998629 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.122501601 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086492249 seconds)
  done (took 1.326951509 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093709207 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097134983 seconds)
  done (took 1.321860823 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.093415312 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08100072 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.103226874 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092192741 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081481482 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080645717 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101103589 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081058784 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081381253 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081257898 seconds)
  done (took 2.007735216 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081357569 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08934314 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.083455727 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095036206 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088116467 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079345769 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086742328 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08297773 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.092156808 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078051358 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086106988 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098598269 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08597248 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100280098 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087147749 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083777862 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085364131 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.082354239 seconds)
  done (took 2.697550439 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078876144 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081331984 seconds)
  done (took 1.295750703 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079632297 seconds)
    (2/7) benchmarking "second"...
    done (took 0.07905821 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081818188 seconds)
    (4/7) benchmarking "year"...
    done (took 0.080942797 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078224549 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078439272 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078267399 seconds)
  done (took 1.687471518 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.422623183 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135705528 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.339809801 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088371006 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.097720405 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.27882814 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082475357 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.087870572 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088006952 seconds)
  done (took 2.797090099 seconds)
done (took 14.270827741 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09753233 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.103327069 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112472297 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.401585868 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108648135 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083305292 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.13157158 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.198629924 seconds)
done (took 2.379354556 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.22587975 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.814655108 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.509481335 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.226321879 seconds)
  done (took 2.684960323 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352607149 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.103123111 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074814628 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083734934 seconds)
  done (took 1.756836605 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083582906 seconds)
    (2/2) benchmarking "read"...
    done (took 0.085597865 seconds)
  done (took 1.312010872 seconds)
done (took 7.12174326 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082125617 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.224179303 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081974225 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.080624006 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082598379 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.079960556 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080125623 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08019326 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082187966 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082482071 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.082301836 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082112883 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082777646 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080221118 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079636725 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082234015 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082009505 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079661902 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07988954 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079583423 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079510864 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081558992 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07934464 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079380844 seconds)
  done (took 3.263894413 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097178268 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082570226 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.087392033 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086016951 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084164524 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086461218 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.086537316 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081427537 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086461571 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084469091 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084143209 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084035247 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084486213 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083871099 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084264952 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084053426 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08643678 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08198002 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084789794 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.084606715 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086474308 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08249515 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084573235 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086511938 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084276277 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084509466 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08482161 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082173242 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086512487 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084107203 seconds)
  done (took 3.705426487 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085073573 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.078573978 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079573372 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08825271 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079181433 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079621097 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078330599 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079151321 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079354821 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.078465632 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080263498 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078697788 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079436927 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079906335 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079728121 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083366117 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096787388 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079091151 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07933957 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079778656 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086217781 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078769654 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078864747 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078972068 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078356127 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078250472 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078918829 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07863236 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079962055 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079006185 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082611564 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083178368 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078911789 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087651264 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083310559 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078630083 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084168009 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078722291 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079934935 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079063239 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078547435 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078998352 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078930964 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088186577 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079544232 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08000936 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07902713 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.079939601 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079361821 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.080739592 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078217504 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078393572 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080855844 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080645259 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084014265 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078105503 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079658789 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078154775 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079705439 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078658085 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.078599876 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078690295 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082367371 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079867835 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097554783 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088394909 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078929608 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080550788 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.079777897 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082326091 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080365732 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094808059 seconds)
  done (took 6.988745266 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101405196 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100673421 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081965842 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.081772915 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077439881 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079571903 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085974525 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079668833 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082057598 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.099615327 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079980038 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082076346 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081922799 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084273218 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080404607 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082148314 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088832091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077448511 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07983175 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084055275 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08000027 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085332447 seconds)
  done (took 3.026397387 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.162730935 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086179782 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.121570516 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090774019 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08580098 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091274268 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085691943 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085740014 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086026778 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083317558 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083347402 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085492418 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085722888 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083542703 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08370024 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083747106 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085599769 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083360828 seconds)
  done (took 2.812261813 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09073367 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.083220019 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104800907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.082011309 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082039973 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085396864 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086129242 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089733939 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084452897 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.082993834 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089816701 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084503263 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08447533 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08193298 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084255727 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082205877 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.084657511 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081790029 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089274722 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096058132 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085960859 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0895239 seconds)
  done (took 3.065787756 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094310957 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08400988 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097648486 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084838081 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077082626 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079497275 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085759653 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082029159 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085940577 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.08357353 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08178519 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079447643 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08413531 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081631601 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084536985 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082398037 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084336079 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081817724 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083759883 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077245989 seconds)
  done (took 2.836951796 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099024125 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083530646 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082485173 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089897363 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082922234 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083186807 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089674051 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083582826 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08297482 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103859113 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083277556 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083264566 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089706893 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089630374 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083301458 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089666726 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089296914 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089469269 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083496466 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082958575 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103803828 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083485563 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089720386 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083044227 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082697892 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083169562 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083264131 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087412373 seconds)
  done (took 3.603168378 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082245291 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08186705 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079898381 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079850354 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079571323 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080069041 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079899698 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080294419 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082254415 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080869653 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082546925 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082308018 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082178549 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082057562 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082319052 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.082483987 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082232048 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079866273 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080033623 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079886914 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082326861 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081920077 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082004252 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079878017 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080156313 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082678068 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079958138 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080031169 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082200186 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080122985 seconds)
  done (took 3.600808753 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089338223 seconds)
    (2/2) benchmarking "in"...
    done (took 0.08881148 seconds)
  done (took 1.344752091 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076473192 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0966781 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078943087 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087494409 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085114182 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082773629 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.088485462 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085286643 seconds)
  done (took 1.845566262 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100413371 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.090853274 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082589517 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.091773773 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.090741896 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100168889 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145557727 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08182459 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092330709 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082342669 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098572878 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08346641 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092553176 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087243333 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092410657 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096002804 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079208705 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086691255 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08374063 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08011278 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083061263 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095645538 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09152273 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.076874211 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087469012 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109330621 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097919781 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081169178 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088783309 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093521606 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091966641 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07587084 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081814588 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.081955563 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079498506 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.090744848 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101394048 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088991951 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09480497 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082006917 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09042298 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076681188 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091014315 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092902409 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098035397 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082275573 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081851218 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077164699 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083143919 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08853189 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076861632 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086672484 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076664242 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094021075 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089602709 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097411087 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080778264 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087568648 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088077395 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08855628 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093005097 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088401684 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092232571 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081282118 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097605857 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091712935 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093886741 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077017567 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075693284 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.07946685 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095858088 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111191089 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09188006 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081377991 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082132343 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.07933574 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088657653 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082226319 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090956395 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093952255 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080995269 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086159762 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094475448 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086277331 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088365292 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.087713638 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079633183 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084156373 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082759873 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101847119 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083215479 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079196047 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082442437 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.097120609 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088114405 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.08171653 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082518803 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093598396 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076141115 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.081797195 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082588046 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086853796 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.0947633 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084876446 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084813302 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094520719 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087218399 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086186965 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087557695 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.077371444 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.080724153 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.082110126 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091747612 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.074504558 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087603901 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083704263 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.080903049 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091860579 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078117037 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.079667483 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.218836575 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096187603 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081933045 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080219748 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090398635 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083214371 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085708201 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097236171 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08106812 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077212768 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077200194 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09033387 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082045466 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089761361 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086555844 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089174538 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076333766 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080065891 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086870661 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09510992 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084950192 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088035569 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092157081 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.088569938 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081801936 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094619671 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088644033 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084695026 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091774193 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08587646 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07759806 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084061869 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088532548 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080634389 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089574931 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084717126 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088967278 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082744429 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081216655 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088123607 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082856132 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084186303 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086301146 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080765529 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097518835 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088540581 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076630844 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078881097 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088692727 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082985836 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080557169 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08385489 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088240908 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08154872 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079415227 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080872842 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087261495 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089514352 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084763418 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08210519 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091434531 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.098888484 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080855836 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088480877 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081134009 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082235918 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.081824994 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095777086 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091751161 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085332935 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088663636 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078938734 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090927522 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09451042 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084795199 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080207293 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083422361 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084679546 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093131879 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085126292 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.081260694 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079382937 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087319342 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084082365 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088002892 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080989166 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083433579 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086473965 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.079958887 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08687368 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08162109 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096101616 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088878759 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076648753 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083323989 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079612427 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092357067 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076382716 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082527178 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083624815 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.081514224 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080385104 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087968547 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076042216 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093404931 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094135988 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086439399 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083056219 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.080225865 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092974721 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086183217 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089147539 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087844723 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089868992 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095619929 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082582931 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089472983 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095642875 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.080245867 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07480423 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089644423 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.078971754 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.079215522 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079882078 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078588112 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.218322656 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088401706 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093266155 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077351458 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08976668 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081620517 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085464169 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078082473 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091002821 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089322273 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08605146 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094203117 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08266521 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082010763 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09013952 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081813863 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.081712297 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.082828296 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089234915 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.081677708 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088121728 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084443881 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08796982 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083976498 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080631883 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088245057 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082246851 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087179096 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090869844 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081439013 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087898862 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088786969 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.082119644 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088267802 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085874235 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083710247 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089074613 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087971062 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086864622 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088600584 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077100033 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093432313 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.080827943 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094771369 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086882027 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078868091 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087201002 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088453699 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.086127139 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082177547 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.081829891 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088123774 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081169163 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08883282 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094089347 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082649218 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097486347 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093236623 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08718052 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088468889 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086761898 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087390311 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083794348 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085520023 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082807716 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087127399 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081312697 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090044712 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0889818 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08613875 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087983807 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082057143 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087087075 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.082425584 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076036354 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083968275 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083785034 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.081679429 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094760165 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.081908257 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084431366 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080485218 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082286015 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081135564 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078599451 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.088430415 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088827111 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.081779295 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092124894 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083950234 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087439004 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097144199 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076079367 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.079767018 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079201076 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082248584 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09442844 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.081742014 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095682095 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086980148 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084130733 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.07964724 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.082112476 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.079636154 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076271775 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079115848 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089691636 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083627741 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080483065 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.080585515 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088285899 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081079608 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093490998 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.080138971 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084403037 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.080865303 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078260354 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082996269 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08269546 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087220533 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.081376763 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082173916 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078105951 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.079860838 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084375853 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086266887 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.079646038 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.219382845 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095290124 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083238882 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090524307 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085407558 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077255189 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089575622 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081672891 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.081595348 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084583817 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092231051 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089878682 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082303738 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096250411 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081033786 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087786611 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082152602 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080077997 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081377562 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08128916 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.081529482 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084233272 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.082954506 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095251977 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080702365 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088016087 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086774814 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085553419 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093014446 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083238127 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088042461 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08714697 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.0832512 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088337804 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095509664 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085396905 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089214141 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082898429 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088232201 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091796401 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083779048 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093909443 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087353549 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.081893973 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087702637 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082872896 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081306069 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081272791 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080830435 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09200683 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.082398746 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083730729 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083867261 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079822952 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087612407 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084279298 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095332153 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088922188 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089366507 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.076954901 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079369468 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082116805 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.082826348 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087211784 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088653125 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091448148 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088127208 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085095711 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08088679 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09583254 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091423646 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089242385 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082440925 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.08934228 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.082418379 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088739062 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085994497 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086689136 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082436888 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089658324 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087404254 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08404114 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091986818 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089501323 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08221198 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087364677 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087492814 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086861823 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077228511 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08180419 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088343629 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090180684 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088147463 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081363743 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097156393 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082567209 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086501995 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084066315 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080654216 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089965919 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076825848 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087736989 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082784125 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081983206 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076538282 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08334477 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082699675 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088226826 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08356392 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076432565 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096880204 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095582863 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087640858 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080119977 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079687616 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076088592 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076205771 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082864042 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081743574 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087395814 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094982471 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082996018 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082599101 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07567398 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080273375 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087616805 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.088634736 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.210841502 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.07766216 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085298143 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088656014 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094604058 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081645551 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082439213 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089877536 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088966452 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.079717998 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084810087 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079427449 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089701043 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099397966 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.082200536 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088378777 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092036433 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094689027 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.082755999 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078562565 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.082660987 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087927173 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08814251 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.082835299 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.083386886 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101530387 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089624639 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084233141 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081024728 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091667258 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084826992 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09577761 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082536396 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.082274529 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091011406 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088657613 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089483301 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093057886 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093717759 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088161304 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087831002 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081541274 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08682888 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080835565 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083890627 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.08243246 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08162995 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086132689 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.088505217 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084417959 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099733394 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096046373 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.083762156 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079176947 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084573914 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084254668 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07731216 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.082759361 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.07979869 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08013093 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080242947 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080936689 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088434351 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091463449 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085683357 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.082033606 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.081699131 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076375821 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091250444 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087999747 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087971793 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079406002 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.081582216 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.081700317 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089503052 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084069776 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080503979 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088374101 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08718078 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087696898 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077096772 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09361987 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081024971 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087662737 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083939735 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081387079 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.081974094 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089080408 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085545736 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082986302 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088260032 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.088181561 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083014446 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.079580603 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079133994 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090554611 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079196814 seconds)
  done (took 52.897306121 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114221715 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078798868 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077631658 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077557281 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087146535 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078655026 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077198898 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079061349 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078464934 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080612482 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077641935 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078225106 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08577612 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093079699 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087950453 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082115805 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077137199 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078527734 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077224338 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078485299 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084925581 seconds)
  done (took 2.997206661 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.085950707 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.092645867 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090314543 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097455992 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08637753 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085392392 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090211431 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084931463 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093872356 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087915772 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093643642 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085625068 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089216891 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.088125325 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088526815 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085679528 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093898333 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086556431 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.0850981 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090501068 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085531974 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090315434 seconds)
  done (took 3.197118248 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.080265055 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.079943387 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08809027 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.077131674 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.080659407 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.076287072 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.084220419 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.079082847 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.084118759 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.083421299 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083107239 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.08307253 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087384894 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.076428118 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.083869999 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.079304205 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.122484733 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.084382087 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08206148 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.082125825 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.07707529 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08822965 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.076842974 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.07735716 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083580052 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08406059 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.081431476 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.079857869 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.080651008 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083285955 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082143884 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.078942599 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.087673526 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087305838 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083335261 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.083009537 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083820653 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.081678686 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.077017267 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.079664874 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087220796 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.0773279 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.081604045 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088390142 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079577094 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.079750003 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087802961 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.081318909 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.076590146 seconds)
  done (took 5.296880841 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.090752714 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129066848 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.083072106 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109336076 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.094741964 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.087401557 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086005915 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110721869 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.079322315 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.079680372 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.096535976 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.093769333 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081531083 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.085358634 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088280959 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081401753 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.081568553 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080229382 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.084091491 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.080250054 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.084446745 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.087731014 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.09460933 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.092931492 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.084468943 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08014738 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.097612745 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.085463479 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.091869781 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.084174614 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.084817408 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.085810084 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.095102204 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.083447208 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.079651283 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.083156405 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.09593733 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.080993002 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.083145433 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.078626445 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.082463844 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.084723008 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.087737761 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.096432193 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.081031172 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.086124013 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.080277076 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.078080201 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.092344874 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.082789876 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.087767454 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.093190646 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08419215 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.080685932 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.084503412 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.094871516 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.080433563 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.078783888 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.083284197 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.092325569 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.078585903 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.083821022 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.093075338 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.082260942 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.086745146 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.093511066 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.085494189 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08374001 seconds)
  done (took 7.322065533 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.089291929 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112765795 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09825136 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09826573 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091638062 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.092098547 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091345381 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.0912753 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091331383 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.096329147 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092518428 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132018971 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08686623 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093018224 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.091259206 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091571532 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091396481 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091691433 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091378603 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091164415 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.091201706 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.098111354 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091644008 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.098492475 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094598812 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087131016 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091153913 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09131768 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097818954 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091083601 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094644978 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091441818 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09127861 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098013203 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.094622415 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091235026 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.080681825 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091161064 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091269721 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091097634 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086681076 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097661771 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091297127 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086820429 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091135409 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091187936 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09766546 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.094606854 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09314505 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094771474 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091760896 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098138809 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091142943 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091430575 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097631716 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10159764 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097909338 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097195284 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092042103 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097742072 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097770412 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.099406006 seconds)
  done (took 7.123091369 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094514313 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087161143 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100476554 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077090843 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08004016 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088369168 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079697608 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.079886437 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08867374 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.088861461 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090988973 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088149377 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090500589 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090529412 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087951413 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090423631 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087920237 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088066439 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088554605 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087774159 seconds)
  done (took 3.042817718 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.089684517 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.099327533 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082534613 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087016649 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.084705567 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087027287 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084700475 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085238258 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083361472 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085267443 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09107096 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091948192 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082914861 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087269812 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091404273 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087700039 seconds)
  done (took 2.674368823 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097025696 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.088247367 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.093635124 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.0812769 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.082625944 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.078002469 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081302926 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.076769046 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077646706 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.094247898 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.080670564 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.092433219 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.080862232 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.080449505 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.078366684 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086971079 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077322092 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.078531566 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.080842867 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.093915537 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.085438573 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.079792908 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085332815 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081484847 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.084319959 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.085996435 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.080218796 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.082268553 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.079435851 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.081455167 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084609038 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.085486288 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.078115729 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.078966724 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.080307 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.096349188 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.081076715 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.081393183 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.087147008 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.080640777 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.079492284 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.083987123 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.080711056 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.081681997 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.077564579 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.081795743 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077731192 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.083990725 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.078629865 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084058405 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.081429403 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.083501972 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.081778458 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.0882475 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.083611447 seconds)
  done (took 5.843035952 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094477943 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.084778896 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077639187 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07941081 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085211004 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.083663348 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085243968 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.083048976 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083318202 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079947912 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083674302 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08477028 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083415481 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085814551 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083610776 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085745488 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076957018 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.083146051 seconds)
  done (took 2.793051313 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086064788 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080827534 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.089304076 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081858197 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.081841883 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084769884 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077244971 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.079623698 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079968382 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082165298 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082201125 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.084646114 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080161387 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.084084009 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082095845 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082157307 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.084267855 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079887212 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082128512 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077966286 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084147604 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080105493 seconds)
  done (took 3.085690268 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.109840562 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.102416693 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.158333256 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.097508441 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.104614712 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.089748565 seconds)
  done (took 1.941606504 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106334261 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117400824 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082335499 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0851367 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090412632 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085788889 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085565874 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085970264 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093062108 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091067052 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089032975 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093519364 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093227017 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092304403 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090643632 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090996146 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086233878 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085741578 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082125758 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097959095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086114868 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093625614 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085950645 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085690482 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086266485 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09274918 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09312659 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090550718 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085796636 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093223567 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090753096 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085481693 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093539345 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090526198 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085381391 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093017157 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086484337 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097956194 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091102649 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092647862 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085018695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091100505 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093178424 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090412987 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093588823 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086306426 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090233493 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086028688 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086275159 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099266547 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091684992 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092312626 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091331169 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093144983 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093054568 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099571564 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09039973 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092272351 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091030266 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091147053 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092121287 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090835163 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092395459 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09121713 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091307099 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092558882 seconds)
  done (took 7.286537349 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118894279 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082520308 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085984363 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091014886 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092716232 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086349705 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086303433 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086559664 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086330961 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083441942 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124697432 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086685659 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093499701 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093108829 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086597958 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087356791 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086252241 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092980035 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083870508 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099919678 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086104609 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092623157 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092914886 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092694959 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090759876 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091330264 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086343334 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086053036 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086329991 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085715738 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090019102 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086071268 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092164472 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082772147 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092006866 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086096015 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085938273 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089869542 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085907508 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091163003 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092387878 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097788518 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08581346 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085579781 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091092757 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085938516 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085764887 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082956569 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086055863 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083080521 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090278687 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090940349 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090726147 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092178639 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085951862 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08604129 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085822865 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086179077 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085649402 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091017463 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092433181 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08802633 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099417001 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086016343 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085695279 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092101487 seconds)
  done (took 7.218010247 seconds)
done (took 149.958598024 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209987837 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184205246 seconds)
  done (took 1.666134147 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.090239603 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.120487695 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099905508 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.152043025 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088053585 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12444721 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120570044 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098862426 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089563733 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089990133 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089635834 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.093022639 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.155844422 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.088115706 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089292368 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092964076 seconds)
  done (took 2.970449515 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.120654414 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.186321752 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.12808221 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.087513655 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.123744596 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.095894536 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090437326 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101118464 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094427263 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.089642534 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.096025363 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094317427 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.0892697 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093548961 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094369415 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096055859 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.08897318 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096036489 seconds)
  done (took 3.158219395 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120533449 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.114220016 seconds)
  done (took 1.529984852 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.175570898 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.149766182 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.218812151 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.363002249 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.173704063 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.163050388 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.162515241 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.158713102 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.132805861 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.151433254 seconds)
  done (took 3.140284543 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120452391 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175434984 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.3136587 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.140148506 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.094539516 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.113330123 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.1420573 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100531844 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.103064489 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102024563 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102181724 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096859593 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121641687 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094978867 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.091072879 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097607745 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125357931 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091104768 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091645795 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096986409 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.125480807 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088030214 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095135721 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.090508351 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.099435871 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.09944474 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08944872 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088094856 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096876816 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091302903 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.098020721 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112861242 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099484065 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.125785405 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092848715 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.125972045 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097522336 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095353541 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.091302506 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095810163 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.099530369 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098494394 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.097081817 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097139504 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08944766 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097049333 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089788062 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088201174 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099369291 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.089887872 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099181814 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.098256127 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.125590342 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.08928622 seconds)
  done (took 7.08782342 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.126722786 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.123894521 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089005715 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.131752527 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122981185 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088877414 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.124854162 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117665475 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.126990811 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089193657 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087532689 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.089139293 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099181999 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.1007938 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.136222011 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.124229321 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092043701 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.089241941 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126745125 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.127453192 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.087660056 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120581326 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116566192 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.126797229 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.086844477 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088443961 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.086888863 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.088411765 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.094451144 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09592406 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.087577818 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.098572596 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.103796232 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.09319935 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.085305868 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087290374 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086934731 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.096777351 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.09713019 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.097047206 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.095224618 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086614652 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087338702 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.088233014 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087908431 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086306978 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.096016197 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.096948896 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.095369794 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087331472 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.088386074 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.086886711 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.087915426 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.096955687 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094681345 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.097950694 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.097382146 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087161675 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087402902 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.089633277 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.098089587 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096899994 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097415083 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090909733 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.097253171 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087185079 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.098962333 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.09985898 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087880252 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.08796001 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.087026637 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.087087985 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.087793239 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.094429078 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.094602647 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.08810192 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.086912735 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087465396 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.096948984 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.095546943 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087091863 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.094096811 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085978366 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.086578265 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.088741483 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088858958 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.094071533 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.096749483 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.088143465 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086596546 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.086413742 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.086684035 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.085422893 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.093577395 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.095753978 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.094985913 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.09398167 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.08636551 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.09393144 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.092617984 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.087085293 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.093437604 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.085295948 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.087483971 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086801602 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.093348139 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.092715981 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.094654966 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086120836 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.220059795 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.095328567 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.099820787 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.08945273 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.096749877 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.09912829 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.097337335 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087321451 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10016797 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.088658787 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.098824143 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086090407 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.098615692 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.088155829 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.096772407 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087936067 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086504475 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.087200324 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.097534644 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.089630489 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.087013371 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.088537394 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.088211319 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.096669796 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.099907437 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.089561189 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.096422997 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.096505929 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.088818903 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.097197512 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.088396091 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.097085222 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.088287025 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088491544 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086969207 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.099369105 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088439466 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.087178784 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.087562305 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.097980029 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088045602 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097344205 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.096038152 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086803916 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.101096544 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09471324 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09299728 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.097772838 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0902803 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.087463481 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08761867 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.08756994 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.09533729 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.096770254 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088679499 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087156704 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.094898076 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.098573779 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.086721345 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.095512759 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095206169 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.095672809 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.087431426 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.087512445 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.098275285 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.098179369 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.095535565 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.095252968 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.095577896 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087550511 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094965036 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.095800906 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087404847 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102459061 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087622081 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.100340233 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.095479819 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.094306216 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.095881695 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.097120033 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.09790356 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097368336 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.098475877 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086830707 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.086556599 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.09588698 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086753541 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.086503558 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.095048328 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.088854825 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.088276959 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.100724718 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084740364 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.095126734 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086421508 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.096680821 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085933309 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0883188 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100019547 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086972916 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089845794 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.094322853 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.086063732 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.092758856 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095941939 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089918197 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.083694102 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087006515 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.094478461 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.093791202 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.08582758 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.222665769 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087618514 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.093454425 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.093453797 seconds)
  done (took 22.640726186 seconds)
done (took 43.502821113 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.220595321 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172977794 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181760993 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.13244971 seconds)
  done (took 2.107021107 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123507697 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.117031813 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.106116233 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.084968515 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.112845793 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084367209 seconds)
  done (took 1.959601397 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.292380893 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212458574 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196414483 seconds)
  done (took 2.029858161 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.22839615 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211516137 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.480380661 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.307772431 seconds)
  done (took 2.655575416 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.158651944 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.101237008 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.083866791 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.100556846 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.144619538 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.171790907 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.113855397 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.139079053 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.096337703 seconds)
  done (took 2.49296335 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.164650818 seconds)
done (took 12.7470855 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.16201173 seconds)
    (2/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.242416646 seconds)
    (3/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.211473053 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114824153 seconds)
    (5/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.211972678 seconds)
    (6/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.271010853 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.085291216 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.139003625 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.111661202 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093396192 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.26789789 seconds)
    (12/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.090265026 seconds)
    (13/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.239067952 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.12188466 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.207173614 seconds)
    (16/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.193226291 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.256367552 seconds)
    (18/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098387248 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.493403395 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091279344 seconds)
    (21/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.094064965 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.248401817 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.091396115 seconds)
    (24/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.22563856 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118487252 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091687685 seconds)
    (27/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.1268171 seconds)
    (28/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124400197 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.089882042 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192172939 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110900233 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091979575 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091284963 seconds)
    (34/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.192203632 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.160504741 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086334562 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.094147955 seconds)
    (38/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.079440844 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067495866 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.211580484 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.243356497 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.090252105 seconds)
    (43/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.091123306 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132794733 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.08063567 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.186911415 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.106419147 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142816053 seconds)
    (49/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091317645 seconds)
    (50/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.090178483 seconds)
    (51/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.140713628 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.106168771 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.109231745 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 0.164330736 seconds)
    (55/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.088562052 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.177360957 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106636682 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.128853228 seconds)
    (59/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098122892 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.085112682 seconds)
    (61/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.219641963 seconds)
    (62/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.091701144 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.17773195 seconds)
    (64/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06684594 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089002514 seconds)
    (66/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.197784603 seconds)
    (67/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.102520582 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083764612 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.089809495 seconds)
    (70/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210592471 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.144765405 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.079701567 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188174408 seconds)
    (74/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.137174634 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.105389506 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.157431683 seconds)
    (77/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109287215 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.104838797 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066564953 seconds)
    (80/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.189555739 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.093107026 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.088017646 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.105366509 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08403232 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091785566 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.090592688 seconds)
    (87/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093087624 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067518901 seconds)
    (89/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.122651888 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.242585692 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.15462882 seconds)
    (92/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093542018 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.110405683 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088917109 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.206504559 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.191246843 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.165578925 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.225794085 seconds)
    (99/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.20198987 seconds)
    (100/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091224301 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.143779959 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.112055093 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160486451 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.086830092 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.10726546 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.089111258 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092710405 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092785125 seconds)
    (109/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.175945761 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.114230223 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175138066 seconds)
    (112/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.199260288 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113253033 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.09703274 seconds)
    (115/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093248874 seconds)
    (116/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067982135 seconds)
    (117/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.087318958 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.177255699 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.090381456 seconds)
    (120/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091268039 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.13006277 seconds)
    (122/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.13883172 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201659623 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085595723 seconds)
    (125/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.088728081 seconds)
    (126/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067812587 seconds)
    (127/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.094383507 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067898862 seconds)
    (129/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.098713468 seconds)
    (130/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067963916 seconds)
    (131/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067546097 seconds)
    (132/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110444372 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.204950358 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.068010866 seconds)
    (135/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.098745838 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092421999 seconds)
    (137/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068030495 seconds)
    (138/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.084197911 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110261595 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089778896 seconds)
    (141/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.095571876 seconds)
    (142/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.068393615 seconds)
    (143/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139852988 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.089801627 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094398742 seconds)
    (146/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.091369769 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.084543812 seconds)
    (148/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.086210851 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09067934 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08530261 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.095280202 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.095800555 seconds)
    (153/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.16855676 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168230676 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091520801 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.111435653 seconds)
    (157/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.084035303 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091404123 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.084505077 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.173033919 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080617832 seconds)
    (162/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.140438374 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.118865802 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.087662488 seconds)
    (165/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.089217037 seconds)
    (166/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.122738855 seconds)
    (167/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.171034254 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.16475602 seconds)
    (169/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08431669 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.081107675 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08314141 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.109842953 seconds)
    (173/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068105777 seconds)
    (174/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.083671302 seconds)
    (175/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091325618 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.083674476 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.10398584 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.107985114 seconds)
    (179/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.086839149 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.089482971 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.176879143 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.132580542 seconds)
    (183/309) benchmarking ("sort", Float32, false)...
    done (took 0.151009061 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.084260933 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.098790303 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.094957778 seconds)
    (187/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.088939769 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.083941207 seconds)
    (189/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066684174 seconds)
    (190/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066313796 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066291853 seconds)
    (192/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.090212197 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.083821583 seconds)
    (194/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067021395 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.145984484 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.095590622 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088280512 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148746149 seconds)
    (199/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.178685456 seconds)
    (200/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.121684448 seconds)
    (201/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067865911 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.083128088 seconds)
    (203/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.077700653 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.083716512 seconds)
    (205/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.227944169 seconds)
    (206/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.069377293 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088381415 seconds)
    (208/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.128500645 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086277072 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093551118 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.109487082 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.08703298 seconds)
    (213/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.086770033 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.225644465 seconds)
    (215/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067957657 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.090422534 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.11117063 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.092681423 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069284891 seconds)
    (220/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080359307 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162688209 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085717924 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.112678089 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068905461 seconds)
    (225/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.199566432 seconds)
    (226/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.098595961 seconds)
    (227/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.081921231 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068664518 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108382461 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.090875022 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085566833 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.08582235 seconds)
    (233/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.139317479 seconds)
    (234/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077934799 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067728124 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086578804 seconds)
    (237/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.180786298 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067594314 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.146500088 seconds)
    (240/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.091121971 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091809805 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.105492068 seconds)
    (243/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094212644 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.089396458 seconds)
    (245/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100615142 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.081855176 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.06805135 seconds)
    (248/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067242519 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098209898 seconds)
    (250/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.091550345 seconds)
    (251/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068766404 seconds)
    (252/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.079235844 seconds)
    (253/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.06729405 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068010792 seconds)
    (255/309) benchmarking ("sort", Int8, false)...
    done (took 0.166938313 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085307079 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06944338 seconds)
    (258/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.100155789 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.082197006 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.08446819 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.085982707 seconds)
    (262/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.085946255 seconds)
    (263/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.086230083 seconds)
    (264/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.090483879 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067461563 seconds)
    (266/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067320917 seconds)
    (267/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067863017 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068481652 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.107833825 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.087098941 seconds)
    (271/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.08629683 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.091083437 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111163138 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162444949 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.088818485 seconds)
    (276/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.06720966 seconds)
    (277/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067965072 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084743496 seconds)
    (279/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085148876 seconds)
    (280/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.078785104 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.140134222 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.088254728 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199056973 seconds)
    (284/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067254723 seconds)
    (285/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066695362 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.083930112 seconds)
    (287/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.084133038 seconds)
    (288/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.124851879 seconds)
    (289/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06679746 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.192421501 seconds)
    (291/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.0674006 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.067333999 seconds)
    (293/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093413 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.089711002 seconds)
    (295/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067134283 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.083795507 seconds)
    (297/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.088770863 seconds)
    (298/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067818234 seconds)
    (299/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.084464177 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.104771764 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.088579834 seconds)
    (302/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.084271727 seconds)
    (303/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067432218 seconds)
    (304/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066836072 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083459898 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.083629364 seconds)
    (307/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068537527 seconds)
    (308/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.079614461 seconds)
    (309/309) benchmarking ("sort", Float64, false)...
    done (took 0.15027873 seconds)
  done (took 36.79405846 seconds)
done (took 38.138021022 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101275131 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116481023 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.092958313 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.110623858 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.100787248 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092979728 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.090344208 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.094990611 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.098798136 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.099168304 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098128871 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071180869 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094236343 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093758868 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.092741209 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114667611 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.098762542 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09310848 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.093240951 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.082771527 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.093177572 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084765674 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.084497882 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071327384 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.096260796 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089732978 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094638534 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093949444 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085792122 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.085094648 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.087112424 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.094230229 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.084653287 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097564289 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091587616 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.093241018 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095094658 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.095142646 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08466429 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085551889 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.09450131 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.084715464 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.092690816 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.091357634 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.089437304 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.088494152 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093000261 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.094513439 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113920088 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090217626 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095155401 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.095818809 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096691307 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.090053407 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.087186229 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.092488926 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.088477938 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114235038 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.093186341 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090311004 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.094094635 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091027439 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.0888338 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093277799 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.092771926 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.095583542 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.094155843 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.088401262 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094925036 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.08955537 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.084728335 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.092960432 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.086799974 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087511467 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095863549 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097319086 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081204424 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.088762359 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092092114 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093024349 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.081854174 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089897776 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.083893972 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.089010293 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090302544 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070476895 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.087437841 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.091402208 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.081703836 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.093149277 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.091947748 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092183241 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.084470813 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094702445 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.082012676 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.088007861 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.08434047 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.084246756 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.084101665 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.086995661 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.083888975 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089514266 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.092951322 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.083497326 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.088904481 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.099354795 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.084309151 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.091962179 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.081989304 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.081466823 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.096054954 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.094457924 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.084659598 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089907641 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08127237 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.089510847 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.081539623 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.084880946 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.084506901 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.084070652 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.088415348 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.083692331 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089103999 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.089074531 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.095724771 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.083200797 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.085448839 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088074083 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082888221 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.08733843 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.083361747 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.083409903 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.082915464 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077394851 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088207835 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.082266051 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.22873115 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091008253 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095081855 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08499975 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094733735 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.089086797 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.090511308 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.089022454 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.081628546 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076354534 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0901663 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089238873 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.084985462 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08491074 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.083994025 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.084296158 seconds)
done (took 15.270957247 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08250418 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148030493 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.112540905 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.111272923 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.102936499 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.086234581 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.091848077 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.111742485 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.083110197 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.116303923 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.104068264 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.103499848 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.129155798 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.081988015 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.085282077 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.087425669 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.084790936 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.100096217 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.112799737 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.109520701 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12963058 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.083072633 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.107778845 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.108072702 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.10482086 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.121055696 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.08639866 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.087132616 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.088294389 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.110854964 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110357371 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089130094 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.086571062 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.111759265 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.107837362 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.098291081 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086382816 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.098546014 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086039434 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.0848386 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.086374683 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.113632307 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098473608 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.098117771 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.086242075 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093678866 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.083908294 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.098215044 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105019871 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093084345 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100495671 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.110506324 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.082712509 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.098902263 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.081405828 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.101666692 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.093201939 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.085405647 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.085370705 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090852391 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.085761575 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.088719029 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.098760537 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.095296099 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.088937152 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100543482 seconds)
  done (took 7.870995062 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.101521369 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.114836739 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103127406 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.102887693 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.084662951 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.085807074 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.085523856 seconds)
  done (took 2.117041016 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083855061 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10258521 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108061687 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107482843 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.097813757 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109768028 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093316132 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08540551 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108512673 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084285431 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.104476661 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115302021 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.086847063 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097605143 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109044781 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.085275726 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.108547431 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.085801156 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.086859777 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10843583 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087785658 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.110341522 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.096794626 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085423616 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096942013 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.08555745 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130656176 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094003553 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084744159 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.087135251 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084927248 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.124828304 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096808152 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.09743794 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084443162 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099463547 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.097152304 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086669075 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.094905015 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095475484 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.096753831 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.086835689 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.084634546 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.084453556 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.088131078 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.095321827 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.084434032 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.086873256 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.086744488 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103375897 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.084726411 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.096249095 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087155953 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.089550862 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091569015 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088168284 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.094220709 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.084943669 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.103660107 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084109065 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.101615073 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.100733818 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.097076279 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.100896375 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086185067 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.096408794 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.09693424 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.086675905 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087191486 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.08688318 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.100411557 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086277656 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.0871403 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.095378432 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.085376745 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.108496103 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.108594874 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085646552 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099581576 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.086500316 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.084628621 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085714087 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.109132914 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089289153 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084265638 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091032453 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088333463 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.08640297 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.084545306 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.090229365 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.084398231 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091156953 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.086883206 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.086905261 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08850126 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.100625177 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.084840751 seconds)
  done (took 10.515453656 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085908401 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087602891 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.089123593 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087126948 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.087168353 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087372234 seconds)
  done (took 1.988688397 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.107682369 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.085664497 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.097790605 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.088599241 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.124543785 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10315947 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.103316111 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097348705 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.101081951 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.096471652 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.103113734 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10485398 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.108525848 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.089263721 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103527288 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.088230473 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103110549 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.091835713 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095720964 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089583056 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.104734252 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.089686656 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089539624 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.104658903 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.092257492 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.08906005 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.097908154 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.096096139 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.095729961 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.096911811 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.088820508 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.092895987 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094822692 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.096207889 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.102887332 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094174001 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090584011 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.0940382 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.088812661 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.092325491 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103537439 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089115186 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.09030643 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093549362 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.094732454 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.094329285 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093230898 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097362341 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103091471 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09326495 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.09332359 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.087744084 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09160473 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093747026 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095099892 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095837407 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093431884 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.102706785 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.08882731 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.093918879 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.08547723 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092232311 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095267714 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.092430567 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094330582 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.093179812 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093867864 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0890523 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088933903 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.087743094 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.093727403 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.085615488 seconds)
  done (took 8.28883548 seconds)
done (took 32.203487557 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.530040075 seconds)
  done (took 1.94438854 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.629932914 seconds)
  done (took 2.074441799 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.548963116 seconds)
  done (took 7.987280697 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.385650783 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.460258321 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.762702202 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152816273 seconds)
  done (took 3.23971848 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.740643944 seconds)
  done (took 2.19264796 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.251104236 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.244393548 seconds)
  done (took 1.956403723 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.373448011 seconds)
  done (took 1.817096803 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.091765155 seconds)
  done (took 2.537018674 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.24591205 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176912911 seconds)
  done (took 1.869975096 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.464157966 seconds)
  done (took 1.909690453 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.243030365 seconds)
  done (took 5.691486363 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239068388 seconds)
  done (took 1.720566079 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.257856693 seconds)
  done (took 1.705562294 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.763747041 seconds)
  done (took 3.21326602 seconds)
done (took 41.317165289 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101793493 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.105783951 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106306961 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.101999287 seconds)
  done (took 1.847528038 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.092642041 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.090819496 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09412295 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.090144767 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.0944768 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.090066935 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.091815211 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.092731916 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.089895437 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.090820131 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.090101063 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.089816342 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.092812028 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.091995355 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.08879407 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.094240396 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.093754768 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.09052367 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.093512363 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.090456287 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.088330814 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.092728193 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.093182237 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.089751676 seconds)
  done (took 3.648803808 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.095993573 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.093048573 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095364329 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.091154071 seconds)
  done (took 1.83256309 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.094210509 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.107993859 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106518046 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.096487265 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.107788186 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.103617316 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.086727298 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086537366 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.087937339 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.095617352 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.085615208 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.112892481 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105477608 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.096229359 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.098296023 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.082471348 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.08505722 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.105317056 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.096784612 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.096724723 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087900046 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.097444473 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086026576 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.106440175 seconds)
  done (took 3.769357165 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.095923003 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.116622874 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.09902441 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.108481488 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.109845708 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.082916618 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.097147725 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.110060174 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.145393209 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.083206204 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088748206 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.083032282 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.092582081 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.0859518 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.098415451 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.126672878 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.130272152 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.087144542 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.115870744 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.083219243 seconds)
  done (took 3.504510745 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.090142225 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089651164 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089871364 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.084871542 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.097278751 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.093155316 seconds)
  done (took 2.008370479 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.086019379 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.087473689 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.087310424 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.08673919 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09175586 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.086800694 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.085468038 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.08681776 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.086854854 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.086703583 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086563741 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.085750487 seconds)
  done (took 2.502720614 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.200291878 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.089526726 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.089208395 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.085606298 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.09065241 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.086311042 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101209395 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.086964222 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113850484 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08600196 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.086417599 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089689338 seconds)
  done (took 2.666402539 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215531714 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092902175 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253535924 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165823872 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125007826 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130014277 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132652961 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130067158 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.15290314 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115403694 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176463613 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179697587 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122831459 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152297675 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107556793 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.116023062 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165145145 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181123498 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122195551 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178078941 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158118644 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142954166 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162596147 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116934439 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121486911 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134741175 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.08857217 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096956933 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185051754 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146414867 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162802158 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126529989 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106921091 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193020196 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179239747 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155959797 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16456581 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101574574 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.118530734 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.148208199 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215396802 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105886208 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173145314 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124876666 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09427022 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142210062 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129474552 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.131656766 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.1167649 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105128967 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151849158 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190736051 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143007795 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100812884 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135052316 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122678757 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.121449587 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12964386 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188377096 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166508227 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137837067 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.087893974 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122148306 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153698222 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144172802 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.11590123 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126625195 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09828682 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135296956 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15764376 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130600413 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14521909 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125652023 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100674183 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127707504 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142915023 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133268307 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171975725 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131865551 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.088086601 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129020694 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109023885 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094757608 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.15616504 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089870808 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177678409 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113807767 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.115414646 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138465043 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118939724 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119507996 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15748203 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144209773 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116093633 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.081548289 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116402066 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.127009465 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147107658 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100564453 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1184475 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124096439 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.092002765 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.404734141 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096903766 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146500255 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.099174874 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145129122 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151686605 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100138003 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145119684 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125978975 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124851795 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150892143 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178203994 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110482466 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101564962 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183326736 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14110969 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.121726477 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159981446 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1725852 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.121316308 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117578135 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161140867 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181902772 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108716683 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177957385 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122322739 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103382404 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105602863 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140517726 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129392231 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.141179585 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099705452 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.134302109 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178397025 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.093486551 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114781626 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151515868 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09772856 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098506991 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121572435 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120699733 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.113602933 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.1162133 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.119209155 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149630877 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143168292 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121052893 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139844388 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115682328 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178957866 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105326162 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.119169501 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121702036 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088041695 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.145609322 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166791907 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096172334 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169924177 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.13513912 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28514751 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136746608 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102283286 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153677296 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098051019 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088440655 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155211544 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127644672 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127551529 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.162198763 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131467675 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.138289772 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.133956574 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145042908 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145338667 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.143704063 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124209537 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.106834088 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130373713 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141808878 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.090861364 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.105663346 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.096136738 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121144468 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111282967 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101704929 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156332897 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137750482 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127982986 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131748902 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11455869 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163200941 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.093767458 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142801877 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.135440145 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112527845 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.163963676 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163196768 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147428502 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116718839 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150031206 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.08824799 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092399939 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.105216055 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137341878 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101226796 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10146244 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130804724 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161992349 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143799177 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149658426 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139886531 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135259276 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169461475 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.087979312 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.133413346 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154132524 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135206819 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.120946885 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259062291 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.114878423 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15611541 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123204214 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197548005 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131811237 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142085261 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172230182 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.11950288 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098094579 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12236921 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147129923 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119690754 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156634295 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114831478 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105991153 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125605342 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.093612022 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113871133 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141358612 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132837527 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152097774 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.128494778 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147352268 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096226876 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130536529 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139282886 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137509756 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081344371 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134801664 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178827573 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112845554 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133500226 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164824486 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097133302 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155389906 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182807056 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159145767 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102615133 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122364739 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135034096 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139477652 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13478263 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151333735 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11990468 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154051279 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126727682 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.102119099 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104508365 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113438359 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121448617 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.110381605 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.116459757 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.126191877 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112465713 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144741894 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117328742 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125345949 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28316413 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.118583377 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.110885728 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115228317 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1903133 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13573524 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189691835 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.119277456 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.153539229 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17248684 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094291652 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097403669 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.096475825 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152728999 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103497638 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145262701 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.129563976 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133126511 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139579653 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152816392 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112610463 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.087114456 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126480961 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147007762 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140461968 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115707601 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.118831374 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173821929 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114749016 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097373861 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129499439 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133157255 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12064756 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185922766 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079172844 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126905425 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094594467 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097850291 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138997978 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165270323 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.094788914 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.116740401 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135961843 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127410145 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139571068 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115244324 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127663163 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146025921 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159897671 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14251558 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106594199 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127574538 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144253663 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166459092 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116718858 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.11419242 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181287262 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314485489 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.170984357 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.10398961 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131839643 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131737409 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127583495 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151404756 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102421914 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172548698 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099569766 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149259923 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118539792 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104313335 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143233217 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.130506047 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10631859 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158629061 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13401195 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102037332 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095462514 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129985312 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134854563 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120718037 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.093548944 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153999385 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.092152573 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148815144 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186396617 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098396241 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12268191 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11348689 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097363362 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121394853 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119392418 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104300476 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.117139461 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182409417 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.101369974 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157913476 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145531326 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126205068 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150826915 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120441897 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.656431072 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.094405983 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163589539 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131063487 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184625853 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117002295 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134171952 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126861367 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13630494 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154532094 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117281622 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.191031932 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295447883 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.131914709 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098679506 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120651639 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121124298 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.104641699 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125626241 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13141853 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13105202 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.108340192 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.131372394 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138137911 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.099855997 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11422641 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167876677 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130619199 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159182501 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152996403 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103030297 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135474056 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150034094 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097973656 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.133631927 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166463651 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122479289 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116350163 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.098634789 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.115179532 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186295738 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.091181179 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210471853 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139144291 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127888708 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130494576 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.125762686 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145440296 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120121469 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13683157 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107111989 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.121790198 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130257819 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098911592 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.094420283 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122253766 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125707586 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.115544109 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112311462 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.116947247 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16363775 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.089875347 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115068768 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131591947 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155108939 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181821053 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.104028737 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10123999 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135058934 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129234694 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.124663542 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2875702 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098131695 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100061436 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.097366057 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098821297 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.122751896 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131236088 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136571124 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12639633 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173516614 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.100876961 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.244996336 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113811381 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122229271 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087311483 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.095218017 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11421521 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114296981 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122796959 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128105709 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186368236 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.113450658 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107608978 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107606966 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.093311238 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101969521 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140757139 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128183332 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133639435 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118174769 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079961734 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123547681 seconds)
  done (took 66.086693665 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136180031 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.114397517 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.114509294 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.162735332 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137942049 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.216407308 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.167464301 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206107836 seconds)
  done (took 2.862506026 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.085102687 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.111269638 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.124691833 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.103186347 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.087072646 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.088444441 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.24757496 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.101246214 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.08377113 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.113235343 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.097646711 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.087711247 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.434914076 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.086361566 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.086900826 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.078489044 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.086170588 seconds)
  done (took 3.691929561 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.401205171 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.632591981 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.361990117 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.095172447 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.89341875 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.107516618 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.24032664 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.156430607 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.099627802 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542555 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.387327686 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.148878864 seconds)
  done (took 18.66391975 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100593184 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.095111088 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109582947 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.109279739 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098658766 seconds)
  done (took 2.110513859 seconds)
done (took 116.70026391 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.097651232 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.447431415 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07067635 seconds)
  done (took 2.141440541 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.105166535 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.107058733 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.106084384 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.103166049 seconds)
  done (took 2.025678049 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.092450211 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.094877792 seconds)
  done (took 1.784270053 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.247264381 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.195750932 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.117556639 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.098307989 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095090273 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.097991092 seconds)
  done (took 1.895312339 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.087246431 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.089682038 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.088202775 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.092937741 seconds)
  done (took 1.956618835 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.089824532 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.068445212 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.07075489 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073483175 seconds)
  done (took 1.903106688 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.102698897 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.099136873 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.096492551 seconds)
  done (took 1.898837656 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.117981512 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.108534571 seconds)
  done (took 1.826990761 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.095311341 seconds)
  done (took 1.697142049 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103077808 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113914205 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.150339537 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.134179958 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.158948236 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.133680559 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.104478984 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.105753198 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.099052863 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.106791404 seconds)
  done (took 2.808823642 seconds)
done (took 22.193230536 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095508472 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.38616363 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.380549881 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110797181 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.68905999 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.377346513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991637848 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113791453 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162039023 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087917418 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105753269 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668036608 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982015375 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350026019 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964260429 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.346802918 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.670118899 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090681691 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088886856 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089698195 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976115548 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089214473 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089169533 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089521937 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.670331939 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.395042688 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090232894 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.345272194 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089807422 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09192962 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.377105894 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089771976 seconds)
  done (took 16.725898608 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087214325 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.139007835 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.093249437 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105289979 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.09095471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090022899 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.091710442 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089790988 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14224044 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088742967 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107421399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.08987318 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093692459 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.090483611 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11019157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092798619 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09064213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09082743 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.089519363 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089881003 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109388655 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089740296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089994716 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089481233 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0890965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102056773 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090105406 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.090352368 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089918447 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.092145938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092872345 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.090482189 seconds)
  done (took 4.696140509 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.134033902 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147723525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.094311915 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12787358 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133264341 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09152737 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170508908 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.115282989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15008076 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.090114649 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10813451 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.090110084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125471301 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.090583835 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.110592454 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08995235 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090682122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090465564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.08982713 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089757896 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109105216 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08974677 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089657118 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090662297 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089798915 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.104615452 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09068864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089691878 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09020462 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.091796202 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.093774034 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.090575676 seconds)
  done (took 4.968125893 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.088415449 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.091689667 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.100475156 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.101457637 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.087111653 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.089553786 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.090991423 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.087143973 seconds)
  done (took 2.357059161 seconds)
done (took 30.357268454 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.094675825 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.085755737 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.090673672 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.106861898 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.093701606 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.097862771 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.084080678 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.093974445 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.091669679 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.092069606 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.093306121 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.088010193 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089628991 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.084598272 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.091825136 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.085633632 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.100457078 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.090109548 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.099788909 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.100763514 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.087764916 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.091812216 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.094027527 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.099205939 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.099157293 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.09885008 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.094909773 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.091259368 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.086157567 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.089134906 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.094820944 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102368968 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.088655381 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.097986031 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.084730898 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.08452019 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.088785651 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.087814502 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.099199027 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.093964513 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.086752493 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.094232468 seconds)
  done (took 5.483840322 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.101662406 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.109414396 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.102590081 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079808206 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.08534791 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082763853 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.106902322 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077866969 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077354128 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106174853 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074072201 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077818975 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080026581 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071828752 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07743758 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073951241 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079615599 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072714422 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076494782 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077233626 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.106057883 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071277083 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.095778512 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079739014 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07350216 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079261465 seconds)
  done (took 3.826322243 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.091045684 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.105490292 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112752439 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.164827004 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.1323658 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099576209 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.101296994 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.112117089 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116531728 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.087478189 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.092255246 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.112274881 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11231832 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.093217815 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.087313571 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.1037222 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.10334183 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.089028788 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.095011565 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119051729 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.1084207 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.104572494 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114071388 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.103940636 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087127388 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089959314 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.091899015 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.104508549 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.089967003 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.098865527 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.090766344 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.091798658 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.08860063 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.099463611 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.090632621 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.087352803 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.113403386 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099882094 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101124379 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.08840026 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097383504 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.089030219 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113640305 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.148633628 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.087350832 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.09157132 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.092140649 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.099284256 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.086953257 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115733281 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100050743 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.087419743 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.087906948 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.0867478 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.086793916 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.090418769 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089183247 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.090191273 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.097895912 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094362147 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.110080823 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092673426 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.105571786 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.087490582 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.097955227 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.086786608 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.08922346 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.086427207 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.116681935 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.089604569 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.133396226 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.08807116 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.08640875 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.098918817 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.097737 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09385456 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.08728981 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10587756 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099081434 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.092056436 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.096010352 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.091121502 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091097155 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.118423473 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.088006901 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.087540318 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.087337253 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.091878887 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.091072064 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.08848742 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.100068535 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.086726928 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.091014949 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.106124711 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.087434337 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.088318831 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.092004976 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.090435562 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.08687534 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.099128297 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.091291792 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088777119 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098221533 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.088046759 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.091323413 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.101044382 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.094559637 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.086865821 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.09065413 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.091844046 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088735088 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.089032137 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.091054837 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.089485126 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.094853966 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.094414802 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.093689476 seconds)
  done (took 13.007601569 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.180087235 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.176470498 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.090815191 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.167567479 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.096959276 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.098307166 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.170285936 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.114069593 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.088551004 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.090413337 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.088880694 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.128738065 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124732149 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.137854171 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.097948943 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088565554 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11140159 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13459638 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.171920395 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.166084353 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.111510499 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.097338331 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.091390105 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.090638035 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.090119373 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.098200737 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.107562412 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.096154995 seconds)
  done (took 4.972174107 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.094966039 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.120329034 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.092057194 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.110812972 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.107892214 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.086092908 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.090365558 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.089732201 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.105123164 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.094423235 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.085598464 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.093814193 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.0923011 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.088945904 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.088628256 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.092612499 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.095824637 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.087303568 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.089211022 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093882748 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.09825289 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.107890255 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.092409895 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.088070191 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.090476685 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.087439088 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.079405628 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.100699258 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.088012473 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.113822475 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.083285419 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.090968717 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.103343274 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.088819366 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.088059448 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.088953167 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.085470848 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.085733119 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.089531123 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.083786496 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.084657184 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073879332 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.08704921 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.096173887 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101092332 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072471801 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.089865147 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.091334478 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.090854037 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.083220177 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.090701715 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.090784834 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.091348515 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.095500863 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.089565809 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.090690707 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.08904843 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093064335 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.094227575 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.08735087 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.081634333 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.083992016 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.090384557 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079899326 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100819345 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.090334239 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.084103636 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.085798467 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.089208396 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101108053 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.087391683 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.090364115 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.083555697 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.087192044 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.091183496 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.09108414 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092592947 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.084118772 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.087872044 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.087970203 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070977909 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088284876 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069775754 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.090804396 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.083564848 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.084300039 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.088696829 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.090371192 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.097093969 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.087778081 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.092144372 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.088788594 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.086721056 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09160469 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.076045212 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09124106 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.098920557 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.098674364 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.086400504 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.083742183 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.102193949 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091435557 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.085164213 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074124902 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.092570476 seconds)
  done (took 11.130749708 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.108874568 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.087054402 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.104953397 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.112131096 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.106743112 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.093313795 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.098658777 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.087046291 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.10427154 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092025866 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.094798397 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.085422588 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.099072406 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.09906293 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.087270443 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.098385055 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.089902631 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.105684394 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.102368091 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.085487169 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096688141 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.100609675 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.110092029 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.102888482 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.1021554 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.103387344 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.109930749 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.096958862 seconds)
  done (took 4.43934008 seconds)
done (took 44.475889902 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.730269114 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.972486292 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.70597789 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.936072834 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.771718901 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.914326858 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.80739724 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.699209983 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.033913227 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.746975721 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.9985012 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.788160497 seconds)
done (took 64.87650685 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.736557591 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.83637898 seconds)
    (2/2) benchmarking "String"...
    done (took 1.931151118 seconds)
  done (took 5.394244435 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.921345163 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.378119311 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.942887969 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.703390085 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.710274612 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.962202291 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.503232358 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.150110783 seconds)
  done (took 29.977974763 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.91666578 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.93535268 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.427641914 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.464326263 seconds)
  done (took 15.418222869 seconds)
done (took 62.167552605 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.71225907 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.735162723 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.716829601 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.685266336 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.800458274 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.72127304 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.847014222 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.946833717 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.707415804 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.687360799 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.706596464 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.136219777 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.718090572 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.852171416 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.709718802 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.706070698 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.707779858 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.161420199 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.867333382 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.722673313 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.730166824 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.770188009 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.709584799 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.709974266 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.758291447 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.707118975 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.102805175 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.708451721 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.543879201 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.71336333 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.752862333 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.084023599 seconds)
  done (took 202.766979579 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.705804593 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.759748 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.838937786 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.740330369 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.163922179 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.891875025 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.807798173 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.217024738 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.712130488 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.723925038 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.93082793 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.706016983 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.954457405 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.69930917 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.74213725 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.713991038 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.837457284 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.965200322 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.745389036 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.876601822 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.732397063 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.80873064 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.769063825 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.91410114 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.713776844 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.747103063 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.728346885 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.734064881 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.897711701 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.821459153 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.716496994 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.713394073 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.917844942 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.576632454 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.718107914 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.716514636 seconds)
  done (took 167.589207245 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.890819942 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.708464546 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.705963922 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.706018952 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.712856753 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.707090176 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.831364965 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.834386935 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.333203476 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.254569287 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.76287403 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.704966939 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.500941376 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.70434869 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.70438943 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.77123384 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.703720626 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.716800524 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.704738795 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.720548501 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.731745415 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.708868142 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.705561092 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.832339237 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.717210714 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.705007116 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.713722593 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.705452884 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.709951434 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.069955718 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.704234322 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.765708385 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.709298666 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.71091588 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.946348856 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.706545467 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.706492149 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.571816617 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.590704805 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.790975529 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.707879237 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.711314259 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.704806256 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.922626837 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.706549247 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.70564329 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.704837229 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.705511434 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.708854708 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.705754675 seconds)
    (50/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.854512237 seconds)
    (51/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.708871453 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.82997446 seconds)
    (53/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.70968516 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.196108845 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.709893947 seconds)
    (56/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.707519073 seconds)
    (57/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.558589373 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.317444078 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.709377416 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.707805279 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.706602105 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.705982076 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.71361476 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.609388459 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.78280432 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.708762989 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.709682091 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.711841883 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.706497135 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.792068323 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.711355562 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.722525403 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.764808037 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.936901797 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.830080101 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.711382461 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.773010254 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799977007 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.70690264 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.706926577 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.706494841 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.706904773 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.78764315 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.707533923 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.831594698 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.718171628 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.707909538 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.762022123 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.777225478 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.708107866 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.556429332 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.712304823 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.708133564 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.999602115 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.778701092 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.707543079 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.709085511 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.83206743 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.832017945 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.428571081 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.711596071 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.537915815 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.851736731 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.709650271 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.863510765 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.713231449 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.788946896 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.716619824 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.709740579 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.744176522 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.709501401 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.767783529 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.708014626 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.080099206 seconds)
  done (took 394.636027732 seconds)
done (took 768.571854743 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.322049195 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.290645122 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.393422248 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.313823671 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.284859719 seconds)
  done (took 13.236956253 seconds)
done (took 14.868735383 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.79217883 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.800156483 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.732339482 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.796444945 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.729782403 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.794659131 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.77973704 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.7354153 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.762701218 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.73552433 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.76593974 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.733647613 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.719773407 seconds)
  done (took 24.511006416 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.938925499 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.942899 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.773877457 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.937624496 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.751490046 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.938194461 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.867542349 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.850930357 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.856863784 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.722483036 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.717381219 seconds)
  done (took 21.930955442 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.941713527 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.956637028 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.780672417 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.945010377 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.753936962 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.93642823 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.865786218 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.858689441 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.856050049 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.721486755 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.717501921 seconds)
  done (took 21.965480562 seconds)
done (took 70.039687419 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.715168728 seconds)
  done (took 3.346041119 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.737246183 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.909934787 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.720748443 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.716076821 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.713210567 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.713104924 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.711527344 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.709091733 seconds)
  done (took 15.563057715 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.705811068 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.708557576 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.706318113 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.705594008 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.707605768 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.707169645 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.705900888 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.708891268 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.705459908 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.70490513 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.70678538 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.704811331 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.70737613 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.707160904 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.706759159 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.703676276 seconds)
  done (took 28.929503916 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.706596193 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.705839481 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.70426218 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.705077333 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.705274458 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.705581166 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.705824207 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.70478491 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.70703526 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.705730033 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.70597265 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.705323614 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.70442361 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.705386954 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.705545452 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.705876681 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.70583729 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.705234352 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.709372602 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.704555802 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.706380921 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.705568863 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.705807475 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.705739046 seconds)
  done (took 42.564577534 seconds)
done (took 92.033330947 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.457497466 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.723344906 seconds)
  done (took 9.80557358 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.708561964 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.707845866 seconds)
  done (took 5.045051874 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.707366651 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.707244458 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.707688996 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.709651927 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.707690867 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.707151962 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.707948136 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.70778777 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.707644658 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.708534161 seconds)
  done (took 18.7044073 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.708430299 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.707390181 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.705444128 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.708064985 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.710255623 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.705633071 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.708745447 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.708665472 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.708816532 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.706172957 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.709539754 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.706867777 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.708254294 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.70645351 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.708509753 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.705674758 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.709532993 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.705709446 seconds)
  done (took 32.363181637 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.708993914 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.709304632 seconds)
  done (took 5.045304611 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.706055835 seconds)
    (2/7) benchmarking "second"...
    done (took 1.70681215 seconds)
    (3/7) benchmarking "month"...
    done (took 1.706068395 seconds)
    (4/7) benchmarking "year"...
    done (took 1.706106139 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.704782065 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.705635427 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.705469657 seconds)
  done (took 13.567646396 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.709652941 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.840671467 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.907277108 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.372539279 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.709236296 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.711344713 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.624787934 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.711195107 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.713183602 seconds)
  done (took 18.924882597 seconds)
done (took 105.080393945 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.584366387 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.699460851 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.957787546 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.769367631 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.764961675 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.034850343 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.715162073 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.979344407 seconds)
done (took 42.127533739 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.774751543 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.393511985 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.410007712 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.730152142 seconds)
  done (took 15.151708512 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.675670932 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.006105294 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.70093731 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.506849213 seconds)
  done (took 21.510317593 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.064717921 seconds)
    (2/2) benchmarking "read"...
    done (took 2.047412849 seconds)
  done (took 5.733201354 seconds)
done (took 50.787629734 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.69934946 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.700488501 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.700422575 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.697437215 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.699834274 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.697384165 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.696888604 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.697584868 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.699740696 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.701303236 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.700164749 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.699841789 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.699365915 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.697376169 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.698052723 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699943501 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.700285804 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.697936445 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698013251 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.698813588 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.696576086 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.699712796 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.697694257 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.698191826 seconds)
  done (took 42.389662586 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.701589693 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.698202387 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.699674488 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.699883013 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.697743889 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.699178056 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.701658692 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.69594667 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.697652593 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.699026431 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.69690106 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.696953211 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.699115378 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.695362336 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698555006 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.694060653 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.697796787 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.695128221 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697894946 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.694372033 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.697608375 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.694612224 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.695498164 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.698457812 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.694875964 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.693517876 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.697999576 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.694794638 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.696182822 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.695218033 seconds)
  done (took 52.533077771 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.701087697 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.703937023 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.696432861 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.696499154 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.696486654 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.69475388 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.695128745 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.695352672 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.694795493 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.694786429 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.696199856 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.693971041 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.694058783 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.692745329 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.694101754 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.693644273 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.694837957 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.69293257 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.692632264 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.693588174 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.692897183 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.693200538 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.693910737 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.693969903 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.692982011 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.693172809 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.694122229 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.693664179 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.694217777 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.692918685 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.693703258 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.6933169 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.693434674 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.694309614 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.694068394 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.693842526 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.697306903 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.700124374 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.692658176 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.69298724 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.693299939 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.69324961 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.694218067 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.693470463 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.693077819 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.69328339 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.719440447 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.694750115 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.693177583 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.692945973 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.693557207 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.694551919 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.693248216 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.693561735 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.693487371 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.693818322 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.692224715 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.694091088 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.693047224 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.693962188 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.693706012 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.693485633 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.694034099 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.69363613 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.693830694 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.693481025 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.693787456 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.693028298 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.694000105 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.694060587 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.693756699 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.693676869 seconds)
  done (took 123.625166962 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.693668224 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.691049283 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.691165646 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.690497006 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690719577 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.693509907 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.691248385 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.693163951 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.691094845 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.69322383 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692341517 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.690468452 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689953276 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.694093814 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.693032984 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.690284715 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.693461298 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.690374997 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.692832806 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.693300993 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.693911788 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.689883146 seconds)
  done (took 38.833744107 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.692514039 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.693326388 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.689691627 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.693554731 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.689396322 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.691497725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.693313529 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.692570271 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692691868 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.690238094 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690588331 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691914957 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.689975754 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689872801 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.689558715 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.689807717 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.691324515 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.690250964 seconds)
  done (took 32.05165152 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.689227521 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.689199847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.692085842 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.690194333 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.688846204 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.691893645 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.688588169 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.691287594 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.693502417 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.68975658 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.691962994 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.691190843 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.692259804 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690329154 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691253427 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.688956708 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.691684395 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.688869954 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.691128222 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.690739508 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.688731136 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.692661044 seconds)
  done (took 38.804462131 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.691245101 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.691885111 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.690500968 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.689113005 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.688808462 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.690619344 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.692621838 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.689433913 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.693224109 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.690669215 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.688665495 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.692016776 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.690184405 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.689619968 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.689956618 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.688306191 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.691190717 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.689590133 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.691673738 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.689270751 seconds)
  done (took 35.417510297 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.692496277 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.69247408 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.692809764 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.6928721 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.690854099 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.693000143 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.69104964 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.690768215 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.691643087 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.692205588 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.691924186 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.693298282 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.691212477 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.692529433 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.691821144 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.691211326 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.691298047 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.693943066 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.691453738 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.692347279 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.692983205 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.692257029 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.692680074 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.694393637 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.692272576 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.692473655 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.692657266 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.692956469 seconds)
  done (took 48.995141567 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.691850514 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.690741067 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.687723077 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.689175629 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.688680548 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.689637003 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.688690759 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.688556874 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.690371481 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.686869873 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.689997023 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.689993353 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.69020458 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.690070302 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.689809484 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.690354667 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.690487834 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.687667814 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.68784498 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.686793593 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.689883613 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.688974372 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.689969028 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.689937726 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.688456393 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.691364641 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.687558227 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.687917889 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.691070774 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.688700331 seconds)
  done (took 52.288814199 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.707833835 seconds)
    (2/2) benchmarking "in"...
    done (took 1.709908747 seconds)
  done (took 5.02571391 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.68700429 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.691482216 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.690174213 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.6874168 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.688078486 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.690882637 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.68996822 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.68871678 seconds)
  done (took 15.121713751 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.692372406 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.690403103 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.690500237 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.689802768 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.691806435 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.692446377 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.699801316 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.690711506 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.693806845 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.692623412 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.699604419 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.697978236 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.695323343 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.693618725 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.692689191 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.695520857 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.692315078 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.691347705 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.691846244 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.690982603 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.691314988 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.694776629 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.695814694 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.68906849 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.69421375 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.703092943 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.698346505 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.692050069 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.694561069 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.698131084 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.693302249 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.68871828 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.692572855 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.692497642 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.692978632 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.692763344 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.703553416 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.695256554 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.700751765 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.693000975 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.693953737 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.690012817 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.695286731 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.696327865 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.695575961 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.693606399 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.693086403 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.689945147 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.693314861 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.697025811 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.696414879 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.695488888 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.690529743 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.69895922 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.697630662 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.703073321 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.6940667 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.698468585 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.701324214 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.704100759 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.706508987 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.702017453 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.697137999 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.694895873 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.705264204 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.71390076 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.702141771 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.691661178 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.690839846 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.695479555 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.702624538 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.706820663 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.704428846 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.694388853 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.694324692 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.694959527 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.696158089 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.693937992 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.703341628 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.699869564 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.694402295 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.695480333 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.705661731 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.713214302 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.695555979 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.694855813 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.695700023 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.695352586 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.696819546 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.707019573 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.696604176 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.695024629 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.695656783 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.698462855 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.697924741 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.695911527 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.694730218 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.698287694 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.692071035 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.695802118 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.696130478 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.70142034 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.7047237 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.696846002 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.69904632 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.706996563 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.697875328 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.697667803 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.70489773 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.695869753 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.696484894 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.697067293 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.703131725 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.693630875 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.702034015 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.703961253 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.698075805 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.700259673 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.697600245 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.696476403 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.708182895 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.720005779 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.697527183 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.696761159 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.702121332 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.708450451 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.697680141 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.702342964 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.698397809 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.693783852 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.69436603 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.70041565 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.697238693 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.700373988 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.699754175 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.701038561 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.695492865 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.698087885 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.698009031 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.701012207 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.699337671 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.698829374 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.699871887 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.699432916 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.697317145 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.700113576 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.706329004 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.69895653 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.700988571 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.700013383 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.694928646 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.6986259 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.700671449 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.698425736 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.69990815 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.698733042 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.699626578 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.698917907 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.699680428 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.698620556 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.69979811 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.70119894 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.704298823 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.700208361 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.705709445 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.700034878 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.695962342 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.69899405 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.700145594 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.701608727 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.699067382 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.697297842 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.703328763 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.702747669 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.6981648 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.699090637 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.702393355 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.697791126 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.698232621 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.699131643 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.704050314 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.708886326 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.698824283 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.707380583 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.700096609 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.700493535 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.699692883 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.703183203 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.700410815 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.700263896 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.704022404 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.704931372 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.714272759 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.710128826 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.701573408 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.703014139 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.701678297 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.702055548 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.707057811 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.700905427 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.699565481 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.700426784 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.702379857 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.700944275 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.704626901 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.700854063 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.701115198 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.700837172 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.700410139 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.701363279 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.70085919 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.703139305 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.703635177 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.698553123 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.700601671 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.701090153 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.703101035 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.69826024 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.701900518 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.701585773 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.700876717 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.702553553 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.71230909 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.698914051 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.705595078 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.705424308 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.703589467 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.702494924 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.703896215 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.70518463 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.703033985 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.710087835 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.702915594 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.703728631 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.711571773 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.70370564 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.701679833 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.70626441 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.701874558 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.699065553 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.706436994 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.708229447 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.701977285 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.702242858 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.701126011 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.705190789 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.702360093 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.710339334 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.70001901 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.703232612 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.702145939 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.704757115 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.699824434 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.704747148 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.705165428 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.703872935 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.707055791 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.703406242 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.703149752 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.706497115 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.703275056 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.703013816 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.703814839 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.708005824 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.708731361 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.709283988 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.705409742 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.705177605 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.704272219 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.707160525 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.704057293 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.703286244 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.704589383 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.717114923 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.711522383 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.714386958 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.708300695 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.703258541 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.710434835 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.705244043 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.708021088 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.706533443 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.707121846 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.705465705 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.704316425 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.702604822 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.708494387 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.704899612 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.708475744 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.708166632 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.708196676 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.704857998 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.706960099 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.706219799 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.706090155 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.704260283 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.705840513 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.704970867 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.709818436 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.70930392 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.704465368 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.706668104 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.713652332 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.707145859 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.708886969 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.70607207 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.706769029 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.704635764 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.706594463 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.705592373 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.710102467 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.711095199 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.709976585 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.714927819 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.708253987 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.716089905 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.706820965 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.70927137 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.711153709 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.703552148 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.705867964 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.708126868 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.706882333 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.713974682 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.708304316 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.707223369 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.709306236 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.707370454 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.707274679 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.706993587 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.704986327 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.705873861 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.706245942 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.717938715 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.708941423 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.711315226 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.71149118 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.70392454 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.706838697 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.707265609 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.707877447 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.713536279 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.706982383 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.709360468 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.709251176 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.709156588 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.708095544 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.707992007 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.707650789 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.70434679 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.707320863 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.716851428 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.709477737 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.711167425 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.707509516 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.716642331 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.707853791 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.717272176 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.7080622 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.708743074 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.708012116 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.707535194 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.709185998 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.709386568 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.709877542 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.707979716 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.7108463 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.71031704 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.708868758 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.709730598 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.71107802 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.708414997 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.710271514 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.718048305 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.728499528 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.711750674 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.712428379 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.706667788 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.712322787 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.711256094 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.709170013 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.707622567 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.712901097 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.71900803 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.714137952 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.711185404 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.70973759 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.709880469 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.709317603 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.709300014 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.708272662 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.708770021 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.709471377 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.710797848 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.70926809 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.714915344 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.709708846 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.710988677 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.712506119 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.71189649 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.720733965 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.709841083 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.712344191 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.711405037 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.709963036 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.712954777 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.711981248 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.710445075 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.712497719 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.711890313 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.714311535 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.7172309 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.715983283 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.71603999 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.710782074 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.712773712 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.712681102 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.711909383 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.711138183 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.710752747 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.711772165 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.71462874 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.711228052 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.711337163 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.711009164 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.710872112 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.711685238 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.711933128 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.714493799 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.717726728 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.712056291 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.708841458 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.710906856 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.712075569 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.711339422 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.714042409 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.720431736 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.716474081 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.721189941 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.71842417 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.715086679 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.712913636 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.715681778 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.718126492 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.711983505 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.714086603 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.711733149 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.715134673 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.714771978 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.715899324 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.712784347 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.720834809 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.714796023 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.711992689 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.722196976 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.716467662 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.71303301 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.715885383 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.716266761 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.714122293 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.70887533 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.712543704 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.715369999 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.721002746 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.71695808 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.713426932 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.7170047 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.712027242 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.716164995 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.71652258 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.713359882 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.715687664 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.709810656 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.71628733 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.713018423 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.714744844 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.710785939 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.71393141 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.713325458 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.717873543 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.719808317 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.711383867 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.717986696 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.716599505 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.71488212 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.715814461 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.714286323 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.711109774 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.710787134 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.714422212 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.713198548 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.716713722 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.718879453 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.715329941 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.715309617 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.713763961 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.714051677 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.7199144 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.72410443 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.718912284 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.712432523 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.715086661 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.715289375 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.719848618 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.714549314 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.715112581 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.716287835 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.717107933 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.716014539 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.714946837 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.71521777 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.719829704 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.731043601 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.715051167 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.718219878 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.718888033 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.721003704 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.714656185 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.713465528 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.716413916 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.718788083 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.719337737 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.720216914 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.715133812 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.724336465 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.717140608 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.717682454 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.717653439 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.719748312 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.72283173 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.720450692 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.716417914 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.715997037 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.7215086 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.730738181 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.716148143 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.726896931 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.742026636 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.718893568 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.717584993 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.716935599 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.716631628 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.715994221 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.719858927 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.71607174 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.717064673 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.716391297 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.716637975 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.717637819 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.723512197 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.720758088 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.715869761 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.717001844 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.71797171 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.719447275 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.713521372 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.71703434 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.717051845 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.717300455 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.717342509 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.717373338 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.719946175 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.729927681 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.725510197 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.71777782 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.717777958 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.714334429 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.723772373 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.72196232 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.726923668 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.723169128 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.718020738 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.71891968 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.722171524 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.717897084 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.715224728 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.720792675 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.720444109 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.720169103 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.71573357 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.731592706 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.724124024 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.726169663 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.719364892 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.721231581 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.71855122 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.72170166 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.719167502 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.718692 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.723198793 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.720095011 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.721878416 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.718479304 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.719336334 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.72329293 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.724380632 seconds)
  done (took 1019.269915967 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.716823886 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.716538762 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.716741999 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.71659223 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.716552726 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.717341093 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.716277289 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.716095896 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.717188658 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.716532789 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.71808577 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.71648923 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.716306103 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.716764916 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.717223346 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.716678934 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.71827982 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.717258953 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.718255714 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.719140843 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.71861171 seconds)
  done (took 37.696360073 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.721459383 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.719311925 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.719671546 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.71974153 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.717708939 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.719642507 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.717866977 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718584698 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.718786062 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718177699 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.720380409 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720445491 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.718557772 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.717749397 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.718721019 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.720895337 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.721107525 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.718673095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.720611846 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.718548113 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.721059348 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.719079204 seconds)
  done (took 39.465306381 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.723248818 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.722094408 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.721675915 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.718664023 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.721027296 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.718073018 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.721709049 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.721545716 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.722133241 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.722568936 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.721346641 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.722577552 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.728530382 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.725154596 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.724316733 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.721949934 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.865424933 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.721904691 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.722784092 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.721509252 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.718803643 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.728517706 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.719414847 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.718751959 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.721860301 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.721103877 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.722828048 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.721640183 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.722273889 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.724655751 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.725999806 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.721873273 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.723494984 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.726910522 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.723721032 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.724583393 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.725878925 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.723296353 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.720007912 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.722889211 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.733929797 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.73997171 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.723641326 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.732499364 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.722667318 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.723674592 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.726948791 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.730021396 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.719421378 seconds)
  done (took 86.238960668 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.722988386 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.72341293 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.720902262 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.7250299 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.724632129 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.723825459 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.723110149 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.723910969 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.721553818 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.721497769 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.723678618 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.72199159 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.721336462 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.723614023 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.725192557 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.72028421 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.720044367 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.721355579 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.721081616 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.721738763 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.721269567 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.724721935 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.723805321 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.721727917 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.723167709 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.721074445 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.721864719 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.724318288 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.72190902 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.721278519 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.724371821 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.724160971 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.723847745 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.722226052 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.721144793 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.725027191 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.723797523 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.72350791 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.724881517 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.721694663 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.725669976 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.72528076 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.72501196 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.725025133 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.722818645 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.723538872 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.722978955 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.723180896 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.722590443 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.725558761 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.724743684 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.722582987 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.725816904 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.723128146 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.726387012 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.726788535 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.723455489 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.722592698 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.72579855 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.724469905 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.723930406 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.726384749 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.723995421 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.726428852 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.725832468 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.723896262 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.724832112 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.726096217 seconds)
  done (took 118.841638629 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.72654761 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.726625063 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.726965656 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727065779 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.727432698 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.728325287 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.72661646 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.726987554 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.726228272 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.726868522 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.726506919 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.726564904 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.727237407 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.727206004 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.726840346 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.727631723 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.726437982 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.72792934 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.726851092 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727231463 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.727445111 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.72838298 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.727117752 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.727396586 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.727992425 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.728546708 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.730189531 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.728583352 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.727829745 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.728447534 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.728130583 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.727174367 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.726316814 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.726266461 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.727061832 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.72695598 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.727216041 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.728467259 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.728264167 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.729039768 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.72849324 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.729241196 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.72947883 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.730026794 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.728904518 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.728630926 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.729079318 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.729012551 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.729263796 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.7281146 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.729616908 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.729823433 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.72841778 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.728103696 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.72741141 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.728557748 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.729845809 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.728981594 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728684933 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.729069938 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.729033459 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.729412459 seconds)
  done (took 108.778690283 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.728579216 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.730168905 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.726185802 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.726046797 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.730187123 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.727234147 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.728985858 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.729566214 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.730982077 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.729511231 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729856494 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.727858661 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728512867 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729838047 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.726757822 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728381516 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.72755068 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.727522765 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730053922 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.727867369 seconds)
  done (took 36.21753681 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.727936491 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.729608936 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.726796911 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.729428574 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.729797162 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.728248125 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.730832127 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730459095 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727610084 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.730120925 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.730055353 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.730837103 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728272578 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.728158858 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.731071314 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.729036289 seconds)
  done (took 29.313273447 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.728000014 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.732459809 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.731308656 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.730398096 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.729160831 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.728299591 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.730568285 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.728313008 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.728354981 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.732047158 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.732120272 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.730619698 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.732164565 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.732706893 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.728741104 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.731387678 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.730446767 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.728700287 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.731141086 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.732043747 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.730434352 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.728127594 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.732324051 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.732436362 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.729588406 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.729241824 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.729352308 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.729824698 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.729922126 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.732014411 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.731460613 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.730083211 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.729896176 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.730061522 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.733086516 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.730733392 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.731905757 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.731689701 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.732476647 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.732135784 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.732196208 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.730304445 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.732995461 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.732613366 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.730529433 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.732287174 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.729792839 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.7307046 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.730770785 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.7305411 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.733085999 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.735795898 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.734602564 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.732925071 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.733163123 seconds)
  done (took 96.856113217 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.732483917 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.732743643 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.729220478 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.732049264 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.732442289 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.731274747 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.733300379 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.731376182 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.731719026 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.733331613 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.732249013 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.734209894 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.732371183 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.734223397 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.732402451 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.734565157 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.732312092 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.731737296 seconds)
  done (took 32.833316229 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.731621105 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.732909665 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.737106596 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.732303126 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.732439616 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.734412581 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.731873397 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.734172105 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733889411 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.732399988 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730711632 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.735042716 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73385056 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.735229243 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.732787284 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731588412 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.735255685 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.733761283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.732805055 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.731813945 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.734931708 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.735013954 seconds)
  done (took 39.786552904 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.735147402 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.735395329 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.750578361 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.75079696 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.755943779 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.76208718 seconds)
  done (took 12.140355535 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733027762 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.734651915 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.732558474 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735254663 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735641965 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733477234 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732553654 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733485693 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736884192 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734169359 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733247655 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735817526 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736044363 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733233907 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73652542 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.735604914 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733698938 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732977838 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733325405 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736528799 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.73338924 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736389884 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734768735 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735273968 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.734049283 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734243904 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736916438 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735155872 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733994466 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736788666 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.736272854 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734809068 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737196763 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733794373 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736833053 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737114832 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733373774 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737166934 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.738018964 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734971509 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.737308902 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737663094 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737972543 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734982313 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737168133 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73391254 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73601782 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.734442117 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734675381 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737423054 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737493157 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735583289 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.738278623 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737832733 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737047941 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737276067 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.735521588 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736284926 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.737127077 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736112409 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735270803 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737958139 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736080349 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736365643 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73815569 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736523492 seconds)
  done (took 116.202958834 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736207867 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.736448935 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737480275 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737423672 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736567875 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737182258 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736697204 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736973513 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73646141 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.73672111 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.739266362 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736936847 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735585106 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737234484 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737280376 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736670199 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736050745 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737005039 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.735948157 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739752971 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737001527 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737302274 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737472085 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737807375 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737483826 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739000384 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.73618275 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737398008 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.736987042 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737293507 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736235943 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7378074 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737570022 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.736786243 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736912821 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736873158 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737294793 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.736640172 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737894418 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740595964 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737186676 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739990868 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.738029435 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.738098679 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.738270438 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.738542942 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.738204534 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737543397 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.738553841 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737325937 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.738586974 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.738158764 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.738212108 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739029324 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.738324951 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.738614706 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73880533 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737687773 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7394796 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741547541 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.739892554 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73933261 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741578804 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.739098202 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.738069742 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739563177 seconds)
  done (took 116.352570151 seconds)
done (took 2376.700172402 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.80631267 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.784798563 seconds)
  done (took 15.247962733 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.906924336 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.860383648 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.74408038 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.751985897 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.745166442 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.762973803 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.760294487 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.745040069 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.74556192 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.744718656 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.745276457 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.931425054 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.758910762 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.74490931 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.745396302 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.839243902 seconds)
  done (took 50.195040851 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.74823988 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.747868474 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.759382613 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.749639512 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.747691262 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.760080171 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.781784017 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.75090378 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.781623998 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.758897915 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.814927519 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.756594362 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.748038915 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.7972938 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.761030117 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.76328121 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.838536167 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.822537455 seconds)
  done (took 33.547927768 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.823556335 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.754581401 seconds)
  done (took 10.244354039 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.743277186 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.759307588 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.797364529 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.771564875 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.756772302 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.738963668 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.743999675 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.746780463 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.769796218 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.790624507 seconds)
  done (took 69.279919548 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.754435955 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.749595414 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.748535649 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.748027694 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.742479932 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.745243257 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.748140932 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.747465895 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.401694543 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.784795168 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.755112539 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.7529159 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.748569878 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.74965271 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.743636452 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.771840158 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.864820732 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.743437416 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.744603778 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.75247153 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.748603105 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.801221713 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.760788094 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.747653031 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.777572594 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.401832711 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.757493805 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.753819878 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.857438013 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.744937794 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.747687054 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.749429495 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.751328041 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.123800957 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.011347965 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.747882512 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.762097007 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.757948128 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.744530678 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.8611474 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.75076502 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.758061024 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.468983732 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.993136631 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.840317018 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.790442401 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.076862352 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.764489101 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.750633633 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.777967321 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.75287362 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.752317722 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.76348164 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.22831909 seconds)
  done (took 125.538037278 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.745844077 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.094598491 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.914674557 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.746910438 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030590019 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.954728295 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.745892807 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.794336189 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.747186776 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.975396095 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.999557391 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.852477785 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.74465333 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.743365948 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.741964631 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.744305695 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.903373358 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.81721831 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.746320007 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.743943149 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.776434207 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988781817 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.871521397 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.74724871 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.776605383 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.958594425 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.868388798 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.848802192 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.543335441 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.744697143 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.810097758 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.74637665 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.745538433 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.743926792 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.902708563 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.841167202 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.833676496 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.745590754 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.744620503 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.744594313 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.497210019 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.947451851 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.842723315 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.877497529 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.999884936 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.953140942 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.53043206 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.744451511 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.490981995 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.912326749 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.976759148 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.975904146 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.869888426 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.74741616 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.015523878 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.744933376 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.744483637 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.997828165 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977587589 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.845818571 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.747707803 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.74601704 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.744565415 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.04016371 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.748315929 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.844583292 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.74838906 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.745475346 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.845058802 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.847014745 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.983740617 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.961545873 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.778940905 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.076991507 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.265932147 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.99680286 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.815138205 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000396927 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.748237099 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.745882239 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.828893915 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.593383421 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.003308615 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.03019195 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.994255616 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.78507013 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.471840502 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.747560656 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.975825352 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.970247194 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.009780416 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.99495432 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.987365823 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.084423508 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.746175067 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.745983564 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.047683067 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.87401607 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.749225727 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.100306229 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.979722589 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.277970674 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.77804881 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.052392364 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.88170233 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.750009035 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.382986265 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.74673243 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.979952662 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.789984076 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.747918969 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.748114694 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.970247449 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.738219043 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.74784623 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.657679549 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.81225699 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.751314603 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982624245 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.75009291 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01976652 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.749469698 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984116425 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.199049129 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.782149082 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.925105956 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.997885181 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.751032375 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.99161573 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993563255 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.86590834 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.024879589 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.660276217 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.751774756 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.038356933 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.750484866 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.748650452 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.922416274 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.749900899 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.895144974 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.751110359 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.043828557 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.773411501 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984568333 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.751967681 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.007569357 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.785132053 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.802453085 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.752780184 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.884289435 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.751261238 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.663825178 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.909661777 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.750852544 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.749640141 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.30375337 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.751229523 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.902970124 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.979034905 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.773969477 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.825184112 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.4204661 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.748565409 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.83221862 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.77568406 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.138927168 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.74954774 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.00442677 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.164093096 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.749980535 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.750384607 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.040599738 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.989998649 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.750558347 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.749037275 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.658031052 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.750891302 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.750848873 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.934823603 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.179833794 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.750594731 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.955285594 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.755212878 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.881554205 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.751752547 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.830295109 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.088697933 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.751010031 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.750529776 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.754483394 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.752585208 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.749606593 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.963378055 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.779608642 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.24628098 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.892566924 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028298392 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.065863092 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.995276937 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.798743318 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.755373725 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.016090301 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.755586462 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.81754856 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.754470521 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.776106948 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98290972 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.755534727 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.965056938 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.028368097 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.600701093 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.803272096 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.755378082 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.752478396 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.752208042 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.904549887 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.838479974 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.754142641 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.752951159 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.869352523 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.877506725 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.962490089 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.753971359 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.85474485 seconds)
  done (took 877.054832427 seconds)
done (took 1182.764790243 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.754071852 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.757241736 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.742782641 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.758012553 seconds)
  done (took 28.685256406 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.761864379 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.760943009 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.760634535 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.759186705 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.762335577 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.758284276 seconds)
  done (took 12.236561517 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.785922296 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.756237721 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.75706525 seconds)
  done (took 20.973982512 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.83227469 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.142012367 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.88942507 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.176832989 seconds)
  done (took 9.714767748 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.761009401 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.759600754 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.759614556 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.762008031 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.760689171 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.762564178 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.762371275 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.762525315 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.762432903 seconds)
  done (took 17.528471352 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.883409647 seconds)
done (took 94.695209234 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.873493224 seconds)
    (2/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.990115223 seconds)
    (3/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.996085907 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.826355272 seconds)
    (5/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.9244743 seconds)
    (6/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.938641312 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.860105431 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.373452571 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.520008906 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.777244989 seconds)
    (11/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.746566957 seconds)
    (12/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.280256846 seconds)
    (13/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.957381081 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.072836024 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.757845269 seconds)
    (16/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.841636142 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.738294631 seconds)
    (18/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.474709147 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.838121655 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.886420285 seconds)
    (21/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.88607628 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.031928281 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.922679728 seconds)
    (24/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.735966597 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.558124456 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.779052085 seconds)
    (27/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.840638988 seconds)
    (28/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.403836864 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.996074744 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.927903467 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.756624489 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.065572169 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.900070317 seconds)
    (34/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.108186414 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.761977757 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.755796447 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.156504221 seconds)
    (38/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.837845801 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.968155026 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.057422211 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.801911041 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.933024787 seconds)
    (43/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.905380478 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.776441996 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.862665618 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.198718247 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.844414971 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.871756583 seconds)
    (49/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.135755083 seconds)
    (50/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.782017432 seconds)
    (51/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.736877313 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.868708198 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.679206372 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 1.982011153 seconds)
    (55/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.050722568 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.98363683 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.164303736 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.741460674 seconds)
    (59/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.512226342 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.460633205 seconds)
    (61/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.938428447 seconds)
    (62/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.785455433 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.883455309 seconds)
    (64/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.851961746 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.013038464 seconds)
    (66/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.111322109 seconds)
    (67/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.857727621 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.916061537 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.77741022 seconds)
    (70/309) benchmarking ("sort", BigInt, false)...
    done (took 6.756133516 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.862842121 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.846894323 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.75652507 seconds)
    (74/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.945111099 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.068375128 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.899279162 seconds)
    (77/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.758488286 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.23883886 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.95123229 seconds)
    (80/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.131792538 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.764429864 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.464862303 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.1327521 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.147699345 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.779020175 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.840620895 seconds)
    (87/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.764608246 seconds)
    (88/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.740662331 seconds)
    (89/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.992537344 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.784158341 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.794934569 seconds)
    (92/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.781646729 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.161920289 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.100862308 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.759608235 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.848292789 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.741405106 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.164775859 seconds)
    (99/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.486775573 seconds)
    (100/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.785284906 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.758199651 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.935779662 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.843747744 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.823978489 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.710849269 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.785904233 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.996177942 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.095612712 seconds)
    (109/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.665626493 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.729912142 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.850913019 seconds)
    (112/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.112103646 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.883274107 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.760508201 seconds)
    (115/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.004856825 seconds)
    (116/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.038861071 seconds)
    (117/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.847417829 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.937353758 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.983861777 seconds)
    (120/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.783694133 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.740666062 seconds)
    (122/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.326675848 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.7673238 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.016952833 seconds)
    (125/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.05950847 seconds)
    (126/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.106052844 seconds)
    (127/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.764499804 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.694553312 seconds)
    (129/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.328741199 seconds)
    (130/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.495616864 seconds)
    (131/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.120169912 seconds)
    (132/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.793854164 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.923805695 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.991496451 seconds)
    (135/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.255794149 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.79925868 seconds)
    (137/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.135781662 seconds)
    (138/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.900856097 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.386370643 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.01895009 seconds)
    (141/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.896625847 seconds)
    (142/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.846507592 seconds)
    (143/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.763255383 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.014584426 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.767946413 seconds)
    (146/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.887582519 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.099368447 seconds)
    (148/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.825635566 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.785254798 seconds)
    (150/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.762567049 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.861108077 seconds)
    (152/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.049855467 seconds)
    (153/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.884326637 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.76277144 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.927465344 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.764735458 seconds)
    (157/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.867240118 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.012294907 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.015702535 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.989733702 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.784010235 seconds)
    (162/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.743157823 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 5.035738079 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.08302441 seconds)
    (165/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.797790026 seconds)
    (166/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.826102777 seconds)
    (167/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.936800471 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.766400512 seconds)
    (169/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.745269872 seconds)
    (170/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.746371556 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.037700697 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.405286133 seconds)
    (173/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.750511121 seconds)
    (174/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.042592686 seconds)
    (175/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.786470131 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.16380962 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.684113571 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.071637184 seconds)
    (179/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.865958966 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.786893181 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.958063605 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.871183255 seconds)
    (183/309) benchmarking ("sort", Float32, false)...
    done (took 5.481843249 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.768222234 seconds)
    (185/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.071935031 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.772254337 seconds)
    (187/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.982890147 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.163220372 seconds)
    (189/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.052867541 seconds)
    (190/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.122059817 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.064935963 seconds)
    (192/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.776982 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.056938556 seconds)
    (194/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.884889903 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.902555007 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.937413872 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.831054769 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.789099106 seconds)
    (199/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.046045382 seconds)
    (200/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.825002993 seconds)
    (201/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.746621205 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.218695974 seconds)
    (203/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.882102266 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.770394851 seconds)
    (205/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.39721243 seconds)
    (206/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.751312663 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.772664645 seconds)
    (208/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.134064328 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.096454191 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.010569687 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.763569343 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.847840753 seconds)
    (213/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.769088341 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.294251243 seconds)
    (215/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.845647328 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.986419312 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.443084322 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.461863024 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.748767731 seconds)
    (220/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.365358125 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.769714763 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.44981411 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.560381014 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.752625434 seconds)
    (225/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.360111719 seconds)
    (226/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.263305219 seconds)
    (227/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.857675645 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.749958718 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.966910441 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.793264475 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.450562044 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.770972934 seconds)
    (233/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.096246042 seconds)
    (234/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.213666214 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.068921785 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.772484054 seconds)
    (237/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.105385607 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.970466321 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.872466295 seconds)
    (240/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.776541423 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.957670405 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.731312325 seconds)
    (243/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.793750877 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.790235844 seconds)
    (245/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.633561478 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.854764683 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.862564928 seconds)
    (248/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.84001686 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.777699411 seconds)
    (250/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.093116796 seconds)
    (251/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.762824476 seconds)
    (252/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.982152158 seconds)
    (253/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.134588689 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.003892619 seconds)
    (255/309) benchmarking ("sort", Int8, false)...
    done (took 4.662938707 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.209683342 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.7662685 seconds)
    (258/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.873916773 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.893809171 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.882026865 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.843219327 seconds)
    (262/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.78291129 seconds)
    (263/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.91599586 seconds)
    (264/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.584823046 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.135477513 seconds)
    (266/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.219579957 seconds)
    (267/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.925025897 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.584852149 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.736081971 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.823398076 seconds)
    (271/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.09687605 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.1408198 seconds)
    (273/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.821536927 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.782739377 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.810300391 seconds)
    (276/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.885969713 seconds)
    (277/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.153810421 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.925726056 seconds)
    (279/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.918223268 seconds)
    (280/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.906684793 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.796438627 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.878327277 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.783076935 seconds)
    (284/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.044219843 seconds)
    (285/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.890522718 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.008160395 seconds)
    (287/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.946580508 seconds)
    (288/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.895329669 seconds)
    (289/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.969829048 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.791806328 seconds)
    (291/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.945737475 seconds)
    (292/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.66508841 seconds)
    (293/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.791048735 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.720780522 seconds)
    (295/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.954463641 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.124697698 seconds)
    (297/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.886584316 seconds)
    (298/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.082478862 seconds)
    (299/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.798352698 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.82775575 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.829717643 seconds)
    (302/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.783954193 seconds)
    (303/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.227396481 seconds)
    (304/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.8682763 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.938690916 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.013153086 seconds)
    (307/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.769447935 seconds)
    (308/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.649658271 seconds)
    (309/309) benchmarking ("sort", Float64, false)...
    done (took 5.55788797 seconds)
  done (took 972.751627356 seconds)
done (took 974.491798467 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.815696848 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.811607402 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.791056243 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.813528479 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.904195859 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.816676193 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.801497516 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.793173906 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.839644757 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.842175868 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.791604212 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.814975991 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.794652507 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.793944648 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.793284855 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.810334898 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.11206332 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.828014035 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.810724732 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.801211081 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.810553117 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.790575569 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.84261039 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.816338289 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.796100659 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.795140046 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.79663146 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.8132482 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.906007923 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.796982182 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.795852845 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.805775264 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.111785019 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.825409163 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.78861614 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.814588629 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.806177343 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.801644867 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.796822973 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.826760053 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.204306009 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.838059476 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.79711768 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.79482823 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.79428904 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.797286013 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.797698672 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.800082567 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.809512386 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.809986273 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.195128958 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.853286068 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.798659972 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.794176408 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.805305314 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.795145228 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.797625989 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.815454029 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.815626998 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.814674823 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.0987362 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.837342482 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.796755248 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.812806987 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.802633976 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.229091623 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.833215281 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.798289415 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.199608905 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.841755947 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.228935104 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.847945261 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.795948674 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.810727543 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.828421316 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.115447856 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.827876543 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.794161963 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.804396877 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.793538336 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.805938805 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.813274692 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.801065647 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.796540859 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.813782939 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.820462809 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.806303192 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.798203771 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.805112664 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.81754634 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.805175064 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.808408291 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.800964697 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.791088182 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.806806059 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.800344728 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.799677709 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.799162506 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.801492582 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.807826678 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.199937184 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.859168694 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.79329928 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.793728329 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.795797132 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.811669984 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.199626055 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.841616504 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.818205636 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.844412959 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.798920124 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.101850656 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.833064548 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.817184311 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.806263339 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.799273133 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.79282143 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.099779468 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.228699801 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.85695943 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.799544799 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.794804481 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.817855157 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.799760104 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.794817748 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.118489157 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.830619541 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.816174681 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.922419238 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.808044512 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.830516062 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.79619626 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.801547925 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.826164595 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.81788489 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.830361133 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.800560007 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.818824917 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.816980105 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.796273643 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.811925387 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.809469213 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.799291109 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.803376579 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.792730184 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.826970796 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.815021123 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.815660694 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.82002914 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.92211328 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.796890659 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.102711295 seconds)
done (took 282.801601162 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.874953564 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.798715989 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.897625741 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.796655733 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.881466071 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.88758283 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.794165105 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.794339659 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.795558884 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.179390914 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.795031301 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.795304586 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.800532585 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.795387931 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.883873234 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.79797082 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.796109227 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.141715565 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.799619664 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.874243053 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.799504031 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.794952242 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.79821898 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.191934504 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.79630829 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.801302527 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.880212992 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.798247634 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.149172595 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.793566091 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.793325227 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.154505333 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.901943392 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.826519823 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.800170662 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.805741618 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.883850077 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.813310374 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.883554315 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.883088415 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.900426805 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.829712547 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.796421135 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.799361318 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.8029895 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.800481535 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.79756751 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.828087155 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.797141612 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.797255997 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.141555046 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.809150853 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.806593577 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.797596465 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.797624498 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.820876664 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.797711184 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.800304759 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.895456569 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.800501531 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.865347106 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.186589717 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.180735837 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.80035005 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.803876345 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.798613009 seconds)
  done (took 179.693565738 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.867360021 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.877397029 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.867589491 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.806650974 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.849346295 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.868570939 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.808052444 seconds)
  done (took 14.658484223 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.807067622 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.801626482 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.851058859 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.852442773 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.801155877 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.957446953 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.801258358 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.813138782 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.798924119 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.829345037 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.802212551 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.801827224 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.80832826 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.795249445 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.851047519 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.814097363 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.919919008 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.803514721 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.802695406 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.951241381 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.799419848 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.80902073 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.827797653 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.814534592 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.801745126 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.809227306 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.373304618 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.802790419 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.800732326 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.802554296 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.80084372 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.843195201 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.803552667 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.803707631 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.799549803 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.917144277 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.80203009 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.799913168 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.803591621 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.804095987 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.803676437 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.80248664 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.803914952 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.800708873 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.803475634 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.827304305 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.803782221 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.8044394 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.803405349 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.804345092 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.829745894 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.804365457 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.800779229 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.800830911 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.845358785 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.809788416 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.804287521 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.800818624 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.804702018 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.801249107 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.953915741 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.854496943 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.803975904 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.853649466 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.804767365 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.805623679 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.804273802 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.804439849 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.896218124 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.804621208 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.85303006 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.8014305 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.963472106 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.828605681 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.80500696 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.807069741 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.807835669 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.806068972 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.800884692 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.812141959 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.801992382 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.806947112 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.811829295 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.802694787 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.802480624 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.916604649 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.94537013 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.802228475 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.820073093 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.815594234 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.805009341 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.85199997 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.80734217 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.804395301 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.864318009 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.923541912 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.832916337 seconds)
  done (took 199.246272343 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.809441183 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.812866341 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.806840182 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.823492138 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.807239844 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.806328202 seconds)
  done (took 12.584329462 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.809056819 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.807310664 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.806490391 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.806150318 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.806277994 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.806321007 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.806135209 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.807747654 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.811239461 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.805218609 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.80681473 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.806905152 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.807644648 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.805154681 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.807037409 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.806104525 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.807567602 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.803961869 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.805823108 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.808312399 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.964157259 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.806371968 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.806900298 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.811112283 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.813092347 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.806847679 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.817732836 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.808110339 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.807002546 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.81565648 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.811585036 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.807530097 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.811226528 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.815138895 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.812090771 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.814105053 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.811771857 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.807738759 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.80487149 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.807510037 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.808332834 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.809797963 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.808091597 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.808641871 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.811448212 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.8157965 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.813179349 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.817326147 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.808316047 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.808298681 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.808078335 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.808410312 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.809631158 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.808470985 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.813342687 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.816279578 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.813125469 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.810522676 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.80836564 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.812428174 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.809812506 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.809625712 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.812411393 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.814328075 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.806456239 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.808966053 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.813496734 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.813242753 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.808909693 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.809098126 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.811091875 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.805761673 seconds)
  done (took 133.160600717 seconds)
done (took 541.071791153 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.029043868 seconds)
  done (took 8.750170076 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.984618919 seconds)
  done (took 8.762805295 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.397697318 seconds)
  done (took 10.119784559 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.83017569 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.831241671 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.822684386 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.812695914 seconds)
  done (took 29.046972062 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.871235439 seconds)
  done (took 8.592865765 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.825407207 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.801170103 seconds)
  done (took 15.380511097 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.927686197 seconds)
  done (took 8.652201796 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.860390794 seconds)
  done (took 8.591513072 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.806344755 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.81834765 seconds)
  done (took 15.371429384 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.785315661 seconds)
  done (took 8.508222771 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.982260629 seconds)
  done (took 9.803768331 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.822040516 seconds)
  done (took 8.616739915 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.838785222 seconds)
  done (took 8.562564203 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.919566049 seconds)
  done (took 8.643039635 seconds)
done (took 159.122949556 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.811052891 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.810828149 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.810807763 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.81085563 seconds)
  done (took 28.965749216 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.844136546 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.845074527 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.846790166 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.856138647 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.846513153 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.844684715 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.836824362 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.836224183 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.85426925 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.845448134 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.844665882 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.846504903 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.843551141 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.836367255 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.847307383 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.847227838 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.854701465 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.846347728 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.837503181 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.847385075 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.812030775 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.85647773 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.84794114 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.812685289 seconds)
  done (took 45.960651181 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.007171142 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.883064709 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.966299879 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.865215396 seconds)
  done (took 9.445344998 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.863192701 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.866049612 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.877955756 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.915799206 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.941474445 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.874735339 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.8385839 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.834002591 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.8196399 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.865630202 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.94053817 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.860427373 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.951656651 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.812690969 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.025994453 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.812565077 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.812605071 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.864244636 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.917670424 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.92933498 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.813096748 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.864408021 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.867766891 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.860235582 seconds)
  done (took 46.754994451 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.810689924 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.819288781 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.817288985 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.812755826 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.813478613 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.812288259 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.818566405 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.812960568 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.833280417 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.813301469 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.811846592 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.812350219 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.811842677 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.812660009 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.811586201 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.824735435 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.825328811 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.814311 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.815692456 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.820238909 seconds)
  done (took 38.04987161 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.807593083 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.661294564 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.160507475 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.063969922 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.809570432 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.813369909 seconds)
  done (took 31.04263171 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.828897753 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.825508882 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.814132294 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.872271575 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.962346077 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.827370161 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.815278288 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.828183386 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.863705482 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.889206163 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.838625578 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.848305665 seconds)
  done (took 23.941132018 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.811006546 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.814506614 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.814389866 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.83059691 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.826897098 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.828699615 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.823040881 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.810950026 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.831615373 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.84169569 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.828899195 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.828559988 seconds)
  done (took 43.621233099 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895855379 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.697478124 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259783656 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276207672 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.346567167 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.019399102 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.810910336 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.90325922 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.81388453 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.083838758 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.15528803 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016573661 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.063767774 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.626563585 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.817273859 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.260174719 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104884933 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025388232 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835988944 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41013543 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919330934 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410797951 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.483301213 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923744024 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.020625478 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.94478029 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.072301797 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.76883327 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864878631 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820477023 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820840776 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.812773825 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085315931 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938178588 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887495768 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82197485 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.236035848 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.527800986 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.803080308 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.493514108 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.334634739 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.929139961 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819967358 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812518826 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.745234696 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416621861 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911506832 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.816866798 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.5148428 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.812621639 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.822749313 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892116075 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.814986917 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.627204764 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50189136 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.087981379 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.810768087 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819841433 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.378549561 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812276306 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.517372073 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.755678609 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.907726324 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.437252076 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265713562 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.965869386 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.817012422 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.816995011 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747249533 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.480334091 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925128233 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.95724293 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.832277466 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.462419676 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122939721 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.209382851 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.869784755 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086971831 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.670777255 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.754801272 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038893257 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.763197425 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.746904681 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.651262283 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.746840249 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026506718 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848647953 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.398064078 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849391583 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.902673883 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.824635508 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835552254 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82065507 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.037382332 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.692528585 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815385512 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.090975024 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.07290341 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837807388 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.907506999 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748112983 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.818949593 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069282798 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.024490126 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.162620413 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.273416671 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906239529 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829335315 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.827945229 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.816035914 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.825789253 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.088198303 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878953097 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824890829 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938431895 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.772004711 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06318873 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86384121 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.915584207 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.160975581 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053374028 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.135966923 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.065516826 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883469192 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.817630947 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.817041856 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.501534083 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431350976 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.041183809 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.812774182 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407604935 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.830560835 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.817773295 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750845422 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.443761808 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.159710755 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.902299379 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03884124 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.848727147 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092930404 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749694413 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.960883912 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.81364559 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.039011123 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.471000267 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.894404303 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076163662 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.165981899 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.138187547 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833115661 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835807015 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915249934 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839193166 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.343971606 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.074734826 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.821093914 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.820658427 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.492120816 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.876478038 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824055072 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.821081868 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.355035064 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094862297 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.84407361 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.824327963 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.70148937 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.829409534 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88182365 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.821188917 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.824600727 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.336671487 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.328941745 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.824908608 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.464517734 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03794682 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82342359 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.46922589 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001315338 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.841055433 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093914533 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883255015 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.752196759 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.519563109 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.520146532 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818358829 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.752126307 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.818073814 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826549051 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826575906 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.01170845 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.097224259 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86763615 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.420924486 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.922942794 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830945748 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.823280883 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819641147 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.317103454 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.817284017 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.525832816 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.830995848 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953128188 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.832535467 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.752602128 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.82206576 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.823242158 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.819374637 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.772742127 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872028566 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.426865195 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026770171 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079636391 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.23649802 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83478454 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.440562636 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.934325131 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.842337017 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.096005114 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.552482524 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.833487908 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90753765 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.830824316 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.489392326 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.559020937 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391742256 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129639294 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139133957 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172103575 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.276802844 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.176428287 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.912205944 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054329851 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.349492945 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.881994175 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922146695 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763747252 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843278503 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.474712345 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175939592 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841338407 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045812633 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112828824 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.154984895 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958139077 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031472031 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858311817 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.7133644 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865014368 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.342032108 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845089847 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.242359569 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023378646 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911251467 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.106228475 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.906520238 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.822844227 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15553282 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86396715 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.531904379 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.18288625 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.286994086 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.286274824 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049476214 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.830819756 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.267767376 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172537591 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.091588909 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.958395353 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757757658 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.832562132 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.8342665 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.820242862 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.801611733 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.677894095 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.074480365 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835108652 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057763953 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.015826968 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198663594 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.728719204 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.82887432 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825071781 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069908843 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.652283692 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99258907 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.207993525 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.414959339 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833476509 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.756723212 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.757040096 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.52661338 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.833576874 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.796523541 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036555194 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.93250593 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.510831545 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.26715899 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147957268 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.075742126 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.839224908 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.099682872 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103309308 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.323296315 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851546447 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.924555208 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.091778751 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.497167253 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.047191513 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.058778421 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370078007 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.052098721 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276426282 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.778163507 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.824879059 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040179892 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.046575604 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.166330541 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003331998 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.537701296 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.833831269 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208283792 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891226557 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.178753495 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.015075226 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.922669993 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838421678 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90821629 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835611268 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.836637879 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.836508473 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839463316 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.181796251 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941629435 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.839876879 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909391278 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829214152 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.402115632 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.840312591 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102297074 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177409142 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165323053 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891137126 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.827275129 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828462436 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761420551 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961355584 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.271793742 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100698428 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.953440659 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.967529172 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853789855 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.112218953 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.15229875 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150878238 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10260061 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.721615041 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.542669337 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.961342665 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.050359852 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838361928 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.036703755 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043949625 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125550078 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296338345 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.050752511 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.035029661 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103074824 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.1945318 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.828671972 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417653874 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.843531998 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.227597636 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.863317949 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.183611721 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085287582 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838490277 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954096947 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.836947583 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.030260603 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.280858314 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.495697123 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.181434442 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.689588808 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.838194204 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107206015 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.160567347 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141689869 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911034503 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83885563 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.524937107 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967768343 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.711435146 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.065621407 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.830528509 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037666414 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.540075938 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.83659995 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1031801 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138348925 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.824938862 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.740173525 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862095321 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.837222275 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.049302617 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039398934 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.075287112 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835095117 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.836839598 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.641623583 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105676263 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889144732 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758730347 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.830670871 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875285131 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.058950465 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.845983701 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.341316188 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.528371258 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102461826 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.74534992 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848523235 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30023639 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.213076452 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156552527 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.35562817 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044027602 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.380313214 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.737910563 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21007986 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.827530098 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.301925688 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212041901 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.826236233 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.393309832 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946546691 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.097493858 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151496675 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.843842328 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53132383 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.865406418 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054952423 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198870272 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769097103 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.835693085 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.861140552 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.829887423 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.847666259 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839068888 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.779089945 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342714759 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.678140731 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31697859 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.829501101 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.81231191 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.15368634 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.438499751 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951039227 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855420872 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837719083 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.540758426 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.121696352 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.084912251 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.415984219 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.911678696 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.836789681 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833329804 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.75808417 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.026089342 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.026956392 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116668559 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.261467097 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.952239687 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83598724 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.045621487 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042182181 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.192014728 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966418579 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.027774312 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956627624 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.757900445 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.547084294 seconds)
  done (took 1641.321781687 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.845385494 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.851358254 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.847148011 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.875967647 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.863296722 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.849680569 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.897452385 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.926277089 seconds)
  done (took 56.708263973 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.82742411 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.987211391 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.835432105 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.827049612 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.834371974 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.825615598 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.003245532 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.842781555 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.881752174 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.83481489 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.825844402 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.824686422 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.094547072 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.855744549 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.826113282 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.808906624 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.866142384 seconds)
  done (took 73.555899083 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.828505087 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.068948324 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.856089048 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.823706746 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.023397729 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.838395992 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.875281542 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.837358768 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.832894952 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.250511078 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.123895063 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.837033294 seconds)
  done (took 89.939657368 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.841024651 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.832196613 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.831988078 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.831939192 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.832556815 seconds)
  done (took 10.918992103 seconds)
done (took 2141.968997151 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.061249879 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.030408308 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.070739119 seconds)
  done (took 5.84442676 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.971924348 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.021457704 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.14510933 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.146459104 seconds)
  done (took 10.030733618 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.111607786 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.23117087 seconds)
  done (took 6.085093475 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.150960934 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.855043136 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.210784947 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.82516909 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.827682914 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.830769243 seconds)
  done (took 22.232547217 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.829022869 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.831482771 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.828888391 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.832282692 seconds)
  done (took 9.065207629 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.80733083 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.510955539 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.811530579 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.825237766 seconds)
  done (took 20.697405723 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.982779048 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.94504413 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.972924924 seconds)
  done (took 7.643447954 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.050869338 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.058087541 seconds)
  done (took 6.852001428 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.990013189 seconds)
  done (took 3.732812049 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.856768419 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.0989516 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.344859495 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.867806484 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.481547219 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.084081388 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.184713605 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.06407101 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.283302071 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.320333494 seconds)
  done (took 25.329475645 seconds)
done (took 132.533685261 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.405923756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.858027528 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.036942806 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.201008296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.070555062 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.031702663 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.037828916 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.189267233 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.880660473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.865726122 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.201780247 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.062940951 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.983331129 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.841352343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.994038904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.839886156 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.04934503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.217130836 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.928430126 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.122872971 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.049110371 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.827609845 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.019195418 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.842492877 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.047874339 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.967666081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.368097286 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.836997593 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.997740042 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.379978306 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.969685653 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.236787459 seconds)
  done (took 167.105401052 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.805953743 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.806388303 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.807759402 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.803701993 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.270015474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.80285711 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.804168893 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.799448032 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.207898667 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.19822813 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.796426357 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.252573101 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.797038406 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.791386844 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.79515235 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.79119781 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.345445713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.789467488 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.787187646 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.783498268 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.784789768 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.070469855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.785495658 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.08208005 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.325965883 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.785521508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.784160319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.78634748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.784824694 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.785281309 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.786044501 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.78946705 seconds)
  done (took 206.514237777 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.784083419 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.786885066 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.787346334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.785274104 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.787245594 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.788273017 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.788055506 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.784592162 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.374403667 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.363770001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.786707627 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.787707942 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.786460869 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.785427144 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.786675603 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.786450124 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.785147498 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.783231672 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.786213547 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.786793585 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.79063958 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.433342354 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.786759276 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.400470916 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.787520198 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.786207759 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.787630386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.786516508 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.786370604 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.787178621 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.788712004 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.786124435 seconds)
  done (took 217.301968864 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.04395444 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.790923023 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.792164354 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.711333557 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.79175313 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.79191843 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.801306429 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.038242471 seconds)
  done (took 18.466695427 seconds)
done (took 611.140416477 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.25217279 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.10770061 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.969363022 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.814438642 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.170103272 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.864985433 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.809120807 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.879542576 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.428375789 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.887238087 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.439512146 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.836551395 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.522184244 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.840300156 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.932912873 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.869751566 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.361676089 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.444570892 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.990790815 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.979929201 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.993418646 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.742766337 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.895736363 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.466401245 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.555893093 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.792759633 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.872484305 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.356315161 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.823471633 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.970947629 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.551057255 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.124522047 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.828107839 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.811741625 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.868440254 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.845027379 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.08361264 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.827145836 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.939466064 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.550976944 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.990471276 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.349236044 seconds)
  done (took 99.346659709 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.779667866 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.77732098 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.777140486 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.777584056 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.778810986 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.777587586 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.777626666 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.776805033 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.776988497 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.777148035 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.777662198 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.778161887 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.776106018 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.7782953 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.777410517 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.776991902 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.777383967 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.777912924 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.778056545 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.778573515 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.778205573 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.778295686 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.794891758 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.778796528 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.778076168 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.778544701 seconds)
  done (took 47.956882895 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.794949841 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.948443717 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.043976513 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.816703895 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.795271718 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.799096474 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.813554111 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.800110505 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.796909695 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.796818334 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.885606983 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.801714853 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.815663849 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.043633295 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.81438869 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.795747786 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.795372843 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.796911119 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.955424095 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.813328625 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.81572192 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.80116919 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.816212774 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.810299393 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.798094233 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.797147848 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.800200066 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.253044614 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.806920322 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.883932049 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.856516705 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.824280569 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.203207893 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.054028216 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.85519069 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.805332636 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.795810585 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.888335538 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.80408799 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.798634656 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.81506246 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.80515458 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.040970915 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.311122506 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.814614831 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.797075944 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.263055235 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.898630862 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.840560443 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.809663421 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.045007841 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.815871117 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.799561876 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.798801336 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.834959415 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.80582984 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.797542088 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.146956106 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.81555573 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.815893359 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.806630534 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.799209087 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.966449461 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.810486774 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.95042168 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.809399651 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.804878024 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.799456941 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.044281095 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.816665538 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.310647191 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.814711569 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.798289718 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.888098322 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.955879062 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.29122981 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.813905229 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.967151443 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.215710089 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.826676369 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.807606233 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.244628223 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.828385747 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.806891387 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.800462972 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.800958472 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.799361431 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.840204366 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.816913392 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.229101204 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.320084025 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.167677083 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.827922431 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.815830846 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.800241155 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.150870032 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.808962103 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.798332047 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.038781573 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.32473265 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.814932344 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.806933199 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.300022116 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.816998997 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.818895912 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.808766146 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.049112777 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.819221149 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.839955329 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.799411925 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.806869638 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.804458198 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.819091873 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.807797394 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.800797762 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.295045628 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.909061832 seconds)
  done (took 223.810763092 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.797044723 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.801048697 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.794865789 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.800119445 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.794735002 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.801703018 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.794018622 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.796653339 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.801013401 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.793727483 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.796228844 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.801969799 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.799888823 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.803391074 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.806071074 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.800243902 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.401508218 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.79796339 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.797537851 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.796741617 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.452025483 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.806535624 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.796343085 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.795714666 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.796487457 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.797764551 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.807127676 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.80025932 seconds)
  done (took 165.344725894 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.801768594 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.918895979 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.824880628 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.831052294 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.810241566 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.798886257 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.825324123 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.81908676 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.809073449 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.798479151 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.80053901 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.864293735 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.81404317 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.900598166 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.835236871 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.832786659 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.907211091 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.809881229 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.800233314 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.800216501 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.833289113 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.792808818 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.863820746 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.931029505 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.822742257 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.92054835 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.808210155 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.80414523 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.803711952 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.922319414 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.819382651 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.863973516 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.834450239 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.822258247 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.925863406 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.924203009 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.910513636 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.834129623 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.809416479 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.802116538 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.802272091 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.787076101 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.919881645 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.824392925 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.806283319 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.904322012 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.824189174 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.805374391 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.8153714 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.802534892 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.818874558 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.823535876 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.873482632 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.938438475 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.841842315 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.838111875 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.830439021 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.077347239 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.81121678 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.905855339 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.794445387 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.923352361 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.826635911 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.787675443 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.804270628 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.809421458 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.832097678 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.836100619 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.912180762 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.814220476 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.905977228 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.840062013 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.813772162 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.803202141 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.806689467 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.921661908 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.926045904 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.839352942 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.842740076 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.840300561 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.795871153 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.805949618 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.789588388 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.822893638 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.809543707 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.919791892 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.925809851 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.813655975 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.807131059 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.80708155 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.807314775 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.83293785 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.931396966 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.842845175 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.895575295 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.875662871 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.882485474 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.821370283 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.818293292 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.810015463 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.87122385 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.82211251 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.816389179 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.123341773 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.875164028 seconds)
  done (took 195.624508318 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.194567472 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.854207208 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.864143289 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.119212072 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.153650333 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.84101659 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.852931009 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.853506705 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.880633115 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.038938657 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.926602692 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.872105583 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.844154911 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.830255337 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.854752411 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.87598871 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.860571868 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.190675566 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.958404292 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.991845917 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.844258592 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.123206395 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.13771074 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.239334585 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.892773681 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.248818791 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.442567991 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.991444847 seconds)
  done (took 59.504487045 seconds)
done (took 793.291622722 seconds)
SAVING RESULT...
DONE!
