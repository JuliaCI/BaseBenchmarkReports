cset: moving following pidspec: 11259
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.389777587 seconds)
loading group "string"... done (took 0.567170649 seconds)
loading group "linalg"... done (took 7.218331201 seconds)
loading group "parallel"... done (took 0.155942876 seconds)
loading group "find"... done (took 1.147466383 seconds)
loading group "tuple"... done (took 1.790515201 seconds)
loading group "dates"... done (took 1.311826741 seconds)
loading group "micro"... done (took 0.220679823 seconds)
loading group "io"... done (took 0.953696455 seconds)
loading group "scalar"... done (took 37.63514465 seconds)
loading group "sparse"... done (took 11.874538193 seconds)
loading group "broadcast"... done (took 0.931844547 seconds)
loading group "union"... done (took 12.217341924 seconds)
loading group "simd"... done (took 4.434880254 seconds)
loading group "random"... done (took 9.106352487 seconds)
loading group "problem"... done (took 1.85866813 seconds)
loading group "array"... done (took 20.966020773 seconds)
loading group "misc"... done (took 1.693309221 seconds)
loading group "sort"... done (took 3.356546923 seconds)
loading group "collection"... done (took 17.327866575 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513976692 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125819276 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118489914 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119970952 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147512293 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112733477 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124184552 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084895366 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.772683657 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14949691 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117841055 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432846494 seconds)
done (took 5.133332156 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177929033 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084492507 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082055224 seconds)
  done (took 1.299113803 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065313429 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12591891 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066919736 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066513282 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06716484 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066305215 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066540677 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069030814 seconds)
  done (took 1.660329377 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075097323 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069702113 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069147345 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068408994 seconds)
  done (took 1.415579059 seconds)
done (took 5.761706941 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.792060236 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203253439 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187960316 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410827821 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131173685 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159137138 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64614284 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321068287 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188892019 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08016695 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105717925 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.329025725 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108763697 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637087481 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074444451 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090519413 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135975365 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.415011566 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067150118 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082135058 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08838289 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127875234 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084762411 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074296027 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146768816 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067525049 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136834654 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079956574 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066529065 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213336553 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172178719 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.645275832 seconds)
  done (took 10.244596771 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097893265 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098110223 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06813125 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123751576 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099515221 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069891815 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070899601 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067235248 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086798056 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128798039 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089513867 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10213632 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065320775 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069064344 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085234292 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204285919 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080405401 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082346049 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070701031 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075200628 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108064488 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07878461 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077526792 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077098091 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129140348 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178877218 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095554032 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096648422 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066807073 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08039312 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114655801 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126081509 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066943934 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066239822 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125000496 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09648217 seconds)
  done (took 4.591485307 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.005729707 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144853257 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090026205 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13487846 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064377329 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109303648 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064888338 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081248278 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209493279 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.453574085 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.58762731 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.111642441 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110228072 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103455897 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067242466 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064534805 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067923947 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066740729 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.484533716 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097320389 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107986086 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082354085 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070250144 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069801751 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354288638 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068554438 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064289693 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068465629 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057217486 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125965995 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068309758 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.944433423 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126534422 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066311746 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100166022 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167780743 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087830796 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.277985795 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068230741 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064204551 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153440268 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065099961 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.06983467 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065674574 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083764077 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103285917 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113847797 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065463206 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066739256 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162226733 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064664444 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079500255 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.65780866 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153897121 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076257619 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063515076 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.255192332 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087649116 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068794752 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064771135 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.200107616 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135682197 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067233415 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066448737 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06879107 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069603389 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360017483 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065952722 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.231810877 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06810154 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077476469 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072751298 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069665037 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073019921 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072677571 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087592341 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065965806 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074931597 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065851881 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065467139 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066650053 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083250672 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.375515138 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066526579 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068324323 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06489341 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089535785 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096529893 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066194976 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065181154 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099725745 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06400768 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067946286 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065960454 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106238098 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066657631 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08317017 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068642674 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113318223 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.167198371 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.087722095 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066355005 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096267897 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070563287 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098751393 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081301975 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072465109 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.420908817 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065363729 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064906301 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068275146 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065135799 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067497314 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066644019 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079152152 seconds)
  done (took 21.468842153 seconds)
done (took 38.442533152 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.239346181 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074151496 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077396394 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07393148 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074247198 seconds)
  done (took 1.764719162 seconds)
done (took 2.967812904 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122708695 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100337392 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063679443 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098271366 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063998307 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101707766 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100758762 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081983097 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10004044 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064151945 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097434838 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064008091 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064011421 seconds)
  done (took 2.350365582 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084692587 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083945043 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070587674 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083226926 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063543981 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08360467 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081888843 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089207128 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081354271 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072506926 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063420763 seconds)
  done (took 2.057913986 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085153196 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085023915 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070245142 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085391632 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063919751 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083089595 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081755517 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086157055 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081865282 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073518555 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063265058 seconds)
  done (took 2.056349576 seconds)
done (took 7.658296606 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079339387 seconds)
  done (took 1.264927453 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.600401406 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.280310619 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08220808 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112119198 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188831374 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11940706 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277775885 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08638873 seconds)
  done (took 9.118107375 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089164294 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083551352 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069403325 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068944659 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072241504 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071173696 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067942507 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071889492 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071872041 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06969939 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070378873 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071119918 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069295323 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072343031 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068235277 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069270982 seconds)
  done (took 2.424681042 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093016283 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091633179 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073652804 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074670118 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071805452 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071685203 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073977956 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07314767 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070623614 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071933647 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074365651 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073151993 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071036536 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064386229 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07329292 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074822563 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07082368 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073228915 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073584282 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074345664 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074597117 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063954611 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070809645 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073994717 seconds)
  done (took 3.076177116 seconds)
done (took 17.07933266 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116719612 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072470196 seconds)
  done (took 1.379974374 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084138386 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083654915 seconds)
  done (took 1.367494133 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08553634 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065747737 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091619358 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078456299 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065575982 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065429729 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088683429 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065968522 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065719252 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065566054 seconds)
  done (took 1.940865248 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069946678 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077943612 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070435199 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080960568 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073788394 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063766337 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072157573 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067097854 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077605405 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062758853 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071275725 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082961569 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07107062 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084447912 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072121595 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068669597 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070701253 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067303209 seconds)
  done (took 2.510448479 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066609474 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067385625 seconds)
  done (took 1.341717664 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068648995 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063779468 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066529436 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066303417 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063525838 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061928411 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063214567 seconds)
  done (took 1.657476222 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384249975 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112849827 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.309284922 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070616578 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081373873 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255983488 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065266809 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070296483 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070128353 seconds)
  done (took 2.668993617 seconds)
done (took 14.076186632 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080171937 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086063615 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095725193 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375606146 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091546306 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065256676 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113584657 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189549001 seconds)
done (took 2.315576265 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213330689 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.63038297 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400151281 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20465355 seconds)
  done (took 2.443343365 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343003085 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087868666 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058978725 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066512934 seconds)
  done (took 1.777285608 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066797285 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068984223 seconds)
  done (took 1.351862808 seconds)
done (took 7.001548742 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067795152 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085945246 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06560338 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064029593 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.06324331 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06596158 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063523237 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063791744 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066011798 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06587221 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068568912 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066020944 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065944157 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063197362 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064062558 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065562718 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063196885 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063497561 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065937686 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063527003 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063328534 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066451934 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063647369 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063247368 seconds)
  done (took 2.828365179 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086443119 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066744245 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071297018 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071482413 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069370658 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07097364 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070756519 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065567441 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07155688 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067835771 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069024519 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069442221 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068247652 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069615781 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068158792 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069466142 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071267238 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065861991 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068020423 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069669604 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071347573 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065884958 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06939979 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071568501 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069450992 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07088654 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068584483 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065838976 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071446818 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069303772 seconds)
  done (took 3.320471414 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070214656 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062935539 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064036008 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071306407 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06332556 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06430962 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063558752 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063655074 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063824484 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062550364 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064320529 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062906429 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063568834 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064345936 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064709578 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066609834 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078909963 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064145387 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063659232 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.0637217 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066645433 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063208167 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063350539 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.0632035 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063114826 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062840758 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063497858 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062689933 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063874703 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062832467 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066695852 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06663123 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063076663 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070554197 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066556838 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063020306 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06704971 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062662725 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063655201 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062623862 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062705984 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063293193 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062593313 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070155523 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063242774 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064873626 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063014779 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064860817 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063306981 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065847072 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.177216332 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062882466 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064998089 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064504277 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066983914 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062018155 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064054154 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06232694 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063615125 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062818239 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06254338 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062948147 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065031027 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063369241 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077594717 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06990179 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062846139 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064580436 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063764898 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06550501 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064600409 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07670963 seconds)
  done (took 6.015767842 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090841853 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087732166 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065398362 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064791004 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062098644 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064179721 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069408002 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063758293 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065266933 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081716785 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064089097 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064878341 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064785012 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067664687 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063927673 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064889595 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072227731 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061323992 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063831476 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06699681 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063709737 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069194779 seconds)
  done (took 2.736173009 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158459229 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070906745 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105726655 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075443254 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069438233 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07475255 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069775125 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069651644 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069856422 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067109872 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06710563 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06983009 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069248882 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066929632 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067162425 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06703776 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069343874 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067291167 seconds)
  done (took 2.603674838 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077768242 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065828564 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087183769 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0656475 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066003179 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068121455 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070178565 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073517819 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068406814 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06526953 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073825572 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067782468 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067776234 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065414219 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067605281 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065119942 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068312963 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065562236 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074209697 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069823648 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069782261 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073743706 seconds)
  done (took 2.765889077 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081723211 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067806156 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082551037 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067825595 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062086536 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063859516 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069857518 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065398573 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069818124 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067479982 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065425533 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063838028 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068228521 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06554285 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068279139 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064998962 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067096775 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065065048 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066799966 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061534249 seconds)
  done (took 2.587079788 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086781614 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067504217 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067354055 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075517085 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066822136 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066800674 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074623038 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066983492 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067104512 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087924887 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06693205 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066933372 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074664383 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071511352 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067149047 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075028664 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074460116 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074340067 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067081216 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066773469 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087551337 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066909652 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074760271 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067186751 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066972943 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066513239 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066508387 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071747966 seconds)
  done (took 3.234117717 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067363674 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066498447 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063397357 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063339465 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063480845 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063664059 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063182185 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063102728 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065820321 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063073436 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065946987 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065563027 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06542119 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065472118 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065848271 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065181324 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065982011 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062901237 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063474433 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063594695 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065421026 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065457039 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065490483 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063809079 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063369433 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065868798 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063616537 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063032371 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065785645 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063498591 seconds)
  done (took 3.174558959 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077163169 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073134498 seconds)
  done (took 1.388813797 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063307813 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080257895 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06460049 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069230378 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069124749 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066744274 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072833218 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069109526 seconds)
  done (took 1.786965116 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082869516 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077230943 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067698667 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079786912 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075778775 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083115079 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133793536 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067115029 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072504904 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063898779 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079502585 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065093703 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071877061 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066222144 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071888545 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072078432 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063648058 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072310493 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068010616 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064713788 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067087453 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074472586 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067922186 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061095278 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066652688 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087569281 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076674347 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065001104 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068648441 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073587621 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071355235 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059877582 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065586814 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065837512 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063609652 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075446145 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08038412 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068261418 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074486295 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066501015 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076412676 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061073053 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070586668 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072330014 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075643476 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065679349 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066340805 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060453087 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063540163 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068206523 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061100872 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06923871 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060481748 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072756164 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069826465 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076971833 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064569345 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067666452 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069258096 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069181708 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072892532 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067945635 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06833149 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065203438 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075489968 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070582381 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074752848 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060778435 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059587539 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063655824 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075248893 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089029784 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.0720686 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066290301 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067188979 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063470145 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068701656 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066549098 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072374171 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072495713 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066386316 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071594976 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073258748 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065691483 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068195968 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073917462 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064158634 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068539628 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063520338 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082368784 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064924688 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064019393 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063468854 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075783683 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069293715 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065454394 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064442405 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07278555 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05993537 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066031283 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066713261 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066820292 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076477689 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069514236 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069262196 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072913654 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071516058 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064668948 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067935042 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061220783 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065392775 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063911332 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071742574 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058965667 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067370972 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06513767 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064995755 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072415579 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062361716 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064375347 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.198920833 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072983003 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06593848 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064391226 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069761922 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066876102 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070234733 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074022841 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065542556 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061040272 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062172691 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07028791 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066198489 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070265946 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071428835 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069778387 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06066992 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064654938 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07145194 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07445406 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066534992 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067734156 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072701897 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068122627 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066133472 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072928959 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069716204 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06534094 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071682611 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067344889 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06132624 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070211279 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069264398 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064589018 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069542377 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069924926 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068871597 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067130621 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065462142 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073796448 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066836367 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06569626 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066467675 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065151412 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07671461 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067434987 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061592438 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063627762 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075221318 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064535249 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06597616 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065499295 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068372647 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.0668402 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064454129 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.0656169 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068629145 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076273954 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069578468 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066384738 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070741477 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076696632 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066038488 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069017303 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065727062 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06728076 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066887298 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075299648 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071327402 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070980778 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067654507 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063446669 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071112832 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073178099 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065496372 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063526116 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064747707 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070204151 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071142802 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070238707 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066118866 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064039028 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066891232 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068986302 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06874531 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065322097 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065275293 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072367996 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064011381 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072550034 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066357689 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075694463 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068681161 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060652973 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068999459 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063964552 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071892444 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060879282 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063794551 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064961379 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066715663 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06509878 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068831251 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060354542 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073106793 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073508649 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066582787 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065321032 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066364269 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072378413 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067206741 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068812275 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068645719 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070602415 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07489615 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065014674 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068250524 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074743683 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064647017 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059041382 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070445754 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063183804 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063466015 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063537573 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062420948 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067613522 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.204617462 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073411313 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061489161 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069812244 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064969839 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066320033 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062403348 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071271179 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069320554 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067848156 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073187301 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067301458 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06765415 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071088037 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066027372 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067341584 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067793273 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070039938 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067856349 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068528247 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065782503 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069544003 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065557369 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064903278 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068445498 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066676426 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066781408 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072211102 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065442934 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066840677 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069120589 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067535763 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067249074 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066924237 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065786458 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069333561 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066753358 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067022914 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068865312 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061061653 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073674555 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066003734 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074512515 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066885231 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062915146 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073970263 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068662448 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071660343 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067249532 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06687009 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068224447 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065986411 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068744359 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073925922 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064170818 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07724894 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073475932 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066964598 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068864426 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066402164 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068257366 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064634593 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066896886 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067116252 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066802943 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065993785 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072119896 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068523242 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066225706 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067955958 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067205616 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067263848 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067053075 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060668293 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065544521 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065536598 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066035016 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075556589 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066815406 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066162361 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065132114 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067314286 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065086591 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062757767 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074135996 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075404618 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066622079 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073444007 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065655871 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067740331 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076839103 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060377832 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064719964 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063858814 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064074491 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073363205 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066964788 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075532401 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066347926 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065809972 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063398325 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067107538 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064911269 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060871217 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064299379 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069823513 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065308226 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06542409 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066571248 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069013817 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067366978 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075423134 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064979317 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066196887 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06514904 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062106287 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063859958 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064276798 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067240695 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065594214 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062626667 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06223336 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064225367 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065976082 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066757053 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067207682 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066022838 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071708555 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.198797483 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070652843 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070368755 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06221884 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070161975 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066931787 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066149955 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065380874 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071193621 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071309052 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067841964 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075656802 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067185706 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067686799 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067612198 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064582732 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066861091 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066044722 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066237118 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065822746 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067958648 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074416002 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064983194 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069593389 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066035125 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066233669 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073864189 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066981298 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069682112 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072948166 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067159636 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06818652 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074307476 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070714924 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070039829 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068381718 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068752658 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072559246 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066348084 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073435494 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067134994 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067809927 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068341022 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064788806 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065748478 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065964381 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066136906 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072880781 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067493235 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065467635 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065117578 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06469783 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06783044 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070295681 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074287477 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069011416 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069853323 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062011267 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063295069 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067044732 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063740945 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067196138 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068191521 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071152738 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068818203 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066191958 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064670079 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074920365 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072732837 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069961303 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064511474 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070535481 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066396809 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.0684246 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067023399 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066194863 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067659247 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069981662 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.0676345 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065765166 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073427178 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069472478 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066883552 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068068333 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067752829 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066631809 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061694288 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066771746 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068497969 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071353442 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068196899 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065877274 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076914934 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064031592 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066492851 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069356213 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065832923 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071242991 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061667636 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06804267 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067600077 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06710389 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061453771 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065492386 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064430053 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06829208 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065775548 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06162396 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07715804 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074886441 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069532384 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065133826 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064556583 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060989523 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060982158 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065271864 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066089859 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067057514 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074772969 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064233011 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064274266 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060113763 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065134984 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067564674 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068284853 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062185639 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060034245 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063988387 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.201179662 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073078126 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066185971 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06688214 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069440669 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069303511 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065120801 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070387357 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063111809 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071623731 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080304474 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067274771 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067926846 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073440005 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073977382 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06763883 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061852524 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067633655 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070656642 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067359568 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067947257 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067516525 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08307669 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070583284 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066780453 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065277631 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070052556 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065921959 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075657987 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067645615 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066520626 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071525083 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068995771 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075468226 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06921314 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07448847 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070126357 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069561215 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065562186 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067343989 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065397952 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065343069 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068387688 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068091592 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072032436 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074952297 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065935007 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077191075 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076097178 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06835536 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063732124 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065860019 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066055334 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061883791 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068404822 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064343874 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064745856 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065512664 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065590693 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067387804 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072083582 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067441825 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06695217 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066016193 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059744299 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068366392 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068281356 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067224717 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063137273 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065796134 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066828057 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070314669 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069462301 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064080008 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067281859 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067553583 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066546682 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061447699 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072528953 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065041368 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067810363 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065550861 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065685845 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066293235 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069409402 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071042787 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067095034 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068166959 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069797282 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067906191 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06333911 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062893118 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071140025 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063765628 seconds)
  done (took 42.41158034 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101291698 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062724451 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061138261 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061093075 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073509439 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062649096 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061172119 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06232042 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062574802 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065076928 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061651677 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061197187 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070174235 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077394015 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073061124 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066181185 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061332298 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062204573 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061257064 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062702872 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070430821 seconds)
  done (took 2.732380485 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074116443 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077541299 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075552838 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082442197 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070141185 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070307051 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075277908 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069804082 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078577046 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072112907 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078864423 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070266425 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072153337 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072669195 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072334401 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069938163 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077975142 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070577055 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07046136 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075454643 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070746659 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075429561 seconds)
  done (took 2.93465608 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066959498 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065825096 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067081556 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061134043 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065516492 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060900206 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069344027 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063848394 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.077097078 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064898522 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064659749 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064411083 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067801477 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060647214 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065832415 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063284028 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106531709 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068149128 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064920877 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06596299 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060648504 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066964322 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060201139 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061741577 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064284705 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068584375 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065451546 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063260392 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064590951 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063787762 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06505496 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063137586 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067081972 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065642083 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064419236 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064526998 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065241439 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065620577 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060958862 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06354499 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066010692 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06118069 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065625746 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066652505 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063108686 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063087993 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066634796 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06475568 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059883022 seconds)
  done (took 4.531777922 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079876679 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110044261 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067654815 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088892396 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082091689 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071781148 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069345306 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089735966 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062548543 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063619227 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081278275 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079000573 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065248876 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070384643 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07217717 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065052918 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066476088 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06439111 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068959545 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064254634 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068995547 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071899716 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079717443 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077838313 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068645114 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064127841 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064028263 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069476665 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077210012 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069567539 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069296297 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070476298 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080361212 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069881161 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064588674 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067178762 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081332521 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064986091 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067602085 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062842714 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067730677 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068858804 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071245596 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081152805 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065125998 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070011392 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064858924 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062314769 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077587324 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067671125 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072795555 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.0792851 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068916408 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06554185 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069998623 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080263124 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06531775 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063444811 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068254324 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07704485 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062775869 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068769688 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078546321 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066882891 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072045901 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.0786974 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070517653 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068881814 seconds)
  done (took 6.323463658 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076369504 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095154782 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082577611 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083014459 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075319599 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075117052 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075249976 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074841932 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074610927 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079230111 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075275381 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115532923 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07032524 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077654055 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075141268 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075331769 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074489041 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074767675 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07490991 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074874647 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075445136 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082382909 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075483988 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082470399 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079367935 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070510125 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074511998 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074723714 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082602538 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07455647 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079011124 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074621889 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074684479 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082450871 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079251875 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074657633 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064499532 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074467181 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074897461 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074804963 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070377249 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082243889 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074740311 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07021328 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075053177 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074594147 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082669942 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079106495 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077623124 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079595915 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075434379 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082675343 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074942569 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074976259 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082540844 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085713303 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082428134 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082595483 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074447458 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08222149 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082254245 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085618783 seconds)
  done (took 6.170190462 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083450201 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074589164 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082079783 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061350297 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063574324 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071604176 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063295355 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063640773 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073775779 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073592855 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076509442 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071069568 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074947823 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076178373 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071318077 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073982936 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071913045 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071370394 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074017004 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071224289 seconds)
  done (took 2.779936609 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074553903 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082700134 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066370712 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071571825 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068827675 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070704642 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068495507 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068799674 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066385245 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069327849 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075464806 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075658428 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066580558 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070780629 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075572061 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071131936 seconds)
  done (took 2.469606296 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085099456 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072771965 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079614259 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065750516 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066397103 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061874364 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065045049 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060981791 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061471401 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077847679 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065426817 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075542663 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065269094 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063811103 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061916931 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070524235 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061460674 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062344259 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064535157 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077992377 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068918575 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063740711 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068386386 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064845384 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068073363 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069902702 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064270904 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065212207 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062538384 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065384996 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068419132 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069021561 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063537613 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063335344 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064764829 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06280524 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065197134 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065831104 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.0708059 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065388795 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063470222 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068078977 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065468056 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066364934 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061849674 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06574579 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06115787 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.0675242 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062953555 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068538778 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065089802 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067896495 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065601529 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072077784 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.0681417 seconds)
  done (took 5.003364627 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07982463 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069251978 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061296448 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063828815 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069669818 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066664321 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069329895 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067133872 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066716959 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063980337 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067186135 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068092022 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067108299 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069175134 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067362625 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068801894 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061486336 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066856585 seconds)
  done (took 2.553139268 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071980556 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065317657 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073150697 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06564313 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065321317 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067705644 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061864134 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064125824 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064010945 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06572149 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065217977 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067831166 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064331026 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067725267 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065199646 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065424516 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067314174 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063968073 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065162399 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061259467 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067190397 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064358555 seconds)
  done (took 2.781757002 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094602138 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082447809 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140589453 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07837592 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083870446 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070301683 seconds)
  done (took 1.883724683 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091874257 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100597721 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066287806 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069451689 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075843326 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069006575 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069023895 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069682358 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078257361 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075799487 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07016095 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07881098 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078671262 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077718252 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075439293 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076060534 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069603278 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069997231 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066199051 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083347728 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069778759 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078173441 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069649125 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069772159 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069547303 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077405025 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078055295 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075571488 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070056403 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078266108 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075481007 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069367525 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077924583 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075412434 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068391972 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078254423 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069477787 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08343151 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074844785 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077704221 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068754138 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075527881 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078188272 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07477104 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07794903 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069495479 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074293451 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069712769 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069384927 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0854249 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075314534 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077493002 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078336763 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07883668 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07831467 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086060966 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075514428 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077670541 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075868455 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07600445 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078122044 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07609256 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077355269 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075767834 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075603738 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077805212 seconds)
  done (took 6.324419856 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105584279 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066735774 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070713821 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076199796 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077270266 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069760219 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069702131 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069816481 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069438542 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066769218 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10839852 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070167092 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077673313 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077569061 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070482027 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070036916 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070275123 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077453855 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066879711 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085909993 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069960398 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077421046 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077509957 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077815292 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07539641 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075855567 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069530886 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070082605 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069539696 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069433974 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074430192 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069736797 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077712072 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066231562 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077448782 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069407374 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069448039 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07437144 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069608457 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075389482 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077492727 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083509571 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069578558 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069529197 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075461156 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069289324 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069727151 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066178225 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069634411 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066261144 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075642107 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075849321 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075555566 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077757778 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070052168 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069759999 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069716919 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069600289 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070005269 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075697991 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077419308 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069578219 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085521667 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069459721 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069797238 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077309176 seconds)
  done (took 6.22690906 seconds)
done (took 128.781810805 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184912661 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16454969 seconds)
  done (took 1.684315563 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069578117 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098851432 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077195789 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127609741 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06562096 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099682814 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099282528 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077981901 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065544141 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066434094 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066054583 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06870116 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132185445 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0662937 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065691379 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068481128 seconds)
  done (took 2.663070261 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10041841 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162037784 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101229402 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064821749 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099227194 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072545093 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064721558 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075214699 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070886808 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065168133 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072713209 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070117519 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064693623 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070175674 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071024898 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072287476 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064853026 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072339572 seconds)
  done (took 2.784292028 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100025348 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090913918 seconds)
  done (took 1.541321363 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157290299 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105625108 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150507055 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351068877 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166536169 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.12723285 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127180799 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128195281 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116640099 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123376134 seconds)
  done (took 2.900488603 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099804201 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154740342 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265837033 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116624422 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.0724903 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094388474 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117418361 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077347853 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080027047 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079745687 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079362209 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076148847 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099099273 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07283291 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073441869 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075167836 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103522143 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072666857 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074368117 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076324379 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09970787 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065595415 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073072017 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072391669 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076973995 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077383452 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065603068 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065347247 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075896814 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074397881 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076895939 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093497086 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07705006 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105915813 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070726265 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107123581 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076540134 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073330125 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074383497 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073295779 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078135938 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078097274 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071948376 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075509451 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064889012 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076040841 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065349357 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065085384 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077733389 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066562223 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077987587 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077862015 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106571425 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066328127 seconds)
  done (took 5.959880181 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104514154 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10591247 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071045901 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115123235 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102525299 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072249126 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10296565 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095208525 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104572396 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069649136 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06816555 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069638847 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082191252 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082357486 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115088377 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106700743 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073808759 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070971535 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106326237 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105008463 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068091162 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096633644 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090718341 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103866888 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067130535 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069810381 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067891922 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069712869 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076700572 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078409316 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069597441 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080161426 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084121964 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077702072 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066723478 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067744035 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067587404 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079933454 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079246213 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078694183 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077521444 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067004659 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067107851 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069663527 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069211749 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067937252 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078820537 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080641332 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078546995 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069614222 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069729196 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067855196 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06904646 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080033402 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077763126 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080849991 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079476943 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06842319 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067995559 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071937204 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080880035 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079330687 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079546061 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068932418 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07856363 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068135634 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080343274 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084092515 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068168353 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069366238 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068644409 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069034275 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069483686 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07727446 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077838903 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069105077 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069003017 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067649769 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079941058 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077963487 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067358139 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07641483 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06658601 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067914146 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069094906 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068890373 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077325087 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07979002 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069332432 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067615286 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068771688 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068124057 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066829638 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076137414 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07965634 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078461663 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077666387 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068801548 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077690738 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077672043 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068975589 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07768264 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067129669 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069080628 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068211696 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076532384 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075314907 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078144176 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068031006 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06688916 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076387519 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07878092 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067115504 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076710349 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078610964 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077383163 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066588377 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078816819 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066999863 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076802974 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067930614 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077930613 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066783774 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076752399 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066792533 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066380056 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067056242 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07717553 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071304021 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066671191 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068267986 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067802745 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07681118 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079992407 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069069612 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076271046 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075965347 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068428245 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076825069 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066849119 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077250548 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06703041 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067366838 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064948915 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078294053 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066986641 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065819429 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067378451 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07742183 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066957533 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076567995 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074081002 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065537553 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077291888 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076893524 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074682833 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076408853 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068476367 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065674248 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066343575 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067116659 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074907965 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075809311 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068304776 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065704618 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074578468 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076131031 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064981772 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074497901 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074198237 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075620609 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065422603 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067167279 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077571835 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077330418 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075517047 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074484485 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074885761 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06704874 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074118197 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074817275 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06520049 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080865029 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065517844 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079097804 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074961808 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073826376 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075713093 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076631683 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077410605 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077543908 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080286967 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066308575 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066265485 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075727376 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066451806 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066584035 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074531916 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067178101 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067716587 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080381089 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066318813 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076954657 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065967727 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075871217 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064772472 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06818694 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079903656 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065608147 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067005457 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075683904 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067210833 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.0744844 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077001065 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075673457 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.305358756 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071781473 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082262844 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080985606 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071074775 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070116111 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073416013 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.08001006 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079771054 seconds)
  done (took 18.341528959 seconds)
done (took 37.234180682 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215693427 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15778435 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.189814798 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121668227 seconds)
  done (took 2.167570642 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120003426 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104470999 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094789985 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066818062 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10101169 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066739167 seconds)
  done (took 1.970086138 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31830037 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214990092 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193501474 seconds)
  done (took 2.141558751 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206148176 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193449792 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.431397791 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.269576888 seconds)
  done (took 2.630303321 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145574765 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090513222 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068459839 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084981532 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13649833 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162294294 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102560775 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.1276244 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079414777 seconds)
  done (took 2.470217446 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150506409 seconds)
done (took 12.947948013 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.104645595 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.240071489 seconds)
    (3/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.216508543 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.122259376 seconds)
    (5/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.209114128 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.210459165 seconds)
    (7/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.217643862 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.165210248 seconds)
    (9/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.172803766 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082941978 seconds)
    (11/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.083274793 seconds)
    (12/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063100904 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109562576 seconds)
    (14/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.194537379 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078712812 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074377319 seconds)
    (17/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076177984 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07561283 seconds)
    (19/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109946097 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077901435 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.098921246 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206902006 seconds)
    (23/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.16475611 seconds)
    (24/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.08919536 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.150324579 seconds)
    (26/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077548576 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.111794099 seconds)
    (28/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074151197 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090256045 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.218288154 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105313628 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07315937 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077311535 seconds)
    (34/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07394961 seconds)
    (35/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.158698172 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073837942 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.111081519 seconds)
    (38/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.230175619 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072479278 seconds)
    (40/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077943001 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090823339 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127726892 seconds)
    (43/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073543424 seconds)
    (44/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.155014846 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.113198358 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065214943 seconds)
    (47/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183416371 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092475024 seconds)
    (49/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073399245 seconds)
    (50/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.195919054 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127940596 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073390214 seconds)
    (53/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.163729521 seconds)
    (54/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071107774 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06733406 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15111145 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072235108 seconds)
    (58/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.129973986 seconds)
    (59/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.073110561 seconds)
    (60/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100357507 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090602857 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06533792 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.195801128 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.140429699 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067586394 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078560459 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094283167 seconds)
    (68/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.092112155 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090740458 seconds)
    (70/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077422579 seconds)
    (71/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.075406798 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074152203 seconds)
    (73/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.167369247 seconds)
    (74/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.061920209 seconds)
    (75/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120361421 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.182818788 seconds)
    (77/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.153522858 seconds)
    (78/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.154252536 seconds)
    (79/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079273582 seconds)
    (80/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07422168 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110314887 seconds)
    (82/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108820454 seconds)
    (83/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.200750594 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139939645 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.21288513 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.200226537 seconds)
    (87/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.102422106 seconds)
    (88/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066268735 seconds)
    (89/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051796504 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073502786 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089728815 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090545356 seconds)
    (93/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083603105 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.193354437 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139249004 seconds)
    (96/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158100029 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076181444 seconds)
    (98/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.070250235 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144670064 seconds)
    (100/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102068991 seconds)
    (101/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073688293 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.207607816 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080322997 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081833575 seconds)
    (105/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090257356 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066526161 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05150134 seconds)
    (108/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163439946 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076614729 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073562926 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090652177 seconds)
    (112/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069861533 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065947473 seconds)
    (114/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.162400244 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141555123 seconds)
    (116/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.156828265 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182016756 seconds)
    (118/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090089529 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051589239 seconds)
    (120/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051366013 seconds)
    (121/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065590437 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091120896 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051794635 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050910686 seconds)
    (125/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070676168 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091434958 seconds)
    (127/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067616873 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.138296236 seconds)
    (129/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.101029549 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074143963 seconds)
    (131/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073884566 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067790635 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072608129 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087745638 seconds)
    (135/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076492682 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07139256 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067935325 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072654283 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068680835 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140009359 seconds)
    (141/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080690297 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067023696 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071669684 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.074103765 seconds)
    (145/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073063816 seconds)
    (146/309) benchmarking ("sort", Float64, false)...
    done (took 0.130430623 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065001134 seconds)
    (148/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071111092 seconds)
    (149/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081625596 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064832271 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143191299 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072237471 seconds)
    (153/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100415581 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050783049 seconds)
    (155/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.113413112 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06508042 seconds)
    (157/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050461414 seconds)
    (158/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074724758 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108072953 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073569079 seconds)
    (161/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066659138 seconds)
    (162/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050499916 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112377102 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071398758 seconds)
    (165/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064828636 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.412629434 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050440932 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068834443 seconds)
    (169/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05051336 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081439574 seconds)
    (171/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068818596 seconds)
    (172/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052766698 seconds)
    (173/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065378354 seconds)
    (174/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.164459119 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066940755 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092529936 seconds)
    (177/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064145298 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065348966 seconds)
    (179/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193016279 seconds)
    (180/309) benchmarking ("sort", Float32, false)...
    done (took 0.132192674 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072143079 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052672792 seconds)
    (183/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083231377 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050515981 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073867238 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050520817 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094321724 seconds)
    (188/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061460949 seconds)
    (189/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051648907 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15385881 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090336533 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050310909 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051699905 seconds)
    (194/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075411299 seconds)
    (195/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05030599 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178020586 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063689089 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065114176 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06650721 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086632634 seconds)
    (201/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.305189854 seconds)
    (202/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091538834 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146046226 seconds)
    (204/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.102318578 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09094598 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051429389 seconds)
    (207/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077569214 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074369946 seconds)
    (209/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074700571 seconds)
    (210/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.10286842 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075682658 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073935734 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052020479 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065036798 seconds)
    (215/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051142675 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066816694 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.140495578 seconds)
    (218/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052403904 seconds)
    (219/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051179816 seconds)
    (220/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062454306 seconds)
    (221/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072290752 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071168458 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052364725 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06500726 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065922099 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06596544 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175023238 seconds)
    (228/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052753104 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09150679 seconds)
    (230/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052175988 seconds)
    (231/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068708203 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13737142 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06612494 seconds)
    (234/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061043447 seconds)
    (235/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066296248 seconds)
    (236/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090305655 seconds)
    (237/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066355233 seconds)
    (238/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050761292 seconds)
    (239/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052050068 seconds)
    (240/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075991312 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129364271 seconds)
    (242/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053867326 seconds)
    (243/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068178792 seconds)
    (244/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060545503 seconds)
    (245/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068103615 seconds)
    (246/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052227673 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050693298 seconds)
    (248/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052557737 seconds)
    (249/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05168615 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065893553 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066462853 seconds)
    (252/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154400963 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073200276 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072879997 seconds)
    (255/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.097119567 seconds)
    (256/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.160966499 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101348305 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066383218 seconds)
    (259/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061113745 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072862946 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.109287325 seconds)
    (262/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063903165 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073465844 seconds)
    (264/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051930436 seconds)
    (265/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050590449 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171178064 seconds)
    (267/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189679192 seconds)
    (268/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050468555 seconds)
    (269/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051864966 seconds)
    (270/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061598984 seconds)
    (271/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.107497 seconds)
    (272/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071731031 seconds)
    (273/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051070342 seconds)
    (274/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050270156 seconds)
    (275/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051384435 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086962094 seconds)
    (277/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076017311 seconds)
    (278/309) benchmarking ("sort", Int8, false)...
    done (took 0.142635305 seconds)
    (279/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069733692 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064984798 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073447151 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063812132 seconds)
    (283/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065731118 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063941085 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088192816 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050617422 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072567421 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090275082 seconds)
    (289/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065956519 seconds)
    (290/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062186683 seconds)
    (291/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061641224 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091194478 seconds)
    (293/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051932986 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071544308 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065168064 seconds)
    (296/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071979479 seconds)
    (297/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064251418 seconds)
    (298/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068218318 seconds)
    (299/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050623135 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175859018 seconds)
    (301/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061001598 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066200878 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05074488 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070576295 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064800129 seconds)
    (306/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071897564 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05378364 seconds)
    (308/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050836881 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091113984 seconds)
  done (took 31.049169644 seconds)
done (took 32.474842624 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086652466 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092588035 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076679631 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094283475 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081489435 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076359149 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072673904 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078601967 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080479723 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082200802 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078198162 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054007712 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07445267 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074869482 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074508445 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091502036 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078853188 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073037875 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07301157 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064680952 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073278323 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065388745 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06776991 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054052614 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078507036 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071429589 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072028866 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073924546 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065089486 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065734739 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068682348 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073201552 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065333641 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078471241 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07216781 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072787619 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07489596 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076521397 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067288523 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065501752 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074336437 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065099292 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073529957 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073865656 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071927756 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071709027 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073223636 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077702902 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091425437 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067738038 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07470955 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075698529 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075811841 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073187848 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069579895 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072839745 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070916033 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091758909 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073501284 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067768014 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074379482 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07413791 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071126067 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07295 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072621493 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075289549 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075854448 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071634399 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074388554 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071404602 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064876441 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072842756 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068578499 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065419918 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075612007 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077183383 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063896654 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071154754 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072196887 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070364274 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064140105 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066897602 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066781619 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071487056 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066810441 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053231713 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069422601 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071467245 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064193519 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073036621 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071172638 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072460236 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067254721 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075883519 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065453985 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070713776 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065544332 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065399062 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066903445 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069187854 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064791762 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067050277 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074622572 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066934804 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071337237 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078898951 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06478999 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071929841 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064382226 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064164196 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079643703 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074787218 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065321569 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067869432 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064162193 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073328198 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064257867 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064848701 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064756517 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065296971 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070958677 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064273581 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066482966 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072948594 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077641572 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064420529 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068119739 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066584075 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064652609 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070687675 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06508179 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064589651 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066247173 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060863684 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06687725 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064195762 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07193656 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.20306547 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073714515 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067319827 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074223216 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070687047 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071999241 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071539861 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064609598 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059046021 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068342639 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066995662 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06696932 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065212346 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067374808 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06578617 seconds)
done (took 12.461872446 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067858896 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14283764 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098581015 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096052764 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086199364 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066480394 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076021254 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101119441 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067368778 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101676461 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087794927 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084920803 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111747419 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064239901 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065511488 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069489235 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067191595 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081468383 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100413845 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086723883 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115971674 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06506784 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094744494 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089338133 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087262128 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10110432 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068830634 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069863208 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069146215 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091142212 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086555207 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06995687 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067058155 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097008937 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092698735 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083045317 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065953707 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082762831 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066539501 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065253001 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06732628 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097631602 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079253443 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079673633 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069657762 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068948831 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066752865 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082418937 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088203118 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077821821 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086420185 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10273984 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068044716 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06517307 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064238562 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085180197 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065185064 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068496996 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066286436 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068852312 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065624372 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069109536 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081012572 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081496717 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069118186 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079804299 seconds)
  done (took 6.799361132 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084881763 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091318091 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084100575 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084147608 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065669191 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066009497 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066095085 seconds)
  done (took 2.063098128 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067577717 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089489131 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090032751 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089194433 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084907376 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08837185 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075800723 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066669632 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08046107 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067139282 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087825672 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102042237 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066641787 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07264188 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090298665 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066510095 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090418136 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066469519 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069638056 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089782417 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068527287 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082287883 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069911352 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066289887 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080528833 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065700463 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113457841 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070087435 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067392656 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069500713 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063863825 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107714683 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079919563 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074949306 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065732308 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080601097 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081118662 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064643232 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082296321 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071235516 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079829 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067170732 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067408151 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064488302 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071158363 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077067415 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067474272 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067181384 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06923039 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086926431 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067496978 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080112382 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070154057 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068824381 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067654413 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069868578 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076417586 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067412246 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086236047 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067549108 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083695824 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082595911 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080527359 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082369014 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068731698 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079753253 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079888193 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069209512 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067908704 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069745464 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082791379 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064716776 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067841896 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07648034 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067955091 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089731147 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089616984 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068344095 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075391952 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066872289 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066304901 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066173588 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089736004 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068666905 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066077526 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070526872 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069770855 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064847113 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065634811 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070430149 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06475791 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068066015 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069486721 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069768877 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069030981 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083294966 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068722883 seconds)
  done (took 8.78196087 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068758138 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068140432 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069197241 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067973878 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067724705 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068455769 seconds)
  done (took 1.950235178 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09295304 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070417496 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081280912 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072731294 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106018165 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087210343 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087351059 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07826287 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08381882 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078988047 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086470069 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088368259 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093170566 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072841763 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08632641 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071553728 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087361427 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075727025 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078646667 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072900601 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086928606 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07286045 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073599883 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081261229 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075941975 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072144373 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067093965 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078853313 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078695178 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078572988 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072313594 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076122441 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07087716 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078569575 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086797568 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070794482 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071485023 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077320843 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072486629 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076031764 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088290771 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072435403 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073789099 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077322627 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077705328 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07059756 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077115463 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075483377 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085845903 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076540865 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076890845 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070769088 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075213423 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077181285 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070356374 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077419477 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076952549 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086954043 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072938016 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070322712 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068595075 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075597641 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077579958 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075949749 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078981026 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077689213 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070974793 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073205792 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073024837 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071827316 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077309429 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068746526 seconds)
  done (took 7.109191299 seconds)
done (took 28.208000384 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540159191 seconds)
  done (took 2.043353453 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.618086942 seconds)
  done (took 2.146368906 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.634028589 seconds)
  done (took 8.163019418 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.402263698 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.499202009 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.729644537 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132681699 seconds)
  done (took 3.33392754 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.698093976 seconds)
  done (took 2.237946175 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215555602 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201953385 seconds)
  done (took 1.964377343 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378553883 seconds)
  done (took 1.905440084 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.143015718 seconds)
  done (took 2.672008849 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259821531 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17600981 seconds)
  done (took 1.965525265 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.480799734 seconds)
  done (took 2.009658438 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.873692164 seconds)
  done (took 6.403734742 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213891314 seconds)
  done (took 1.781882831 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.2412922 seconds)
  done (took 1.767599499 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.829884355 seconds)
  done (took 3.36170259 seconds)
done (took 43.289295212 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079712535 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080961038 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080773714 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07814239 seconds)
  done (took 1.843037389 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076879959 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072932479 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076477505 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072513597 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077069514 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072949772 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07394145 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076350587 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072297586 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072800176 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072113392 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.0727924 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074883973 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074394852 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071418255 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074914749 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075964497 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07176922 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07524018 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072706389 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070071637 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074935984 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074872489 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071910848 seconds)
  done (took 3.310984516 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077821826 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072466662 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074902806 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071338711 seconds)
  done (took 1.840486101 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078297594 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094835977 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089244632 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077520552 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092026464 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086022655 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068302829 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06875147 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070210198 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077454756 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067476633 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096349952 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088040488 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07698241 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079279791 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065663324 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067565501 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086745506 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077439219 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077896047 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069570062 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077432135 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06762229 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089069695 seconds)
  done (took 3.429296558 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077797547 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104941787 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077779898 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088708799 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090985237 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064913093 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074229335 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090735591 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126014639 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064582465 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070334326 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064814289 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072444275 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06525099 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076233143 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106527402 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110697522 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068295697 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096584235 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065267123 seconds)
  done (took 3.208826656 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072105263 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069331641 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065866436 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068102219 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077574756 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071787534 seconds)
  done (took 1.97483291 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06810827 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068056742 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067582615 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06706032 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071086472 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067195824 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065210553 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067809005 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067123026 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06638187 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066007022 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065059204 seconds)
  done (took 2.352412115 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.20124553 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068004343 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06809516 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065574201 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069766971 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065590084 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080182481 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067094091 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090620117 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066271575 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066395886 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067482292 seconds)
  done (took 2.525292116 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208693959 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075896407 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240358495 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139814233 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111588651 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115501447 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104247724 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11429499 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143132973 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101321948 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168934089 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168685439 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107947806 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137159886 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088813195 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099688532 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156073297 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162770134 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105523312 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167484055 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14613528 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125347767 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148190692 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106679412 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106470374 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122707879 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070488579 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079477712 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171279539 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133743554 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145668051 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111594203 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093138423 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17682671 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173483683 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142404543 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136774691 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083765416 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104547788 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134203597 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201592455 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088591691 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162554973 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107834484 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219264337 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135845316 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120750489 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121543798 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107153293 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089185577 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145942148 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186339872 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138928313 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087911899 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114404835 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11496889 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116138146 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103920392 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183637708 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163424328 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128681105 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071007333 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100139543 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154202383 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13467626 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108717019 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126595514 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092943947 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136111477 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157070676 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11976507 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146858191 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.130759949 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088513064 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120255279 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140916399 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128793203 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161756351 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124768712 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07257268 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125273471 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102660924 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080483939 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146122897 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074804145 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176723915 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098516251 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108518517 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114026121 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108566288 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108202984 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161567599 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144951386 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102595057 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06469647 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246692272 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123272399 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147455159 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088046336 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108865174 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118974023 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078280532 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13955758 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074703761 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124838484 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077235472 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128588072 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13038588 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076973669 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122731589 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104453289 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101340114 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132742608 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161081577 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087923528 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081456634 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170178351 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122439514 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.1036798 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144928174 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157056471 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101571185 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101736193 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149944069 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180268822 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088626202 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164118519 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10691336 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082738635 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087090724 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123994862 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111623368 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123807334 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081137365 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118820845 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168729706 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074022101 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095167537 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134057392 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078707199 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080438845 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106208436 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105667006 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095444181 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099942065 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103599955 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136561429 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123062721 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104854431 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123315833 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098048868 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319296931 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088236724 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101502809 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104711918 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070070712 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136896301 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159515234 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080134614 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165192265 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12366441 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10689484 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119518052 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083358022 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141051829 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079654491 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069936614 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146016166 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111168027 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111064655 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152218382 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106147985 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127621181 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119434258 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135063071 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133172046 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130084159 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104008292 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088006134 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11234436 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126388874 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072414247 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091378308 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080152272 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104092603 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09662414 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082624235 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141847918 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124256211 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100934645 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112431344 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096434344 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147864191 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076262521 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128508874 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119683459 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095328897 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153089927 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152883657 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130830843 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098016054 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137079067 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069666477 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073083213 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088748962 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122866141 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082540826 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082211308 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260908934 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149571219 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130620868 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138657636 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11314804 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120985659 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157151719 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06973721 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117205527 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148257004 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122280348 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104680909 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090651759 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099285274 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143589019 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108485229 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18389942 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117385568 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124896084 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153988834 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100499247 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07908447 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103474475 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137006446 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104892224 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144898957 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099913515 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088131321 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110320536 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074382939 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099701128 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126803286 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119790937 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135310817 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115723154 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132691072 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077039081 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116570182 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121104698 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123172366 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063393663 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120749124 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163246879 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094226833 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118309862 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153404817 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078129285 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125959888 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175353184 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144260522 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083937784 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253430216 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120374684 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12898344 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120920554 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141819916 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109599257 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137524409 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110146289 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085651045 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087506042 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097977077 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104868577 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094780597 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107411118 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114502324 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094991481 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132202416 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105584388 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109912016 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120076291 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097822418 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090531133 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097548477 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178001922 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119028444 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172496943 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099306922 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145182936 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163851689 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074713608 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079503411 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078605423 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140077689 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084231061 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131055701 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099001024 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106941979 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124234712 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143746106 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095106997 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067796523 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109117104 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13431783 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113712645 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098344766 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104406561 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164764988 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100967117 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079411143 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113990271 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105108508 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10257319 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172268953 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060864065 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097677008 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075546434 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080017858 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127334383 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296840583 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080150441 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103462022 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119904631 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113393269 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128915536 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10141442 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100939064 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116303377 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150596721 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129588741 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089301018 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111682345 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146284773 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15775805 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10584031 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096428546 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175669746 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154929887 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16082529 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088703136 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118062551 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114806548 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109825027 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138779563 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082781496 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163929315 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082561535 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137076225 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104230626 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089788945 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130396384 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099985936 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088463658 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148846831 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117877578 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082992865 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077341764 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118372701 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119886548 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10641777 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075100599 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139879399 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07307731 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132888304 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160908269 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080030866 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107966923 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095463839 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079321643 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106258702 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101837742 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086586179 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098240647 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.322604162 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087922665 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15095151 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135466777 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113493792 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139003692 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102615521 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640036497 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078228603 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152975422 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117040322 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175375469 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100400232 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118616372 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111224543 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125370026 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146079014 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104819759 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181524571 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132949393 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116091399 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079360191 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102890555 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104498195 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088956922 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107224985 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114403425 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117399603 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094124365 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116681701 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12636505 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081875182 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095827215 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158055622 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117110589 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143774717 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140778096 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085443927 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118562889 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137980002 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080109868 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122253168 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153109939 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106364525 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099050015 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080325273 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100942283 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158780449 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072759362 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160457243 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118869736 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253674753 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114219887 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113739339 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13078291 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109301694 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122973213 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093017419 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11028232 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113486938 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081399632 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077751433 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106121429 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111822573 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098741295 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098226467 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098888146 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153160075 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071765776 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099374796 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105317626 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145520375 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175998778 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08851612 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082720218 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119305609 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114091546 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113313845 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122063192 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079310354 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082161098 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081907244 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077313861 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109022061 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113183792 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104506727 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111702754 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163669771 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082843132 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229127623 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095686456 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104717558 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069225664 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07840911 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096033215 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098997228 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107626403 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101601649 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160662674 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09509696 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089543025 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092256893 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073619863 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083018972 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1288129 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109941106 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118687251 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098544178 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06153347 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108610885 seconds)
  done (took 58.961119695 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104730217 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081743593 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095364339 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144498866 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123194336 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203186643 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153015306 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18904512 seconds)
  done (took 2.763046984 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068686162 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095400097 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102025774 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083126529 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066999556 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067550376 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231657672 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080172517 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066439566 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08941527 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077944467 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067606503 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.426540268 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066060106 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066690725 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061133216 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066838037 seconds)
  done (took 3.427992004 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.385384339 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609469509 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.381669293 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072731739 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.478849921 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087831538 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.163439307 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.127099748 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072591775 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536821762 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703338527 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123337797 seconds)
  done (took 18.393295771 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076197369 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.0690002 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083938386 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08342134 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072160421 seconds)
  done (took 2.031548319 seconds)
done (took 107.629975241 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081415377 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.381028768 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052893628 seconds)
  done (took 2.109908915 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083380556 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08420891 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085242065 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083051264 seconds)
  done (took 1.99401336 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074335285 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075801635 seconds)
  done (took 1.800913939 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234338635 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167534551 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087385713 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083989302 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079309859 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080069445 seconds)
  done (took 1.902405023 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073162162 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075441009 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073353291 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076754757 seconds)
  done (took 1.952217959 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076770954 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051491637 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053832451 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.05729571 seconds)
  done (took 1.89387893 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087610183 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078667553 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079295375 seconds)
  done (took 1.900888948 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101694455 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085321555 seconds)
  done (took 1.842206657 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082400517 seconds)
  done (took 1.736913943 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098894978 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104455448 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133471818 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111523738 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140747804 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110095535 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08484091 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086218017 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076740228 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086685904 seconds)
  done (took 2.688275358 seconds)
done (took 22.036303669 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079385459 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362560722 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35988252 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090423982 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666961627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355691763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.995095292 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092273691 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114572717 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067106524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084111686 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648580862 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.020112545 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318919064 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.007304113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324619369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656800563 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067708086 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067361052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067497859 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980707889 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067082372 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067684075 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068746789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67775478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371414217 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067975597 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322083497 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06731709 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069614731 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35480905 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068262414 seconds)
  done (took 16.264102898 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071767708 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120315055 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07407986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084530404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071158608 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069293519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071373369 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068788055 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121740262 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067626612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084723376 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068094183 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072149915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068160413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087467527 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067593468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068172036 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067672981 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068034892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067899119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086919309 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066988948 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067934122 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067978333 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06733507 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079838872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067807408 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068329167 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067554272 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069802535 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070589935 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068460707 seconds)
  done (took 4.057369072 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119390948 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126123948 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073992019 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104576149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113900882 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070286015 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146260128 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093444717 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128984163 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067732726 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084354469 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067774611 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101733399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068345191 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087586289 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068112369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068759046 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067925372 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067475786 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068263654 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087813879 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067824244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06824615 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068471736 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068088713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082507674 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068021987 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068348845 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067792937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069948788 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071524482 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069414405 seconds)
  done (took 4.318366224 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073464837 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075550085 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08273816 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085174862 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069802129 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071747471 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073048927 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069348987 seconds)
  done (took 2.273539568 seconds)
done (took 28.56812219 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080401927 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069199394 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072792733 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083287994 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072389437 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079004323 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067082862 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075186213 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071991563 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072526384 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074889623 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066826584 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070979657 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066951422 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073856471 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067124667 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079090579 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071368799 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079012565 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079385471 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069649824 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073130746 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074609125 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078701905 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078965633 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07853001 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077900075 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072918491 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069103314 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07120213 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076884678 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083632758 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068241223 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079293659 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067853532 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067956689 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071828595 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06755355 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079175414 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078083918 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069502322 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076408524 seconds)
  done (took 4.753671647 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088369545 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09248943 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084808341 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061765247 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067097763 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065371506 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088985268 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060315476 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058804483 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087902616 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055417282 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.0593775 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063135981 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053346458 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062590158 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055835469 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061326133 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055269185 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059758792 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059269433 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088608091 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053165594 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077253415 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062956917 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055090991 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06103118 seconds)
  done (took 3.419829041 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075854507 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086425098 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090229664 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129595369 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104369523 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079034645 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080304479 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095077074 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.087925453 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066668317 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070962486 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093035863 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091675907 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074062466 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067075419 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086850471 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.0837092 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069542553 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073401678 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096079471 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087031107 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086415905 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099372378 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083635512 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067002761 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069745067 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07171949 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081616805 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.0725045 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077071107 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072011828 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070814358 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069462207 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079939893 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071315343 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069373293 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092414412 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077110495 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078640216 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068495521 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071043129 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068203832 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092560922 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13345047 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066836825 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074250264 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075446549 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076972341 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067585795 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087690942 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079169152 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066972761 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070243693 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066741199 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067413016 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080558083 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069159403 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069617534 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076426488 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069850055 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091805026 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071299152 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083013268 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066466097 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075162366 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066190733 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06784981 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066005457 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095168981 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068419313 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11084958 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0681881 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067389015 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07565395 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074641422 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072989256 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066970289 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082483602 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077636844 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070264651 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075634113 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07023607 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07038196 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091088567 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06924743 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068275979 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068625736 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073077651 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069955666 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.079237274 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080179982 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06690239 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069815199 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083916011 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066656515 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068236584 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072943866 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07154259 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066401051 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077798056 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071776965 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067559041 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076165508 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066785595 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069621101 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07980679 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073239382 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065725382 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071546653 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073142078 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068099668 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068675446 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070366595 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068788765 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075978356 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074291734 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071144239 seconds)
  done (took 10.651907398 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165510433 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157111692 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069808114 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148336317 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076297416 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079216557 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150058047 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094854915 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067524559 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068274198 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068408234 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112951912 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106680827 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116286203 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07884188 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067456421 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084596715 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114584411 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152244755 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146213513 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084568965 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077138668 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069600349 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068650127 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070382835 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078106598 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085281125 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076256632 seconds)
  done (took 4.448755469 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083318099 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100412726 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074605496 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09105871 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091006247 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067293938 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069761243 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069283089 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081486141 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078386072 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067480706 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073689964 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074532169 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070976198 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068532081 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075062485 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074874678 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069136154 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071238916 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073320541 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077805308 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092172144 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072194813 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066682406 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072948934 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067115209 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.0638864 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084395277 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067606805 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094514282 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065295026 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075164332 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08187283 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068205906 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067225074 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067817463 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067061663 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067352259 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069144132 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06601239 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065936052 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056564231 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06654895 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079198063 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073565182 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055766834 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072122294 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072663016 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072465031 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06469356 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070032301 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069771599 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070368082 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075048343 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072592729 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072075451 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068489224 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073611326 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075882581 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066783972 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064109349 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06563755 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071628534 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065326437 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075631767 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071583704 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065323786 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066643444 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068662537 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073912259 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066965836 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070383805 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065098028 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069580875 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071619316 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069174576 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068009259 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065613981 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066947686 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067208627 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054465222 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066867532 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052538734 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070275437 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065345758 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065743751 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066937996 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072202032 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079622876 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068828098 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072931644 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068651946 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066612147 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071030046 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059597199 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070248513 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083167593 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082877531 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066946497 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065134164 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082362309 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07206881 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066167978 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055110509 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075137291 seconds)
  done (took 9.168970451 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09166404 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070147033 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086056156 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093572535 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087590161 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075750305 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077830143 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069643121 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083137525 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073423793 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077033851 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068311658 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07779999 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077027715 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069997927 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.0779413 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071719889 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084600731 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082581925 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067999609 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076021383 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080683324 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090450483 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081706944 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080413296 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082240516 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090593753 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071716347 seconds)
  done (took 3.935896234 seconds)
done (took 38.043969829 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.757799904 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.915270164 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.740040768 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.113206602 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.910738663 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.823086629 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.860115203 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.737495543 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.804914981 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.776865729 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.950533177 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.867953438 seconds)
done (took 64.935423842 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.765165383 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.880997885 seconds)
    (2/2) benchmarking "String"...
    done (took 2.007459157 seconds)
  done (took 5.568823359 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.012387118 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.337253199 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.985677351 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.737400902 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.745522268 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.074941569 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.544859173 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.268990286 seconds)
  done (took 30.376771161 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.870809904 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.968255065 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.417816277 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.449806558 seconds)
  done (took 15.432207676 seconds)
done (took 62.91556505 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.743328293 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.775426603 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.740607579 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.721956128 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.798590355 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.756047216 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.169790444 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.805015645 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.738184423 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.724227515 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.739752912 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.179196821 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.739873249 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.127511294 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.737689021 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.746258604 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.764694481 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.155658445 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.896212956 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.747911055 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.741499074 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.767692537 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.739418875 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.749263598 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.753663966 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.74190236 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.174116582 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.741680991 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.36627251 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.741022735 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.767052722 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.246775662 seconds)
  done (took 203.014687217 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.741156675 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.85430392 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.88631253 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.780653627 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.256094245 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.919639569 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.844927311 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.302427166 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.742568207 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.762406563 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.089533408 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.73992275 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.096801615 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.688823196 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.769085577 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.80385618 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.012192864 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.077798993 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.772223889 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.915582872 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.759667611 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.909521694 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.860303924 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.031259027 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.750313114 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.837370595 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.765698921 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.910678865 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.935008151 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.990137674 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.742584693 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.745921816 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.9606435 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.615437799 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.757249975 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.759636852 seconds)
  done (took 170.068638619 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.120378851 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.739680322 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.741623174 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.741658248 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.751377236 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.741802121 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.861633131 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.861892495 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.346342149 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.564068816 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.792602476 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.742042561 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.571517007 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.743097904 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.807483014 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.740785003 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.756474974 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.743537847 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.75866172 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.766264394 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.741811832 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.742796097 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.865798578 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.752966926 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.741183893 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.748959529 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.741262531 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.74713982 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.11464618 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.742316251 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747238945 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.002663797 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.743307684 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743103563 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.631696139 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.040676548 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.832323313 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.743260145 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.749534859 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.741982934 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.961164861 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.743071513 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.742074151 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.74194833 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.74698823 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.91089372 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.740934909 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.866614687 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.741896529 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.250400943 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.741094772 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.743991059 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.384255387 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.432740117 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.743336122 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.742335885 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.747422931 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.742993467 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743740751 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.747766245 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.524434481 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.819066496 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.746382492 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.74868442 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.74991429 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.744342027 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.826664235 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.745927218 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.023492983 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.797846805 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.983939835 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.865169341 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.745980437 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.812174471 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.837710619 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.744066692 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.742973694 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.744764549 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.743386127 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.825293824 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.74379669 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.868887402 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.751211451 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.746738333 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.797212538 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.81574171 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.742876759 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.652092104 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.745262428 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.745018406 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.06003399 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.744542771 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812921545 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.743960955 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.745713684 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.744404858 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.87117798 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866547435 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.54090954 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.746159847 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.554611492 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.745815846 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.881171239 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.745431675 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.932709017 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.745268434 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.827908417 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.749494284 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.748829324 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.746407567 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.779030979 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.744303302 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.80710037 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.746176548 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.122326367 seconds)
  done (took 399.733761079 seconds)
done (took 776.6715698 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.430161369 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.395214374 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.49942635 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.414125015 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.388599965 seconds)
  done (took 13.813199056 seconds)
done (took 15.498597841 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.833855693 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.836635915 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.76823967 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.843028641 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.765007515 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.833091038 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.817433956 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.772004022 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.803206665 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.769353821 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.80368544 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.770845038 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759255559 seconds)
  done (took 25.060114583 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.981358364 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.988130596 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.818040813 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.996925486 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.794855158 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.995646229 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.912411223 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.903463448 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.904307433 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.763538 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.76112822 seconds)
  done (took 22.508083616 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.988369386 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.985402629 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.825544142 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.993854984 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.798382217 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989982526 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.91652597 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.90482165 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.905873058 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.762797895 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762777506 seconds)
  done (took 22.521394373 seconds)
done (took 71.776930669 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.755796682 seconds)
  done (took 3.44191805 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.784309865 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.942986207 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.762200721 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.76202353 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.755812025 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.757586008 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.76089755 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.758778296 seconds)
  done (took 15.976109438 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.754833763 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.757612213 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.756762415 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.751885697 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.754918898 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.757795824 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.755775059 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.759016462 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.758273765 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.754376381 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.756492309 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.758395383 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.754255795 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.75947696 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.756091202 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.755913217 seconds)
  done (took 29.790937205 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.757035348 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.755490113 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.756268824 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.757531529 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.75522214 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.756424472 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.757219783 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.756685344 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.756400928 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.755223377 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.75765775 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.756850523 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.757319509 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.756825751 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.756864 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.758004336 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.757444347 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.756838073 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.761674883 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.755574228 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.758413804 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.756226447 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.756876737 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.75707408 seconds)
  done (took 43.859256592 seconds)
done (took 94.752364957 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.627767619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.126932287 seconds)
  done (took 8.444831492 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.761495828 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.761325872 seconds)
  done (took 5.249063496 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.759843305 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.758622335 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.759420847 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.760297458 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.760712139 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.759805249 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.759724434 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.758725775 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.759361678 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.758341812 seconds)
  done (took 19.287761052 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.75848872 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.760062709 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.756980838 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.760469479 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.758332117 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.755466118 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.761408241 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.758771133 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.758166078 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.755417888 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.761402382 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.757230503 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.76049192 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.755861646 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.760245457 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.758561102 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.757604989 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.757435729 seconds)
  done (took 33.342245389 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.760493825 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.761629297 seconds)
  done (took 5.215928081 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.758414999 seconds)
    (2/7) benchmarking "second"...
    done (took 1.756565962 seconds)
    (3/7) benchmarking "month"...
    done (took 1.757585659 seconds)
    (4/7) benchmarking "year"...
    done (took 1.760605981 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.7605084 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.758811928 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.758157185 seconds)
  done (took 14.002924051 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.763507901 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.918047614 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.98573953 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.420351583 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.763626243 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.765308527 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.734079835 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.765932744 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.767758776 seconds)
  done (took 19.578388896 seconds)
done (took 106.808451553 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.593192834 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.759731006 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.138015199 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.804482552 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.816421034 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.054560895 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.793193621 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.060131666 seconds)
done (took 42.712429938 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.760720747 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.303285702 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.336411566 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.204657643 seconds)
  done (took 12.538118599 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.742425388 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.282571606 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.789274588 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.344765248 seconds)
  done (took 19.872296147 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.124989854 seconds)
    (2/2) benchmarking "read"...
    done (took 2.099714824 seconds)
  done (took 5.92407005 seconds)
done (took 46.78900649 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.76330942 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.762347867 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.765095503 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.759490318 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.761208317 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.765290421 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.762181712 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.761611094 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.763926822 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.763291308 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.763670738 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.763248012 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762552965 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760418872 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76229474 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76286858 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.763183695 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761387903 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.766199216 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762777959 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.761312678 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.763635452 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.762260531 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.760652917 seconds)
  done (took 43.997000726 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.764935053 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.761276046 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.765151564 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.764122363 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.761506012 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.765212282 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.764662783 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.759568419 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.764503911 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.764776962 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762224709 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.763036814 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.765976781 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.761615694 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764006011 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.763788444 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.767368487 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760783024 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76547656 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.761458748 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.766292853 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761034352 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.764819376 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766338169 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.762354618 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764420714 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.76561108 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.765160499 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.764884248 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.764573035 seconds)
  done (took 54.611521197 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.772394992 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.773743333 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.767033894 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.7667895 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.765109887 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.766710542 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.764861664 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.766977202 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.766905779 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.766107131 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.764973899 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.767230406 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.76546053 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.765507462 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.76695146 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.766857769 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.766878923 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.766239111 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.766063278 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.767000679 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.767922253 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.768593125 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.766046949 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.765758743 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.765831606 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.767206366 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.767524604 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.764950963 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.767305369 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.766443059 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.76824433 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.767060855 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.766968601 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.767839023 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.768426488 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.766253625 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.772932234 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.777493312 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.767898385 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.768862785 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.768830814 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.767053986 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.769645886 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.768145968 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.76847753 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.768808107 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.767524358 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.768172488 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.768448068 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.766898966 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.76953951 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.768715347 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.768841834 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.770376028 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.769506777 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.768328332 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.767527843 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.768956497 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.769081321 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.769375402 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.770075966 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.767349831 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.768742195 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.769310708 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.768503092 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.769243672 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.767357686 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.767158771 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.769163676 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.767534462 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.767901188 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.767572898 seconds)
  done (took 128.9909306 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.768864428 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.764913621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.766029013 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.766557456 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7671316 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.771752347 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.769708492 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77233355 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770455549 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.773467384 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770823718 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.767746732 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767461744 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.768337435 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.770962136 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.765238594 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.770359533 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765308271 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.771531609 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.770885636 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769369189 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.768209245 seconds)
  done (took 40.618607854 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770415093 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.77082442 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.767339821 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.768897759 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.769266394 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.770770676 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.773082302 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.770934198 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773007471 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768232947 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768501321 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772316371 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.76736764 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767539606 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767705076 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.768727781 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770837624 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.767354826 seconds)
  done (took 33.55397057 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.770538439 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.767740721 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.770431831 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.767872844 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.766958562 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.77316724 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.770551246 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.771056459 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.773727201 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.770125002 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.772256652 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770614978 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.773111086 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768220633 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771851253 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.76891282 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.772873328 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770508261 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773274691 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767510287 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.769805105 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773012129 seconds)
  done (took 40.656649939 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773551026 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.771956995 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.768095908 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.771023761 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.770416794 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.772417541 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.771537204 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.76951909 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.774063732 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.773459936 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77299774 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.775231657 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.76932101 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.771895075 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.769082848 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771028321 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.775238773 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.768941131 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772915821 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.768777152 seconds)
  done (took 37.134444375 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.774313081 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773300233 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.773842556 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.773450762 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.774682106 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.774655012 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773509932 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.77360933 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.773587581 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.772352349 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.773127744 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.774141142 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772769647 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.774960581 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772985652 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772460658 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.773989418 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772824108 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.772753988 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.774429929 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.774165858 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.773297986 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.773909091 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.771884803 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.773584311 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.775700311 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.775693741 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.774107336 seconds)
  done (took 51.368644228 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.774372238 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.774509622 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.771117697 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.770383095 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.770949391 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.769407926 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.771815411 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.770693294 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.773429699 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.771192979 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.772908245 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.773254201 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.772643267 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.773663945 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.774340889 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.77432283 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772207716 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.771207532 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772704261 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769973582 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.77407919 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774116464 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.7740192 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.771384988 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771860344 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.77501165 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770253222 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.771603548 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775062235 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.770828844 seconds)
  done (took 54.878240688 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.792746256 seconds)
    (2/2) benchmarking "in"...
    done (took 1.793426019 seconds)
  done (took 5.291830953 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.773050638 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775245136 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.774186414 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.773155072 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.772165828 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.775742234 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.774559912 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771776441 seconds)
  done (took 15.895502709 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.774147775 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.774002681 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.774375427 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.77464448 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.775374167 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.77384543 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779507578 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.775064458 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.7742114 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.77568292 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.78229411 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.783977738 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.777440836 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.774669573 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.775840693 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.775995649 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.776079407 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.775633546 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.774700888 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.77603513 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775634808 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.775500414 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777552778 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.77217727 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.776083731 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.785481308 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.778398239 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.775063121 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774995441 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.778156297 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.773955506 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.774659645 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.777225627 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.776709808 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.776144661 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.77716032 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.784007243 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.775983596 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.782264415 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.776357999 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.776876607 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.774821221 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.778614024 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.776743294 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776209031 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.778220249 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.777875095 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.774265528 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.775458174 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.78093306 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.783908387 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.775350149 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.775292361 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.780339355 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.778460722 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.783305674 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.778222777 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.779911967 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.786926595 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.788704895 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.788587983 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.78632526 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778306764 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.777228125 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.788729342 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.805908426 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.783588257 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.776791894 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.776655837 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.778223378 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.786800874 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79268639 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.788320266 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.778448012 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.779043514 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.776493255 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779747274 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778698095 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784264906 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.782337659 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.778908018 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.779347065 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.787321996 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805001336 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.778629066 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.780431357 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.778838703 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.78033779 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.780637924 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.789910946 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.779724163 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.779133245 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.779410451 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.77923086 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.779964242 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.780373772 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.778406589 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.778899386 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.77697379 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.781524443 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781095452 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.782801293 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.790564679 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.780984411 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.781425713 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.786382123 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.780816124 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778905236 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.786429335 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.779750225 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.780102099 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.781570572 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.78768336 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.778858747 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.78214901 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.790422507 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.77999668 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.786713364 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.781841784 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.780592361 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791077361 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.809830937 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.78166055 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.781216025 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.786731576 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.794177188 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.780868669 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.783383324 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.781194151 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.778649261 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.778056735 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.782837687 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.782224708 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.782139854 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.783965055 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782147468 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.777891806 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.782117252 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.781730311 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.781898327 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.783132891 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.781845777 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.783442305 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.783113392 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.782863615 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.783237436 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.787211931 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.783416004 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.783260605 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.783815604 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.779579555 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.784523716 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.782649387 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.783633677 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.783013673 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782411986 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.781811668 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.782391931 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.782959318 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.783110768 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.783859776 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.784131447 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786444154 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.784563345 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.785329999 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.782980802 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.780587541 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.783577504 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.784580541 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.784274435 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.783256797 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.782937063 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.785961527 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.79208285 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.784248644 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.783917689 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.786631792 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783391884 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.784012254 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78466422 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.78617536 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.793068366 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.782936618 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.790638323 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.784312397 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.784578253 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.784192156 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.784915611 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.783137132 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784288465 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.787525509 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.794600055 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79734531 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.794073838 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.784882056 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.788596808 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.785908327 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.788687726 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.787580368 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.783929886 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.78623381 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.786300383 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786728933 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.784634492 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.78650097 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.786544279 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.785025265 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.785464199 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.785849555 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.785799757 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.785908455 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.785061741 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.787510763 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.782795032 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.786311371 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.78578335 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.786925956 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.782875156 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.784500881 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.786128879 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.786969762 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.786663929 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.792128286 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.783109552 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786339908 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787052934 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.785536703 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.784651122 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.786483456 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.788921859 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.786682773 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792572501 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.786594566 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.787277222 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.793080581 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.786610653 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.786002324 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.788956142 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.788930056 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.784536721 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.789341595 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.795299527 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.786796386 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.786750232 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.786564732 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.78701082 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.788045947 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.79166964 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.785404298 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.786615096 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.788764812 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.788533933 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.786395231 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.788332427 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.788269212 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.789229519 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.79018712 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788885941 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.788623409 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.789224452 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.78836838 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.788606807 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.790559093 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.7907629 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.798246867 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.793399121 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.78895065 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.790378667 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.792882964 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.794619698 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.789149593 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.790728095 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.788839343 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802920029 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.798166634 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.796187533 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.791668028 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.789866108 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794759622 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.791042363 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.794354254 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790707505 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791232775 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.790076087 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.788196189 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.787196339 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789728251 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.790634421 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791472366 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.791819033 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.794690548 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.79032785 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.789072492 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.789411023 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.790362673 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.79062581 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.790299238 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.789326478 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.791631153 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791547552 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.790234491 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.793026583 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796917085 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.790964962 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.792050335 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.790545869 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.788969023 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.790124224 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.79093493 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.790704049 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.793581567 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.798940998 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.794677602 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.801482328 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.792299198 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801033745 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.791925093 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.794021929 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.799973306 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.788862309 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.790400804 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.793766569 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.792141253 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797557236 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.791947472 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.792829664 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.796469645 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792014692 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.792231853 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.792307813 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.792791036 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792604604 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.79293506 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.79937843 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.79332702 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.796786963 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793772933 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.789512067 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.792353237 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.792527859 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.790838171 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.795826909 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.79240622 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.792821405 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.793631736 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.792082281 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.794354314 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.794150447 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.793582212 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.79096264 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.793659923 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.798603704 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.794576453 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.798923009 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.793302515 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.800292428 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.792744509 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798209145 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.79390308 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.794108722 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.793130851 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.794456637 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.794601251 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.792954885 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.795085517 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.794553852 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.795051878 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.799626953 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.794551704 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.797274689 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.794563299 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.794673 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.794688016 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804222721 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822781466 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.796757498 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.800230252 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.79171747 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.796811738 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.800253483 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.796355005 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.793697371 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.797898967 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.808238236 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.805233513 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.795794198 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.798022207 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794579227 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.794478468 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.795934113 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.7962284 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.795987226 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.797128062 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.794367946 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.796225193 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.8002067 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.795893109 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.797594594 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795606064 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.798144769 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.807186908 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.795861803 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.795950658 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797186042 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.795646893 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.796061848 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.79667733 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.796876873 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79660875 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795475312 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.797421345 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803510638 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.80503106 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.79861061 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.798878106 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.796696777 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.796670148 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.797308106 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797701373 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.796484831 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797300956 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.797407875 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.796438344 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.798395396 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.795814913 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.796965105 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.798883596 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798346357 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.800075173 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.806720004 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.7981705 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.796154219 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.800325825 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.797863413 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.796903301 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.798885191 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.805832244 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800774728 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.810330784 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.80881402 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.802838802 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.797840935 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802844991 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.807882145 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.796858075 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.798122235 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.798819307 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.800644311 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.798836729 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.802411335 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798680406 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.805130572 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.797604735 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.799147164 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805220169 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.799159984 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.799644983 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.801205305 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.803080362 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.798241181 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.797199883 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.800012002 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.798087662 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.803468355 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.800384421 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.799679275 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.799927505 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.797437152 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.801103125 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804162837 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799539409 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.79965817 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.79740652 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.800565136 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.799715224 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.799818825 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.798239098 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.800086208 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.799774491 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.803782128 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.809160045 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.797831934 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803246317 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.800920801 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.801262901 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.802078851 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.802096256 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.799805685 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.798085272 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.79988846 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.801900867 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.801206197 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.803544437 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.80016552 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.801314115 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.803994647 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80112002 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804134861 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.813871976 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.811121109 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.798227333 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.800722257 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.800856281 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.804468177 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801020782 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.801869472 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801819346 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.804178646 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.801907862 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801461967 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.802441652 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.804528823 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.820769379 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.803869121 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803366549 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.801338312 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.804922173 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.801695154 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.799541388 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.801571779 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.804322674 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.805073543 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.812177508 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.802310633 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.808913179 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.802613344 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.804109901 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.808283395 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.80563863 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.81266738 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.8058143 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.801877821 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.802957304 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.808563285 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.820541826 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804385361 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814612797 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.836211291 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.80411215 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.804612796 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.804340094 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.803049368 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.803976128 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.806626973 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.80494931 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.804813708 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.804917596 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.804297718 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.804668413 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.811425998 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.806096341 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.805286529 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.803454024 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.804560867 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.805551498 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.803340054 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.805543386 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.804441614 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.805150281 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.804753734 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.805129376 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.80561492 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819764519 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.81617305 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.804238625 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.805926805 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.801884342 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.807063178 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.808399722 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.817437132 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.814007959 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.804601678 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.804929722 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.807151552 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.805271343 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.803507648 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.805874505 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.805700206 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.804868991 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.802123794 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.818376832 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816150517 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.810739957 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.80569577 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.805186676 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.807428083 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.80655606 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.805967145 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.80626589 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.80802392 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.80600437 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812196772 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.806760682 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.807092053 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.809967167 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.817808085 seconds)
  done (took 1070.005149009 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.806521714 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804271694 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.804414963 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.804443104 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804268169 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804770543 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.805038689 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.803631487 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.806053515 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.805369863 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.804706835 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.806216132 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.804710219 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.804499378 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.805251325 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.804605348 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.804627342 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.804693842 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.805077154 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804711962 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.805034609 seconds)
  done (took 39.640807279 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.80690485 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.806225557 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.807082607 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.807958525 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804995558 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.808869075 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.806449986 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807555934 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.808827221 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806638181 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.80729351 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808763459 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.804381008 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.805916719 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804741342 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808854358 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.808681923 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807808151 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.808977786 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.806998235 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.808628162 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.806514067 seconds)
  done (took 41.498571184 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.808947807 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.810239851 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.808905329 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.806142574 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.808875218 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.806740703 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.808033642 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.808260863 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.809519481 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.809208447 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.808902319 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.810224356 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.816099054 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.816129279 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.811075534 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.810316295 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.953758962 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.809355271 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.81039594 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.809525193 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.806461116 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.81383181 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.808774636 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.807617052 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.808595101 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.81095833 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.810607551 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.810336068 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.808267724 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.809157813 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.812800506 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.809109946 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.810068892 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.80956474 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.809017142 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.809226025 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.812695857 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.808158223 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.808116116 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.808467016 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.818926514 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.832708642 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.808879327 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.817685435 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.809438884 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.80896705 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.811773968 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.818486876 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.807102028 seconds)
  done (took 90.606599725 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.808927022 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.80969688 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.806281401 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.809455485 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.811261685 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.808417542 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.809168815 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.808785664 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.806399087 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.806863698 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.811168892 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.806986293 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.806376347 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.809795144 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.810173859 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.807303941 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.808385605 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.805670637 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.806957738 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.806623703 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.806187179 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.809934827 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.808021483 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.80620236 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.808463507 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.806475666 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.807192492 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.804704875 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.801788726 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.801055755 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.80529959 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.803789369 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.806851283 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.798686772 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.799126359 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.803135338 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.80255284 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.799208492 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.80556396 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.798792962 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.802977305 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.802636651 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.802436543 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.803861784 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.79778291 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.799376777 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.798479918 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.797527626 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.798002093 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.80260173 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.800817053 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.795674334 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.800009114 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.797184774 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.801366366 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.800651066 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.796569823 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.798208885 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.801562497 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.797390837 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.79955552 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.800710091 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.799164818 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.800537102 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.801089831 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.798211611 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.797751707 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.800276357 seconds)
  done (took 124.381910021 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802432376 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.801280577 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802890983 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801725993 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800681906 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.802359673 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.800574166 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.800797186 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.801606831 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.8008054 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.802429503 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.801037938 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.799370954 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.802569737 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.801800257 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.801949348 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.803036089 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.800712068 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.801504288 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.80152677 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.80155413 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.80270868 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.800238253 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.802154958 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.802040998 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.801782044 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.80242727 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.801915459 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802473411 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.803006832 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803634141 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.803236217 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.80241526 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.802277898 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.802008568 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.803847058 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.80347617 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.803613343 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.801384005 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.80274792 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.80267908 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.805187819 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.80336113 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.802757781 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.802791674 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.804104927 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.805822699 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.804027602 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.802681287 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.80152526 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.803053597 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.802692757 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.805567705 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.803586991 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.804692668 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.80492926 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.803577513 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.803902221 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.804997082 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.803194195 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.805230092 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.804766979 seconds)
  done (took 113.498241729 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804864852 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.802637994 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.803215056 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.801174178 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.803975246 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.799718879 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.805203139 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.803129593 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.805115495 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.803710901 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805111718 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801854836 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803257762 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804100615 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.801859315 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802793724 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801838286 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.801965861 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804123599 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.802442067 seconds)
  done (took 37.796801526 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.802687307 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.80600234 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.799628641 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.799784117 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.802310207 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.799308176 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.803091513 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804099496 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797244588 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801626675 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.801837937 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801938443 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803335024 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.792696597 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.7948523 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.793777747 seconds)
  done (took 30.539930152 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.792931665 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.796365927 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.795539972 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.79624973 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.791652137 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.792676058 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.796089645 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.795308925 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.792549923 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.796104339 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.795634059 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.796666078 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.797960336 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.795199765 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.793780071 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.795518728 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.793307335 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.793105129 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.795631701 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.794434627 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.79259327 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.793682819 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.795342942 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.79717534 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.793515428 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.792394423 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.791230449 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.792855213 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.792176895 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.798308136 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.793752708 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.793019091 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.791210087 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.793095084 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.794920513 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.792215376 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.796404017 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.794846581 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.795468046 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.795323413 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.797780913 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.7932631 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.79480643 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.794344725 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.794059111 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.794240135 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.792962309 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.792279821 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.79388287 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.792463897 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.795202378 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.796089321 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.795639805 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.796516737 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.795998526 seconds)
  done (took 100.423872095 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795753282 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.795931691 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.792981432 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.797404411 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.795668564 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.794121338 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.798118413 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.79396638 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792631584 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.796831818 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.794750787 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.795411489 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797000922 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.796006329 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.795327956 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797773508 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.793460365 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.794349573 seconds)
  done (took 34.042947196 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.794931893 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.793476275 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.794911907 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.793341082 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.796418004 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.797022547 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791084613 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.795927131 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795030149 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.792936529 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795942795 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.794615544 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79434068 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.794345171 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.792614238 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7929867 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.794016303 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795553893 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.791798053 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792829837 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.79469159 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795576625 seconds)
  done (took 41.201816184 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.791951546 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.792723031 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.811039454 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.82137717 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.815422411 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.831574399 seconds)
  done (took 12.588071179 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790743023 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793673143 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.792474449 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792602455 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79241599 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789388978 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790805806 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790242416 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79404657 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789406752 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789642702 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792373629 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79214557 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79291665 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791733769 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79231615 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788156865 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788741544 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789225346 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793206173 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787090236 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790834874 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787502848 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787568206 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789996097 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786499747 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788930494 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786996293 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786236073 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789429847 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792036575 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784730438 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786941882 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785093364 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787079996 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787198354 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784557511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787210779 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786203275 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785861656 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.787536826 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78859272 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787430053 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784413322 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787823872 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783825026 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78459117 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785616447 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784941678 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786813344 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787036281 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784941307 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788983937 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785621706 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785094728 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784156093 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781976606 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781939212 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783862682 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781978489 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782029355 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783449403 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782420184 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781280325 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785617029 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782708093 seconds)
  done (took 119.705163459 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782064916 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781262587 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783491617 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78196675 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783254611 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783137841 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781437625 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782711224 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783065107 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.783930627 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785177477 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782372541 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783067429 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784626213 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784651983 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783010822 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782967837 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782841056 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782081216 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78536534 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782689413 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782091817 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781661799 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783376424 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783157535 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787425439 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782696364 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782037084 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782183511 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.78262694 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78205549 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781526612 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781597572 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.781556037 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782005065 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781280947 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784589773 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781429377 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781637779 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784461088 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781794688 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785802074 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782284701 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.782337782 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781373752 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781675002 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782141164 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783602588 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781700885 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782854655 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783830453 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781830713 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782784766 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783411384 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781950854 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781288855 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7806366 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781197711 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783613263 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783264825 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780557123 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782431172 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.785810043 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782202404 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785613125 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780723678 seconds)
  done (took 119.378076124 seconds)
done (took 2483.998350089 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.856434024 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.812329356 seconds)
  done (took 15.383638606 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.944414871 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.896907985 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.780447528 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.830119921 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.779174234 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.7961139 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.781009558 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.78022233 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.779715661 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.780851895 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.781167523 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.965294968 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.785370252 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.777955545 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.779271023 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.875173825 seconds)
  done (took 50.833513238 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.78256663 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.782585585 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.794350961 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.785457161 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.787647733 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.79315984 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.81562184 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.786290565 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.816985273 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.798451095 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.852823368 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.794225427 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.782524723 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.831629939 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.797079318 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.799171873 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.87388122 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.858411688 seconds)
  done (took 34.245073452 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.860790612 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.79695044 seconds)
  done (took 10.376096828 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.775365498 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.780111529 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.807946404 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.7970046 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.775535712 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.808229256 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.812339864 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.816384665 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.780752985 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.770086566 seconds)
  done (took 69.638362015 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.78493896 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.780723059 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.780531035 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.778481008 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.771788185 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.774058181 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.778881931 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.776789841 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.458080528 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.819839506 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.785722031 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.784872975 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.77974006 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.781398885 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.777878856 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.804673881 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.907481762 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.778602635 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.779459235 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.78543621 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.779159161 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.844759753 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.793468852 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.781628848 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.811074425 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.467070024 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.793604702 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.785400151 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.912106583 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.777711433 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.779909133 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.781597311 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.783051248 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.165330763 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.073182299 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.78082201 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.789352946 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.789514235 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.778660708 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.893856874 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.780875199 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.786234634 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.69626801 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.070482253 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.894329267 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.821606664 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.164703007 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.785366233 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.782628339 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.81081635 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.784691674 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.782591316 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.796433585 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.292635351 seconds)
  done (took 127.7948978 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.777991348 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.052303747 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.934604768 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.77709694 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064205862 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.984508025 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.776771273 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825439978 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.777139364 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.008730894 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.943191212 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.886310231 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.777243663 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.775323835 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.777629277 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.774393157 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.940814096 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.852584671 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.782679693 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.775529803 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.809586768 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.023162654 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.904816678 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.782804879 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.799085579 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.989618243 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.904854388 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.886151478 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.055238097 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.775245412 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.84370327 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.778258406 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.77740773 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.776759765 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.93441189 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.874176819 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86998605 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.77865982 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.776773351 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.777096608 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.45161981 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.977223181 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.876440307 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.92303686 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.025765155 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.982643187 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.568907585 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.775274077 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.514165948 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.940219442 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.009539164 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.012446997 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.903064659 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.780308479 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.291359058 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.777111787 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.77908183 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.0143763 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008030147 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.88267935 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.780315489 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.781112406 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.779322561 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.028614083 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.784663515 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.877067031 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.778612509 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.777679903 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.875765253 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.884339356 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.008356465 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995811691 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.817253071 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.098321822 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.257708001 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.034216672 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.848118587 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012688826 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.780103453 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.776722399 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867708705 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.629068035 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.938776806 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.029483127 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.033245109 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824196073 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.504250761 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.77892164 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.008669312 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.002279871 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.08438805 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.019788143 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.932350522 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.975740503 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.778082775 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.778658207 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.041870074 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.915139553 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.779478158 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.139948506 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.01533703 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.349186311 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.809770287 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.088692907 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.911783384 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.779318028 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.421071446 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.778637335 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006555686 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.821404286 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.77877062 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.780223006 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.005429323 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.854382055 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.779986389 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.415502782 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.841482165 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.783526751 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.016198372 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.781329945 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044569877 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.779409689 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01907793 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.168947064 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.813157915 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.006582284 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.020571884 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.778453241 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.04287643 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.027667176 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.89865756 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.006568314 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.411089293 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.781090881 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073180631 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.78036148 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.780197235 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.953245629 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.778448618 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.93179461 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.780514958 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.122646811 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804029343 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.933791698 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.779473303 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.038743651 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.814271099 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.833942959 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.780638357 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.908200669 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.782528476 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.64583029 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.933677607 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.778758129 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.776819936 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.524927201 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.778788026 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.93631754 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.012592575 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.803733056 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854906524 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.457652076 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.77778113 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.870212698 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.806567055 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.123035926 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.780250626 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.935815301 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.779673032 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.30499415 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.780408087 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.02264432 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.961722845 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.784724734 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.780252741 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.686770539 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.779075799 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.77929906 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.941532877 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.267505886 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.778744624 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98459603 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.78313444 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.910476864 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.782024188 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.855307583 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.135664109 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.779517171 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.780110022 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.780048864 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.78155738 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.780517013 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.04593875 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.810862954 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.305532308 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.919131036 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051809635 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.101172216 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.032162111 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.826679052 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.783322062 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.027184403 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.783188742 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.844734788 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.782505943 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.805143308 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014661276 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.784098791 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.991624614 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.064526002 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.724747921 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.830109232 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.783904633 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.782482016 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.657689812 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.932584111 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.873267278 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.782926039 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.782108793 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.898976977 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.90552993 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.996507987 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.780813693 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.95798602 seconds)
  done (took 883.79413076 seconds)
done (took 1193.779604416 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.781628378 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.783488443 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.765929285 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.77980802 seconds)
  done (took 28.829384621 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.787478443 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.784598735 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.787646949 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.785307416 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.787381415 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.784869163 seconds)
  done (took 12.433271261 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.799544206 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.776626455 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.780551426 seconds)
  done (took 21.073365985 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.856026501 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.189286928 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.89457966 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.22046042 seconds)
  done (took 9.877711723 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.786216442 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.784796484 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.785945791 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.787866157 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.787960281 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.789624249 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.788590189 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.788852135 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.788602899 seconds)
  done (took 17.807255712 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.227328961 seconds)
done (took 95.965054251 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.137961653 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.192133844 seconds)
    (3/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.76896572 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.91964721 seconds)
    (5/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.139780461 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.201573879 seconds)
    (7/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.107380486 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.897619602 seconds)
    (9/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.060675701 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.940936883 seconds)
    (11/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.924700074 seconds)
    (12/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.969831221 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.788635633 seconds)
    (14/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.971469416 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.826297694 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.811179359 seconds)
    (17/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.809951683 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.90375132 seconds)
    (19/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.801810756 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.868802271 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.782495662 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.788866541 seconds)
    (23/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.770199878 seconds)
    (24/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.601717397 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.897481286 seconds)
    (26/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.78746209 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.028467391 seconds)
    (28/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.814124609 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.764012092 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.777221679 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.803799209 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.189752555 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.794429607 seconds)
    (34/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.812024197 seconds)
    (35/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.926446057 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.817428114 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.84472185 seconds)
    (38/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.860327105 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.924026554 seconds)
    (40/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.796442669 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.024747661 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.893025071 seconds)
    (43/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.81270532 seconds)
    (44/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.865099988 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.313137436 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.194773618 seconds)
    (47/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.789008192 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.697485657 seconds)
    (49/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.045308595 seconds)
    (50/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.980388562 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.819781868 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.900270086 seconds)
    (53/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.883226735 seconds)
    (54/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.893116308 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.896323317 seconds)
    (56/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.805776532 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.045972527 seconds)
    (58/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.340730123 seconds)
    (59/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.982942442 seconds)
    (60/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.46664064 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.093535436 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.117788685 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.400834031 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.772570921 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.929602398 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.807138612 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.852259536 seconds)
    (68/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.302549612 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.125585128 seconds)
    (70/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.791325493 seconds)
    (71/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.978833928 seconds)
    (72/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.902327404 seconds)
    (73/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.061054417 seconds)
    (74/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.934210514 seconds)
    (75/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.793995938 seconds)
    (76/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.153865271 seconds)
    (77/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.994624644 seconds)
    (78/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.003133131 seconds)
    (79/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.477312637 seconds)
    (80/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.925987259 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.862724158 seconds)
    (82/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.295147489 seconds)
    (83/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.278722829 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.795158547 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.465798082 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.389563663 seconds)
    (87/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.931697484 seconds)
    (88/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.881379978 seconds)
    (89/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.133744355 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.819146928 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.71214236 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.045492331 seconds)
    (93/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.704092922 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.080860335 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.793604104 seconds)
    (96/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.901645057 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.71578296 seconds)
    (98/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.354811085 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.795962374 seconds)
    (100/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.123790433 seconds)
    (101/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.911932565 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.775996385 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.879225719 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.302184717 seconds)
    (105/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.943362186 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.17298067 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.080118105 seconds)
    (108/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.979681121 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.794475788 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.064155646 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.77134733 seconds)
    (112/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.867175389 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.491797031 seconds)
    (114/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.361279077 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.79234789 seconds)
    (116/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.606075663 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.188243716 seconds)
    (118/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.883832663 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.024823433 seconds)
    (120/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.984270173 seconds)
    (121/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.79377405 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.035553459 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.777680806 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.177062343 seconds)
    (125/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.814533369 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.176272792 seconds)
    (127/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.875954574 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.238151407 seconds)
    (129/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.950225174 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.816727608 seconds)
    (131/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.32483349 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.965022528 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.046062282 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.842941789 seconds)
    (135/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.869392084 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.011592201 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.778600905 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.049743683 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.814350893 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.79141612 seconds)
    (141/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.932881912 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.79520518 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.321933744 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.768270194 seconds)
    (145/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.811381256 seconds)
    (146/309) benchmarking ("sort", Float64, false)...
    done (took 5.551653968 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.127373412 seconds)
    (148/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.810604526 seconds)
    (149/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.632905412 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.023484971 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.81497639 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.817774179 seconds)
    (153/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.963274485 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.778207222 seconds)
    (155/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.967791015 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.137811687 seconds)
    (157/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.717334712 seconds)
    (158/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.744188792 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.864235462 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.842626308 seconds)
    (161/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.908642319 seconds)
    (162/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.418164634 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.868057254 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.066523014 seconds)
    (165/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.198200675 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.794143758 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.171976522 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.796397794 seconds)
    (169/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.992857417 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.370077174 seconds)
    (171/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.875177589 seconds)
    (172/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.778247265 seconds)
    (173/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.799424636 seconds)
    (174/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.403205823 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.795116263 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.97973498 seconds)
    (177/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.887898835 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.17231684 seconds)
    (179/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.779567657 seconds)
    (180/309) benchmarking ("sort", Float32, false)...
    done (took 7.074620006 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.827833039 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.77882763 seconds)
    (183/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.231464857 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.162320166 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.829851089 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.888802941 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.820551126 seconds)
    (188/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.075684541 seconds)
    (189/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.35259448 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.866214376 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.605470267 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.97211741 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.78573906 seconds)
    (194/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.962040826 seconds)
    (195/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.060451268 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.795220969 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.853702606 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.092564934 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.884068061 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.81124799 seconds)
    (201/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.926988413 seconds)
    (202/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.825776051 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.795053503 seconds)
    (204/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.931704679 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.91379983 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.901815201 seconds)
    (207/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.520755852 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.961851641 seconds)
    (209/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.804707061 seconds)
    (210/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.930801821 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.602240884 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.028396241 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.94171717 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.016188916 seconds)
    (215/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.102106953 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.182258753 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.892236043 seconds)
    (218/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.373184469 seconds)
    (219/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.874476615 seconds)
    (220/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.102165183 seconds)
    (221/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.965637368 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.823042043 seconds)
    (223/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.793706094 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.838464634 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.184073974 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.121768905 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.903999148 seconds)
    (228/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.283374458 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.443138896 seconds)
    (230/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.146240345 seconds)
    (231/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.212168932 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.876891254 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.097600648 seconds)
    (234/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.969378286 seconds)
    (235/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.392092081 seconds)
    (236/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.910382054 seconds)
    (237/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.84247685 seconds)
    (238/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.201838219 seconds)
    (239/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.782962149 seconds)
    (240/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.921666949 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.903291203 seconds)
    (242/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.781750162 seconds)
    (243/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 3.516109648 seconds)
    (244/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.965791308 seconds)
    (245/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.971305702 seconds)
    (246/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.185277402 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.9972183 seconds)
    (248/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.268004813 seconds)
    (249/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.157122037 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.994017357 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.382193765 seconds)
    (252/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.223829027 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.824008909 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.923075532 seconds)
    (255/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.784648223 seconds)
    (256/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.265718319 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.879817456 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.848388683 seconds)
    (259/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.990787855 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.833165803 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.78472555 seconds)
    (262/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.892021728 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.160524394 seconds)
    (264/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.793845944 seconds)
    (265/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.244915528 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.800205096 seconds)
    (267/309) benchmarking ("sort", BigInt, false)...
    done (took 6.800935673 seconds)
    (268/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.033381422 seconds)
    (269/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.193163235 seconds)
    (270/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.017300395 seconds)
    (271/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.986812493 seconds)
    (272/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.936900471 seconds)
    (273/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.928166855 seconds)
    (274/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.967391834 seconds)
    (275/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.27641401 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.740082215 seconds)
    (277/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.806851302 seconds)
    (278/309) benchmarking ("sort", Int8, false)...
    done (took 4.834672418 seconds)
    (279/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.891444776 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.141364551 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.886305374 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.883817502 seconds)
    (283/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.80314396 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.957313581 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.720015376 seconds)
    (286/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.737761173 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.610927227 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.485950985 seconds)
    (289/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.812427251 seconds)
    (290/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.144498151 seconds)
    (291/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.005894794 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.445112578 seconds)
    (293/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.136840478 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.837954975 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.94508788 seconds)
    (296/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.891323081 seconds)
    (297/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.723622374 seconds)
    (298/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.864697211 seconds)
    (299/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.045044485 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.801144436 seconds)
    (301/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.300561611 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.803334435 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.983884387 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.822455361 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.490546048 seconds)
    (306/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.827694902 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.786552845 seconds)
    (308/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.39700181 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.210083729 seconds)
  done (took 993.587112324 seconds)
done (took 995.571727395 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.83790439 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.829305003 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.811798939 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.837225881 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.92538189 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.840276128 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.824658 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.815475541 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.861286083 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.862473583 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.811277197 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.838293773 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.814793242 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.81235241 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.813356288 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.828092294 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.124176014 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.840432777 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.830199734 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.823096271 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.830180528 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.813874389 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.862982681 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.840625502 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.818674171 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.816693595 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.816492388 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.837597004 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.925971646 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.818573401 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.816109609 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.825254949 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.12430374 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.840187979 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.808226624 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.832675258 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.825518539 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.823291174 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.817616066 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.846866795 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.26309228 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.81747905 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.8149846 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.81512739 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.814109199 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.820047606 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.815239222 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.821876677 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.82600554 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.829237477 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.261518009 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.835357336 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.81907417 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.814693329 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.824999002 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.81630601 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.820667186 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830793083 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.836527911 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.833475528 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.112776961 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.846625184 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.818521658 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.832323544 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.823166875 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.300407772 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.817307428 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.819663252 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.267286344 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.824336123 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.300470897 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.828628577 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.81520193 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.829438726 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.848757018 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.123505881 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.838442659 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.816688203 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.823800222 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.815833787 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.827087197 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.827656586 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.820828262 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.814744541 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.830660467 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.844203853 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.826837322 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.817197624 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.824088338 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.83508582 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.822908294 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.829191476 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.820676012 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.810716094 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.824373919 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.822375228 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.823265244 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.821135458 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.821964465 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.82804227 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.264738598 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.837862683 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.816308168 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.811626406 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.817707346 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.83246051 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.264853289 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.825302376 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.837026458 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.865582951 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.820823634 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.116269777 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.848171155 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.835639906 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.82568038 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.824184177 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.813394809 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.118453037 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.289455787 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.838975886 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.82239988 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.818012136 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835515936 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.822571946 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.816904038 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.12762982 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.847300965 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.833971246 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.945548038 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.828631372 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.850968523 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.817706696 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.824152971 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.85074413 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838710187 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.849814312 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.822023377 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.836922853 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.834567479 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.81996563 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.831263292 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.83044604 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.821504499 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.825895966 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.816516375 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.848941415 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.831488019 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.834330317 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.84247699 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.94201444 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.820046923 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.118803814 seconds)
done (took 285.90636046 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.889935377 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.813899024 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.917274691 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.817374758 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.899935609 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.918299109 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.813360395 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.816346011 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.81319687 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.189853207 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.814931575 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.813589119 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.810146273 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.815757404 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.900912494 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.820238554 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.815460603 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.198691721 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.817715385 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.889994908 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.809326307 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.81486997 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.816151303 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.243429775 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.819344906 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.817006221 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.899775333 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.817927813 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.159741848 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.817520775 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.812748753 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.204790669 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.923945812 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.834782632 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.828343437 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.825679009 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.911606616 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.821725831 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.909506408 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.903423779 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.916504151 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.859980457 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.813901646 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.811434423 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.822643153 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.820429334 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.818131186 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.857224665 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.821579725 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.818177856 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.153175935 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.830742972 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.817050972 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.818636688 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.818467108 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.850450619 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.81783128 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.818931492 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.913134595 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.819764072 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.886064468 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.19849672 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.240286226 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.819680076 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.815673769 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.818801398 seconds)
  done (took 181.122158262 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.886984135 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.892231632 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.88789796 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.824420967 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.86942706 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.887875957 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.825943559 seconds)
  done (took 14.824953958 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.827378899 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.821037221 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.869659022 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.872421346 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.821070023 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.969825251 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.821888099 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.832425678 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.81850836 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.878878036 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.822046529 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.819504169 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.827437438 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.817308741 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.868560902 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.830489072 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.936009273 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.824944803 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.82192597 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.971368892 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818903033 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.828501273 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.876143363 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.831706849 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.82219426 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.829965352 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.406625838 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.824200756 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818162287 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.823035284 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.817890399 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.864273975 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.82454372 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.820095422 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.820794087 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.93751382 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.822526595 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.819860202 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.822782595 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.816007276 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.821048532 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.823658671 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.823046356 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.817740946 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.824167447 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.846044779 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.821196462 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.822922228 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.822064828 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.825452579 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.872519758 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.823243862 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.820819072 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.818617653 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.879162525 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.830796759 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.823327146 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.819659936 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.82412554 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.821135191 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.975784702 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.870515057 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.823058952 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.870491344 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.82355094 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.823623525 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.825287309 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.822120343 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.917450729 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.823053154 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.869821509 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.820871811 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.984568805 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.848071201 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.827548534 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.82741039 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.826988134 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.824391928 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.8230074 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.832245361 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.819935894 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.82476223 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.83265373 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.821272887 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.822794675 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.937373745 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.932134715 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.823639102 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.8355551 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.830866393 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.824214132 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.875871074 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.827633804 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.823555427 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.881953742 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.941519532 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.879130812 seconds)
  done (took 201.245451982 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.829279156 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.831790079 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.825083792 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.841228287 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.8247204 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.826422613 seconds)
  done (took 12.730780333 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.827973269 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.827702057 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.82679658 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.826412799 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.823781075 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.823671434 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.826974022 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.827116317 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.830169033 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.82536323 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.824499066 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.825763064 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.828282788 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.823860367 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.825168575 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.825494679 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.829036252 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.822924861 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.826133723 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.826773848 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.970032027 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.824797198 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.826493565 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.827168168 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.83051318 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.826803255 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.83721849 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.825882234 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.829485936 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.835062932 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.829719788 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.828902126 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.826936907 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.832784059 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.831505484 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.828562532 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.828610542 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.828354222 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.824242948 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.826081192 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.829573359 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.826736844 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.826455073 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.827102034 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.826924384 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.83057264 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.830971224 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.833240899 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.827315 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.828957852 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.832126678 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.82914688 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.829491473 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.827236876 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.829318796 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83542121 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.834244048 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.826514582 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.829584476 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.829605424 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.830245731 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.829943246 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.83193763 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.830614302 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.835963221 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.828327839 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.829979306 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.834556292 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.830034255 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.826769662 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.829630718 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.826328075 seconds)
  done (took 134.555043829 seconds)
done (took 546.239169542 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.95756235 seconds)
  done (took 8.714657753 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.842743289 seconds)
  done (took 8.703154033 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.448139912 seconds)
  done (took 10.216295654 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.838248715 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.867733894 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.828241055 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.834078453 seconds)
  done (took 29.138415565 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.917038776 seconds)
  done (took 8.677120469 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.842322224 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.822125774 seconds)
  done (took 15.458081581 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.889909731 seconds)
  done (took 8.658451651 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.908988 seconds)
  done (took 8.672835655 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.838835821 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.86847661 seconds)
  done (took 15.482286497 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.81201082 seconds)
  done (took 8.572431462 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.50206994 seconds)
  done (took 11.26938975 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.836476528 seconds)
  done (took 8.610552312 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.846033528 seconds)
  done (took 8.60876693 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.97907964 seconds)
  done (took 9.740641159 seconds)
done (took 162.280764431 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.829718814 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.82395826 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.829430576 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.825562418 seconds)
  done (took 29.067738005 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.865957686 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.869282569 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.875071641 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.878049217 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.869341763 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.866600313 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.859544169 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.857733649 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.878316309 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.868127294 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.868190848 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.868549861 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.866878451 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.863134053 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.869728663 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.867882333 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.877627122 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.870459191 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.858489492 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.871591695 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.83345006 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.880029383 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.870595672 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.834501308 seconds)
  done (took 46.550654186 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.034591885 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.903934155 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.98654877 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.884270636 seconds)
  done (took 9.573003106 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.884521502 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.886704245 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.899543923 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.937422031 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.962901048 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.897265087 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.861389212 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.858523633 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.844546144 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.88831758 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.965892562 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.88618632 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.994191253 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.834032317 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.020289238 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.83508293 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.833949044 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.885692064 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.940829494 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.94938423 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.835322737 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.88741308 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.891929993 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.882375174 seconds)
  done (took 47.327116519 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.83420643 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.844239452 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.84068514 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.835349968 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.835088523 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.835496115 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.84147399 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.83571025 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.857783093 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.837368806 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.838439195 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.8346228 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.835944933 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.836168884 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.840486287 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.85173797 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.847904674 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.836437593 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.836201784 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.842235503 seconds)
  done (took 38.562310529 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.830284964 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.681992364 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.180273996 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.085431917 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.828592848 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.833008504 seconds)
  done (took 31.202260094 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.847537655 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.840759342 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.835630382 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.889549998 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.973025816 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.843859432 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.835803423 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.846409248 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.879666827 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.903384161 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.852081754 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.863219087 seconds)
  done (took 24.175108324 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.833050328 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.832203412 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.832289131 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.852522292 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.85112524 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.84591486 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.845078735 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.834352751 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.849972899 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.856082434 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.842402809 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.847771403 seconds)
  done (took 43.892680593 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922908537 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.72261729 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.854387096 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.519579569 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.302378756 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042444315 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.360450221 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.167646445 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.837081596 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108529544 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908430509 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937497915 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.086582484 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833316737 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.853668562 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.312532757 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130343219 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059545019 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859309553 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.597619618 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882488456 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361750613 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.67261582 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.892856338 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045861104 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.963002974 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.095582304 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.791186975 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967837439 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873062345 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843878347 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.833955715 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108235132 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211209049 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939346802 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84586166 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.453463648 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.549391206 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.822250822 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.616937332 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.636147113 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.95892028 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843745683 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836712819 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.770441738 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327707339 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210943894 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.842320202 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.547531967 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.837967279 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848461979 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92443744 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.838216491 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.652653469 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755352342 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.10989298 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.834365176 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841981016 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402504065 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.956506403 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368487509 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.809724947 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.029100691 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.614202806 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242496462 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.983513021 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.841683227 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842420962 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770716627 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.61525781 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889601998 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98245447 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.857894545 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486911807 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15338085 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.983471319 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.780016701 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116319771 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.041444587 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.812489783 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067369014 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.790137572 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772586229 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.708497413 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.771064081 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102068352 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874297276 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.473321145 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87991773 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.174851598 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.84707713 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855806173 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845579052 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.062882302 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.405291406 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840565528 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.688449109 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.983916443 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858612088 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.173385412 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772658516 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.841137655 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093938892 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.050315126 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.067863238 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.35729499 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99732695 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838901571 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.919024529 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.747833398 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.887297528 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.110849201 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898805253 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.951438426 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899803169 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.80239476 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13609955 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866603391 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.004737922 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.940445885 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967352049 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.170983852 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131591839 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905255744 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848685469 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.842849223 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.632523174 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.397570576 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.107314661 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.842282605 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33455454 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886952786 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.842656433 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777137157 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.46311555 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.941069247 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.809681721 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.063990609 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.775799838 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152629457 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77651323 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987230787 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.952765956 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.064927958 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.483873571 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.91655122 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099002726 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314275677 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.108855325 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888415192 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858805986 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956995168 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86350085 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.244546918 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.130420201 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.845285683 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.845549932 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.63176908 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.841942977 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845604522 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.847060661 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.597807889 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124517638 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.867480963 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.853462741 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.733876015 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.856701835 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909763572 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848519227 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.853449159 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.385234998 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.574061907 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.851361297 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.445755514 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066869252 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854589647 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.623975486 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957140568 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.925008693 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131971651 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903966339 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.778305806 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.554043882 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.536935885 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844163679 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.780964662 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.844194989 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85396116 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856866273 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.223728984 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.119202003 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890070462 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.753888613 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.888069369 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856710797 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.849990817 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846259573 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.384946899 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.964868468 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375012031 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.889948477 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981114654 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.860315014 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779224742 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.848862917 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.849179061 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.846300947 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.801949734 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897766975 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.672237884 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232816304 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102821838 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.493385032 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858090581 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.654870418 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.905689898 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.864356628 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.554771951 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938565068 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.877369655 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854544639 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.855696101 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.629497472 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.541707333 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408126582 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156791791 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165834148 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287157988 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.324252325 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.149267116 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183181378 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080984624 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.377495275 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904026989 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185461616 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79292312 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929443276 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.493621068 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200238617 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861985734 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075008914 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230456508 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.61083786 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989080899 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0595854 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881693034 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.77573225 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.807715697 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.051720133 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989117662 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.614596627 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044673232 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181556453 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.551635253 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.939349805 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.845653073 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.531567625 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934412814 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.562222248 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.214095127 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395711157 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.851182458 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325119424 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.856606176 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.293306237 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198467821 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.174339344 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.969524557 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783965073 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.858247272 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.858125882 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.849388258 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.842798707 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.719107356 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.098695066 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860049796 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084647014 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.103960854 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141010855 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.757192617 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.851106477 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846898227 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142829102 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.631222554 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013711035 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.272927218 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.371495047 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85370787 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78397704 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783219765 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.542352736 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.84756105 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.82384075 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069353924 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.037440408 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.761639517 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35686008 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090595181 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.105215041 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.861966881 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.136417283 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12812841 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.553274658 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875913412 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.950484799 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.567083514 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.956970705 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.119780822 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085749863 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.602135518 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.078194161 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.897696169 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.675169524 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.853682609 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065598475 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.121919098 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.840371104 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08386167 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.576279416 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.911038742 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172102613 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912739503 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.82673494 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.008062435 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.045506537 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86247611 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935864581 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863446251 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.863059697 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.864515513 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898616691 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.849152462 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.975690403 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.867378238 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942291444 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.00391461 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.379418714 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.858126412 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140106829 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231405683 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.186143402 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915461972 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.853720494 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861711566 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788486857 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988935736 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.301531188 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12897486 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.985762284 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.153049135 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879067825 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.566295813 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.223414102 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094694118 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131383464 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.749171131 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854791201 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.881331563 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.121553082 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866197082 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.066227173 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083696363 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168719945 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326008188 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.099158331 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.22090423 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130808506 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.224721678 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854723083 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44602028 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.928845156 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.53929818 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.899325795 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.814413384 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120990932 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86722923 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241494531 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880113479 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.054096867 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.373288094 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.652077236 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.144933341 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.84788325 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.920342065 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143102235 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262132218 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172173903 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928798806 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868612411 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.559840899 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994798674 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.726510096 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.125338029 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.858756014 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06901744 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.568447404 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.866557008 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137782626 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169603095 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.854051267 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.743639311 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86549198 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.868210384 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.081600032 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126545273 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111330734 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867550782 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.859995165 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.67522126 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134570451 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91936245 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792149026 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.860907584 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959415418 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.105649727 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883480568 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.547951041 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.570827024 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155792803 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.777890962 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87979858 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357632624 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.225171084 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190904275 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.400495487 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084266737 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.417869685 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.824252651 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161195425 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.8659117 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389703313 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166690834 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.863712442 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.461209994 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900741454 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.140831922 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179546155 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.9550072 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.664443917 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.829021708 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084973344 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423266123 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800614525 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.868291352 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.921722383 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.859198354 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.991262932 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869116905 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.770844337 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793036174 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.608272158 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354895013 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.867740125 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.848670343 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.643609664 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.501191751 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894865346 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008689 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868161876 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.573073582 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.157133115 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.115776641 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.467914341 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.869653834 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.867117287 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862874992 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.789642012 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.062418827 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.242192435 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159363778 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.295368893 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.899712065 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.86596355 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.082095807 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075305442 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.837888329 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003029502 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353243381 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90189794 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.632922938 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.547018396 seconds)
  done (took 1675.582006594 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.913072917 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.901222982 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.91237386 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.902758264 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.908107594 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.935805663 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.896790218 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.958773105 seconds)
  done (took 57.12675594 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.861793594 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.058379651 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.869863569 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.86322056 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.867416524 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.87054283 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.031801518 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.87537129 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.866852855 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.871746577 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.859448485 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.860738083 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.171753362 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.887387829 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.864087451 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.84537325 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.869694867 seconds)
  done (took 74.222861137 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.863522661 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.074964341 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.898099802 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.875232416 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.799326965 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.871022379 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.814492405 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.862484227 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.864734129 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.082249656 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.495489447 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.874008716 seconds)
  done (took 90.172007957 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.876201842 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.869965603 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.870666638 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.869394804 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.87080239 seconds)
  done (took 11.156990988 seconds)
done (took 2180.396330305 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.11281353 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.093189205 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.09718273 seconds)
  done (took 5.985429967 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.010541266 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.056618374 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.176614308 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.184987733 seconds)
  done (took 10.22812678 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.160888983 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.24634008 seconds)
  done (took 6.200484465 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.26986724 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.879953588 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.256882092 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.86220174 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.861362381 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.861980163 seconds)
  done (took 22.387141119 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.864350492 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.869545068 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.865256525 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.867891707 seconds)
  done (took 9.260451999 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.845033772 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.536454912 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.847972762 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.85987072 seconds)
  done (took 20.882459093 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.61487953 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.264921179 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.60887297 seconds)
  done (took 9.283475023 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.344148959 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.76244242 seconds)
  done (took 8.899134861 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.128331468 seconds)
  done (took 3.924455665 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.998607312 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.140475173 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.38159654 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.381033871 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.46680431 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.715757619 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.180793259 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.106939964 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.270264348 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.292638055 seconds)
  done (took 24.731101704 seconds)
done (took 137.095222144 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.24077153 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.101587666 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.069470237 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.207793769 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.091093811 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.069323613 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.06387173 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.192776024 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.708114852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.705153479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.208109367 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.087037093 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.212985901 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.863106055 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.214044198 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.865757922 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.12000241 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.254991321 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.905114056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.141190112 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.072866167 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.835993563 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.052561862 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.851437356 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.101380951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.019020467 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.42719181 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.867066031 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.058803937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.436780222 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.021217824 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.29669625 seconds)
  done (took 169.160076449 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.622188457 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.865322767 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.865928227 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.862868645 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.322323305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.866178077 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.866614236 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.863405156 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.003020184 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.992312358 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.87705622 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.338503765 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.873776242 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.862414807 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.868182535 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.864296191 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.144994249 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.68505599 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.876994822 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.880876983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.883491875 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.304059149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.883239004 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.304510152 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.164330786 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.884654897 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.852688389 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.885022897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.869914188 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.837174294 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.87577984 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.86592791 seconds)
  done (took 207.812791763 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.866838994 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.864544643 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.866557054 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.868671936 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.881696295 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.864757718 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.870240587 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.86866882 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.540742929 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.534231313 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.875301081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.870917683 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.866707139 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.866311949 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.869798017 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.865059408 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.871551566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.869221142 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.871780329 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.871873062 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.877972987 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.697866189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.875677365 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.702480616 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.871875076 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.873509243 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.868657842 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.873637142 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.875039628 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.876773999 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.878188515 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.866528169 seconds)
  done (took 220.676085357 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.07209168 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.875081399 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.877586109 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.819668009 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.876506927 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.875890212 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.817488132 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.07325095 seconds)
  done (took 19.104119144 seconds)
done (took 618.556396866 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.299653423 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.146512074 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.047612712 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.897947938 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.126169774 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.929365535 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.895013409 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.961997849 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.620981269 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.961057135 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.538996726 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.911786735 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.627848077 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.919517095 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.028093487 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.957475533 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.434672775 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.527857616 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.07335049 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.962311065 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.063755469 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.830307687 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.972959578 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.640515127 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.643281987 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.875389386 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.091320122 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.440575924 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.904600057 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.061121672 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.605390499 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.289486076 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.902992544 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.890187467 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.947676875 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.927776462 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.264423511 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.903567752 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.014739419 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.632164129 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.956401929 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.504913302 seconds)
  done (took 103.032833467 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.868489656 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.866187409 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.865875485 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.865143757 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.868148703 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.864253214 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.865951156 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.864435882 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.866571051 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.864384955 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.865070763 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.865326714 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.864562191 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.865351364 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.866297618 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.864010285 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.867883188 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.870745335 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.866540289 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.867851634 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.866360256 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.866896521 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.883382792 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.865392682 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.866011353 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.865299652 seconds)
  done (took 50.352020179 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.880395925 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.026813902 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.126880718 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.898017663 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.878777929 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.886237144 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.897154711 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.881691402 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.88361433 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.880433402 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.988149255 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.885319605 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.898138225 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.127602608 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.893442994 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.880193577 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.876942704 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.879986188 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.03401249 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.89254173 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.898025694 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.885841764 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.898501167 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.891541788 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.879083241 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.879224251 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.88346282 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.336274772 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.888682356 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.986772186 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.917569426 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.899821605 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.323449825 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.13946798 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.931919847 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.886031895 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.88225623 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.989796537 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.886756931 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.878842225 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.901313033 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.88973068 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.129330377 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.36953382 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.891673319 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.88045536 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.347737424 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.997616681 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.922415323 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.889612282 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.134230246 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.893670598 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.886235923 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.882033343 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.918123638 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.890632489 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.879955295 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.23119819 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.894016962 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.899040419 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.884550404 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.881676414 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.043994673 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.890356514 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.03166972 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.887867093 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.887593337 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.884353144 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.130849119 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.896900246 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.380689014 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.89533563 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.883121268 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.985755198 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.035308218 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.370226412 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.893474994 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.044774881 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.339950673 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.905367186 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.889200853 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.32976168 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.909622344 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.89214754 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.885826046 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.886662223 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.882910106 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.9296917 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.898012986 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.321540664 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.37945191 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.243074225 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.908744573 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.898173772 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.88356946 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.230761579 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.8929919 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.882221422 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.127090819 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.385599465 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.895076608 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.890343497 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.360815296 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.896300056 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.900619023 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.890868568 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.137422259 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.896896587 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.927902716 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.882424286 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.888070448 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.886774052 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.901893382 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.889659276 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.885696158 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.352049367 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.007768632 seconds)
  done (took 233.60007846 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.880603724 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.876170713 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.876832853 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.877660921 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.87704757 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.883488103 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.875930916 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.875844071 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.884444157 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.878630578 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.878221312 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.87897559 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.879205176 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.880654179 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.901705602 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.884130551 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.490952912 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.880987225 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.879904963 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.885545516 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.526454058 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.883950136 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.879791533 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.888896415 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.879364768 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.877815428 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.888219096 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.913219187 seconds)
  done (took 167.77728291 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.885984698 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.997266147 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.902921932 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.910515811 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.892936518 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.882575949 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.908443278 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.897501483 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.889845904 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.884316494 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.882442055 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.943309046 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.894950695 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.980540968 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.909974248 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.914792155 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.986336955 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.891178814 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.884356595 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.882589042 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.911566704 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.879737158 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.944131088 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.006134813 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.901791351 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.000357865 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.893021321 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.890883075 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.885960365 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.004467306 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.900481509 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.947848501 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.912156777 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.902310682 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.002706687 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.999242098 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.992102527 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.916577475 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.891245348 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.886765099 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.884101887 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.878310559 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.002172882 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.903276962 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.890137887 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.995565183 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.904364572 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.889332428 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.899103953 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.887630917 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.899288562 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.903191471 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.952027115 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.016011227 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.918012484 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.911795263 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.911987607 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.174265436 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.898481049 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.983337542 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.880595029 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.002971057 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.905523775 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.879239814 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.8892969 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.894476297 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.916632173 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.91909926 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.993841208 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.893333532 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.989120642 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.918076764 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.895012899 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.888155714 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.89123863 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.003211854 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.001989023 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.920101646 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.924162061 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.921214926 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.885296865 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.890157132 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.880392852 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.906220579 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.892125542 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.002155316 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.002342757 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.896064184 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.890388523 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.891053523 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.894443828 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.912941733 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.013822864 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.923745313 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.985196649 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.955159361 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.96066472 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.901027681 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.903180893 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.892608266 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.952486846 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.904464593 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.901355728 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.221723444 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.956586641 seconds)
  done (took 204.351898013 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.370936089 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.937654255 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.945987938 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.209685915 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.306990263 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.769917347 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.934073291 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.937541018 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.961330235 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.129535915 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.008019552 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.96200756 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.92323069 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.91092529 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.936718579 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.962119316 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.958250043 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.250332203 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.069306632 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.029414099 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.915795836 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.253696758 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.247448878 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.338383429 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.971730515 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.267918195 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.607209538 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.183857619 seconds)
  done (took 62.125588507 seconds)
done (took 823.037974559 seconds)
SAVING RESULT...
DONE!
