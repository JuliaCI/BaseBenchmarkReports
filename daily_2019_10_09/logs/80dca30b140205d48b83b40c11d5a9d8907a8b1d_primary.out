cset: moving following pidspec: 21796
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.346723573 seconds)
loading group "string"... done (took 0.547922477 seconds)
loading group "linalg"... done (took 7.043867315 seconds)
loading group "parallel"... done (took 0.15168612 seconds)
loading group "find"... done (took 1.088776196 seconds)
loading group "tuple"... done (took 1.804555672 seconds)
loading group "dates"... done (took 1.170374823 seconds)
loading group "micro"... done (took 0.210665837 seconds)
loading group "io"... done (took 0.914481366 seconds)
loading group "scalar"... done (took 35.943545147 seconds)
loading group "sparse"... done (took 11.080770481 seconds)
loading group "broadcast"... done (took 0.901618592 seconds)
loading group "union"... done (took 11.739664304 seconds)
loading group "simd"... done (took 4.101069628 seconds)
loading group "random"... done (took 8.43789195 seconds)
loading group "problem"... done (took 1.837301705 seconds)
loading group "array"... done (took 19.374807943 seconds)
loading group "misc"... done (took 1.581516244 seconds)
loading group "sort"... done (took 3.044537631 seconds)
loading group "collection"... done (took 16.5384997 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.484431076 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123157595 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114069548 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118448254 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145358794 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114479376 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122695486 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083394517 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.870008612 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148188886 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11752728 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413988344 seconds)
done (took 5.192610142 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173946753 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083261078 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081703413 seconds)
  done (took 1.3170219 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065043653 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120652608 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066221503 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065996076 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06649279 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06560973 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065768871 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066122659 seconds)
  done (took 1.668898271 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075915233 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068637558 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068312103 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067947352 seconds)
  done (took 1.435417565 seconds)
done (took 5.822890978 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.767186694 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.2004892 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181974999 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397432348 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128583037 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153978614 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639452736 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317383986 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183310564 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081075168 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10417755 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318028313 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106616723 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63865034 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073675422 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090000039 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137561532 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44319628 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067160988 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082047776 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088253232 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127894908 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085178043 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074321031 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142863207 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067336165 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129576481 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079897493 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066063179 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207039068 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172383428 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652590044 seconds)
  done (took 10.198030836 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095827295 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096859641 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068805908 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136078703 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096028491 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069171174 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070915561 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067161915 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086700395 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127711663 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088450977 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101576433 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065201651 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068096188 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08414077 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203274603 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079971399 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081057102 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069906046 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074706472 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118415527 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077788158 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077496688 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077296611 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127890287 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179449271 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095283154 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096792849 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066289727 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080224649 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114617785 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125555984 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0655646 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065789018 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1238434 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094200457 seconds)
  done (took 4.607847917 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.290564156 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140472317 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089995285 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131205207 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064495237 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107020213 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065462063 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080345219 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199895238 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.361769857 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109845937 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.574336557 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110599282 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103660527 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067476901 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068068679 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066419101 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.348831061 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10780531 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103099136 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080243997 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069418305 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068380544 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34099173 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067092157 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063693287 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067404395 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05780363 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063923782 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123077882 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067586349 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.931392779 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12551012 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066863727 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100850119 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169849069 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.21668003 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143412049 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068118038 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064079517 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15163787 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07048702 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066916164 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083620994 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103244192 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112005431 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065408492 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067071522 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161155984 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.0650984 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07933404 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.991244011 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152538737 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075924042 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064579038 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246000842 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08556894 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068564431 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064266937 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176939146 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133230234 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067226041 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066222188 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067876964 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069232989 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364784465 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06618368 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.723092359 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069462044 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077366084 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069026412 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068921385 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072611042 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074402602 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08520349 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065766035 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075179954 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065619403 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065768217 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066703381 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08403316 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.357911669 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066149943 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06783995 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063080071 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064508883 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085265681 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100912819 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06628428 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064908584 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100076972 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.169193678 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066137269 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106147331 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066249689 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063791468 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083838211 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06876238 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113380197 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066362659 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.087147264 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065083498 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096347936 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069530439 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099291015 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080488489 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068492247 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.396429953 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065027866 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065244658 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068919753 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064865497 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067570114 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06650471 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078720639 seconds)
  done (took 20.914758892 seconds)
done (took 38.165236583 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268788296 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07521918 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075053747 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075352156 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074956936 seconds)
  done (took 1.812678303 seconds)
done (took 3.037892154 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119208354 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098116252 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064206207 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094524258 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063822529 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099628134 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099056672 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080275514 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098908742 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064043856 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095450491 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06387488 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064120945 seconds)
  done (took 2.349308448 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081861283 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083433731 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068908 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082474262 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063834802 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081813339 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080147523 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087362982 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080689177 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072029188 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06393986 seconds)
  done (took 2.064554548 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081612028 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083261889 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068731706 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081243808 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064136269 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082951989 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080288783 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084601591 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080739893 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072907336 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063345109 seconds)
  done (took 2.058712919 seconds)
done (took 7.685989354 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07661342 seconds)
  done (took 1.283615606 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.585962566 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.054059885 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081302261 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111649621 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183746293 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.1191432 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278288009 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086543982 seconds)
  done (took 8.885759086 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102698231 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071662118 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071350191 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069495368 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07138781 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070476386 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07110626 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071651661 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06805627 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06882855 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069013981 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069072033 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069314243 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068007309 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068605998 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072588135 seconds)
  done (took 2.42740191 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091904853 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091210206 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073723219 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074169166 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071691159 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071946721 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07379984 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072918856 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070452321 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071880697 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074223511 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073472849 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071304681 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06479796 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073850674 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075384363 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070765498 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074126431 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074994681 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074843416 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074148332 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064229314 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071814595 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073733395 seconds)
  done (took 3.086185201 seconds)
done (took 16.896856338 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114192556 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072249454 seconds)
  done (took 1.39852649 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081735067 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083550971 seconds)
  done (took 1.385771245 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083311094 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066011651 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092563563 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078674661 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066077555 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065598718 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089640183 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065982797 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065641831 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066247681 seconds)
  done (took 1.960947547 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068521968 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07847926 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070879363 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081417152 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073877214 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064098426 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072788111 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068018415 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078286785 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062712105 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071549725 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082580986 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071209865 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084166514 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073104426 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069004545 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07161026 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06779421 seconds)
  done (took 2.536690569 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065364117 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.0671406 seconds)
  done (took 1.361298111 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067309451 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063805436 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06713145 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066848862 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063390598 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062541572 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063438148 seconds)
  done (took 1.680408554 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388818424 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109774764 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297483985 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070562123 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081541735 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248841181 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064947001 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069872697 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069996725 seconds)
  done (took 2.670634718 seconds)
done (took 14.22064776 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078215236 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084540877 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095485424 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363040832 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091821163 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065700368 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113926764 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189360777 seconds)
done (took 2.321783355 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212808473 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.610803587 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384929094 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196638104 seconds)
  done (took 2.421113341 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328041739 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086675394 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058632026 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065946884 seconds)
  done (took 1.777659938 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065782947 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068528147 seconds)
  done (took 1.369848369 seconds)
done (took 7.018689292 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065814699 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082067798 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062620865 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065996317 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065748561 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.063041449 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065354808 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.06300543 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063091914 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06536122 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067828552 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065942664 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.066431765 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.065636051 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065588331 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063410345 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063098516 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065060562 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065193056 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062921217 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062961052 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065163644 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063075991 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062729874 seconds)
  done (took 2.837262296 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082834533 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06617607 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071051996 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071486143 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069639407 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070627782 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070930179 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065702836 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071397152 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067410242 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06922186 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069460876 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067554235 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069455934 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067827146 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069945615 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071239032 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06587432 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068053257 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069663526 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070875508 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066488029 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069589926 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070600963 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068935227 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069043805 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067590082 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065907346 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071021555 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069196001 seconds)
  done (took 3.329442029 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06904847 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063183144 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06410599 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070218083 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062852836 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065190252 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063000399 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063391316 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063988025 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063111109 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064602401 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063047029 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062793186 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064330853 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063578633 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066686359 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078606239 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063461499 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063348262 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064142661 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066206635 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063002322 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063292694 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063076985 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.170519961 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062810261 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063753874 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063338725 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063886594 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063085576 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06585825 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066197726 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062882118 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069405325 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066562294 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062993338 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06670979 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062525192 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063575952 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062843605 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062552557 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063222889 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062932699 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069967539 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063105153 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064871293 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062971917 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06387833 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063794266 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065683923 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06237737 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062844837 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065081485 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06387545 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066924489 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062588519 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063804738 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06269571 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06375277 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062801171 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062755885 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062762056 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065290195 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063426555 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07724078 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069488497 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062704122 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064335049 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064339508 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065398907 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067155559 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076091352 seconds)
  done (took 6.022750961 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090372379 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086279577 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064623151 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064712918 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06136257 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063702963 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067242749 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064010462 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064858111 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069150177 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064097611 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064631469 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064712446 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076231753 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06384663 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065028479 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06942945 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061435858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063873038 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067088642 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063967838 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067056905 seconds)
  done (took 2.743543806 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154646405 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069895503 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105620962 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072873319 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067158801 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072825869 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069529901 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069653072 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069599447 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067660016 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067716675 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069448457 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067483849 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067487619 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067729103 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067713644 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069626597 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068129056 seconds)
  done (took 2.614751272 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076538777 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066776684 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086366214 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066539479 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065391637 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067938014 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070328721 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074427178 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067589966 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065711354 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073899762 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068234916 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067704527 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065787376 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067728196 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065491393 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067802769 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065487077 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073578119 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070236227 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069862096 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07387481 seconds)
  done (took 2.792192473 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07938806 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067302466 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082508682 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068919583 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061709738 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064115444 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070316486 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065817595 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069382892 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067345272 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065946107 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064275143 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069302048 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065786704 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069006988 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065443076 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067632602 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065669889 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067334349 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061915353 seconds)
  done (took 2.616142536 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086669259 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067628092 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067395908 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075490625 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067057654 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06718819 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074828018 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067002605 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067202864 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089274236 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067069931 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067077194 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074868622 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071981129 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067479155 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075064702 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074569007 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075236527 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06698096 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067237541 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086629759 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066909085 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074548882 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067119525 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06675756 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066764959 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06713599 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071813013 seconds)
  done (took 3.261953635 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06593665 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066042023 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063317672 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063140697 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063522957 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063551822 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063433395 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062968002 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065648853 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063457626 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065474433 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065331962 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065514251 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065635708 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06566172 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066267228 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065391631 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063185787 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063433746 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063420201 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065395176 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065568708 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065395912 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063225584 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063840758 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065121179 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063095736 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063256129 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065253619 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063306469 seconds)
  done (took 3.194828183 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075310925 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072766535 seconds)
  done (took 1.411453707 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063081388 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079727983 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062898566 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069241103 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069905975 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066309424 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073186411 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069807847 seconds)
  done (took 1.810256473 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081173202 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077370754 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067368173 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080888965 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076430653 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082423433 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131716324 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066710922 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072580744 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06438944 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079390805 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065254326 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072193166 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066288516 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071622203 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072415095 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063925907 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071946652 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068214917 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064742669 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067216214 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074767539 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068375897 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061834279 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067999979 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088111983 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076613859 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066164028 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068849333 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073229373 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071417837 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060031948 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06543253 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066075206 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063692412 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074961111 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081106782 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068551938 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074070447 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066755365 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076205922 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061266939 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070335829 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071988364 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075655699 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066102796 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066782292 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061159762 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063571108 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06805521 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061214926 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065965018 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061034178 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074844678 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069447232 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076538824 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064650001 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067693976 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06870047 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069094417 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072790464 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068267006 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068457913 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065858278 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075671104 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070570162 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07460927 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061106635 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059927057 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064008286 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075988482 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088339352 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072231788 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066478665 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066713269 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063805429 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069196305 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066797829 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071359525 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072024639 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065838602 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071363164 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07328802 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066106508 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068024238 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074363885 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06435086 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068580214 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063697032 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082489625 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064665137 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064696323 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06376953 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076757464 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069436124 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066364754 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064004155 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073525035 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060298314 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066752805 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067125157 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066409317 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076304217 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070548323 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071087191 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074369955 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073161959 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065416225 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067817799 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061954754 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066045994 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064287586 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071626817 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059024402 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067624407 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065584911 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065319845 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198135486 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065854346 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067601019 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073977795 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071712106 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065116113 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063655675 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068897091 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066789871 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069577531 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074697147 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065238104 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061697145 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06196555 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06984069 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066286235 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070514777 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071474486 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069723315 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061168666 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064719856 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072744052 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07614694 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066607452 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067723771 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073163459 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067726398 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066249071 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072603961 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068570946 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066227868 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071467907 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067272722 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061908621 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069943423 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068787223 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065455085 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069983872 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069369549 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068509012 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067114971 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064758348 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07423901 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06745902 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066072368 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065959954 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064878577 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076999076 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068269103 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061194327 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063988298 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075560582 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064330335 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065422526 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064807171 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068255281 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067166022 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065215495 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065964953 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067954532 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077202427 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07009216 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067876986 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072211161 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077362484 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065459501 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068217389 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065711322 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067548224 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067354493 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074696931 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07186915 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070908373 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069014711 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063011248 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071518751 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073837991 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065669541 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063990481 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065263172 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070209171 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072025439 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069737859 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066682647 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064177738 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066815123 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069018785 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068413877 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065887858 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064890482 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072246874 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064306669 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073080225 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066916445 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076120212 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069443516 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061027049 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069069681 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064211835 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071855061 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061531173 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064083267 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065519223 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066964441 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064788571 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06864081 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060121567 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072518378 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073238886 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066237311 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065138854 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065763862 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072095213 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066741155 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069026719 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068465893 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070585156 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075136158 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064307216 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068308479 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.202446209 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066781656 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061304216 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071679689 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065157272 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065931775 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065102987 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064192443 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069243951 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07591214 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073405452 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061177536 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069273467 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065293146 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065334054 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06222775 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071460934 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069278462 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067452874 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073968767 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066955026 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067559855 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071774002 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066535609 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068186585 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067743747 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069261657 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067276327 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068469892 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066821061 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069354951 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065952537 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064214136 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068204578 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065978221 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067202009 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072740052 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066267455 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066842304 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068324045 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066884477 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067378277 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06612176 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066334666 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069993777 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067705555 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066601317 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06879125 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061920464 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072997414 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06614477 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073727375 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066997344 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062937675 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073946049 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068810298 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072105882 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066542877 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067403503 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067295208 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066227978 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069414751 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072844173 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064216434 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07725456 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075011458 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066595162 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069051242 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066980298 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068195206 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065566038 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067451019 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067347664 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066076477 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065378795 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070635096 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068571039 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066138849 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067753319 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066594846 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066245474 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067074049 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061043594 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065766057 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065853509 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065918559 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075626045 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067113591 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065912324 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064917575 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067272881 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065774884 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062545034 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074398682 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075142443 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066809096 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072923292 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065186621 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067695404 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07650023 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060320745 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06431496 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063780249 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063890517 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072944078 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067013357 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075170748 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066309858 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065692925 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06275116 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066314711 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064291326 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060587805 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063356303 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069607868 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06474452 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065331659 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065608021 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068018129 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066438307 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074536585 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064313574 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066131439 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065411624 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.192790641 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065984466 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06659841 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06962263 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067723177 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064696397 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063483047 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066422327 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066697927 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067982513 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066461671 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068042833 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076377811 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066473473 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069563868 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070082635 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061095005 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069563164 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066707661 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065670934 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06603085 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070771192 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069633794 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068443322 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075762955 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066012288 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067442805 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066545927 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06526992 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066973946 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067153365 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066340712 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066064294 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068370263 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074930466 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064525341 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069721861 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066585439 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067146439 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072530241 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066980451 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069519211 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073975601 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066350817 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068628273 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074541875 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070823816 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070146342 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06745314 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06813917 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072120007 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06611385 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073564782 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067132691 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067480361 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068457282 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064458411 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066154381 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066115314 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065704858 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072709547 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067378181 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065517059 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065336483 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063963858 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067366576 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070274883 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074313727 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068755895 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069269934 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061851324 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063153013 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067680169 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064847992 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068622747 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069492529 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071894136 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068629178 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067032644 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064926145 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075236363 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07225692 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069994041 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064406561 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069929627 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06715175 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068840004 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067027344 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066820723 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067768879 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070013202 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067818905 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065821598 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073475935 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069852365 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067072897 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067800323 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066982924 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066596242 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061550025 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066594892 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06785669 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071054086 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068506151 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066738118 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076784907 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063676966 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066433337 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069268863 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065189807 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070100438 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061217069 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067094019 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06696072 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066507278 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.0611195 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065232907 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063838095 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068090553 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064253462 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060532516 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074953413 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074269078 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068091691 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064137763 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.193688162 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062624337 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06258914 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065919694 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067358722 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068951733 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076732052 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065866222 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065754932 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061317432 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066886222 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070104934 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069670986 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064721712 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062002939 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06563622 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070199027 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071521587 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065159403 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066833776 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070401964 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068796219 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064899938 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069632905 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063698354 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071199436 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080091679 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067730622 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067568686 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07321199 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074258106 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067653898 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062560016 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067803758 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070141501 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067132591 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067785427 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067931964 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081661455 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069258096 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0671722 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065742225 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069229149 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066108307 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073950583 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067470858 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067133813 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071429073 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068848525 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075740547 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069558319 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073986486 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070312162 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069879381 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065864875 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06698079 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065171814 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065897572 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067777562 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06780745 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07236475 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074333099 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066525292 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076912316 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077215098 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068781415 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063785192 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066222946 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066638981 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062475102 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06740282 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064696739 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064354554 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064264341 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064853516 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067411413 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071531269 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067089362 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066989761 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066217035 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060477331 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068350655 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068873281 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066882298 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062930818 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066087137 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067241111 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069952477 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069534814 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064181884 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067767179 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068045953 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066947027 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061279131 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072615145 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065678018 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06802969 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065699878 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066503941 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067131888 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069831899 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071188291 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067452024 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068316191 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069930528 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068338765 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063444654 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063604144 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071686286 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063849335 seconds)
  done (took 42.501395546 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0998341 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063149617 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062240847 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062274561 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07378345 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062715056 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061633181 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063074073 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062955448 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064974735 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06152656 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061588564 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070602348 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077738512 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073902631 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066920632 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062268768 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062845352 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061954415 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062811477 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070652987 seconds)
  done (took 2.754498811 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074125614 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070274883 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071846403 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076018303 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06720369 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070235191 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072187679 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070437242 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076480218 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066908435 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084032165 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070311887 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067098651 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067291799 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066889367 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070875107 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075901559 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067499657 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070739181 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072434133 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070739644 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072325518 seconds)
  done (took 2.894710748 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067036911 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065843911 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067668317 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061280465 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065738817 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061877243 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069310311 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063628858 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069000682 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064788343 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064812918 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06488936 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067598286 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061079952 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06575744 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063413308 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108563811 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068943729 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065148156 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066728869 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061153173 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06790706 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061623022 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061836398 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064982645 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069067458 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066608303 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064787618 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065636607 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065055695 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065432734 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063844998 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067288688 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066159242 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064895568 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064821511 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065818793 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065915626 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061771741 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063754946 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066012458 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061871343 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065953847 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067568966 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063578045 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063741617 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.0669812 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065746253 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061126381 seconds)
  done (took 4.562116089 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079212464 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108323616 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067683657 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088429242 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080101934 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074584878 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068878641 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088835623 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063420874 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064106 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081139143 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07988963 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065317171 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070125534 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068903926 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065498274 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067364405 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064421711 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06925854 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064812261 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069520515 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072442365 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079944587 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078694628 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06959979 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064610885 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064937067 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069633014 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07804778 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069804457 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070424426 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07071476 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079815579 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070499476 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064782115 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067643078 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081255418 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065514639 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067776729 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063007135 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067267729 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069892089 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071498385 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081253723 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065833518 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070263491 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06501282 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062253243 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07801706 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067561738 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072949924 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079389068 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068993175 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065577801 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069534921 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079925825 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065569729 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063798282 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068404725 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077707208 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063235021 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068864846 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078883564 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.0672268 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072317597 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07944552 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070392517 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069083176 seconds)
  done (took 6.336602928 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075234929 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072462234 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080542623 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079831562 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071679999 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072286558 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072092212 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071995918 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071428897 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076781504 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072005648 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092635148 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067493332 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074589485 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072597149 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07188809 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072474498 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071960143 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071942699 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072139468 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072156789 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080189158 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071992983 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080303795 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097851836 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067566703 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071535038 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071924234 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080202644 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071903758 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079340842 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071849471 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072143993 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079797002 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078790841 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07184574 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064932513 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071458568 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071692764 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071636172 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067428569 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079713597 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071857147 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067378675 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07171804 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071602483 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079505698 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079404158 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074415879 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076692203 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071706957 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080027862 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071566485 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071933564 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079805673 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10444694 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079770847 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079722869 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072228653 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079665987 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079628262 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086399211 seconds)
  done (took 6.025857378 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082990074 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074823693 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076790479 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061322914 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063871859 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069499835 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063820749 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06354908 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074194185 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074624111 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076657743 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069353971 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072522449 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076822786 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069640399 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072360508 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069468688 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069457272 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07407046 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069527455 seconds)
  done (took 2.768837869 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074482125 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082676767 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067019731 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073046066 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068903311 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071723878 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068229486 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068629397 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066698858 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068640197 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075842966 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075742791 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066592006 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071312647 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075484939 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071034116 seconds)
  done (took 2.48155554 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074912886 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072267562 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08018145 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066030994 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063887565 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062316673 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065538382 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06109645 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062200045 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077340649 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065461631 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067832975 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065345513 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06424068 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062555006 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068390781 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062375753 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063292718 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065471583 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077786479 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076485996 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064275234 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066145922 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065904798 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065798667 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070892634 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065144581 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063239246 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062988982 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065901888 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065957718 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.0691634 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062836854 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063656397 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064215364 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063564305 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065252765 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066080638 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068464895 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06538255 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06346639 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065197171 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065562622 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066349352 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061980207 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065894543 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062074845 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067605017 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063400654 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06567085 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06529332 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067942081 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066244587 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072590677 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068691552 seconds)
  done (took 4.994666311 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079199055 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069316194 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061118491 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063925686 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068588808 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067453993 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069567836 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067466226 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067749667 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063973254 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067774064 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068216674 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067727844 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069341153 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067603405 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069462582 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061458646 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067221107 seconds)
  done (took 2.565539057 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0714399 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06614041 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072547889 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067665442 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065505564 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067695717 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061734802 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063985329 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064183622 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065556163 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065822436 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067719706 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063964802 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068296946 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065388945 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06550535 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068081305 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064354519 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06577328 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061829513 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067516183 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064172551 seconds)
  done (took 2.796334723 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09189357 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081199348 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.13819732 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078324393 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083880181 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071291661 seconds)
  done (took 1.887098062 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089667501 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078555026 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066735914 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08729035 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073508024 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067060665 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067116499 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067367298 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075685735 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075810476 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067368602 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07591945 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07582089 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07530001 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073417757 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073340518 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067288532 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067331637 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066157699 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084158576 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067552605 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075851563 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067600259 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06679986 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067503246 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07575157 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07616682 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07613615 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067641195 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075798827 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073226363 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067575682 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076397423 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076483266 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069296337 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076353175 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067693345 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084042529 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072999281 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075128594 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068504943 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073255288 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076105619 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071957989 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075775439 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067335782 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07226965 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067224069 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067242716 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085644784 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0730034 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074913257 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073126213 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075775565 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075801653 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085740331 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075819813 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074984149 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073401566 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077630115 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075386376 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072823164 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074803461 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075851126 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073266951 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075207894 seconds)
  done (took 6.209462574 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081345079 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08630182 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067371509 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076713017 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075335801 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067688458 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067433183 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067428466 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067399795 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067449823 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107923135 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067728385 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075779605 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075702369 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067682557 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06754001 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067551892 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075429634 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06744327 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086339556 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067332722 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075581164 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075574784 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075176766 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076283941 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07309022 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067575815 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067425659 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067414431 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067304824 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07228565 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067972716 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075505152 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06691269 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075642639 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067726953 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067578786 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072516343 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067865868 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07325926 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075351943 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083977752 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067115885 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067332196 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076036402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06711141 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066981395 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066876837 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067192716 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06705387 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075829528 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076050734 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076020118 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075072071 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067394579 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067511273 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067138753 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067055881 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067423804 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07272626 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075126043 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066944721 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085862886 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067395422 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067022616 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075379893 seconds)
  done (took 6.120359398 seconds)
done (took 128.767196987 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18222369 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165610158 seconds)
  done (took 1.688333639 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068672257 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098414942 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076722389 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129036785 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066813863 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099952106 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099353858 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077748249 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066180718 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066384129 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065712595 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068837178 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131330595 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06639559 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066182142 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068415172 seconds)
  done (took 2.668554885 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097461955 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156830057 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09866405 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064650346 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096992989 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073176219 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064460796 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074956795 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070887156 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064953564 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072912075 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070191211 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064782805 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070559598 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071022204 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072428648 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064672951 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072600299 seconds)
  done (took 2.777074978 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101054763 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091223638 seconds)
  done (took 1.550433815 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154425944 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104703151 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149679384 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346626738 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167682827 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229174358 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126463012 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126976418 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118150451 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123457085 seconds)
  done (took 3.001567882 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097846921 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15195587 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256781165 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115257475 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071916729 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094875379 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116381623 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077474271 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080659248 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080374418 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080636313 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077010522 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099003049 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074016472 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07331127 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075929759 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102115284 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072581879 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073934633 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076626453 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099151573 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065740703 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073488852 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07217818 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077427145 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07772289 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06591056 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065725359 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077182661 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074269427 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07683341 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093844256 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077268028 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107596166 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070644896 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10834109 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077288207 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074079722 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074109694 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074025005 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078622107 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080657524 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071999644 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075950858 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065294106 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076484808 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065506932 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065507181 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07819557 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066845148 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078206247 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076931133 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107347462 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066662884 seconds)
  done (took 5.968586608 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101094366 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103662888 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071558286 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111006116 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100256598 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071284462 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101326041 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093422046 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102910538 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069916351 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068552912 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07049849 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082184713 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083369082 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111957521 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104405104 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073885748 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070628679 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103697523 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103147758 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068434327 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095299851 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089725706 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102116416 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06771403 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070664886 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068371307 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070543052 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077058676 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07863452 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070026346 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080745771 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084743472 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079318154 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06795712 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068023162 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068396801 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079396969 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079398611 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078706768 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078076462 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06775685 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067815698 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069349598 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07021065 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06764092 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079610219 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080647167 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079498121 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069517714 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070295195 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068345745 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069675789 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08032916 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077754837 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081266809 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080369678 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068472177 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069166169 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07204048 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081046477 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079381497 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079189211 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069724201 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07961752 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068270507 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080112197 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08400377 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068370668 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06942471 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068588997 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069266352 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069986024 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078343051 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078043901 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069883348 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069645697 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068212339 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079982648 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078567138 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068083197 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077271622 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06706971 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06830725 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069999168 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069722283 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077835708 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079732055 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070291561 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068175982 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069684926 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068751439 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067513195 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077333646 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080301695 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078734405 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07857698 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068863885 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07855597 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.0775856 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069347791 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078073514 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067935546 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196880337 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07102554 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079374104 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078666758 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081215883 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069839135 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069131594 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079850198 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081944287 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069801769 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079582522 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081539281 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079711161 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068631949 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081179345 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069696627 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080327284 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07084324 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08081177 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069576049 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080773872 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069185175 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06840312 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069432602 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.0813793 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069964871 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069332704 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070066209 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070817366 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079575157 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083495108 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071446162 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081718633 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079053587 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070477429 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080225356 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070014829 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07997344 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069823351 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071217516 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067974749 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083079113 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069341829 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069173495 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070595802 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081446363 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068815358 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079958856 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078711112 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068251369 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082437571 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082156178 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078350256 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08011696 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070481924 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068276046 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068825928 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069597187 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078266412 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079675048 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071551377 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069339387 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078074344 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079996258 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067784555 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078561279 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078550905 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078895977 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068853628 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069710554 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081079316 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081149014 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078998541 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079115807 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079065149 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068528358 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078337807 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078473852 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068722176 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08406077 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068944104 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08256122 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079702242 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077029289 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079259417 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080830296 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080351462 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080057931 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082560033 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06794461 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067960501 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079858437 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068124624 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06936266 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078432526 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069645196 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069593991 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082674568 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067893924 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078629474 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066689837 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07775884 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065958516 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068861389 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081299254 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1974064 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070531987 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081198785 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069706599 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078133511 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082105834 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078894315 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068403708 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070300285 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080140364 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079933391 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069156929 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068870924 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071609345 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078699209 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079107267 seconds)
  done (took 18.693290026 seconds)
done (took 37.711406057 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208907755 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152520129 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199890857 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118754476 seconds)
  done (took 2.134604185 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121595951 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100656633 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095046019 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065425071 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102218747 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065057929 seconds)
  done (took 1.941500988 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313353535 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212508203 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183362397 seconds)
  done (took 2.096893867 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200027132 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188028592 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.396119457 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25380547 seconds)
  done (took 2.533561525 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144446018 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089354374 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067299054 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082936215 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.142140234 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161442454 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101537716 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126627307 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078350732 seconds)
  done (took 2.434287595 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147906866 seconds)
done (took 12.681120578 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09463912 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.25447288 seconds)
    (3/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.187982056 seconds)
    (4/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.14047405 seconds)
    (5/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069543439 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.108047265 seconds)
    (7/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.181895532 seconds)
    (8/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07958874 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108164438 seconds)
    (10/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.201011806 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.110980374 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103630449 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.210975823 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09001365 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.217465307 seconds)
    (16/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.206719469 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.0818633 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077299513 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.207238182 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075748604 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072207331 seconds)
    (22/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072734952 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.188453245 seconds)
    (24/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074295247 seconds)
    (25/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.087985249 seconds)
    (26/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076362747 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071255036 seconds)
    (28/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192958643 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074384358 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.073338127 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075439156 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066110252 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.196698364 seconds)
    (34/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087098844 seconds)
    (35/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.14343182 seconds)
    (36/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.062458145 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168145316 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05133196 seconds)
    (39/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07546056 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071312154 seconds)
    (41/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078790441 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06654719 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132407077 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089564628 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064815592 seconds)
    (46/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.150739859 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088633834 seconds)
    (48/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.181969532 seconds)
    (49/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.183149998 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.22606799 seconds)
    (51/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.14826624 seconds)
    (52/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073656869 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072401701 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085384001 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.102315445 seconds)
    (56/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097286065 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.148044923 seconds)
    (58/309) benchmarking ("sort", Float64, false)...
    done (took 0.124979818 seconds)
    (59/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107395699 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089983633 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090826464 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067022954 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.195939605 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.183576067 seconds)
    (65/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.159266425 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149810989 seconds)
    (67/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109991596 seconds)
    (68/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072159799 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.173151 seconds)
    (70/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053638825 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108655133 seconds)
    (72/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062424472 seconds)
    (73/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066665874 seconds)
    (74/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051141766 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096531938 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070903405 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094392804 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088442831 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051855493 seconds)
    (80/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.142389236 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089345414 seconds)
    (82/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062726358 seconds)
    (83/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073123134 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065814661 seconds)
    (85/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078826805 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 0.392322256 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050500425 seconds)
    (88/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.111901263 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.064798487 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.13565974 seconds)
    (91/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074470218 seconds)
    (92/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051355312 seconds)
    (93/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050919123 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128932061 seconds)
    (95/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051190406 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07113486 seconds)
    (97/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077044139 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.104932674 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.08897517 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172841785 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065143229 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141778747 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.152862481 seconds)
    (104/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067662658 seconds)
    (105/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06409622 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087687508 seconds)
    (107/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.105157723 seconds)
    (108/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070410787 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.064648964 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.086689386 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087460224 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087315611 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086792117 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.170387581 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051246968 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.070674864 seconds)
    (117/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06743377 seconds)
    (118/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.065941958 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.074032118 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077693485 seconds)
    (121/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087997623 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.132709073 seconds)
    (123/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.111181524 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070394999 seconds)
    (125/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071920496 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.063734563 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.115895221 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064081207 seconds)
    (129/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.147012944 seconds)
    (130/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.069887832 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162104529 seconds)
    (132/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050473354 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.130063972 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071976452 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051690697 seconds)
    (136/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.097798042 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.130173968 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.082489094 seconds)
    (139/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.068594071 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068405111 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.069402112 seconds)
    (142/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.150411729 seconds)
    (143/309) benchmarking ("sort", Float32, false)...
    done (took 0.122779652 seconds)
    (144/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.095457397 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062978975 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.063602477 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069634259 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.073561314 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069080606 seconds)
    (150/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.128780703 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.063259621 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065699576 seconds)
    (153/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065561012 seconds)
    (154/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.052852631 seconds)
    (155/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067357922 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077653151 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06318236 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069831138 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.105188382 seconds)
    (160/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.059462818 seconds)
    (161/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.154834858 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051803322 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.108967223 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.1235922 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071395476 seconds)
    (166/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.15380692 seconds)
    (167/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.093589343 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.049885066 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05103123 seconds)
    (170/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.050801214 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.049821629 seconds)
    (172/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.0700807 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051359685 seconds)
    (174/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053231885 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09011213 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062967053 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062635758 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063341312 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.146465387 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084108079 seconds)
    (181/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.105616243 seconds)
    (182/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.04945 seconds)
    (183/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069227255 seconds)
    (184/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.064927368 seconds)
    (185/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068625516 seconds)
    (186/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.049804349 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.133941833 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07030061 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131635372 seconds)
    (190/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.069505377 seconds)
    (191/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.106799042 seconds)
    (192/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.145958652 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.326865844 seconds)
    (194/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090610368 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065301821 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073177882 seconds)
    (197/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07624191 seconds)
    (198/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.152950141 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17898269 seconds)
    (200/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067391727 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139518625 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075284618 seconds)
    (203/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074717687 seconds)
    (204/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080614231 seconds)
    (205/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077137489 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053097894 seconds)
    (207/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078894476 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110448514 seconds)
    (209/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053133763 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090308183 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065399333 seconds)
    (212/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076111886 seconds)
    (213/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066608285 seconds)
    (214/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074039944 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053512879 seconds)
    (216/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052011695 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051990762 seconds)
    (218/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052694838 seconds)
    (219/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090074877 seconds)
    (220/309) benchmarking ("sort", Int8, false)...
    done (took 0.139112064 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066599722 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074451108 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066207082 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075535307 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073122961 seconds)
    (226/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075213554 seconds)
    (227/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051688572 seconds)
    (228/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080451452 seconds)
    (229/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068022125 seconds)
    (230/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051780828 seconds)
    (231/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066867322 seconds)
    (232/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069691563 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066862969 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070835793 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127758634 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051055176 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.076752472 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064430046 seconds)
    (239/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052590533 seconds)
    (240/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052491542 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051711905 seconds)
    (242/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062152276 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115029668 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051848153 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.178430274 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133238741 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066205794 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068498013 seconds)
    (249/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066485054 seconds)
    (250/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175823889 seconds)
    (251/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082376667 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053394666 seconds)
    (253/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052997649 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052395265 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06830187 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06529371 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066921048 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089878382 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.151941352 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093029223 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139684375 seconds)
    (262/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071916919 seconds)
    (263/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086321735 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051439148 seconds)
    (265/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08793518 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072635062 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.08963048 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074234421 seconds)
    (269/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060758836 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065341801 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052973932 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052351173 seconds)
    (273/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066412968 seconds)
    (274/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147939117 seconds)
    (275/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052271304 seconds)
    (276/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062524269 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052034114 seconds)
    (278/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053054879 seconds)
    (279/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051924024 seconds)
    (280/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073229715 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086638044 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052352056 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073162752 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064308944 seconds)
    (285/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067948975 seconds)
    (286/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07116406 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064626618 seconds)
    (288/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051954966 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095637693 seconds)
    (290/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064767418 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073042624 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16560752 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065831103 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053679297 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051812648 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06579421 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070879598 seconds)
    (298/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051601363 seconds)
    (299/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07245741 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066544935 seconds)
    (301/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071716653 seconds)
    (302/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065072701 seconds)
    (303/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061134809 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070768243 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065378719 seconds)
    (306/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053671904 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072139148 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051756424 seconds)
    (309/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073019277 seconds)
  done (took 30.154120622 seconds)
done (took 31.554646185 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086514106 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094113081 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075987425 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094738021 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082881702 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078997031 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074505229 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080402631 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08229959 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084383565 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080878497 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056799296 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07690365 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076305231 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07630546 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093710685 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079984618 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07442009 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074459634 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066302571 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074370587 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066654262 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068348418 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055487682 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078854225 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072501442 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072996602 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074768298 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066067899 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066117619 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069120638 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074086828 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066207319 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078022322 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072377452 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073884662 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075039093 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076389581 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067906574 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06631731 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074516022 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.0661299 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072777345 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073788863 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072184113 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071621834 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07350922 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078645206 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091856795 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068298166 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074804252 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076790005 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077009964 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073264488 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070123634 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073717612 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071237254 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091737369 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074506929 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068213336 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074373686 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074199824 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071709923 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073126593 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073438298 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075536674 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07552214 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07164965 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075043423 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071479894 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065972557 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07342288 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069336856 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066040633 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076151639 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077662612 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064743473 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071830219 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072693382 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071639376 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065593072 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067924129 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067510027 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071848918 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067588841 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055626764 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069921035 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071575719 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065456239 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073606992 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072318063 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07251478 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067381433 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075824375 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065369707 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070855825 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065764756 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065536016 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067219186 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069272082 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065420872 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067885165 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07427592 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067041886 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071579982 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079026014 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065838387 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071702702 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064820922 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064749287 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07967289 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074465723 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065613374 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068226873 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064952157 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07283287 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064770258 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065411775 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06558939 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065704541 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071337382 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065715383 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06739056 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072332814 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077521777 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065497481 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068675963 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067404127 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065215617 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070685685 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065560577 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.19657478 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068618214 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062207932 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068496823 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066268457 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072702686 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067858292 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073731801 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067622675 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074689997 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070043834 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071494279 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071687439 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065240541 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060208636 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068872672 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067832259 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067909982 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066289801 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.0674621 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067040562 seconds)
done (took 12.602546497 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066626364 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143046341 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099699226 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095412968 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086617421 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066872242 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076808394 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102454674 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06815038 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103188538 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087960361 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085162782 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112907766 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065157294 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066037864 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070278329 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067835918 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081837675 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101646989 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086860947 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116585313 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065756192 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094935927 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090312467 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087524843 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102384243 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067560505 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069949089 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069519608 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091301708 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087339858 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070310631 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067119735 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100430553 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093645645 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083312504 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06749997 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082631492 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066717812 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066028692 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067963872 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098747748 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080553276 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081216551 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07042423 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06919137 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067264108 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08403704 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089426792 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079492942 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086598507 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103745124 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069097026 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066289902 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064611882 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085677552 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065490791 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069087198 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066131959 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06851395 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066120109 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069914313 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081518966 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082214308 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069682797 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080304763 seconds)
  done (took 6.87290341 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084695583 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090092477 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084432275 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.0846754 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065846598 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066568073 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06711475 seconds)
  done (took 2.093558612 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067444397 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088870925 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089195694 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089464728 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08451881 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087911514 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076562922 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066589011 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081208944 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.0681571 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088734518 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102355292 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067493456 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073706781 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091250935 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066752737 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09079272 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067117288 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069972287 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090288384 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068648957 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082444179 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07014623 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067103473 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080979597 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067294158 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113754839 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071161962 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068539024 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069753689 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064811604 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107915599 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080552175 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075841334 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066472025 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080880898 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080838123 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06495568 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082456652 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071797837 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080128044 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066705045 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067095911 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064364528 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070504749 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076485629 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067383576 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066775925 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068949137 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085676569 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067014279 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079542029 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06927639 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068543543 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068017852 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070001892 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075882668 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067229852 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085535121 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068174517 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082889388 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082726297 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080440172 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082929234 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068832745 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080159614 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080505427 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069209031 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068456656 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070492657 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082967856 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064916484 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06795281 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077060829 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068199158 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089553993 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089127044 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067731131 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075439674 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066873486 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06636508 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067161738 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088660175 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068537448 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066465793 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070513485 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069318523 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064640475 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065832374 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06984046 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06457224 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067956485 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069165739 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069440959 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069125405 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083035988 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068873946 seconds)
  done (took 8.824745028 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069426326 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068599019 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069459079 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069073037 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067795794 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068626679 seconds)
  done (took 1.986695257 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093030443 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069729276 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080953336 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072551645 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104476168 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086677371 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08702221 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0789478 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084150551 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078955141 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08711856 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088801476 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093326711 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072895444 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086914896 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072514848 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087521851 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07625776 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078689189 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073498211 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087019407 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073112482 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073222397 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081826769 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07577136 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072490403 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067280343 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078729168 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078301909 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078904863 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072800796 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076368856 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07106182 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079086416 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087000493 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071033201 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071960088 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077407676 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072605858 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075738956 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087901938 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072956119 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075121532 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077643951 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078410931 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071185229 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077731548 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076422838 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086385375 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077228877 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077111669 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071708747 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075300973 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076683071 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070440371 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078518168 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076847578 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086264687 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07234907 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070337909 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.0688543 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075143811 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077821016 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075478394 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078820365 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076577835 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070421082 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072557861 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072805089 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071278581 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077030061 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068911541 seconds)
  done (took 7.151255282 seconds)
done (took 28.464091753 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542055565 seconds)
  done (took 2.082518406 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.602825244 seconds)
  done (took 2.166507259 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.577924219 seconds)
  done (took 8.135979878 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.393136414 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.480267574 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.695267508 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131208913 seconds)
  done (took 3.307565571 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673934189 seconds)
  done (took 2.244428064 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207807439 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196193735 seconds)
  done (took 1.981094383 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37691088 seconds)
  done (took 1.938529349 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.108385763 seconds)
  done (took 2.672469482 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262787052 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163477519 seconds)
  done (took 1.992801655 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459646522 seconds)
  done (took 2.026202526 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.836433124 seconds)
  done (took 6.405560576 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206281885 seconds)
  done (took 1.823502288 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238797064 seconds)
  done (took 1.805697818 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.710561343 seconds)
  done (took 3.278912061 seconds)
done (took 43.431790326 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078944928 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08162492 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08092058 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077575431 seconds)
  done (took 1.87325903 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076091524 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072246002 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075763024 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072498781 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075728684 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071967285 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07360184 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076171469 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07184596 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071949249 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071915838 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072449094 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074335195 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073804478 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07093572 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07411408 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075511181 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07219805 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075237378 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071754116 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070532172 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074243228 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074233421 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071384493 seconds)
  done (took 3.329315825 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077063257 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072659748 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075163177 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07147324 seconds)
  done (took 1.872634142 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077027034 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092098893 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089165086 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077245587 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09143813 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085351946 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068550937 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068541055 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072201386 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076354812 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067594355 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095611309 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087573235 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076009976 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078406554 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065737511 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068039442 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086382688 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076513906 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076904209 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069192402 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076210095 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067392867 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087367387 seconds)
  done (took 3.449801743 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076650421 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10263235 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077734801 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087633173 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089088866 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064868643 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073973595 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088719171 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121825477 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064752632 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069502564 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065231412 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071703297 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064950092 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075749878 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103912476 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107505499 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068251551 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094865722 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064937271 seconds)
  done (took 3.216750712 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072644295 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069108206 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065477737 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069340519 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076510581 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072823643 seconds)
  done (took 2.009698586 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067669503 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068107171 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066450461 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066717336 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07138862 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067198984 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065437218 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066950869 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067044734 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066201407 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066302327 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065617617 seconds)
  done (took 2.385196462 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.170320521 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068217924 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069232502 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065168974 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070701941 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06596125 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079120689 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067525969 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090020168 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065834215 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066392683 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067900741 seconds)
  done (took 2.528084526 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205565283 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076263814 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237514036 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13723956 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111593767 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115374357 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103627595 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113666929 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143291595 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101635903 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167351212 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165394762 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106346935 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137102792 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088809405 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097414526 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155185649 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161721114 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10305164 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165373838 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1448167 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1238955 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146472165 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101099501 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105623313 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12178541 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070551648 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07967485 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170453018 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131640394 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146383055 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110532916 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093096099 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176127328 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169874936 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142721897 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134464903 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083990968 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102528069 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133467481 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199948618 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088421824 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165188947 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2430327 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08097458 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133336553 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119221971 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121348732 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107494378 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089361882 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147854018 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183062575 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13841008 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086396466 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111914749 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114079482 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115579185 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103879504 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182171271 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161324186 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127800169 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071077777 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100253444 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152854651 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132322698 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109044203 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126740054 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092906801 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13325237 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153603154 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117780025 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143290333 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128409777 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087879613 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119038569 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139824641 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127944122 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169663789 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124193784 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072317624 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125131709 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103290542 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081019692 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141106304 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074966304 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174731378 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099181062 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106151017 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112692603 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108219653 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108897415 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161835531 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283062608 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103514991 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065261644 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102733033 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121814027 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148236298 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087232478 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108665279 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116274392 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078017309 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13839184 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074027859 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122838374 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07467217 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124087684 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131450189 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07581439 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122338762 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100619386 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099439371 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134338208 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159834014 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089063627 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082573446 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167022218 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1226701 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103890997 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144937439 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156943759 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099487079 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1028005 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148731641 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180295919 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089372449 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162286068 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106982458 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083119187 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087172838 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123883807 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112576318 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122053187 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081887394 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118799399 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168686945 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074613433 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095565092 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133029306 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078864842 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080493937 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103968442 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100817886 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09532795 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100332256 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103766123 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137819282 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123223523 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242254109 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127276492 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099734493 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170742535 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088498877 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100497807 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103363053 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070052286 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13818073 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157085076 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078720912 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16652297 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124395122 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104684151 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119567271 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082705572 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139139932 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078597656 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070322645 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144956354 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110296405 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110291754 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149778441 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104495996 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126546736 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118940106 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134282688 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133125248 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128149507 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104635614 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087368763 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110970911 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124816499 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072270823 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091318843 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079694228 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103489436 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095035951 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082939846 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142481842 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124661781 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09981618 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111229323 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096248974 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146884813 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076481262 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128811101 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.1195672 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094229078 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152024642 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152297511 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130805498 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10253425 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144956395 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069955066 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073373611 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.229660555 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124218266 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083421551 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083261127 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117410932 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146202856 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130026061 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137540031 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111575012 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121151852 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154340121 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069034274 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114483257 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147149496 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121940778 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102570751 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089308565 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098814047 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141688504 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107566765 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182838598 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113774822 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124927874 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15214651 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099062435 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078747367 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104395954 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135571377 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103670791 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144738673 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099102245 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087457556 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109474244 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07378857 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099348343 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127006744 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119289636 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135047823 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113759503 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132797072 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076505149 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116729986 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120238531 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122648623 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063690306 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120446504 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161316369 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093407895 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11821961 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153035129 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078828101 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123461726 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316692003 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146369243 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084175111 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109955778 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118700361 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128663769 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120548624 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139475729 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108398056 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133854173 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109499358 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084757599 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086836167 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096943569 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104786379 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094498979 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107761607 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113896708 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094393999 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132199329 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103062669 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109501545 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117740101 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095544105 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088983611 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096883669 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1741269 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119182654 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1720641 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099015195 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144590832 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164382675 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074343235 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078565052 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07765966 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139871575 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083387871 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130593351 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097312539 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105087534 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123795637 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142252362 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094873032 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067960297 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108111215 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133668562 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111588383 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09780467 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104476182 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162667964 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09995317 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078826382 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113049893 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104314498 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101744377 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313430199 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061623575 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098166868 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075677182 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080797329 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127095121 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153662687 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080008907 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102065007 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118592346 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110507139 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126826179 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101766152 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09882022 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11375074 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151972172 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129060296 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089308691 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112133646 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129760572 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156669707 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105550413 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094517886 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169893635 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166288988 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159820041 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088269875 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113995701 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113632519 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106869374 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13874393 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082746574 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163971748 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081971471 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136529955 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104271692 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089561379 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129500412 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098580948 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087896691 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147478484 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117387169 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082180436 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077281805 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117983445 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120629304 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106428506 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075730494 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13903136 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072715317 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132236608 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168489506 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080503152 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244900357 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096560085 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079371587 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107701148 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102617979 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088366593 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097554328 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173289417 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08769911 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149892721 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141623588 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11351158 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136535853 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099634956 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636041773 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077381934 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152024118 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11568543 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173015155 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09694349 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117300773 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108566797 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126571225 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144461456 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104794726 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176257519 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131943084 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115647238 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079250197 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101978133 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103094317 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088273804 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104810879 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113544888 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115953975 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093617634 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115808613 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123030473 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081095028 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09478262 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155590562 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116430738 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144073506 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139992365 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084231008 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118208427 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138979648 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079669998 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122051578 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152169952 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106205988 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237003496 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081923451 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102768498 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17002523 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07242128 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163953413 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120503647 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109091867 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113305832 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115081678 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131867364 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107638116 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120425107 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093307817 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110926131 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113184173 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081441488 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076766677 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104810833 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112029931 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097656513 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097752463 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097845358 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151180469 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071006107 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095703055 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103171218 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145266108 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174787309 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088605726 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081794704 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117792321 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112473903 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113128443 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119910984 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079020138 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081592612 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081432256 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076670535 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108694193 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112050474 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103533121 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110871544 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164000671 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082606499 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222493537 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094762259 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104561424 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06963132 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078363893 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095483962 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097422964 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107838305 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100501714 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170573122 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094214374 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.0895891 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09275293 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072572964 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221471227 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127641477 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110855618 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119673537 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096930973 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062445976 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108561099 seconds)
  done (took 58.791158898 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10908329 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081793958 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096725814 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149483984 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12206034 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211634397 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157244458 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198964475 seconds)
  done (took 2.809449193 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068065066 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093771787 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099399529 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082321735 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066173606 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068212288 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223219527 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080065361 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065795719 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088046081 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079319575 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068459435 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.420163416 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065596064 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067887178 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062799025 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066670639 seconds)
  done (took 3.441136638 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363772315 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.604207696 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.37168351 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072669813 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.841192021 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088505425 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.047221665 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.126799308 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073148338 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537661725 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.704513291 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123478827 seconds)
  done (took 18.6395273 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07445652 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069471862 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083259684 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083288014 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071787298 seconds)
  done (took 2.060615692 seconds)
done (took 108.012896025 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078880203 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.390368371 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053615471 seconds)
  done (took 2.151284196 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082138867 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08417974 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083685048 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082356092 seconds)
  done (took 2.018568101 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073374467 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074947357 seconds)
  done (took 1.828642721 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221854507 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.137010337 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086270425 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081283037 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076912664 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078452616 seconds)
  done (took 1.920564648 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.0713012 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074724385 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072087813 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076409002 seconds)
  done (took 1.973933515 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074945714 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05203873 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055149486 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.054973032 seconds)
  done (took 1.917667584 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085148468 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078513186 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078191179 seconds)
  done (took 1.922704488 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.099488569 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084171125 seconds)
  done (took 1.86453081 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080933229 seconds)
  done (took 1.763787421 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09842335 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112341351 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128963059 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108683878 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136211181 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108311993 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085355832 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086216037 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076819386 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086768231 seconds)
  done (took 2.710076667 seconds)
done (took 22.274629935 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07830292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361357854 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359725485 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088850074 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666440421 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355999196 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.966160031 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090969207 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112656801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067174053 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083500814 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647757717 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.957829619 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319128758 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.942866666 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.413330517 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650888338 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06770611 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06731251 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067642062 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.948615231 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067269928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067268889 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067814441 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647970613 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370939623 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067565036 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.412222836 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067463592 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069297362 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355783243 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067991831 seconds)
  done (took 16.244951958 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07049106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116632237 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073167879 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084004229 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070926928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069469085 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070783255 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068723724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118745222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067303856 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083831354 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067346073 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071076437 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068516871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086395061 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067515181 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06800603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068278158 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067627869 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067965414 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085797592 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06754942 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067513995 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067916972 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067362312 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079180585 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067799396 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067620648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067755287 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069799003 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070453401 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068543698 seconds)
  done (took 4.069481538 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113204608 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124516662 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0739272 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101443443 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111587471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069716801 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142114081 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091915051 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126980313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067426213 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083920603 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067689934 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099954991 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06797817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086769501 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068826542 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0688821 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067996111 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068504495 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068055713 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087072466 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067790754 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068304645 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068237752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06795516 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081048344 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068228668 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068758021 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068518123 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070015536 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071380189 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068405807 seconds)
  done (took 4.327417988 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072297323 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074633918 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082391331 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082787777 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069116023 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071519116 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072363899 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068974553 seconds)
  done (took 2.29676228 seconds)
done (took 28.627693908 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077975754 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068236944 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072605198 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080230215 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072994703 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07838337 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066596936 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074163123 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071658267 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072142911 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073921556 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067241715 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070418189 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067005759 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073325905 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067689943 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078489539 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071374312 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078693177 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078696806 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069213522 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072373075 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073841511 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078502568 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079064492 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078638771 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076686562 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072455578 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068541824 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069898971 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076247438 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083272873 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068310922 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078965695 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067174023 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067480866 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071417651 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067803817 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07878671 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076041523 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069382553 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075453114 seconds)
  done (took 4.760167908 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087390596 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089604321 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084197316 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060811429 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066155627 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064355423 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087842672 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059380321 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059409031 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086939891 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055670716 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058963392 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06257924 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054033593 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060529545 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05735815 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061205012 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055547542 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058651172 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059197843 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057452793 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053991413 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059793646 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062298837 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058218863 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061820698 seconds)
  done (took 3.388058587 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073635279 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083556941 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.0877789 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126626541 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103340712 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076612988 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077358526 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09145665 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084641608 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066677994 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.0708113 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092318507 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087310434 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.0734225 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067174559 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083916998 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08102551 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068241083 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073125934 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090079483 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083258641 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082753662 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09193172 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080262706 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066227652 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069103936 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070864566 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080807632 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07186692 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076139344 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071107133 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070257339 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069046256 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077724862 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070678646 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068089601 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089576674 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076115844 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076910147 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067525139 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070242006 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067670814 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089033871 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121293459 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066044167 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073783187 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074837783 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076117613 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066712173 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084955057 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077946496 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067024482 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069813468 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066295951 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06770778 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079380875 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068770608 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069599374 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076167756 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070465262 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084696813 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070928917 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082062279 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06721797 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074572349 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066251869 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067697094 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066321097 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092221282 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068501422 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107605629 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068028965 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067967313 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075849887 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074978174 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072990716 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06744373 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082116917 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076958445 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070519489 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075178744 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070157401 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069916645 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087018059 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069081496 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068389846 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067912823 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073500846 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069570443 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06811703 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079663104 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067190213 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069935921 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083160714 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066672246 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068154608 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072825831 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07153358 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066624232 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077672836 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073588153 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067564569 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075815723 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067365814 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070498241 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077179955 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072889306 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066440731 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071551393 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073160778 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068072372 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068533664 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070189538 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068897355 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075503769 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073888693 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071557811 seconds)
  done (took 10.540043345 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169180459 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152697163 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069889308 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14454479 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076128159 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078768638 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146352096 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094188388 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067567502 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068028552 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068568004 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109158068 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107841972 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11482713 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07813407 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067865341 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082621485 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113319432 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148492769 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142029682 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083352581 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076293629 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069734305 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068655698 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070505323 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078665835 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084662437 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076061136 seconds)
  done (took 4.441971171 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080873924 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.095547129 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073504333 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089302367 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090097424 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067418219 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.0697226 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069149242 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079879732 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078740057 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067101024 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073162242 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074165786 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070708121 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068216136 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074639099 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074541508 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068840239 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070402102 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072210868 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077208682 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080352843 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071143356 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066760946 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073485633 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066814606 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063973835 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084090192 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067484189 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089433705 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06525196 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074176746 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080868047 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06827505 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06704916 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068125904 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067041364 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06676998 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068929962 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066027631 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066054838 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057394776 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066763907 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078837841 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07329251 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056100225 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072137156 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072293505 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072471296 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064900977 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070263521 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070087902 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070925907 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074634932 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072102565 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072219788 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068512651 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065429418 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074777674 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066824031 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064064856 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065567098 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072073992 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065991238 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075119928 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071600071 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065655723 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066952151 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068620433 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073028371 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066875795 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070046718 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064724791 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068993057 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071699123 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06865547 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068186773 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065534995 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066555962 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067010496 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055065177 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067121069 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053318687 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070137131 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065208224 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065466478 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06710305 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071494544 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079630359 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068028981 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072882139 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067591867 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066115118 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070330279 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059839861 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069586306 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081858834 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08212765 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066842795 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064946865 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081270819 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071437407 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065999626 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05614904 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074305215 seconds)
  done (took 9.140337149 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088348945 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06912638 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082464905 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090545498 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085923952 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074180001 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076074048 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068856709 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081491049 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072981802 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075808456 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067466445 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076763326 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076300851 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06998056 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076446825 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072364975 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082085093 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081500572 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067588911 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075422472 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079145372 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088665448 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079490053 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077809204 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079602823 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088838329 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072044679 seconds)
  done (took 3.921237731 seconds)
done (took 37.88543414 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.789283083 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.960511734 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.781458443 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.166480439 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.854135498 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.863408694 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.890524111 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.779993104 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.185793555 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.822086457 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.021245406 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.827628274 seconds)
done (took 65.661198654 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.849185492 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.918572271 seconds)
    (2/2) benchmarking "String"...
    done (took 2.053062864 seconds)
  done (took 5.693198846 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.090545646 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.475604556 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.0233577 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.775772934 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.782889613 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.085349114 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.575255488 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.309560163 seconds)
  done (took 30.748241215 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.910658108 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.001649554 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.469141336 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.505613565 seconds)
  done (took 15.657970643 seconds)
done (took 63.843685601 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.794229593 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.80645856 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.792132488 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.759503692 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.838054242 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.783270345 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.302840332 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.84892169 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.774284398 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.768625393 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.776372385 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.195820999 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.785222029 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.139953696 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.778384339 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.784269657 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.800631682 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.35813069 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.93382281 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.782417956 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.789105413 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.834966412 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.778181027 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.786934465 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.831580963 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.775564514 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.200227539 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.78441226 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.390032883 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.777894076 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.804202498 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.343402229 seconds)
  done (took 204.618190163 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.773900615 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.720327465 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.77374597 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.819180502 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.137856355 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.95513596 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.89686928 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.193297187 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.778576095 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.793253885 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.936111059 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.777406183 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.9663858 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.721754748 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.803739499 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.852584126 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.954238259 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.988513086 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.80866262 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.913145723 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.793191021 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.802088895 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.754998964 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.935506049 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.79607479 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.886490224 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.811434232 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.79336489 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.968512703 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.934430845 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.802533819 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.790615892 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.914221853 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.645197181 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.781016475 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.80339772 seconds)
  done (took 169.497058705 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.940667196 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.777583885 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.774055749 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.777084364 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.783094301 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.777788353 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.896495443 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.89903793 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.229473795 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.299576731 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.778447623 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.826612923 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.599161662 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.777641659 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.845911039 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.79441524 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.781735787 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.796497645 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.803307295 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.779239294 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.779286113 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.907941871 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.792651679 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.93196415 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.785028385 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.781458057 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.783159286 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.14871053 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.781055376 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.78085859 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.785421226 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.025815744 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.780906785 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.781432161 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.683891542 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.271445797 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.050199761 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.78764478 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.791261935 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.782665326 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.013196562 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.785903217 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.786996691 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.788865954 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.059284218 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.785127713 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.911241611 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.78523986 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.293426506 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.785499073 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.78458774 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.523197157 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.473724015 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.783953581 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.788954663 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.787035932 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.78254905 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.784415597 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.790953811 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.506517568 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.862832934 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.78788695 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.790059647 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.795339067 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.787357002 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.908625234 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.785990013 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.285343363 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.843852082 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.01274414 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.905517314 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.787130143 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.851365741 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.88057399 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.784758509 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.784552273 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.785020835 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.78606329 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.865386791 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.786512946 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.029082822 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.803900657 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.793770036 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.844581284 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.791013427 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.863693214 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.788475684 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.686780693 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.793167612 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.793132497 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.102291197 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.854871796 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.791088336 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.794055291 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.788485076 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.793933505 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.957136617 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.909546911 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.572407859 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.7879696 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.623091835 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.791567411 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.960854472 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.787962737 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.97268672 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.786906007 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.868881436 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.790336928 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.788058272 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.786263037 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.818894412 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.787071048 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.845548927 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.78517583 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.157838279 seconds)
  done (took 405.111429424 seconds)
done (took 782.946164122 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.452768359 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.42021415 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.534048735 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.438199514 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.42344258 seconds)
  done (took 13.994436336 seconds)
done (took 15.719850124 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.876806574 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.881220566 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.811785469 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.877306774 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.808851016 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.879885977 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.85529849 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.811471511 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.843808195 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.81367365 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.84498171 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.813374691 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.798699373 seconds)
  done (took 25.644835776 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.023700383 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.035510977 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.858937886 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.031692798 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.836904263 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.020357685 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.961053111 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.942888726 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.943099235 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.807283506 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.802098863 seconds)
  done (took 22.992745474 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.031598018 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.03440477 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.866112698 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.029501469 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.83844909 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.029926327 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.958400326 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.944568383 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.949983629 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.808054585 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.8003307 seconds)
  done (took 23.02286431 seconds)
done (took 73.390138955 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.79766116 seconds)
  done (took 3.527275756 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.82317493 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.957626479 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.804572551 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.803735624 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.798435889 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.797489174 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.805377853 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.799088746 seconds)
  done (took 16.322433174 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.800318433 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.800953542 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.796909061 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.795495575 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.80016821 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.798747252 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.799170757 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.799047976 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.796064275 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.795398233 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.798468235 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.797166321 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.797141517 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.799026976 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.793302486 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.800660696 seconds)
  done (took 30.501770454 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.798100697 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.797650444 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.794806076 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.798395853 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.798665348 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.796594236 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.798961461 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.797835193 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.797116272 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.797069047 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.796179507 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.799261776 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.796139694 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.796553143 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.79943075 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.801451735 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.798203507 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.798898238 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.802267887 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.79672865 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.797936174 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.798777882 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.797904849 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.798060336 seconds)
  done (took 44.889930442 seconds)
done (took 96.968815229 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.689367484 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.190861327 seconds)
  done (took 8.615956269 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.80245202 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.800889106 seconds)
  done (took 5.377345643 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.802862908 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.801003285 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.799667135 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.801767398 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.7994034 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.799697503 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.803830847 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.801529411 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.801187045 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.802896949 seconds)
  done (took 19.750083554 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.801783498 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.801177235 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.803793142 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.79987198 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.80445171 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.798538253 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.800216194 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.804642481 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.801762817 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.797416661 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.799852426 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.800144076 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.802921771 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.802801675 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.803948771 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.798038144 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.802909196 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.79728248 seconds)
  done (took 34.161033751 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.801414984 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.801285786 seconds)
  done (took 5.341525501 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.798368482 seconds)
    (2/7) benchmarking "second"...
    done (took 1.797442769 seconds)
    (3/7) benchmarking "month"...
    done (took 1.801883482 seconds)
    (4/7) benchmarking "year"...
    done (took 1.800053594 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.798854102 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.796008858 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.800326539 seconds)
  done (took 14.331243353 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.801847989 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.961392539 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.035349463 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.458760459 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.801852346 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.802343265 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.754216566 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.805067976 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.805910586 seconds)
  done (took 19.961647892 seconds)
done (took 109.270892062 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.616848264 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.800616278 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.113974748 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.85656218 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.859373099 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.142029343 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.821040868 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.023534628 seconds)
done (took 42.968159733 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.875638397 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.386945001 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.418426039 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.817459479 seconds)
  done (took 13.358499246 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.783750176 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.321717272 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.833238104 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.384803846 seconds)
  done (took 20.106601164 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.163748484 seconds)
    (2/2) benchmarking "read"...
    done (took 2.156165038 seconds)
  done (took 6.056972357 seconds)
done (took 48.13186764 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797896977 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.795338029 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.796692744 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.796922438 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.800795018 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.794265626 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.797127731 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.796397145 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.795996199 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.799122244 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.798986889 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.796949491 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.797294987 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.797277811 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797105003 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797602245 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795111485 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798227949 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.796376785 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79613374 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797586634 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79888311 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.795191616 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.794838542 seconds)
  done (took 44.862092294 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.799602345 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.799692507 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.801213406 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.800536273 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.796312993 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.799203839 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.80083538 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.795529144 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.798617569 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.798975584 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798268925 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.797937817 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.799364394 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.797456411 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799515501 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.798199281 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.799443171 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796855335 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799411027 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.797670922 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.800272345 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797764412 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.797967826 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800927961 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.796688598 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.797471477 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.800761784 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.796961769 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799808574 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.798486483 seconds)
  done (took 55.695954652 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.803059697 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.808735432 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.799263692 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.799438074 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.799488757 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.801628021 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.799084665 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.800441226 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.800704551 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.801029774 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.801008244 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.800696947 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.800304404 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.799881845 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.800576319 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.800862198 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.800160893 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.80271342 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.801860825 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.801187477 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.799263329 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.799545486 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.802156513 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.801198844 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.8008665 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.800283771 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.801682115 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.799551132 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.800740491 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.802045149 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.801070578 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.802084027 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.801550272 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.802871966 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.800797563 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.800650786 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.805102652 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.808569928 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.801623133 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.801827038 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.80115516 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.801736812 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.80148256 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.802426605 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.801929412 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.800977009 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.802669455 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.803725768 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.802503126 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.801611641 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.801434478 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.801717606 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.80253249 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.801713346 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.802292744 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.801250713 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.804953097 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.803115336 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.8025504 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.80219563 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.80373917 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.803273874 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.80364112 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.801886379 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.80346637 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.803225962 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.80432516 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.801732124 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.80460132 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.802802673 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.803288315 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.80499158 seconds)
  done (took 131.478262935 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.803847782 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.801370206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.803038014 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.801202196 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801342247 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.802951958 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.801408047 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80446673 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80262032 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.803629605 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804960718 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.801832623 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801849697 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805792309 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805774397 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.803356637 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.80613754 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803088654 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.805491899 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806480789 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805056265 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.80239176 seconds)
  done (took 41.417098961 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803761798 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.804670319 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.802135823 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.805678298 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.801706608 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.803280662 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.804307404 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.804458078 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805333577 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801412917 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802546929 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8053449 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.802656959 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80168626 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802868286 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.802889777 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806474825 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.803285685 seconds)
  done (took 34.204147382 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.803556334 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.803322655 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.80536508 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.803311506 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.8043073 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.805183038 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802167358 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.806257698 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.806378522 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.804055469 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.805761613 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806118692 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.807509865 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803688206 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806440898 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.803050831 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.806239807 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803596671 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806090085 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804134858 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.804697521 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806731643 seconds)
  done (took 41.448299568 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806034078 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.806968634 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.804448717 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.803834461 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.803828604 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.806275817 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.807635806 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.804898174 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.806999327 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.807555495 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.805540585 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.806921748 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.804609483 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.80553544 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.804535163 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.804396351 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.808524155 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.80657075 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80824595 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.805603063 seconds)
  done (took 37.861713924 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.808914355 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808693414 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.80707196 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80793625 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808743896 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.809129817 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807662016 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.808513092 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.808353309 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.80975389 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.80802297 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81072006 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.810427512 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.807846188 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.809457748 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80871103 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808416514 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.809795685 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.808928921 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808341368 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.809147125 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.809252503 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809809789 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.808801227 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.808528387 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.810034625 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.80904532 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.809257935 seconds)
  done (took 52.392598436 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808854579 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.808124936 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.80629307 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.806826951 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.806522478 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.80634166 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.807419495 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.807336302 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.811169183 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.808051946 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.809788448 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.810703375 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810227955 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.810531175 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.810660124 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.809839136 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810049058 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.807111709 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808530159 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808926833 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.810432526 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811314482 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.811588132 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.80716421 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807900512 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.80999043 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.807817753 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.808496935 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810621141 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.807387529 seconds)
  done (took 56.009972621 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.829550854 seconds)
    (2/2) benchmarking "in"...
    done (took 1.828956322 seconds)
  done (took 5.404076467 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.807564408 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.81126452 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.811802913 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.807715386 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.808072534 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.810301291 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.812288911 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807651856 seconds)
  done (took 16.222331306 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.810490255 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.811407649 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.811859924 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.809821318 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.811229053 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.812687048 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816241395 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.811080043 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.81344269 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.812778654 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.817918127 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.818611699 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.813911306 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.812277288 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.811506751 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.812101445 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.811393285 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.811422424 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.811898136 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.812388762 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812116634 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.813581597 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814508893 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.808978394 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.813887864 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.821239956 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.814843057 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.811690241 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.812162374 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.814763405 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.811336512 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.810146713 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.813183534 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.812391693 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.812165883 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.813164966 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.818885105 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812715467 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.817554929 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.813520066 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.811728814 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.809153327 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.813106031 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.814813577 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814281242 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.813090185 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.812484671 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.809997574 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.812975594 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.81595473 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.818417382 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.812789477 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.811139267 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.816802486 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.814966743 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.819355343 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.814902048 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.816063921 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.822767408 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.824005087 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.827057696 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.821074841 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814934969 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.813091063 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8235933 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.837560493 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.81995258 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.811356266 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.812331246 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.814455498 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.820317532 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.826278662 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.821819838 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.81441915 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814902368 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.814556983 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81503359 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.81367133 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.821361746 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.81695787 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.816827957 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814938897 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823899113 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.835895046 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.815418062 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.814292159 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.815904838 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.815452154 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.81628396 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.825875918 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.816400933 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.816092238 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.814917113 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.817545842 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.816869028 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.814649362 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.814478979 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.816158676 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.812583433 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.815885564 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.81462911 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.818715892 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.822974494 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.815759574 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.816639862 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.820663445 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.815512601 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.814955446 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.824022515 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.816863852 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.816861403 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.816381176 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.823374917 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.813973069 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.819466369 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.824883211 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.815726717 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.817765182 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.816981072 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.81840651 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825356585 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.84097957 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.817094127 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.817041482 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.821453438 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.828608883 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.818079221 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.819881692 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.817333608 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.814863566 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.814788954 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.819608598 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.818932757 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.818405551 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.818271668 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.819205894 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.815691928 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.818288814 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.817227054 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.819069019 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.820114459 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.817926687 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.81941802 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.820172481 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.817883312 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.819914206 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.824270397 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.817904629 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.819397934 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.818770885 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.81594095 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.818556371 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.820276882 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.818914385 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.818605904 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.818382289 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.818115965 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.819348367 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.818893136 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.818435338 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.818855757 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.819275926 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.822297499 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.821159668 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.821843614 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.818870725 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.81676421 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.81931113 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.820587931 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.819784724 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.820056442 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.819547991 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.822052331 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.827180942 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.820878391 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.819458479 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.822288535 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.819810445 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819611069 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.821734612 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.824452318 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.826972527 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.821601158 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.826682192 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.819837477 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.820430102 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.821020619 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.819814559 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.820405026 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.820068489 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.823692214 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.829231047 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.832841233 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.829150897 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.821283169 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.825093192 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.822309204 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.825776861 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.823693752 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.821052753 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.820913466 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.821545918 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.820251199 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.822064788 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.823009287 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.821177984 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.820133427 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.820509786 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.821656092 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.821306947 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.821919467 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.821164622 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.822164737 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.817873085 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.821460562 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.821448763 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.819835012 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.818659063 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.821009304 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.823318794 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.822340853 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.821936513 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.827885136 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.81873113 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.823862285 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.822848255 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.822931036 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.820966575 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.822109496 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.823988902 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.822200871 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.828797152 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.82317652 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.82308661 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.829650842 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.821626083 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.821885654 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.824571777 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.822675444 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.821066098 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.825285077 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.830005166 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.823020597 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.823914928 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.823768825 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.822593471 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.82449541 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.829247525 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.822006324 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.823682055 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.824591063 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.825032506 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.821646077 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.824627098 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.825119886 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.824112316 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.826416627 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.823322497 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.824304264 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.824083234 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.825115185 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.823538408 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.824383695 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.827497904 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.831559466 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.82851614 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.824561054 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.826363086 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.824378378 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.828238964 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.825179319 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.824680008 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.825739547 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.836776622 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.832579463 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.830548363 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.827040887 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.823961693 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.830900115 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.825908681 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.831649848 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.825946812 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825078527 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.824942949 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.824305661 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.822646023 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.825766953 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.825146234 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.826880192 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.827502248 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.828591688 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.826135591 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.825938258 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.82658877 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.826428485 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.825297272 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.82698245 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.827043693 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.828313296 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.82736252 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.826153224 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.82568485 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.831102532 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.826231867 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.826817976 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.825150787 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.825502324 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.825790428 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.827618529 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.826009015 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.827706449 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.835011334 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.830265375 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.835952396 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.828023322 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.836202082 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.827701175 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.829603764 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.835801573 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.824572209 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.825532958 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.825886962 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.828148245 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.834179221 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.827594983 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.827435922 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.831307869 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.827414011 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.827529425 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.828572153 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.828032221 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.828420296 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.828096276 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.834520952 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.829268451 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.831437217 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.829074344 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.825605504 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.829201732 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.828294785 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.826656214 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.832521457 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.828327427 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.830149497 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.827794538 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.827490535 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.828507218 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.828752784 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.828597625 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.827309422 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.830363124 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.834754294 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.829147516 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832997614 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.828701427 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.837494937 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.830052489 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.836485545 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.829661334 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.829602719 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.830572197 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.829745446 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.830773092 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.829902441 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.830416623 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.829567262 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.830686712 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.834119905 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.830139305 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.831458484 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.829722706 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.830672215 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.829115639 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.838998699 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.852494466 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.832898537 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.835310734 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.827377026 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.831067987 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.834887963 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.829901061 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.829077799 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.832001974 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.839849202 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.837029198 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.830635796 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.829876705 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.831203121 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.830925006 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.831038002 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.830762801 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.831067549 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.831035747 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.830583259 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.831147402 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.835125362 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.832099318 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.832399719 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.831214598 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.831294026 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.840585735 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.831379249 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.832664152 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832320291 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.831917204 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.830697697 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.831441891 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.833340081 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.832104599 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.831555421 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.833169276 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.839376973 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.838311418 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.835524247 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.831823206 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.832751505 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.832058551 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.833728853 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.833761844 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.834055636 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833393783 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.833820431 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.833172322 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.832630147 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.831643106 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.83233045 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.833361462 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.832818518 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.834896457 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.838295673 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.832623863 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.830399504 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.833552809 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.832541471 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.831879269 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.832073209 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.840421129 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.836707416 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.842437321 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.843455577 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.83780614 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.835966322 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.83776662 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.841106216 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.833236778 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.83526928 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.833104596 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.834673408 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.834080596 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.836867765 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.834273478 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.841104093 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.833849174 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.833942489 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.841716271 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.835734758 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.835062728 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.83555314 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.837643547 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.834844856 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.832025775 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.834974991 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.833783717 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.840811116 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.835061442 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.834724017 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.836313394 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.833365315 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.836579008 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.83925771 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.83655763 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.836571205 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.832490797 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.835704387 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.836001795 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.83573968 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.832787403 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.833910144 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.834828579 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.840147533 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.841933115 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.833073245 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.836634719 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.83551863 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.835846039 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.837188026 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.835758668 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.833885501 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.833852495 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.83674948 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.835238572 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.836389369 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.839724108 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.835625142 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.836158675 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.836936075 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836790617 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.839430205 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.845384099 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.844048885 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.834516588 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.836029587 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.83684627 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.839262324 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.836990516 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.837173958 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.836431837 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.838863365 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.836825575 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.837995676 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.836602355 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.839583758 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.850578244 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.837775112 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.838721867 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.838263173 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.841659913 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.836800946 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.835939417 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.837349198 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.839610979 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.840557032 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.845065459 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.838519824 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.844612463 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.837691278 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.840752912 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.841935069 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.841460715 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.845734996 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.842183564 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.83868445 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.838453783 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.842542762 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.853625595 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.839187797 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847424374 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865755453 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.838511553 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.839554704 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.839559434 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.83764803 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.839811411 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.841769271 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.839391349 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.840358774 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.840682488 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.839196764 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.839212805 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.84462501 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.840915033 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.839083144 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.839295651 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.840049231 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.839998326 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.836607952 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.83904309 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.840406017 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.841033357 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.838782992 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.840742403 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.840233234 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.853809344 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.84945072 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.83931511 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.840027964 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.836485545 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.844015511 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.843124938 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.849849425 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.848147142 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.84130584 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.841357056 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.842906462 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.841366492 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.838882363 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.841104212 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.840573926 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.842106312 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.838621384 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.8538239 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.849765544 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.844519318 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.84079788 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.841639255 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.841041972 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.842735647 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.841395087 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.841036967 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.842886054 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.842670031 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.845833328 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.841968126 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.841990248 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.844563747 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.849325635 seconds)
  done (took 1091.185076904 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.839372258 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838558158 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839295058 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.839121315 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839916132 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839621654 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839146329 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.839493426 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.838682269 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.839033304 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.840307589 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839847153 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.839190986 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.840956048 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840134514 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.840086138 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840151879 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.839960755 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.840878281 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841098553 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.840602741 seconds)
  done (took 40.411579631 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.842817554 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.839715337 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.840399117 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.843742615 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.840537912 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.844444819 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.840836751 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844129798 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.843273558 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841840818 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.842884946 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844054399 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.840702221 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.841954159 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840542495 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84302779 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.843952437 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.841393844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.843047854 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.842372827 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.843450913 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.842008825 seconds)
  done (took 42.308365699 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.844390434 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.843983813 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.842279593 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.840567162 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.845426592 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.841606485 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.845843674 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.844435936 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.845315147 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.844038641 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.844008277 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.844628742 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.851202644 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.8490253 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.846308127 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.845009387 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.988817036 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.844119645 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.845605455 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.844776898 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.842550455 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.84858982 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.842043822 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.843102468 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.843923992 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.843628762 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.844435464 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.845828146 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.8459335 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.846253437 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.848626362 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.844978278 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.844454878 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.84596519 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.844986455 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.846729711 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.849988784 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.846384715 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.843233739 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.846396231 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.855828503 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.867346414 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.846702143 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.850094261 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.846384464 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.845829447 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.849915018 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.853296848 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.843286991 seconds)
  done (took 92.388453402 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.846659077 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.846271659 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.84592507 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.847438001 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.846445545 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.846145396 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.847796477 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.847558807 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.844922909 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.844520212 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.846484262 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.844428316 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.845036952 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.84899627 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.847966773 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.844356693 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.84492541 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.84495181 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.846564227 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.846407599 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.844466588 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.84791957 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.848224878 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.846723539 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.84778055 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.845644227 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.844601715 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.846926369 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.847361924 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.845155741 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.849245212 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.848075054 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.849328675 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.844992634 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.847145223 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.84965819 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.848862534 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.845569344 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.849422548 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.846669032 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.848850448 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.849719891 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.849857712 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.850166344 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.847118859 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.846763512 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.848294481 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.846352905 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.849025415 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.850841325 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.848702627 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.847085711 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.849897932 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.847818297 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.85004706 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.851369907 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.849171698 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.847153849 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.85023649 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.848071912 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.848484078 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.852102808 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.848754423 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.851422295 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.850783355 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.847837807 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.849087661 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.850379493 seconds)
  done (took 127.425539646 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.851847096 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.852048494 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.850393639 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.851962005 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.851950855 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.852814638 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.852123554 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.85279461 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.852623238 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.851878624 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.852741467 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.850917371 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.851958349 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.851679474 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.850040415 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.851270789 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.85176159 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852716364 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.852173492 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852725349 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.851779016 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.852571385 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.851178043 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.85326698 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.853244248 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.852525148 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.852580153 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.851908338 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.85277504 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.851479193 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.853131353 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.852765329 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.852722186 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.852511625 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.853215852 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.851875495 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.853125644 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.853035863 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.85343831 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.853704131 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.85262526 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.854099391 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.853719772 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.852799512 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852270011 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.853380517 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.854646642 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.854841784 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.853044355 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.852261724 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.853560625 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.853050426 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.853972603 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.854502388 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.852861104 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.853720341 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.852821815 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.853594859 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.8535576 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.854041175 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853390055 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.852544168 seconds)
  done (took 116.654296655 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.853974443 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.853312372 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.851220656 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.851623691 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.854232699 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.852544165 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.853676738 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.853886333 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.854948233 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.854931627 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85590995 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.850989191 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851956268 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854411217 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.854275544 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852083659 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.851681532 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.851889503 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.854097245 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.85145558 seconds)
  done (took 38.850529952 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.853146455 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.855615822 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.852769263 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.852688662 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.856388769 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.85182337 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.855147339 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.854550702 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852659674 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854990715 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.85515267 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.854918006 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853097704 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.852624187 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.855068065 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.852733659 seconds)
  done (took 31.452935013 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.853424491 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.855911555 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.855609483 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.85537411 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.854235957 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.853581841 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.855062064 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.852271135 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.854146411 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.856586858 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.856533266 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.856805827 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.856373514 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.855801988 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.854428266 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.856119011 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.855163461 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.854397366 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.855899602 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.858920479 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.854078056 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.854977247 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.858153912 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.857190386 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.855077333 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.855120602 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.85592052 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.855667367 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.855652374 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.857341536 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.85664447 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.855712598 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.854799537 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.854944681 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.858069306 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.855351108 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.858035096 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.857912321 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.857935128 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.859000785 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.858098008 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.855441455 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.857936197 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.858708274 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.855695771 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.858633378 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.85600526 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.856258543 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.855515383 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.855801294 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.858017338 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.858467854 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.859354301 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.859229068 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.858339854 seconds)
  done (took 103.887562172 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.858408074 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.857957527 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.856229148 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.859887944 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.859649202 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.8563735 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.860130429 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.857623454 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.858002709 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.859247553 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.858867989 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.859970987 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.856333626 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.862769164 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.858238863 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.859606431 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.857949827 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.859669494 seconds)
  done (took 35.251083286 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.860344914 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.859005698 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.859486457 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.856877974 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.858139715 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.861486031 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.857794044 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.861043709 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859275118 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.859173899 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.858224698 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.859412221 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860717103 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.861047358 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.86043867 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85839161 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.861799104 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.862351139 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.857947212 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.859211603 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.862197877 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.861554031 seconds)
  done (took 42.71082859 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.861237128 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.861396675 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.876395904 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.880786248 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.881972433 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.892231728 seconds)
  done (took 13.047959242 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860052495 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862454864 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.86083861 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862328611 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861344507 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86031493 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859956487 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860003768 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862139824 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860841042 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859496841 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863080182 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862298042 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86004583 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862634531 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862989067 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860329345 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861229198 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862492531 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862620244 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861418311 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862684 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860328523 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859547965 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862647076 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860941099 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864050716 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860937382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861478019 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864146888 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864071482 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860112203 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863789636 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861640094 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864774157 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864741647 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861334172 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864848403 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865071819 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860679429 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.864932577 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865025824 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865788264 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863043305 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864651784 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861935301 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862000066 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861113708 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861457278 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864866397 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864593494 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860677629 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865897287 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863875254 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864712125 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863546565 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864850188 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864046663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865056463 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862959283 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863026761 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865407686 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86198144 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863388715 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864992425 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864055447 seconds)
  done (took 124.732830804 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862387603 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.863146089 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861586729 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864188806 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863481627 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862758253 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862767693 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864010099 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86328335 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862416024 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866719221 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862586138 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863568278 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864247238 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863845457 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86338493 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86350596 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864609948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86447368 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866791227 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862228758 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864176512 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86359842 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863737726 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864972432 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866116079 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865498058 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864512717 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864741616 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864307328 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865880066 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865067057 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865011859 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.865146286 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8649808 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864983953 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865774532 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865218939 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86435017 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867045379 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865937222 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868275496 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865040132 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866857872 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865691871 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866058561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866179939 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86415241 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865148852 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867477565 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86598487 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866906758 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866480307 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865713417 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866204065 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865322962 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867195834 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865749807 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866337096 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868035594 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867008256 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866073486 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868591839 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867211727 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865941586 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866274253 seconds)
  done (took 124.899196444 seconds)
done (took 2543.937743774 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.871564586 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.93205152 seconds)
  done (took 15.60403936 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.030566509 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.981161319 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.872636025 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.901046273 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.870713985 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.897469489 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.885202249 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.87283105 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.874546926 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.87222227 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.874137431 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.058415871 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.869462961 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.8729831 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.871849127 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.969014959 seconds)
  done (took 52.399170871 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.874320507 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.877084775 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.889293474 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.877364104 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.877674543 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.887031484 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.90638932 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.878941364 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.909151619 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.886847397 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.944912927 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.885336586 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.876196416 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.926494217 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.888285186 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.88885754 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.963271219 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.951364628 seconds)
  done (took 35.995645178 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.952629618 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.880210175 seconds)
  done (took 10.646152609 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.876471587 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.88253765 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.875864537 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.878567638 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.892131686 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.889294331 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.899190623 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.899803376 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.90456749 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.887091925 seconds)
  done (took 70.716794334 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.882730137 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.877376534 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.880141025 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.877467665 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.867537035 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.877181177 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.875370918 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.871683274 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.558378963 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.912713533 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.885323788 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.885003143 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.878074407 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.880641923 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.875612288 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.901839713 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.005040246 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.875235019 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.876700093 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.882739597 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.879553522 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.939715579 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.895088618 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.877582547 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.909290008 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.563414954 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.887409345 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.883654699 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.000490896 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.875906305 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.878977037 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.880207076 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.882572888 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.268555125 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.176550889 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.878323388 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.884907827 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.88709339 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.877118788 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.006635461 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.881242714 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.884969372 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.861911374 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.171004123 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.973783647 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.921199501 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.237972307 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.882585942 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.882244464 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.910512112 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.883056784 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.882637211 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.89311552 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.395718124 seconds)
  done (took 133.233961568 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.875411446 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.164607241 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.027617017 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.876610525 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.146849908 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.080729654 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.8199645 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926390467 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.876158117 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.079230659 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.037947014 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.985269352 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.875704629 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.875107415 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.874700104 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.876415816 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.039497357 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.944246266 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.876006634 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.875218996 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906514834 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085825697 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.00450149 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.876274171 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.898893106 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.084697471 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.998015777 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.983337461 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.160430667 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.876499689 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.943190879 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.877672574 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.876184303 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.876761799 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.033346248 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.973060722 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.968912447 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.879203101 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874041237 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.876029905 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.543301102 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072566232 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.97440654 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.019703004 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.072516183 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079313186 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.524434405 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.877584127 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.514845766 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.042022769 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.090076848 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.085488935 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.999640125 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.877401911 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.10912095 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.87776823 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.874979971 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.112397115 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019734845 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.98326639 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.876636067 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.875394136 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.878031126 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.120439956 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.876029446 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.975603644 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.878679495 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.879170653 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.978907792 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.985760805 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.020348069 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089584334 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.912491992 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.777895485 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.385594345 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.091585262 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.947428066 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.11497193 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.878053305 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.877513539 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963165088 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.633449363 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.040510688 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.130059447 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.098566965 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914503621 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.475158543 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.87747496 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.072575431 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.064210647 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.074239477 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.083851482 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.028704344 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.066244578 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.87739712 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.877761973 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.122813756 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.014911501 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.878701405 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.234384587 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111988637 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.463792607 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.89889824 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.173580898 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012112995 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.258188519 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.506189212 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.878550736 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.046945441 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.919141554 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.880260735 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87852082 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.071810172 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.683680565 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.880503451 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.400300812 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.942628455 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.881015739 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081990444 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.883803046 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087193176 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.883882276 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.113632004 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.366651519 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.914947269 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.052015112 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.086853441 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.671567038 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.127168875 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.126762988 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.999427575 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.103794979 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.469547901 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.880180952 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.155988743 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.883708974 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.878966292 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.047702558 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.882178673 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.02928401 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.885620072 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.109369039 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.907812144 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.036065607 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.885897795 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.113211981 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.919604305 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.934263031 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.882950697 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.012964615 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.881405317 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.777160521 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.036290059 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.885462414 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.883006676 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.308281573 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.881749381 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.030184668 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.110758365 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908403037 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.954237849 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.407456082 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.88526849 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.970453131 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.910718965 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.321943529 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.881477107 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.037323405 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.853340281 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.318503421 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.882356636 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.123386464 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.06633467 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.883737615 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.884265165 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.623959567 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.588036327 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.881713654 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.039158385 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.42713506 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.540080936 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086683443 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.888116977 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01283529 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.886139127 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.962552175 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.230023586 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.883242729 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.882561025 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.885497954 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.882087575 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.883513948 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.089735176 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.918493719 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.392246479 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.021680109 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098681958 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.196840411 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.104974664 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.930053609 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.884763434 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.148066266 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.887962347 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.952672346 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.886851028 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.909718805 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117703846 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.889936301 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.099801763 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.136264792 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.789065836 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.938305407 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.887983288 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.887845535 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.884577782 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.035350325 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980986244 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.889053733 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.888507541 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.997434915 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.01543825 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.079646851 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.475133578 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.063285735 seconds)
  done (took 901.159162663 seconds)
done (took 1221.555634915 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.886371696 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.883611155 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.873281205 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.884883852 seconds)
  done (took 29.35271865 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.891042112 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.891119102 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.889724173 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.890156951 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.891846956 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.887807704 seconds)
  done (took 13.162758196 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.913409171 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.880506895 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.882159858 seconds)
  done (took 21.498133626 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.956371772 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.297019201 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.994771034 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.334419586 seconds)
  done (took 10.404758254 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.89017112 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.889387647 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.893221262 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.891084266 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.895800815 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.892334267 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.891067089 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.891165542 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.891491765 seconds)
  done (took 18.849342184 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.27929951 seconds)
done (took 99.368851397 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.587959085 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.970569975 seconds)
    (3/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.082675083 seconds)
    (4/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.887928194 seconds)
    (5/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.947890234 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.867769449 seconds)
    (7/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.184703299 seconds)
    (8/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.891211759 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.751542676 seconds)
    (10/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.116453835 seconds)
    (11/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.421245208 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.893153301 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.200215519 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.902816712 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.469487458 seconds)
    (16/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.229275399 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.023662471 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.928414119 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.241481278 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.00739921 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.908960701 seconds)
    (22/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.791135976 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.333848896 seconds)
    (24/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.468779615 seconds)
    (25/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.018633155 seconds)
    (26/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.971724478 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.030830718 seconds)
    (28/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.891483929 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.019347517 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.412278464 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.88347854 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.045531645 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.869383787 seconds)
    (34/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.945995401 seconds)
    (35/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.868393118 seconds)
    (36/309) benchmarking ("map", abs, Int8, false)...
    done (took 3.778118894 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.886121515 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.183797353 seconds)
    (39/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.999756166 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.01379723 seconds)
    (41/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.037622256 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.882478561 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 3.432250545 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.255285164 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.207532084 seconds)
    (46/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.029647286 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.14708366 seconds)
    (48/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.872841582 seconds)
    (49/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 4.121263617 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.170970083 seconds)
    (51/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.077471683 seconds)
    (52/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.977731039 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.992748889 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.148110087 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.530497154 seconds)
    (56/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.022961839 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.301951752 seconds)
    (58/309) benchmarking ("sort", Float64, false)...
    done (took 5.695584634 seconds)
    (59/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.816431704 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.534415741 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.686428234 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.95154725 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.873908396 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 8.125057695 seconds)
    (65/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.661301519 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.272449215 seconds)
    (67/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.08995853 seconds)
    (68/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.91896956 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.781889859 seconds)
    (70/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.871050876 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.506438499 seconds)
    (72/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.064628624 seconds)
    (73/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.04368125 seconds)
    (74/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.963706999 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.93805181 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.104608308 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.942218236 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.789918398 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.239646423 seconds)
    (80/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.02089648 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.151226211 seconds)
    (82/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.29612768 seconds)
    (83/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.972866723 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.889511595 seconds)
    (85/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.484007011 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 6.895625819 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.343590067 seconds)
    (88/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.971017721 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.614335957 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.890614647 seconds)
    (91/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.917206205 seconds)
    (92/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.474955606 seconds)
    (93/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.024950025 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.000290759 seconds)
    (95/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.242921947 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.862713816 seconds)
    (97/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.654606622 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.879172413 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.344161191 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.893160723 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.991313319 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.00483069 seconds)
    (103/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.994353757 seconds)
    (104/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.01915387 seconds)
    (105/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.418407446 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.150008181 seconds)
    (107/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.393849233 seconds)
    (108/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.297864421 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.864672289 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.020504264 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.226190282 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.811668764 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.1998823 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.263208896 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.181959008 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.215392338 seconds)
    (117/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.954400644 seconds)
    (118/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.014606338 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.190048166 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.579821346 seconds)
    (121/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.894774035 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.958962904 seconds)
    (123/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.440848465 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.148308302 seconds)
    (125/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.918889595 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.289686449 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.530785966 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.292537921 seconds)
    (129/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.095889325 seconds)
    (130/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.061269489 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.895053761 seconds)
    (132/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.2715474 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.338744949 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.914283758 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.87305565 seconds)
    (136/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.066753552 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.892765117 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.155076874 seconds)
    (139/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.977350248 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.107494104 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.149332332 seconds)
    (142/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.477381604 seconds)
    (143/309) benchmarking ("sort", Float32, false)...
    done (took 5.680966672 seconds)
    (144/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.038718934 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.283825336 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.491199067 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.160267596 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.892237681 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.099846656 seconds)
    (150/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.152839024 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.244866362 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.958025895 seconds)
    (153/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.317957227 seconds)
    (154/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.885060078 seconds)
    (155/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.354798562 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.46010047 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.146945875 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.920082467 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.875199884 seconds)
    (160/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.237221155 seconds)
    (161/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.090896972 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.181094441 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.973436836 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.917802019 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.912239813 seconds)
    (166/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.09030053 seconds)
    (167/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.024543803 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.501194794 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.880365095 seconds)
    (170/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.167497493 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.083239321 seconds)
    (172/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.92476774 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.876231371 seconds)
    (174/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.852754435 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.936034545 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.145952496 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.137650982 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.17313371 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.97049 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.806080724 seconds)
    (181/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.187150875 seconds)
    (182/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.253614074 seconds)
    (183/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.923703855 seconds)
    (184/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.975070752 seconds)
    (185/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.908913083 seconds)
    (186/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.986572556 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.896008962 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.92316323 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.893989158 seconds)
    (190/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.024469201 seconds)
    (191/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.142094902 seconds)
    (192/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.057207373 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.887830307 seconds)
    (194/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 3.553152175 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.018925574 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.918972633 seconds)
    (197/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.944565918 seconds)
    (198/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.987484214 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.898052667 seconds)
    (200/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.897891888 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.95295699 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.939295107 seconds)
    (203/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.919938448 seconds)
    (204/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.815516155 seconds)
    (205/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.911716075 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.870301012 seconds)
    (207/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.007141847 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.968900193 seconds)
    (209/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.029750811 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.912528916 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.964431388 seconds)
    (212/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.02343762 seconds)
    (213/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.896672656 seconds)
    (214/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.067212109 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.274149373 seconds)
    (216/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.111032766 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.170684796 seconds)
    (218/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.207943759 seconds)
    (219/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.1524607 seconds)
    (220/309) benchmarking ("sort", Int8, false)...
    done (took 4.95447631 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.256322045 seconds)
    (222/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.924830692 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.898427145 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.739082923 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.117049659 seconds)
    (226/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.897996131 seconds)
    (227/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.575041075 seconds)
    (228/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.721958657 seconds)
    (229/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.305346269 seconds)
    (230/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.090812285 seconds)
    (231/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.013246738 seconds)
    (232/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.412939601 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.231340063 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.924108815 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.003203232 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.088737599 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.232967344 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.939507888 seconds)
    (239/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.408731483 seconds)
    (240/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.24288028 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.082518687 seconds)
    (242/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.187581192 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.018067773 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.999459546 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.202482299 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.896282553 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.145522622 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.985145297 seconds)
    (249/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.896326372 seconds)
    (250/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.962217255 seconds)
    (251/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.721259769 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.145679152 seconds)
    (253/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.285128313 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.091425231 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.968598066 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.991920687 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.279123151 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.698198826 seconds)
    (259/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.003167122 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.94990147 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.916290635 seconds)
    (262/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.035224567 seconds)
    (263/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.920416269 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.180095242 seconds)
    (265/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.925349655 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.922302246 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.592430146 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.296221267 seconds)
    (269/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.076052893 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.209703383 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.894400536 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.283425273 seconds)
    (273/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.09516464 seconds)
    (274/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.912764521 seconds)
    (275/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.043920852 seconds)
    (276/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.211972146 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.275128934 seconds)
    (278/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.477607758 seconds)
    (279/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.883840793 seconds)
    (280/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.933048049 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.795734784 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.07326218 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.98746046 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.980862144 seconds)
    (285/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.982160576 seconds)
    (286/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.923150419 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.011887158 seconds)
    (288/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.98732514 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.158001024 seconds)
    (290/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.075723907 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.675411391 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.842168531 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.592952159 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.886174101 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.742926126 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.564318042 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.048735902 seconds)
    (298/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.06899988 seconds)
    (299/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.931365959 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.902238996 seconds)
    (301/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.668473617 seconds)
    (302/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.998091135 seconds)
    (303/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.084139402 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.930802804 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.287042303 seconds)
    (306/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.942129771 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.932102022 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.791508087 seconds)
    (309/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.912032466 seconds)
  done (took 1024.902892635 seconds)
done (took 1026.986859658 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.934175039 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.927203504 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.912100952 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.936276219 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.02224518 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.939303431 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.92165078 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.91374108 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.958879661 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.95980455 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.910678657 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.938563498 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.912498363 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.910893281 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.912062886 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.923902092 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.22207874 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.940231139 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.930087214 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.922467272 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.928932905 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.910564824 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.96371654 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.93897036 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.916620378 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.914970103 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.915776174 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.931783778 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.024140864 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.915452876 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.917442608 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.923886132 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.223616633 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.938473993 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.908111544 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.934322285 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.924354273 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.923601584 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.917492918 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.945612693 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.366294554 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.921448627 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.916119101 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.916816795 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.91473923 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.918474153 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.915268344 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.920053825 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.92650624 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.927592867 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.36021349 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.939452178 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.91774689 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.916237659 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.925187848 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.914429136 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.919010062 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.930326584 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.934604646 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.931043573 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.213166545 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.945279216 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.918825475 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.932079415 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.921779013 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.401137984 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.919742387 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.918050865 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.369218384 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.928689228 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.398654052 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.930393216 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.917842051 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.929159451 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.947124081 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.224216477 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.937724829 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.91559668 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.923013007 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.914228361 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.925493268 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.927241039 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.920286491 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.91905814 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.930188714 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.945966653 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.927247952 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.916278134 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.925705398 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.935972381 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.922978622 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.927932788 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.920337971 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.912063402 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.924857897 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.919620758 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.91937823 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.918966292 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.923283779 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.928362322 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.363916634 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.942339316 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.916235081 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.916598193 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.917109017 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.931430321 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.365862753 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.92488637 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.941903655 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.969526896 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.9208164 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.213267589 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.948980736 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.934982192 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.930502395 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.920195452 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.913433806 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.216216895 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.389756539 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.939933838 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.918884804 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.916233497 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.933653545 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.920891442 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.917096735 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.227038219 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.947767531 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.930424951 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.040686906 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.929975585 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.951608607 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.918873686 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.921553895 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.950294328 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.936991784 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.950537627 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.924588943 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.934881298 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.935999674 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.916412164 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.928975582 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.929463428 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.92156892 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.92655021 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.914351741 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.949578448 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.934157783 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.930582307 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.940250512 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.039837263 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.917007772 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.219301167 seconds)
done (took 301.132679811 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.984944023 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.909974563 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.013375895 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.914166302 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.999912771 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.000612667 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.911882683 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.915674741 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.91177252 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.292813292 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.912256786 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.918593992 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.913415777 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.91399422 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.998778792 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.915013918 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.91294464 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.254632268 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.917414207 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.986662208 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.915138311 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.914288911 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.916108897 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.297116079 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.913750749 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.916462065 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.989920505 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.915686913 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.265202384 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.91369219 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.918056047 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.262291288 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.009816816 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.934320261 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.927188343 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.924713852 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.002510925 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.921661074 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.998534028 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.997943106 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.015047094 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.958633232 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.91425039 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.91303344 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.922766564 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.918051514 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.915961063 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.945223346 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.912821175 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.914829595 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.255991214 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.927873388 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.914253082 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.915830359 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.914706187 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.950327324 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.916198274 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.918038003 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.007564676 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.918158165 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.980139239 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.299733603 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.29480885 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.918069243 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.920276873 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.915562951 seconds)
  done (took 187.50066621 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.986748054 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.989826795 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.987054726 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.921981578 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.969271423 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.433040765 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.923675365 seconds)
  done (took 16.060051031 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.925831748 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.921256724 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.969089939 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.970534444 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.919153206 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.071425244 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.919773685 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.931302612 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.918872072 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.973637798 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.920831339 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.920662433 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.92813185 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.912968406 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.972727662 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.931467426 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.034935099 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.922650623 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.925182801 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.077099607 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.91911113 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.925593482 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.97284241 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.934423969 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.921578963 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.926634624 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.510161676 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.92022617 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.920776994 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.920557803 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.919799673 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.964290573 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.921382362 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.915883335 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.91697931 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.035662847 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.919474119 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.916597702 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.921167201 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.918623359 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.918829948 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.921467548 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.921074696 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.917952757 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.92131183 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.947434493 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.921363286 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.92234685 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.920676941 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.923567177 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.972289453 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.922494759 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.918441941 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.92016823 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.978200571 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.930274923 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.923522751 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.917913913 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.921720189 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.921604319 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.077411998 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.970942147 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.921826531 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.97098772 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.924816113 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.92264705 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.921653563 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.924753682 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.979362277 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.925272274 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.974208941 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.922027581 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.081903907 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.948596027 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.924328433 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.924871906 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.926978653 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.92227744 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.916761385 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.93330919 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.926942451 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.928831193 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.932208511 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.921460792 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.918640064 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.036870219 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.032207836 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.921574111 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.940691239 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.934934211 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.923819067 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.982188847 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.924982542 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.922730268 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.975620116 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.03841771 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.981782802 seconds)
  done (took 210.964217072 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.929520189 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.935993011 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.928776379 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.942590701 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.924156495 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.923421689 seconds)
  done (took 13.439271768 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.927447288 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.927673632 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.926979067 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.923119294 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.927637667 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.923943335 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.926411749 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.926853136 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.930151442 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.924842526 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.926716387 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.925166438 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.926292289 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.926525425 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.924472931 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.923036631 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.92502493 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.921470055 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.926528045 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.92539181 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.068864308 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.92533623 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.926200276 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.926170693 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.931084722 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.926454937 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.936345708 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.928198011 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.928455587 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.93682007 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.930285985 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.928878583 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.925426529 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.931470802 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.931812567 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.928261713 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.929614497 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.928753787 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.924362944 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.926701744 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.928381632 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.925272501 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.926860824 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.927993934 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.927734708 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.9304865 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.931419437 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.935790847 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.927406633 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.929532769 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.928742733 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.926403043 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.927341168 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.928645961 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.927136031 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.93191735 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.933723015 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.928594544 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.928968447 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.927812525 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.931041411 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.931004406 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.927671807 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.932928171 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.934222775 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.930100928 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.931254384 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.934297815 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.929318072 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.927855977 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.932604795 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.927859235 seconds)
  done (took 141.847231862 seconds)
done (took 571.671310277 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.168520361 seconds)
  done (took 9.026966681 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.104282387 seconds)
  done (took 9.050131153 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.567637889 seconds)
  done (took 10.422793981 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.922445582 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.930427898 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.928462865 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.92009813 seconds)
  done (took 29.568343667 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.927653825 seconds)
  done (took 8.783851257 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.933407401 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.91893234 seconds)
  done (took 15.738306556 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.03391849 seconds)
  done (took 8.890029712 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.038286142 seconds)
  done (took 8.901296126 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.942795285 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.937153345 seconds)
  done (took 15.746978211 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.908834363 seconds)
  done (took 8.765493135 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.614298948 seconds)
  done (took 11.478161652 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.927959282 seconds)
  done (took 8.797843261 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.996549511 seconds)
  done (took 8.854505215 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.161798353 seconds)
  done (took 10.017548018 seconds)
done (took 165.898597656 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.922422632 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.919938678 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.922103029 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.919381173 seconds)
  done (took 29.540904773 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.961209818 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.959585711 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.962901114 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.971217917 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.962559995 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.959837096 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.951841007 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.952008076 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.970297574 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.963464999 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.961829327 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.961469852 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.961432166 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.955313591 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.961948522 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.963652306 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.970760705 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.96355963 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.951514231 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.963301135 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.931238054 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.971498978 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.963327678 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.928170552 seconds)
  done (took 48.883311206 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.126413969 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.000163925 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.081152393 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.981412238 seconds)
  done (took 10.047661033 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.978761331 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.981452552 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.993574322 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.031119404 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.059963878 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.989930162 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.95545032 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.949483222 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.936197882 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.983320589 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.056556163 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.997412442 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.069886608 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.931101498 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.105148327 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.929354917 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.927749946 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.981991466 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.033866763 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.047695085 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.929319918 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.982186168 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.983780501 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.000438614 seconds)
  done (took 49.694963513 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.926824477 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.936622139 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.934196051 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.928591096 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.928837006 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.929552979 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.93516358 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.930425964 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.950409881 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.932667669 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.927899786 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.931464372 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.929638077 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.928624807 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.929292231 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.944718241 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.94192737 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.928073192 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.934256506 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.935797816 seconds)
  done (took 40.52508462 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.92604224 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.776631838 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.278032841 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.182155718 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.921746432 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.922686202 seconds)
  done (took 31.868612864 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.943915123 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.934522329 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.931603191 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.98944965 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.069038616 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.937367648 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.929624585 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.941480953 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.975640421 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.995721354 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.952021411 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.961016231 seconds)
  done (took 25.420907884 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.927316465 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.928840169 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.927994948 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.943679471 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.942513113 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.940409635 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.939932714 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.924449641 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.948902444 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.953347029 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.939479486 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.94226485 seconds)
  done (took 45.127187549 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016852272 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.971131827 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.944984082 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.606421673 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305143204 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139599719 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.533412374 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.275233862 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.930715041 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199169191 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.97348064 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033917837 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.182562674 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.481872039 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.960973734 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.383748644 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220954248 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132009394 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950016079 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.600353637 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990369995 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.168964924 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.739199021 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.984651727 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139452523 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.054327964 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.186163626 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.929342909 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057182659 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963358236 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93820235 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.928280537 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202902855 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305000302 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030667557 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937171943 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.54653157 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.642795401 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.916072479 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.679088518 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.645611916 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.052475402 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937702559 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928249194 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.862486626 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.138259919 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315118737 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.935402224 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.638655285 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.931123277 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939755037 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02233241 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.933853215 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.745318888 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848259237 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.932730221 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.927135125 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934904938 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.503818551 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.04641265 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.170490844 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.90543634 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.021321523 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.692369273 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312047288 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.073158517 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.932989713 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932351531 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864076016 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.607174389 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984118419 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25747978 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.952391552 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579157076 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230793759 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.052683455 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.872725399 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208647199 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.520168814 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.906283627 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159460701 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929549573 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865255344 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.877551235 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.864987362 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187839472 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964919953 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.690416697 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965641768 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.270720294 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.940378484 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950372779 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955271823 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.153066807 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.816829352 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929263776 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.73801056 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.074579579 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951991338 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.270832525 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864793217 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.933221138 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188069414 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.143370032 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.070524805 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.429134689 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090552719 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.543725845 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.988567921 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.147015482 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.984634749 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.195748281 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986410676 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.061367431 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986609977 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.933051783 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221868812 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.585573412 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.075849781 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.979151639 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.061387859 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.252068795 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95630267 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015183921 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.94340976 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.932737522 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.700369091 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.483290334 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.93238914 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.937521549 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.065873482 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.986767639 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.935858046 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882886323 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.568180753 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.031519099 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.949776514 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.15918216 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.566018648 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252538449 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869642771 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263704934 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.990423754 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.156332657 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.575672008 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.007347158 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194734884 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.070544524 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.106521591 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989281218 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953986265 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03231154 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955252741 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.143648503 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.231554119 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.937877293 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.937840544 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.723508588 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.97173845 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938282413 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.942251935 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.689400773 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205101333 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.955352526 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.941196214 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.82259131 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.954529474 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999850102 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.941756161 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.945799887 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.476244182 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.646307399 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.943296403 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.528415778 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161152696 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945405209 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.692887726 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049298502 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.024689596 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.201831701 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991236083 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.871104323 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.649252411 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.630101797 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935568132 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.87003514 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.937573984 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945600423 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948562756 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.132514119 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.205751969 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976940348 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.622270222 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.978552696 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948203939 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.941366239 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937604465 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.449098963 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.063704089 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.183057838 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.987734782 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081014517 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.950496702 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.871258455 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.940891768 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.94412608 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.937550472 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.937147644 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971563077 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.624545304 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312491709 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198048288 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.551036999 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951555153 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.670659266 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.994078649 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.940318944 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.787257158 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.16320291 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.977720364 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95024586 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.949394597 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.701685474 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.645366132 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.508570734 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248617917 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234470777 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370144071 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.203506356 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.973282396 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278731562 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872876907 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.49539651 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999665879 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287837346 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882589676 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02657574 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.579553676 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282046059 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952007004 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165893606 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318813259 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.696399288 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083925382 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151567353 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97423007 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.152181105 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908277662 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.464319299 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081520741 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.632310416 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148646642 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282723277 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.622852139 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.066684628 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.939465799 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.617089155 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019784156 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.649261038 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.11394774 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.17991604 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.900245626 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42079584 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.947470277 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.166857827 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291378358 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.16968932 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.072659256 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877321892 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.956624579 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.955622757 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.943377442 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.941755601 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.836047413 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.195614192 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95157925 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874336035 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.108136069 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223934271 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.840758448 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.947858444 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940990668 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239759022 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.538728048 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110572211 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.095713043 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.46545815 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945663999 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.871556056 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870150077 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.629195556 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.941138382 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910752296 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13552217 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.032590232 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851922024 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068061674 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.18830382 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.19185804 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.947165298 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195047918 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211291296 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.637953431 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964388436 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.039222529 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.618493467 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.054115415 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.941221931 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.176377238 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.694097509 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.168794452 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.986614466 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.888339494 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.939724941 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15575421 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.942409909 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.911612585 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17318273 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.663860779 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.991406518 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257591852 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012591887 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.927528308 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.99074157 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.033389341 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953535038 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022103731 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95406167 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.952895507 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.953645932 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991145531 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900093929 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.068517355 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.958032343 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036625146 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.076049127 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.468918559 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.95129466 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212611594 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301316642 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261795267 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000806865 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.944277451 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94543769 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877794178 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092525715 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.170227029 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217556566 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.07266946 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.060547424 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968852475 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.640956035 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.222467994 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190845022 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219620949 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.837915851 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.518666909 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.988304841 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.945534212 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955593969 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.15599878 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151536401 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240973047 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.081729626 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.09620929 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31925548 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220101134 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.945568093 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.945947415 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.528567575 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.002093528 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.623725252 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.986266255 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.873016702 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223703903 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956024042 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.322585167 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.96588821 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.104751688 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.719178245 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.642925084 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.236817895 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.928367867 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.002425973 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216131375 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322145918 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256600898 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014052287 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957835445 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.060278732 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093478639 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.836022294 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.947415001 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.947545888 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996410406 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.657392166 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.957550399 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21841981 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255556318 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.945718555 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.854669517 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971349468 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.957624268 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.171359889 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20275592 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.196344596 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956974496 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.953396502 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.763060538 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214669141 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003653191 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882712729 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.951285371 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041928217 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.193778405 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968983889 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.399925164 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.659739309 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214416089 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.945701094 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970776799 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.172395331 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310655603 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263416494 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.48730947 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150058766 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.532196898 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.597488987 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253195798 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.954335377 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.171638491 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258258813 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.954226032 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.08502604 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993391305 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.211289144 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257587029 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.963656331 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.640746695 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.91934654 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.291811977 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510998525 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88880521 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.95943323 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.010919158 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.950153547 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.078623438 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96114672 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.867881472 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.163136504 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.737448704 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233417316 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.955870949 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.938363372 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.672853505 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.301371317 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989700952 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093960992 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951722863 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.624342543 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.301199823 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.207045483 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.093846463 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.963475074 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.955049398 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95078212 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.937893715 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.146806524 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.14740571 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220519251 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.111903766 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.993279627 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956188355 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.167312047 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162865407 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.895109647 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090356521 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089509756 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998558161 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.857453703 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.460418685 seconds)
  done (took 1710.385697767 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.983258272 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.973448832 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.006010955 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.958746242 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.980766813 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.027087459 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.985869638 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.028580554 seconds)
  done (took 57.832502246 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.950887145 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.150547821 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.961368667 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.952102697 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.960866633 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.952761443 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.122561969 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.964093806 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.962234973 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.962355429 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.952926391 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.952746641 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.293281887 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.978603697 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.954269487 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.962203714 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.961023159 seconds)
  done (took 75.902531462 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.952893805 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.057333541 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.974958182 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.970197071 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.919259492 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.967077032 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.85257535 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.995419194 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.957000631 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.193240748 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.591911948 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.982795994 seconds)
  done (took 91.304482278 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.964201467 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.9590536 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.96004267 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.96042399 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.960097684 seconds)
  done (took 11.697690681 seconds)
done (took 2230.11459318 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.207944599 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.170755618 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.188013866 seconds)
  done (took 6.248764637 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.104913645 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.15129665 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.271257791 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.293254759 seconds)
  done (took 10.714969718 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.243162057 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.32248431 seconds)
  done (took 6.456997743 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.361834907 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.965161227 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.339579447 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.956455654 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.955140596 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.958780661 seconds)
  done (took 22.766870061 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.96047432 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.963131398 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.960646458 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.961818307 seconds)
  done (took 9.738313269 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.941596474 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.651259193 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.942675976 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.958413365 seconds)
  done (took 21.385893936 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.710187175 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.71909635 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.704579001 seconds)
  done (took 10.026014643 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.458879087 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.851486257 seconds)
  done (took 9.203110904 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.225807679 seconds)
  done (took 4.118910401 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.092027334 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.270304754 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.435536063 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.462480454 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.550119978 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.659357035 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.285443013 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.208738886 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.362425977 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.400318973 seconds)
  done (took 25.621379023 seconds)
done (took 142.04515027 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.338561441 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.20174664 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.158778076 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.337270641 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.178759369 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.190406487 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.178264384 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.322329102 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.805846053 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.801794094 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.295045231 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.178181357 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.125215283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.195630447 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.125173988 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.321175817 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.178966246 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.353088103 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.995709091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.193661293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.182821194 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.936822455 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.139350533 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.950104617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.179891111 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.109936023 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.514761409 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.32472748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.148252389 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.52363489 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.113287468 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.344899409 seconds)
  done (took 173.838953078 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.725814435 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.960330757 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.959517586 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.959902685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.470512278 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.96466695 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.959884501 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.960894673 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.243544513 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.233474424 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.976721795 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.501223273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.983125068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.959885148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.970579171 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.960359734 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.34723814 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.818429094 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.98003324 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.983237716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.985810541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.369655649 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.981227644 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.4150017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.362127347 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.979128175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.961168907 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.978998746 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.961263598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.966455828 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.975023773 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.960963259 seconds)
  done (took 211.713678133 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.960812603 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.961145972 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.960246257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.962003173 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.980543218 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.968769798 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.963813258 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.961619349 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.5414659 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.53358807 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.971339195 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.973889569 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.968096774 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.961690353 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.973838798 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.961653179 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.965774852 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.968031573 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.965311841 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.969428124 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.975590816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.788638515 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.977909804 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.774747063 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.97174619 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.97238401 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.962651933 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.977441544 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.972954139 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.976865901 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.977171624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.963201161 seconds)
  done (took 223.679443417 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.164490219 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.969375571 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.970533032 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.931098498 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.970080898 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.969878782 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.965326727 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.166320172 seconds)
  done (took 20.031145012 seconds)
done (took 631.168385672 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.406922861 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.258971373 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.151235149 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.995801447 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.214894311 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.036423281 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.990805858 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.05531564 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.717827132 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.06261822 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.676038693 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.008882283 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.768108496 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.015422382 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.117769544 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.049373465 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.557205122 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.651269348 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.171577828 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.039932535 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.170069373 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.926475646 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.067103961 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.75848685 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.791770039 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.975462309 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.161731157 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.563789167 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.005117999 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.156071563 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.729572972 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.381256588 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.005601664 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.991045382 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.044520195 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.027497133 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.341955951 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.005080309 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.118554288 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.73489775 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.031431965 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.60917265 seconds)
  done (took 107.442819017 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.96670579 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.964328837 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.962632669 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.964836152 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.965052186 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.963624978 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.963008011 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.962633197 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.964315491 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.96295499 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.963146285 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.96517675 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.96375808 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.965547997 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.964196389 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.962762846 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.965198025 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.966453589 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.963065346 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.964133137 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.966376733 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.962891635 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.965067619 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.964426854 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.965650587 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.965559637 seconds)
  done (took 52.992546651 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.977055714 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.121902663 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.203812349 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.995921913 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.977345471 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.979965731 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.995599851 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.98316923 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.979113816 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.979166934 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.070939677 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.985215481 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.997429258 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.20729389 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.993779433 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.979545041 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.97817709 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.979217473 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.127791443 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.995155907 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.998740559 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.985691996 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.998241113 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.992991985 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.981915283 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.97882008 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.982112207 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.414973501 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.986965566 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.072201062 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.02133506 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.998880236 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.374473366 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.215187265 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.031831809 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.983677205 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.979822658 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.076531839 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.985554218 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.979798843 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.997709933 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.984514111 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.207062973 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.476454385 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.992478381 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.978846834 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.426271169 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.084654741 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.020818038 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.989815425 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.209899298 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.995912051 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.980670817 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.979076301 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.015592736 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.989179105 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.978673059 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.286018761 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.990931876 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.997645971 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.984548225 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.980219562 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.135633884 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.988546924 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.124177712 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.98919682 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.988255865 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.98085049 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.207768275 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.996331682 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.479811476 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.991517254 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.979280582 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.071282695 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.126077474 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.451007123 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.992024438 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.137504892 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.389743249 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.002848013 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.985767167 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.402576522 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.006160807 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.986291975 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.981357275 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.980359454 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.979115765 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.02191893 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.995430741 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.411745679 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.481742262 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.299400304 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.008094219 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.995190739 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.979944909 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.288032926 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.987856973 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.980540017 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.197356172 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.494013389 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.993668463 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.987818888 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.463115761 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.99478557 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.998509651 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.988153531 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.210643415 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.995354956 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.024735096 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.980677049 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.986163178 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.983015983 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.00080828 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.987775816 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.980674273 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.451449341 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.091702344 seconds)
  done (took 244.619271557 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.985204476 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.988519522 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.975836045 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.975103382 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.973096275 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.981579643 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.973435719 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.973899139 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.980327191 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.974314172 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.974232045 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.976718812 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.97895055 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.980156177 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.017169183 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.982936502 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.586410901 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.976108297 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.974104392 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.976377832 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.623639937 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.979590069 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.975755726 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.975182228 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.975935303 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.974682721 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.982054642 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.480397475 seconds)
  done (took 171.083996026 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.983522705 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.199220867 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.999958835 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.024719949 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.991712537 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.981051171 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.007121546 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.005700229 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.987541189 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.981254726 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.981600182 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.045941376 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.996024361 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.137324326 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.016884976 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.014941522 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.092058395 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.994741816 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.982956866 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.981635309 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.013724906 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.978849468 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.044036336 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.109289077 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.002949454 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.100768929 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.989794794 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.985010604 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.98344501 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.101567996 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.999167497 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.04423133 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.010811256 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.001051804 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.106505949 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.104785495 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.097479019 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.019392833 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.988455686 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.982119154 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.982108793 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.97306326 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.09902675 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.0026392 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.98512271 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.091403605 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.003407505 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.986624734 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.992847437 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.982010008 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.997817383 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.001952685 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.051711293 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.114186949 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.019034103 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.010370102 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.009642619 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.266223844 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.997245359 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.087060286 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.981693031 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.105133452 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.006070071 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.974381974 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.98604885 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.989507364 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.013624603 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.016823204 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.093603729 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.99574484 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.087518186 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.023661496 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.991689541 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.984733738 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.987339382 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.102757945 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.106794541 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.024000405 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.022684127 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.017723002 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.982404948 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.984880368 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.97493074 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.004741331 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.990071051 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.103666501 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.106370684 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.997279642 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.98747585 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.987661503 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.988832532 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.01151867 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.112078477 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.022856575 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.086717928 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.057199315 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.060825014 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.000532111 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.999457165 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.989796212 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.051198141 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.999662169 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.998430213 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.315675812 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.060876331 seconds)
  done (took 215.027233442 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.463041421 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.044403656 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.043207579 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.260933136 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.411675811 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.810711333 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.037020938 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.036789654 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.061233306 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.196999615 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.092025356 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.049977594 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.023861666 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.01054403 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.037718099 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.056360213 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.041253649 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.356946608 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.158001523 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.19428455 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.016007248 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.343205938 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.358061561 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.416441994 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.072171465 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.37584963 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.708228465 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.27994856 seconds)
  done (took 64.881582433 seconds)
done (took 857.945125202 seconds)
SAVING RESULT...
DONE!
