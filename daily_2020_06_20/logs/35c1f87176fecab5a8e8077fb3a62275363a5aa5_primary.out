cset: moving following pidspec: 19722
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.680536451 seconds)
loading group "shootout"... done (took 1.147268975 seconds)
loading group "string"... done (took 0.433482235 seconds)
loading group "linalg"... done (took 7.942652452 seconds)
loading group "parallel"... done (took 0.152633262 seconds)
loading group "find"... done (took 1.355028529 seconds)
loading group "tuple"... done (took 2.014854018 seconds)
loading group "union"... done (took 13.237462785 seconds)
loading group "dates"... done (took 1.463175561 seconds)
loading group "micro"... done (took 0.225849851 seconds)
loading group "simd"... done (took 4.714866288 seconds)
loading group "io"... done (took 0.974899611 seconds)
loading group "random"... done (took 9.380416984 seconds)
loading group "problem"... done (took 1.671037535 seconds)
loading group "array"... done (took 21.743314018 seconds)
loading group "misc"... done (took 1.664491778 seconds)
loading group "scalar"... done (took 46.871136683 seconds)
loading group "sort"... done (took 3.646123381 seconds)
loading group "sparse"... done (took 13.879386142 seconds)
loading group "collection"... done (took 19.968601725 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.557175761 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134657565 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14275171 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.129165688 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.165864693 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122176535 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.133796245 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087679761 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.963865412 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149847429 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11492153 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.485556274 seconds)
done (took 5.620720946 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174785073 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087884938 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079784777 seconds)
  done (took 1.290659466 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067113851 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128624103 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068505666 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068753082 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.07041925 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069760036 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069455606 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069703592 seconds)
  done (took 1.667703186 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073978547 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069818431 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067206526 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071638725 seconds)
  done (took 1.405432996 seconds)
done (took 5.744486482 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.255618767 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.109953681 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.305131424 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.326047499 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.439500954 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.094259038 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.076665674 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.07338723 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.134072994 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.349672945 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117831754 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.195209654 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.102855244 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.184347466 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.020253585 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.133775801 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089160707 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.130284952 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094348992 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132550866 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.372633703 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.080740704 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.086069463 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.075032308 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.071550899 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.660984115 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.670422593 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145715454 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085031459 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.082072331 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.117953494 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.65683644 seconds)
  done (took 10.631751815 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102115185 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101780056 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071470379 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12838733 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10118297 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073055614 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078354923 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070851268 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093456848 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.13196583 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094102027 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110599385 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069836656 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07269949 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.105620163 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200012915 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084691862 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084914414 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072197679 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081938061 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110982749 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08166185 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08257876 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082616198 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133233346 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.174172297 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097989169 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099945497 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068261912 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081831487 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116493718 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130830797 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070589957 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069397139 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127840322 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.101607837 seconds)
  done (took 4.733275047 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.187188808 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.099079544 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.104139395 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.621261531 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068730432 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.149290496 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23629753 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.075634597 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.394651683 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.159879965 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.153311284 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.142501338 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.123102016 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.074231997 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.337034577 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.123067987 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.351227973 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.070517994 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.07081431 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066792061 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076539815 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.069057274 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065061739 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096047325 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.077787 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092163324 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.092414837 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.203539005 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.014833852 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.301757019 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.071053109 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.172375662 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.103146677 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.364165972 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070604518 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.094505137 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.394348429 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.129349195 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067152572 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173149449 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.131291765 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066485485 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.1209069 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082317335 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.072969214 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.072942809 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070373909 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080690451 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.08346496 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.104506943 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.071906109 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066983797 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172151509 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066586624 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.068398673 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067929435 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071898961 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152597977 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068744003 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.16229864 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066623894 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070641966 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096283327 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072462043 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.089159377 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11783656 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.365228435 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.031900516 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.07482898 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.93878239 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081652043 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.070043581 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.086341018 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069778312 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.07152428 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068746059 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.079151517 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.072037436 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070115976 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.112991571 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068648069 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.071399883 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067105737 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066267397 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.072830615 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.101089195 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066902129 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.45899308 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101574347 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.070261683 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.078740785 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109605341 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068748085 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.074367937 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.071107797 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.073744702 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06744268 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.070390855 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073168646 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.095006315 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067895789 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.179862178 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11516977 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.031688119 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072680818 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068257337 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.072897012 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073581265 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071692743 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068339919 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073305243 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070484585 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066967406 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.11944667 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067411522 seconds)
  done (took 22.215473109 seconds)
done (took 39.890008233 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.258230225 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082964654 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083279197 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083707047 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083523943 seconds)
  done (took 1.817166343 seconds)
done (took 3.026408394 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.136189828 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105637537 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066377534 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103402336 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066376802 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107931623 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106785368 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084695599 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107128607 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066142507 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103835028 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066236698 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066259052 seconds)
  done (took 2.408623471 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082460387 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087274553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070910645 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082281692 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064163331 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081982233 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082425629 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088763133 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082136398 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073083653 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063950934 seconds)
  done (took 2.063039772 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082939085 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084402445 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070772616 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08268938 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064094994 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082810684 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082322183 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086320351 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082702261 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074626482 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064147172 seconds)
  done (took 2.05532417 seconds)
done (took 7.724786545 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076075229 seconds)
  done (took 1.264323558 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.552784569 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.556768924 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078712854 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100518848 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.204957903 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108565497 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.236198385 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085015344 seconds)
  done (took 8.291608899 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.1124214 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070389148 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070994425 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071024578 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070097438 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070401101 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071498866 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07164554 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072180479 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072032371 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073072448 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071730191 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.0731019 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073245062 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071323738 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070346443 seconds)
  done (took 2.463967854 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100320994 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098870786 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074720875 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075654967 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07363688 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073329965 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076039272 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075379191 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073301189 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074318218 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076670683 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07439853 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074366764 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065688772 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075462643 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077513911 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072185409 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07599052 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076839838 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077050788 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075975872 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065885937 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075269999 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074970642 seconds)
  done (took 3.147956472 seconds)
done (took 16.36751593 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11471078 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077868338 seconds)
  done (took 1.389805063 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082194997 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082651832 seconds)
  done (took 1.369038165 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077052111 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063223582 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083014588 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073591715 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064872344 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064179775 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081561195 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064146452 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06375732 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063969834 seconds)
  done (took 1.904583463 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065330676 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076602777 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070022524 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082793035 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070375277 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065146324 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068580688 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065413481 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.072522432 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064032321 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069076418 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083636698 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068079812 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084927968 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.067870134 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069236757 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070772856 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068092304 seconds)
  done (took 2.491483451 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063525465 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064539987 seconds)
  done (took 1.338435763 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067078264 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06450617 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06727911 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066997786 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064644086 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064263712 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064562718 seconds)
  done (took 1.663816937 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.379874438 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135326313 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.344347833 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071814847 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080205846 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25444601 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066092113 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070867292 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070841988 seconds)
  done (took 2.723948318 seconds)
done (took 14.097715378 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081855201 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086767573 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.103099708 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.427773972 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093300785 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069138298 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114683538 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.183013357 seconds)
done (took 2.381113508 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215841741 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.781657533 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.457551933 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.221376988 seconds)
  done (took 2.675361119 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34584065 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089283266 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078086439 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.181175946 seconds)
  done (took 1.918683273 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067897557 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07110488 seconds)
  done (took 1.359322551 seconds)
done (took 7.395509628 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065885346 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093537715 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065848673 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065858118 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065824611 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065677251 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066232393 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066289762 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065633302 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065763526 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065865956 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.06586808 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065962784 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06642477 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066296373 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065926378 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065647747 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066260616 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066316603 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066027624 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065657489 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065979114 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065922501 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065743502 seconds)
  done (took 2.866227255 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083658491 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067788604 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069392443 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069570301 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070306809 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069435901 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069350135 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068379521 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069823232 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067704567 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069769891 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069919503 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067416846 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070019904 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067873156 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070015492 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069534168 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068219293 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067487461 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069783501 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069182794 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068814173 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069612559 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069221964 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069886783 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069830033 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067735197 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068378372 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069649016 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069588946 seconds)
  done (took 3.315546748 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066311552 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062685107 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063468237 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071584014 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062491382 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063120744 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062507715 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062392069 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063064571 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062450551 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063765359 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06218617 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062285906 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063296645 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063047474 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066847032 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079522314 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062523192 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062223727 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063212694 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066373235 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062708621 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062242578 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06227786 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062173191 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061962147 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065489322 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06240469 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062906746 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062357355 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066504807 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.0672629 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06268497 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071072316 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067065147 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062441463 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066258122 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062153474 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063065995 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062256634 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062465898 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062727386 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06254985 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071705264 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062707603 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063636723 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062483743 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064020008 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063202514 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064994108 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062607599 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062690119 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064647635 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063800858 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067435971 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06213757 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063619516 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06218047 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063412875 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062387492 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061946624 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062473122 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065756597 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063217784 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079835063 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071355752 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062580358 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063958719 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063122063 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065840131 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06410391 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07852093 seconds)
  done (took 5.878290643 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089241096 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090928394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067555067 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067537923 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06306939 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063109 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071135456 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063347606 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067779943 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08189744 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063473246 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067466862 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0676345 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067106598 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063326072 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06763248 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071109081 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063344293 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063336467 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06735076 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063609936 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070903839 seconds)
  done (took 2.768220276 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1501934 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068883752 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106248241 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073234578 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071324164 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073488024 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068758873 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068662459 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068744235 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069881343 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069189917 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068691021 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071124418 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069695883 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069737437 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069105162 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069360723 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069494321 seconds)
  done (took 2.61372765 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079166187 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06853978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087887993 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068037491 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068372205 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068312101 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072547696 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073228136 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067959485 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068391416 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073023943 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06811402 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068568507 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068372717 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068316004 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068391438 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068064184 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06895094 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072963781 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072598077 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072703618 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0732684 seconds)
  done (took 2.805358923 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07983573 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067665218 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082303566 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069740498 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063496244 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062721836 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068905357 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067593636 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069271611 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067419844 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067975355 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063557726 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070047204 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067735516 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070032134 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067659944 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067709439 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067994722 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067431864 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063517668 seconds)
  done (took 2.611957894 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092022541 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066235831 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066110801 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071972215 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067064859 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066249363 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072006124 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066383947 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066269949 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087091011 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066508752 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066503571 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072478085 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069556123 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066092972 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072116731 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072713892 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072089058 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068986344 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065868673 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086778873 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066142838 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071821941 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065977053 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065952141 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065898047 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06637188 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069846927 seconds)
  done (took 3.214484739 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066272567 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065951586 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065844658 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066096067 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066210472 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066805583 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066014383 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066116377 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06596942 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066208034 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065916581 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081479142 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065371733 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065789916 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06542312 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06554048 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065891658 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066156686 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065884369 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066013902 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065397172 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065591153 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065780806 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065887135 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065906634 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065324907 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065485137 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065668932 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065251741 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065892858 seconds)
  done (took 3.236426023 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075567965 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074041159 seconds)
  done (took 1.412603173 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064818983 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079953727 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062411254 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073505406 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071021149 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066308828 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07205979 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071574965 seconds)
  done (took 1.81767087 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.089941039 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078791739 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06499145 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082829594 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079320233 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089281721 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132650193 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064832691 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075642174 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066191906 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086522951 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067187253 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074985038 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069604555 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074661132 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078507158 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062618522 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069344216 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065572271 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063636997 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065145581 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080526961 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074449155 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063183728 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070362333 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092978838 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083919835 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064461096 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071792986 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076774759 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074811118 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062223627 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064542925 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064754738 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063357849 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078795018 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087510105 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071553449 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078028635 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065250031 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075655367 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062515725 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073802121 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075842482 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081526791 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064925493 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064713462 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062910119 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066098725 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071241339 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063117643 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069743531 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062523708 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077261523 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072510314 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080086417 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063596187 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070809416 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071125101 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071610848 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076313664 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07126051 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074463237 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064033055 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080497898 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074377265 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078842648 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06270478 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062484292 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06270608 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07828357 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098527808 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074405582 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064615947 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065160875 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062565928 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071741491 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064915234 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075500243 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075385499 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064077867 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072356757 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076526393 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068991801 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070963667 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071534695 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063352473 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067889146 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066165895 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084080159 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063730683 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062938896 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065575062 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079857649 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071354556 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066715899 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065931082 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0760964 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061936097 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064331575 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06522031 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069775805 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077312204 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068638747 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073723779 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078151881 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.08010995 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069141161 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072321299 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062595558 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066431378 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067961742 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077157453 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063378816 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072643356 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069364431 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063831387 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074126847 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06174762 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063318632 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075592907 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074132953 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06195088 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060944513 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069765232 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062835557 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065327711 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076051418 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061960174 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061428759 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061515257 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07043265 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062600616 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.206322248 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068811213 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072609134 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062881015 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06387929 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068577229 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076695393 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068685746 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070393962 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074920201 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071239835 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063596798 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07667392 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071804027 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068629483 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075880003 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071209331 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064571572 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068414184 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073595428 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065159459 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074456106 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067245904 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070961897 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064570268 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063580721 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070657971 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066474398 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068880892 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071913345 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064646873 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080463179 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072768261 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063891457 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063360488 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072411986 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067703515 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065571765 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068519629 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072831574 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066296205 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064824536 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066107481 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073193307 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082830338 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067088801 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066688957 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076245895 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084196592 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065564009 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073128962 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065872132 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066867865 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066821135 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080644267 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077197833 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069325654 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071651228 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062266364 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076466722 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076539532 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068213058 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063754753 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067513901 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068145435 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076284658 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068413996 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065270588 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063569506 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070917457 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06712626 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071572779 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064879011 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067317083 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069741858 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063218124 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070481601 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065003743 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07878633 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072186547 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063290415 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0676076 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063129848 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076032096 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06298199 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066324505 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067819022 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065161789 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063886451 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071243602 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063415489 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079194119 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079512974 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071628257 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068727266 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065909551 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078790038 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072493071 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074757832 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073777629 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076188095 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08183205 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069159318 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073613202 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.08178235 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064746004 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063781004 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.078804723 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065153951 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06536921 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064997438 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063369797 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071911572 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07191187 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07611707 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063500105 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072885559 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06448261 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069145052 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064453858 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074361029 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073280013 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070194996 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077865915 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065918773 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065354418 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073096234 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064936545 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065478679 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066647208 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07084208 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063942932 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069672353 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066341689 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069416517 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065976025 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062004182 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069612061 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063356848 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.204860452 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075006937 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065614592 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071921403 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072605823 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066008849 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071747841 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069204712 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06782239 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07227285 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071088429 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.07041847 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07208533 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063220139 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076768137 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064249704 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077609199 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069616439 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0628932 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069687648 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072417338 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.06960826 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065400841 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065225639 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070086443 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064749158 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071327957 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076578302 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066542652 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079797315 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07545407 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070861266 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071936688 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070764247 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070997127 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06859724 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071365916 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066449566 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071719777 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06593373 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07555698 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073345873 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071403576 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072539632 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066565149 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071924681 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067492561 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064496726 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069530733 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069695995 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066050766 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079167392 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067319241 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069422648 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065551566 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067278962 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065589108 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063806741 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071894642 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073817841 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065801617 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075056124 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068044467 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07091837 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07965292 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062476278 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063559075 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06308528 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066454288 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077011449 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065083395 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078976241 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070408011 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067654343 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063077984 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065348105 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06373934 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062598135 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063523901 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073186447 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068813297 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064455692 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065257623 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073305237 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067252186 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078742678 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065701277 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071213286 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066894332 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063967102 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069652498 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068958182 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073435186 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067089366 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068645584 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064646667 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065965978 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071678922 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072841313 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066522625 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072291094 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079139997 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066505322 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073777032 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068652885 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064231608 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073435929 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065714967 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066042663 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069250405 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074236797 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073299833 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066219873 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.08012848 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068513488 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07184992 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064226284 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06258873 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063786226 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064079016 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064592184 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06785902 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065785875 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07795679 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063699593 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071273358 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069844827 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06813775 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073711287 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063573821 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069159733 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068921181 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065519209 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069907893 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07640505 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066593288 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071046179 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063858945 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069314673 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073044714 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066163411 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.215252644 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07187475 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066147575 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071483387 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067572737 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065010207 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065113548 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064677008 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074710044 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065463041 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068093958 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067532849 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063026898 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06970864 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066783617 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078027206 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071910505 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073299483 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064344997 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063977373 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06731948 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068041877 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072809298 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073671703 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077090777 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073805919 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071013658 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06568302 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080971954 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077332502 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074557355 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067411582 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072316255 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06529606 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07211367 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069274355 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069700437 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065961318 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072497278 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070714913 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067890142 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076466182 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074978576 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066907683 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072513002 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072856176 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072119005 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064345123 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066686319 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07329246 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075798881 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074025132 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066576444 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081309989 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067673943 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071691425 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069044549 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066096783 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075652985 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064897619 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07297049 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067419568 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067085306 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064957302 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069485386 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06810859 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07406584 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069609113 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065525354 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081986569 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081494089 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07306895 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065735889 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065521996 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064523164 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065024256 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069604572 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06723209 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072752205 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081299665 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069334398 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069225569 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064830386 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066512044 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073697133 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072586004 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06272849 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063340158 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06794859 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07334899 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077990421 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065438232 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066522905 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074249801 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073359375 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06499938 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069089556 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063821541 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074747306 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083051057 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068174686 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072375037 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07694368 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080113395 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066710633 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065094014 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06678733 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072924126 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072336677 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067016258 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067529085 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085371275 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073753556 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068685858 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065260889 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073310553 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06914669 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07952834 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06947019 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066352215 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074433814 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071565617 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070140924 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07406016 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074329794 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069973026 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069651612 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062760335 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068475789 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062996902 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066459644 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064347069 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063744474 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066599818 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069516248 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066206313 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077911493 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076916738 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066168907 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060989311 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066044933 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065970076 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.200564675 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066792858 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064230787 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064073887 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064118986 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064426047 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070931573 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073877921 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069288029 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065505758 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064571021 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062840795 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074365487 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071837505 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071184165 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062388177 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064587663 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065401705 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073317996 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067972801 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06688857 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071402579 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070958451 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070728054 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063148225 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076403215 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064019132 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071239276 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068023611 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06510879 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065527739 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072501777 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06883891 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066631761 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071549921 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.0719499 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066215472 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063058268 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062776054 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074691727 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062992815 seconds)
  done (took 43.501088613 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101024344 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064207572 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06363291 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062959196 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072207945 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064323066 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063504728 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064037155 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064123504 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065943338 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063609068 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063748809 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070826133 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078033507 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072831592 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06730222 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063604117 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064423079 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0638306 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064201354 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070769559 seconds)
  done (took 2.79398412 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070396592 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07829583 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075033273 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080259758 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072124799 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068146765 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075476661 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067876582 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075687929 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073238865 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075650154 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068090305 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073061132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073224539 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073149661 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068644677 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075815997 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072512162 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068008924 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075657986 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068273681 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075453604 seconds)
  done (took 2.954736886 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065210251 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063983482 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070883555 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063127308 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064252559 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062841288 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066696764 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062886527 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066098797 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066774475 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067168349 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066977469 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070811134 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064002967 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069021697 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062901474 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109577144 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066349531 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063990223 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065396137 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063262414 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072484235 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064331278 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064822759 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068125122 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067067948 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064564143 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062566821 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063880693 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067040705 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064139043 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062422447 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070664494 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069927361 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066532972 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066762689 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063558685 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063964497 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065537871 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06276582 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069921796 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063040394 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064883924 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070828705 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063339834 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062481478 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070674741 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06392788 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063481005 seconds)
  done (took 4.621343142 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074802192 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112500859 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068816106 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094619397 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076513037 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069729548 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068656249 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095609965 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064552383 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065717233 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077501729 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077825481 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066399823 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068735491 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070644907 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068349751 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068776342 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06699718 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071021909 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067379026 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070940637 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072006785 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078778636 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079693776 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068051413 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065352212 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067030114 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068280283 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076820451 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070236146 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068076171 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068298879 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077476862 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070744765 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065870548 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066212249 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077867106 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066747753 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066153475 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064476108 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065827781 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067452614 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070478602 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078005158 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066536586 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070778929 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066326489 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064431925 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077149428 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066456245 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070356005 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077892242 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06726272 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066574067 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067671837 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076951164 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066403755 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065117427 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066894084 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07711645 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064530173 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067219242 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077586086 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065699552 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069947555 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077928059 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07082145 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067163009 seconds)
  done (took 6.360964241 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073471942 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095739729 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080114866 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079910432 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074385692 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074200749 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07398181 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074415811 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074541238 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077564418 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074142416 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11388302 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070747921 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075735757 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073916717 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074130162 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074222895 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0740308 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074001041 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073898139 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074421568 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079350839 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073767257 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079985927 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076924398 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06981736 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073510105 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074050729 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079629657 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073677436 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076898628 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073826984 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074242976 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080365477 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077361654 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073644548 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064012115 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073931321 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073995344 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073988252 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070078533 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080022188 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074110033 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069890492 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073914399 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07388903 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080292129 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076990513 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076707148 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077968508 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074175471 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080531787 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074133898 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074268025 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079969333 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082791426 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080077675 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080454032 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074319894 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080048549 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080146095 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083180197 seconds)
  done (took 6.138602253 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081123928 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07124593 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082300548 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063362334 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065722971 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072834073 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063681073 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063557984 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071638394 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072537285 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074842934 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073613367 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075243207 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072496109 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072655657 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076329984 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072995237 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072516359 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07059945 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072636127 seconds)
  done (took 2.826794539 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077052552 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082268081 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.0685447 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073254178 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068588713 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073018203 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067759782 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068352885 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06901165 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068442889 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074369807 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074025349 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068880348 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072727677 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073769034 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072694688 seconds)
  done (took 2.527071356 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083836863 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071401873 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077884419 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064584162 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069255992 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065649286 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066429341 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064439759 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065085155 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079136476 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06586749 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07754792 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066302609 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063261066 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064064787 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069756394 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063486365 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064391666 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064178475 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076700199 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07072471 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065324617 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068095152 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064317446 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07004254 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071300758 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065754639 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068044694 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064487503 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064709508 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070202398 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070845984 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064376553 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064872431 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063857499 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064498847 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064181258 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064561835 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069847642 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06443601 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062901777 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07073817 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066237234 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067187575 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064007915 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064774504 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063999593 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070193481 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06457972 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069687046 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064329584 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066563491 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065197093 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071399619 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067700001 seconds)
  done (took 5.090882353 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080196787 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068341594 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06308608 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063191693 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068435014 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086855402 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068338016 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068902526 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069157294 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062870302 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069235386 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067978432 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068855491 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068538317 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069208525 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068999383 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06278143 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06872433 seconds)
  done (took 2.63167019 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073967098 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068132012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072187811 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067755311 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067996892 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068070996 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063394993 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063151864 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063513347 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067636458 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067753526 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067619447 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063121661 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067591501 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067774249 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067948458 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067640744 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06298501 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067686034 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063543433 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067749063 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063650559 seconds)
  done (took 2.851701449 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095818371 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084510825 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144619221 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081177387 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090903683 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073267962 seconds)
  done (took 1.95190971 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09363892 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098605283 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068251571 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068419211 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073466692 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071066995 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071330717 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071476292 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076240452 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076071627 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071210539 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078547089 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075512585 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077275397 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074006181 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073644845 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071571223 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071367078 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068157547 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08075585 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071560371 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07586771 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071906979 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071587301 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071641891 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077735829 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07585789 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076224308 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071602235 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075727703 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073756451 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071917378 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075693305 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07620153 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068797487 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075685468 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0716599 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080244058 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073755236 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077393973 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068205959 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073762491 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075508051 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074717594 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075682892 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071426512 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07477645 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071533051 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072156564 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086271404 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073831437 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077268272 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07331083 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075757107 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076079348 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082100657 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076028197 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077551982 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07367936 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076228148 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077467557 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073537678 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077424268 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076250217 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073748937 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077318958 seconds)
  done (took 6.337857688 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104111073 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068819811 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072135597 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076535864 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077418087 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071343701 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071634546 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071461869 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071761621 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068862787 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10618161 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071699107 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077987331 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07791728 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071948269 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071674935 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071605378 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077493286 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068894032 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08251003 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071707537 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077617009 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077371171 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077454014 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076590399 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073755576 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071783445 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071492356 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071344906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071384599 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075216607 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071511374 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077360028 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068848739 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077352199 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071691967 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071651467 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075512688 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071538079 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073724093 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077467323 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080473538 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07205434 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071537998 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076532934 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071340822 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071721157 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069047555 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071687497 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068675293 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076539244 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076131147 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076202538 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077386855 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071419637 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072179351 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071303728 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071956102 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071621975 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074027222 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077297552 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071278275 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082169677 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071715894 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071470065 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077503527 seconds)
  done (took 6.329312451 seconds)
done (took 130.680390598 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209451578 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185434047 seconds)
  done (took 1.761994579 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074809515 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104428456 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082846162 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135176092 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07213869 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106129043 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105455206 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083223228 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071681281 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071573042 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072109314 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074865346 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137024123 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.073220916 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071719131 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074953458 seconds)
  done (took 2.801771509 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105182396 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.213079755 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109057263 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070592825 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104621483 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077958249 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072950851 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082700919 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076792296 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072333287 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077650636 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075828076 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071771951 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076649176 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07654429 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.078128886 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072216955 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077547814 seconds)
  done (took 2.984013374 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102713696 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094071458 seconds)
  done (took 1.591310967 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.175370708 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136366761 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202427016 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34343854 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.150835397 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.414080155 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.136855918 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.135602795 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112459379 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.132446075 seconds)
  done (took 3.327523788 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104739538 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198909022 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294523231 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123612387 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076513519 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.10784569 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125473837 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082608971 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081132698 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080819496 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080919787 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07848756 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101132874 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077074641 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076644593 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07822064 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103632074 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075412521 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077173393 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076831012 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105023763 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071185263 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077168182 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075710968 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078862171 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079554481 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072084438 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070551859 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076666748 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076575049 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079599919 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.104830273 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078725741 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104214415 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075175017 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105412439 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07804987 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075152576 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076485726 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075249173 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078194636 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078057913 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079273937 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077745885 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072220181 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078050146 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072185039 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070693089 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.0805245 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071534796 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079994077 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078974009 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104600248 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071961847 seconds)
  done (took 6.249025747 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108730786 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107618207 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07161227 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112752893 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10466859 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071688364 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10582768 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100615852 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107650366 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071612779 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070175887 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071597841 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079399276 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081572839 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115989937 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108300429 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073425151 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071483794 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108414433 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107735091 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070266686 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101789037 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098589451 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107767314 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069796141 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071963122 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070403892 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071686852 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076461374 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078304465 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070694451 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078806933 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083565086 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07807751 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069504259 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070335378 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070255106 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078253057 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079221286 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07878629 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077050127 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069522821 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070373736 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070647728 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070503715 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069420448 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077321027 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07867483 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077280131 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07001791 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071426402 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069683647 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070497194 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078777726 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077001528 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079226923 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078726638 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070381659 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07031541 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072388106 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079400565 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079099381 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07859761 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071212316 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079549787 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072610613 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079921664 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082644529 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07065601 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070842838 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069972964 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070330501 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070810311 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076723209 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076882545 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071592869 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070015806 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069919598 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079458076 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077938274 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069563768 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076654892 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06898067 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070091222 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071319411 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070862443 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076659936 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078474636 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071064778 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069918674 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070762899 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070101029 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069396595 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076945805 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078296093 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078319303 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077527741 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070943913 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078027701 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077788074 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070871763 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077367972 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069487716 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070875583 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069903121 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076453152 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075447482 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077636398 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069339725 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068911084 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075671287 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078506323 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068948065 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075662388 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078109942 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07604448 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068818178 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078831254 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.203501179 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08063631 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072021012 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08107595 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071376338 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078799968 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070952549 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070068568 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070817553 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079173483 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071465556 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07083693 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071044859 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070388451 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07816034 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081397578 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071424951 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07838282 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078181993 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071418607 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078743208 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070490697 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07874407 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070675783 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07075544 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069566844 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080806778 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071244325 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070086491 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070608942 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079580277 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070439124 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079815947 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07755682 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070007563 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080743184 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079924902 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077056973 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079371836 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071384342 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070357213 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070648727 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07055289 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077024733 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078563735 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071515185 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070732808 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07718957 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079370675 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06994807 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077644561 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077593705 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077949692 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070786809 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071275209 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080839882 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080456182 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078212901 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077945206 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078073276 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070988863 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077742685 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07771618 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070150802 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083524617 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070263976 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081816032 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078003343 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076756782 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078682859 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079637317 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07961906 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079781234 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082170778 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070195217 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07033673 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078029764 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070704024 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070859629 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077708624 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071888765 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071958564 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082828558 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071184163 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079985655 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069869903 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078553455 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06960785 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071200196 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082565409 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070302834 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071525247 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077918583 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073254607 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077386285 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080057611 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077829523 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069772844 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07106815 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078853758 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078592406 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069791145 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069987034 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071842886 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077231878 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076680842 seconds)
  done (took 18.706882548 seconds)
done (took 38.827775948 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.236713529 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174453339 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.204319244 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.131848645 seconds)
  done (took 2.252450502 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11528022 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109692583 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091127687 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066803422 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097770414 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066900199 seconds)
  done (took 1.982654386 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.347418492 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.236121841 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.209841179 seconds)
  done (took 2.22418069 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.223861627 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211648816 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465095415 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.287969011 seconds)
  done (took 2.727899884 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146897341 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08639477 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065702176 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083027539 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127087062 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.151984397 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097206201 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12180806 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077001714 seconds)
  done (took 2.453235199 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.160140651 seconds)
done (took 13.255727385 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.103209419 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.101045904 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.290635704 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070147962 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.207629462 seconds)
    (6/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.217133289 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095304224 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.12876157 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111604945 seconds)
    (10/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.176225315 seconds)
    (11/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077260134 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077719254 seconds)
    (13/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.241641536 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.211906215 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.456266289 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100916863 seconds)
    (17/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079493302 seconds)
    (18/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076698843 seconds)
    (19/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075680905 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076452331 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105133689 seconds)
    (22/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.215234028 seconds)
    (23/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.244209482 seconds)
    (24/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077903048 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.191392297 seconds)
    (26/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.138916067 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.105280305 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07570667 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093573438 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077981096 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067822661 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105466602 seconds)
    (33/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.110864148 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.224482721 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.152533697 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086000804 seconds)
    (37/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.100418034 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084827791 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.198092486 seconds)
    (40/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073017708 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076490778 seconds)
    (42/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.243662729 seconds)
    (43/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077579068 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074812647 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104085656 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.209742523 seconds)
    (47/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065980423 seconds)
    (48/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.141089085 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074963535 seconds)
    (50/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068146237 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065804999 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067433007 seconds)
    (53/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074263041 seconds)
    (54/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075915639 seconds)
    (55/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069601223 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.159586496 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068028246 seconds)
    (58/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067364562 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091572547 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066691028 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089998074 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121826222 seconds)
    (63/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.183433417 seconds)
    (64/309) benchmarking ("sort", Int64, false)...
    done (took 0.068287221 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067039944 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106711619 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.19765294 seconds)
    (68/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.173576327 seconds)
    (69/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.098673038 seconds)
    (70/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.068279497 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07512629 seconds)
    (72/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.200053693 seconds)
    (73/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.171509102 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.164631984 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066838639 seconds)
    (76/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066681394 seconds)
    (77/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075551861 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065924688 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.107272562 seconds)
    (80/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.202270132 seconds)
    (81/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066360664 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068274812 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095366995 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073521107 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138358337 seconds)
    (86/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.171019006 seconds)
    (87/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080032988 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.19410337 seconds)
    (89/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.09235602 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09377657 seconds)
    (91/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076347806 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.227960887 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.069067639 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.131319933 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19131236 seconds)
    (96/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.166763548 seconds)
    (97/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.128303829 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134522814 seconds)
    (99/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.217430494 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069690562 seconds)
    (101/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068578075 seconds)
    (102/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068787049 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071286637 seconds)
    (104/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.146948476 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06711891 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116241557 seconds)
    (107/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076491713 seconds)
    (108/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067753436 seconds)
    (109/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076141896 seconds)
    (110/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076270965 seconds)
    (111/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074660161 seconds)
    (112/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076298789 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066821294 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06882402 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.208963509 seconds)
    (116/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074104308 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.210835245 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074088281 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090170455 seconds)
    (120/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066976468 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113842678 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089454487 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17591983 seconds)
    (124/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067870197 seconds)
    (125/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072540831 seconds)
    (126/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.138257665 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066762989 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093684338 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100213488 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148578127 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067443251 seconds)
    (132/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075901133 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.187429303 seconds)
    (134/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075923398 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076105787 seconds)
    (136/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07991137 seconds)
    (137/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.139875514 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096789059 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091678677 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067045763 seconds)
    (141/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074973952 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148101984 seconds)
    (143/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075224243 seconds)
    (144/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.139690408 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066892517 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090275279 seconds)
    (147/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095467525 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138482702 seconds)
    (149/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077905571 seconds)
    (150/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077164761 seconds)
    (151/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081177179 seconds)
    (152/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.161632871 seconds)
    (153/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168886742 seconds)
    (154/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076761959 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075695468 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.162956141 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067227355 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067812541 seconds)
    (159/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.172301267 seconds)
    (160/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.163423558 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067301895 seconds)
    (162/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075294931 seconds)
    (163/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068911353 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066987331 seconds)
    (165/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071170527 seconds)
    (166/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075385782 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067995581 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06672171 seconds)
    (169/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067396909 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066773928 seconds)
    (171/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06630942 seconds)
    (172/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.165133641 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185517245 seconds)
    (174/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075450274 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068978959 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067285425 seconds)
    (177/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.207912885 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068003083 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091169689 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143821694 seconds)
    (181/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.140787313 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066895777 seconds)
    (183/309) benchmarking ("sort", Float64, false)...
    done (took 0.132360842 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067115261 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131830078 seconds)
    (186/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.139511324 seconds)
    (187/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073894031 seconds)
    (188/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12052233 seconds)
    (189/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071207965 seconds)
    (190/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.140018942 seconds)
    (191/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067161996 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066271106 seconds)
    (193/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091715592 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065774092 seconds)
    (195/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075231641 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066024212 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078734402 seconds)
    (198/309) benchmarking ("sort", Float32, false)...
    done (took 0.131897615 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141202739 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073270157 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139622487 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093536195 seconds)
    (203/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067713113 seconds)
    (204/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.16352514 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.0737566 seconds)
    (206/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081318648 seconds)
    (207/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.198172142 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065915623 seconds)
    (209/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073066417 seconds)
    (210/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.228709486 seconds)
    (211/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.143832915 seconds)
    (212/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069734627 seconds)
    (213/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069241105 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069318515 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067801642 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075338734 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091157175 seconds)
    (218/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06897297 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07684958 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07844127 seconds)
    (221/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.068100894 seconds)
    (222/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066815634 seconds)
    (223/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066802089 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140576705 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.166155566 seconds)
    (226/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067141029 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074647652 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067287229 seconds)
    (229/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068119675 seconds)
    (230/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074709654 seconds)
    (231/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075965812 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075617647 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066593371 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093684071 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13753666 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067886515 seconds)
    (237/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067842209 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.070203454 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067465515 seconds)
    (240/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068243192 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067270186 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066976149 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118773656 seconds)
    (244/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076705436 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124952902 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066937497 seconds)
    (247/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06702839 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068325139 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067427147 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.176300321 seconds)
    (251/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.140564697 seconds)
    (252/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067211836 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133747324 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.081307219 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066557129 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066533467 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075816049 seconds)
    (258/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071884679 seconds)
    (259/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067803893 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137484536 seconds)
    (261/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076485126 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067053341 seconds)
    (263/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072411364 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091421142 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077464045 seconds)
    (266/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074158784 seconds)
    (267/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068421597 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07405543 seconds)
    (269/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072416258 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070821961 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068427513 seconds)
    (272/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066644292 seconds)
    (273/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068730848 seconds)
    (274/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070824755 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113851584 seconds)
    (276/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.068100841 seconds)
    (277/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067924403 seconds)
    (278/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067186017 seconds)
    (279/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066710834 seconds)
    (280/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07776585 seconds)
    (281/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066635437 seconds)
    (282/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069052694 seconds)
    (283/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067837235 seconds)
    (284/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074546678 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068182214 seconds)
    (286/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067554296 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076418605 seconds)
    (288/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068175375 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067875047 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179054424 seconds)
    (291/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09413019 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075056764 seconds)
    (293/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06645711 seconds)
    (294/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067965995 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067256034 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067244541 seconds)
    (297/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067656165 seconds)
    (298/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067461898 seconds)
    (299/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066300372 seconds)
    (300/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.067914589 seconds)
    (301/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066356539 seconds)
    (302/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067836612 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066959686 seconds)
    (304/309) benchmarking ("sort", Int8, false)...
    done (took 0.171557189 seconds)
    (305/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069985741 seconds)
    (306/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079652522 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13243902 seconds)
    (308/309) benchmarking ("sort", BigInt, false)...
    done (took 0.249477073 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125258751 seconds)
  done (took 33.566525171 seconds)
done (took 35.019852783 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086044565 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09820932 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07404244 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096334128 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081741453 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09463492 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075007807 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079775596 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081852857 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081574703 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080342985 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073027623 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076700564 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076262844 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07439612 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097633662 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08093733 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075373669 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075465017 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067799998 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075774777 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067956866 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067302522 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073701141 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079031366 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074584377 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076972403 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076280833 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067515891 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067676332 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072083508 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076571349 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06785058 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079840203 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076386496 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075774105 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076850426 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079530258 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067232776 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067879126 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077841479 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067408033 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075596148 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073937485 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072490962 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.0738334 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075398972 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079752133 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097398771 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071535162 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077818489 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078285311 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078478985 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073107862 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072810531 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075080116 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073482022 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097253539 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075977618 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071879792 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078074836 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076347738 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073555028 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075316813 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075974564 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077841917 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079215374 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073969783 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077137861 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074640661 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067631678 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075075066 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072325711 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070001886 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078403839 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080660772 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066785583 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072322828 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075592172 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075678688 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067313373 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07130681 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067130624 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071972459 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071122618 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072938455 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072872259 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074477959 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067129765 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075826718 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074280837 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075320891 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067464368 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079354639 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067430091 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074323911 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067486376 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067530155 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066570144 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07271954 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067091078 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071314544 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07634427 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066794734 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072132787 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080287087 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067035175 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074082305 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066448564 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066740525 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077987818 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076982753 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067114197 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071296647 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06691924 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072535481 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066918907 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066818452 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066907821 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066575615 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071321788 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067347912 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070621913 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072471908 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078735813 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066911904 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071349466 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070897147 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066758736 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073693141 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06696501 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067069617 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066678018 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080303691 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070654809 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066840808 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07197692 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070371373 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074078854 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065922702 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074594955 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072787146 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070520779 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072364702 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065074254 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076672898 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070406827 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069962079 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065050315 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066001874 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065173199 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066123885 seconds)
done (took 12.79091382 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070410541 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.121635505 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.091114253 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093225457 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083419429 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068193199 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07434951 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.089473908 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069382182 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.094317726 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089475614 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088064209 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.107865592 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067339947 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067694842 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068887086 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06912915 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077395043 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.09262769 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089712551 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.104517106 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068126607 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085232428 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086587845 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.082629785 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090019982 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068777939 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068626201 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070943725 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087029913 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092677301 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071271847 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068861933 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.088122766 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084355384 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079291529 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068600617 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075402624 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06868834 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067936551 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069318706 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.086269684 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075057613 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074982467 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069050148 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075569854 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069570818 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081675211 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08680302 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075696159 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081827848 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.089410992 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070739662 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082739003 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067293277 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082099561 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075623076 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068278988 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068559711 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073308413 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068375343 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070898734 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077309588 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075438314 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071451531 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081004128 seconds)
  done (took 6.733785444 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087675605 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094973408 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083765206 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083824183 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067618867 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068688662 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068671158 seconds)
  done (took 2.116561408 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068331573 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093613593 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.095140881 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095264694 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087621786 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09606299 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078373785 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068448914 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.101830226 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067270517 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092462902 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113359704 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072130131 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079446792 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096880959 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06861813 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092745278 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068529439 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069139316 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096019116 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072786515 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094863164 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079247043 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068345363 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084236507 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068895395 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123924592 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078988244 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06955106 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.0697946 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069762518 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.113785541 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083804508 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081781789 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070212315 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08242338 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084885824 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071578093 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082058437 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078731491 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084588907 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069368824 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067455488 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070231176 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072019841 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079097089 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067277203 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069981757 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069570271 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.09188391 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067310811 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083958645 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072194384 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073648231 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073739025 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07325322 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077506494 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069962815 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091962672 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069738369 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088172608 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087056617 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08440331 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087244507 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068598544 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08392116 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084759184 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069770103 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070537418 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070018531 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087392291 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071558063 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070835188 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079403976 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068273869 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.096921691 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097040516 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068105371 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081347402 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069082363 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.07006206 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079350576 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.096590481 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073078898 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069343954 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073090337 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07042653 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071455911 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067328779 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072576222 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069883306 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074161943 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070181739 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072265004 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07108272 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087127001 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067630355 seconds)
  done (took 9.210999543 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070449931 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069832182 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070388012 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069243996 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06907087 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069738166 seconds)
  done (took 2.010071879 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09075367 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069185003 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082266863 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.06929456 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.116932858 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083474018 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083598975 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077749562 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081550868 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080886447 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083795199 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086797288 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.086909198 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071044846 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083161799 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070198584 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083676924 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072658605 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080254162 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071565695 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081393566 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071277952 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071372194 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08747506 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072420699 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070271607 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077717201 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080520941 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080252733 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077368297 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071238437 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072438351 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076208969 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077456284 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08334025 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078686175 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068871114 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074901775 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071291637 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072035328 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085709057 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072046353 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071834048 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075057479 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077553261 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076239306 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074694244 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07689626 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082761405 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074767726 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074875294 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069902324 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071856188 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074719056 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076386813 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077236004 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075207261 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083421175 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070914529 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076148176 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069210831 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072080626 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077022409 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071836406 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075621219 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074613056 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076416651 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070900037 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071200787 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.069129824 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074988577 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069135157 seconds)
  done (took 7.090094266 seconds)
done (took 28.745691077 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.525111776 seconds)
  done (took 2.064554335 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.634789949 seconds)
  done (took 2.210048852 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.471687025 seconds)
  done (took 8.04498393 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.440974987 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.504163669 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.768590221 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134339805 seconds)
  done (took 3.452412686 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.719184423 seconds)
  done (took 2.304055671 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.252091927 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237233465 seconds)
  done (took 2.082715445 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.349193273 seconds)
  done (took 1.92131377 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.086176457 seconds)
  done (took 2.659826782 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.288093815 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167374825 seconds)
  done (took 2.037246088 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.462818981 seconds)
  done (took 2.037955438 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.276934733 seconds)
  done (took 5.856955444 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242305382 seconds)
  done (took 1.859775078 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233712779 seconds)
  done (took 1.818890787 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.755040382 seconds)
  done (took 3.334184137 seconds)
done (took 43.267950262 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084026481 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086902465 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08675049 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083081332 seconds)
  done (took 1.897687276 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076726473 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072333132 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076098542 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072236046 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075949924 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072444141 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073828276 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075211152 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072457659 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072740837 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072561114 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07265215 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075848414 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074053904 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071569675 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075379845 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07602708 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072730369 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074865308 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07255106 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070634581 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075029598 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074886792 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071714825 seconds)
  done (took 3.352791469 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083260613 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074936941 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077433468 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07341884 seconds)
  done (took 1.899643817 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078888424 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092661249 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087894432 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079108308 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092898098 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088735746 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068662034 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069337485 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073028806 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078777521 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067958165 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096360958 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090389446 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078848208 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081296196 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065191504 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066818021 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089481131 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078928227 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079424988 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069997158 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078842034 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067677996 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088035731 seconds)
  done (took 3.497812708 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088255987 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067928898 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.087829628 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094846543 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094550801 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067787107 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.090961303 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094497132 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139360569 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068107957 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073855195 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067820435 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105484818 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06764889 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084972544 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110445626 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114229323 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071787012 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099475614 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067878275 seconds)
  done (took 3.354192456 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084595847 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071208942 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072118022 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067425751 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077858049 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074673199 seconds)
  done (took 2.04640303 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070586914 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070274646 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069472361 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069035937 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074014601 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072168034 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068036048 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070289356 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069806339 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069609108 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068837298 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068306836 seconds)
  done (took 2.434705779 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.165027668 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071830195 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072153638 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06804642 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073811469 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068478302 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083275758 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070899228 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087239673 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068643561 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068686044 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070721941 seconds)
  done (took 2.563635616 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18813086 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075234683 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22098736 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153802019 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101247247 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115333716 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114117149 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113660145 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137402871 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095961451 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150359941 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158835578 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106567758 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126785383 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088788423 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.124622543 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13928468 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15316249 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100073428 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151562987 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138050501 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120557795 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138466461 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097858005 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099511113 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114357035 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072992473 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077507674 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156799668 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122220485 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132572546 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104482207 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088248485 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165257607 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153257615 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129595818 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144297619 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081557163 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117382769 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.127303187 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189795427 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088031201 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146980364 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102700964 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077921358 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119487183 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108751584 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.112758848 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.097798403 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086301026 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277881962 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169059894 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130066776 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084455184 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119630923 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103938419 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109758502 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115542862 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171404716 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146494251 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119436098 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071342479 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109366411 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139439818 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12367873 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103915824 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.116289721 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089175621 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128437182 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145561939 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126203298 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136196086 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115892663 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084672688 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114078249 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13207654 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117314644 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157802206 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114996894 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072315641 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112648014 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093343424 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078819723 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143633949 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074915759 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161790721 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096843544 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119396769 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1273895 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106333927 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104835674 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1440299 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137219635 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100764615 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085238222 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099647853 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11352696 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132415644 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084189175 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105265259 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10611619 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077382089 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120356999 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073239671 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110140795 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092181228 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112126245 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269856607 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080337826 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116709797 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100727633 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099510992 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125440434 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145476049 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08556025 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078540067 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15206584 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113122696 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.098516693 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133640555 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146186288 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118256543 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095335773 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134662129 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163676321 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088360801 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148336949 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097359967 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081417384 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102621128 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113476431 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105123224 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.116863449 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07914608 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.110955578 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154640413 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073053632 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092652263 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123821483 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079335396 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079130535 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099658538 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098989418 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093422674 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097512922 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099259523 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126215674 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114680724 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100637441 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116710719 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093814438 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153319368 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08570032 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099595953 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101373304 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072481078 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128126961 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142949899 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076915115 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153785121 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.1159478 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113491304 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11172889 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081012922 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131328457 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076667859 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071731913 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127326907 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.261730418 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105768473 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.140123756 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112887862 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.116968164 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112050079 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119898181 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120674292 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.119726983 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103603937 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087601003 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10961137 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1201331 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07237752 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088460511 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080798626 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099769432 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090057848 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082380403 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129013467 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115547129 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109402094 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109214636 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09353621 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137916475 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077142909 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11768777 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115698641 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092234098 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.141921447 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140004584 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122818726 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097317373 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128441714 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072786886 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073915279 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.084537513 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117467292 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082710065 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081505982 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106560788 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138220615 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120196145 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124504308 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120925501 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11639001 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145913556 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072513712 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118512555 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134055726 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113485527 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101619182 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087785907 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095837655 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131363438 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097674227 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170636124 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106540322 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115483119 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298158287 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099236267 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077917785 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101554328 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129204655 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097072978 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132156132 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096322081 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084482808 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103302966 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077742595 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093562978 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118691593 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108488904 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127405276 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106361346 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120477147 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077097859 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10506191 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115265752 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112024481 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082459166 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111770687 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15243642 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094103727 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11055104 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138833833 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077307646 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.137134631 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158864854 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135034077 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082795655 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098894607 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113325433 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117944813 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112119216 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134138113 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097766691 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128070288 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106677367 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086011513 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083911648 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093390383 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10096072 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109159777 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.098871714 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.106937435 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093114474 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122933834 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097767488 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106003888 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110922188 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099742948 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095320497 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09355388 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16022879 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109301276 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154602997 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096218129 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.129016286 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.305832942 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0747996 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078592396 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079550998 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134326816 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08299756 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120118838 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111539038 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114842803 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113462951 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133461482 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092842735 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070742176 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104260106 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121819353 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119849445 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092818929 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.097548034 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147582113 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113755276 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07707222 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111374351 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11496836 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099767751 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15959575 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080146248 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108315893 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076025533 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07789093 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118094966 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140472154 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085282744 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101663812 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113474369 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104382533 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118826644 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093484781 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109590644 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127011281 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135383722 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119717439 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087596292 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105973362 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121153867 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141786326 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099727655 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096974626 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159845017 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13981665 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.147767392 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083645926 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10818098 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108123812 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104114096 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125391147 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082561078 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153373155 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079121215 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123436642 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093717229 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239516551 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119616966 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111878498 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085979067 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13467206 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109025884 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080670544 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078797674 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105390327 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110321972 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096998397 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073561109 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129683857 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073425549 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123696793 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155851895 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079213883 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100233746 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092730764 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080669992 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097761884 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097204699 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084149939 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096775365 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155508602 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084755252 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136422931 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124518649 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106695567 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128560288 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100200716 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639868226 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078613747 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138620494 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109025086 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166703422 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096774031 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111303536 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104934665 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111288308 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132597305 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097512858 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177396852 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122632271 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109490154 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076933928 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097425187 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09792005 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085174831 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103579822 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107542296 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105884345 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091445332 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109753619 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113136503 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080719765 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092197909 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140039921 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106526345 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284984092 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135251356 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082337126 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110870621 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124083113 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078358875 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113311776 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140500737 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099548393 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096284039 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081510612 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09478061 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158390135 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072562654 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141791402 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111607107 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10490908 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106608625 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102857592 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119878321 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09679432 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112270755 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08863213 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104196176 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106396703 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081938923 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077935889 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100271378 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104780771 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094544445 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092620731 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097485691 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138512812 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071736573 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093997868 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113487632 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13150197 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16291735 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10350473 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082272702 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111138502 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111170552 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106668074 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112390851 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080195852 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115242019 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079752078 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.09924812 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119116176 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10659898 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116478151 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105215224 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154584558 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083042974 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226464184 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092361464 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100381006 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087133322 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078718418 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093087622 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091631187 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097666466 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108473747 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311887079 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092645921 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088030965 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089653632 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07440363 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082053749 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118523686 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105348382 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109918447 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098824229 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080687093 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097748296 seconds)
  done (took 56.509932657 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1043121 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.07833165 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099003087 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149824038 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123848598 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204535019 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15510435 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190056644 seconds)
  done (took 2.822838443 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070248245 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096977912 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.1028433 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08431615 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068122468 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069585561 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.241379806 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082454508 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068154584 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09556688 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080895032 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070375767 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.432744706 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068426302 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069069363 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.078962202 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068920712 seconds)
  done (took 3.555437073 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.389807124 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.597237686 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.387117053 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077616858 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.902863143 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094046522 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.148313188 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141756239 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082699219 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534450813 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367492748 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134288709 seconds)
  done (took 18.574767287 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082402488 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080447845 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090742901 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091134183 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079241113 seconds)
  done (took 2.137853902 seconds)
done (took 106.265080332 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083234194 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.196551177 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07007972 seconds)
  done (took 2.003811076 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091682159 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08944291 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089227895 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087538276 seconds)
  done (took 2.07530969 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075700952 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078339493 seconds)
  done (took 1.866207655 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.243472973 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174350261 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099545564 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085608254 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081215132 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082005678 seconds)
  done (took 1.969298289 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074224706 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074377698 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074475032 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078569641 seconds)
  done (took 2.013017981 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.072077208 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.068601264 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.070201008 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073026471 seconds)
  done (took 1.996413686 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08550473 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086197851 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081156894 seconds)
  done (took 1.965033556 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107026609 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095720316 seconds)
  done (took 1.915713515 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082309591 seconds)
  done (took 1.797308418 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097345381 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.106139473 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131971261 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114672467 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142128362 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118864469 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083658253 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088679508 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078551807 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085458226 seconds)
  done (took 2.761163843 seconds)
done (took 22.676010977 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080716494 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37563798 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364437373 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092190584 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67389798 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358332665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994608647 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09337821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112552018 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070341003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087876663 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651800815 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.986097285 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328405019 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973711397 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331882123 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653969527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070145785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06987659 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070558607 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980228202 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070053219 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070499309 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071240338 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.6526888 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375154499 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071535238 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.33114822 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070590691 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074802732 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359512881 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071905344 seconds)
  done (took 16.333735517 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072592886 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123171883 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077682602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086065161 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072731581 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071480006 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073076231 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071117401 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122198834 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070741327 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088652992 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070465936 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074646671 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071505699 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090845505 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070063083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072691702 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071439826 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070882201 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072227656 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089789546 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070864189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071769151 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071319685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072080197 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083713315 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072007155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071060476 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071214505 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074839159 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07600256 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072366332 seconds)
  done (took 4.223945803 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11808386 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126736481 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078606576 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107635415 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117919684 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072740088 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147434101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094181904 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125177512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071044876 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088299669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070395611 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104608624 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071880524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091887453 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071108841 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073711879 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071531911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070853858 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072060788 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090347251 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070968428 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071609947 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071373301 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071852659 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08535672 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072469255 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071438752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071235821 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074941887 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07656553 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072479787 seconds)
  done (took 4.479560569 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071898335 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075096716 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082196452 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083554186 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069561705 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071520002 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072768101 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069172961 seconds)
  done (took 2.332344691 seconds)
done (took 29.097159871 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079962537 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069353871 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073224036 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08868803 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075410737 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080117925 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067845032 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076229581 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073586618 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073572248 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076821999 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069427792 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072067118 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067138659 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073861691 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06813571 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081726918 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072445318 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080738865 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081792565 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071403148 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074658471 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076604709 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081017845 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081408382 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081741342 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077716212 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074059849 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069780623 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07246992 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071065668 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079017281 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081760924 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082458369 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068631211 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068843676 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073431727 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070174526 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082498192 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077560747 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070791743 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077584377 seconds)
  done (took 4.871208989 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085309278 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089622989 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082995326 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080428764 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098335534 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083789529 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086954553 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079287537 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07893052 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086702893 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075145885 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082106921 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080278766 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073849468 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078139658 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075979668 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080120766 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07497493 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078392446 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078861011 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087682822 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07396781 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088250405 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080071799 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076075744 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081551638 seconds)
  done (took 3.861707862 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075268604 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086738623 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094139181 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144771833 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111665462 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087477422 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082731475 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093933387 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097910616 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070392271 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074061929 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093698576 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094117904 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075357401 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.111826529 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084778687 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084570984 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071503163 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076398328 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09777616 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089561741 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085986557 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094015122 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085261675 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06868948 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071687645 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073726845 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083702154 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071778995 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080979244 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072090074 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073161365 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070088188 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07925263 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072220064 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068617986 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092409905 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081009092 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082100723 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10615376 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078501414 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070967943 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094524006 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128512025 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068662048 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072729849 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072676484 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080786971 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069168566 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097125951 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081391252 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069411764 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070297079 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068684346 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069193844 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072312113 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071399042 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071516582 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079492265 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075806979 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090950686 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07441423 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088463454 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068844324 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079991489 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069118642 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.0709999 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068963105 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097925866 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071107152 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112937975 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07039205 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068259183 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080373603 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07938345 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075067867 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069273161 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088957414 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080248873 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073408458 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077603406 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072087325 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072643825 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099764786 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07000395 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068971869 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068748888 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075261843 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072621347 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070450579 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081019862 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068808645 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072567518 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088637488 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069244488 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070127759 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072555579 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071517453 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069145448 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080192533 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073792092 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071322807 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079812674 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069991802 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072748683 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082790716 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076653284 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06812402 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071627797 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072640049 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071096364 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071066293 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07292472 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071783951 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076409581 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076656315 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07597766 seconds)
  done (took 11.047256128 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166910433 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160541384 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071675176 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151623022 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078283988 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081438276 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155868256 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097829706 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070449455 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071174508 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070177146 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113364679 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108700261 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118793313 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082155267 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070415753 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095444509 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118308345 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.157511799 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150105174 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092160548 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078198925 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07265057 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071393245 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071701981 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079952973 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087065258 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078258132 seconds)
  done (took 4.599079652 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078674551 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104374955 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074974578 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092471856 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088931609 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070415731 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072471213 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071662241 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086571505 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078920092 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070783604 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075541746 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073607154 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073251973 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070854554 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076937735 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077230791 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069456749 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074423841 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07508607 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080306906 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094053234 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075504353 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069994092 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07249001 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070109971 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078316225 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081460829 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070509776 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105904404 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06807764 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075058768 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084128495 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070810679 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069878422 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070692394 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070489073 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070075694 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07229046 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068732049 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068756586 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073714804 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068820467 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077507377 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082696655 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076443672 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071952559 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072498186 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073098107 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06760708 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072838842 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072830385 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073150471 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077638368 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073979278 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073626491 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070978771 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095739737 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076091136 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069418661 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06931902 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069011343 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072573374 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.07961846 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085061139 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07228133 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068875521 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070511638 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082313636 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083000447 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069451915 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075172117 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067908864 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072154544 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072803737 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072848696 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070796789 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068591806 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06972915 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070388557 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071097039 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070239263 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069561214 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072990566 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068381848 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069109814 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070673087 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07465036 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077993564 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069568896 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073584728 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071523683 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069587267 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072440704 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075165445 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073177138 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080514303 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080557507 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071019085 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06888318 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085667671 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072917004 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072480194 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075779035 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074330875 seconds)
  done (took 9.633995954 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091504738 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070311297 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08608461 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093000244 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080110451 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075186159 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080226224 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070946359 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086160475 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075409489 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077742691 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068906939 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080672111 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079601815 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070903939 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080582852 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072533139 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090582305 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084070558 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068764919 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078779323 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081690307 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082157819 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084292734 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083882205 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085135896 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.082077262 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079570339 seconds)
  done (took 4.026782513 seconds)
done (took 39.768738111 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.842370964 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.986769759 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.810804163 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.989158582 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.999322673 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.92047219 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.902343918 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.806123769 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.062166681 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.851947953 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.088038315 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.27363017 seconds)
done (took 66.401243137 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.845409036 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.952448493 seconds)
    (2/2) benchmarking "String"...
    done (took 2.047419189 seconds)
  done (took 5.738931669 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.092169118 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.460488331 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.067528122 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.804138291 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.808012108 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.229252564 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.574028518 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.255996936 seconds)
  done (took 30.939325659 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.925526447 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.018266324 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.498660625 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.512983436 seconds)
  done (took 15.734134852 seconds)
done (took 64.181450804 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.84148113 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.79817165 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.802781404 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.825345981 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.803586109 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.798951133 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.798295234 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.798927565 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.821440435 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.818060011 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.79505981 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.795434661 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.796999368 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.829762492 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.416908819 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.85301897 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.809224104 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.798805875 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.792698618 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.818949635 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.79732172 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.792014783 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.219470187 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.979411219 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.40151012 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.069561034 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.195492382 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.193448809 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.796971565 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.793413486 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.831369562 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.011897621 seconds)
  done (took 204.631223908 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.791734552 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.68322691 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.745631483 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.797142688 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.106200779 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.973418008 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.895283627 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.195771691 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.798400578 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.81810987 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.949836458 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.79554139 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.959491154 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.786681117 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.826793402 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.813512554 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.946610058 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.981629282 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.824320371 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.944844841 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.806075125 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.806229691 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.736695315 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.923115776 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.810082517 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.811153082 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.812143875 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.783177201 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.96708753 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.921183899 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.789675965 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.793877526 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.939018913 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.645188789 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.78582704 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.797938752 seconds)
  done (took 169.492113864 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.965367632 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.784256857 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.777783682 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.830598899 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.899387408 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.781379464 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.433261563 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.786459447 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.28916507 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.782298853 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.775194905 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.776313427 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.776921222 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.788777167 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.860314575 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.778455213 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.791782915 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.779451893 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.801821698 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.780649598 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.776008502 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.77531864 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.77601987 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.776514649 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.77638913 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.775723461 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.776023832 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.98588726 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.015623888 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.776240546 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.776128803 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.911946751 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.79182665 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.856496581 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.780306973 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.866693946 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.827366673 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.895400426 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.778415408 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.992875878 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.850192252 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.775725464 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.772677005 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.838903341 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.787033886 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.773820497 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.774481526 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.779165894 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.838683854 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.028544739 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.77429561 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.89406409 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.268386527 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.777568851 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.772879805 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.773430748 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.773706887 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.37717264 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.77883673 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.772710555 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.7784752 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.779389059 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.7731877 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.774812299 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.159604566 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.843682086 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.953742753 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.041520173 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.778979996 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.47381071 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.90073943 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.772950305 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.772577139 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.77213492 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.774523168 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.772566537 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.774949901 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.899705595 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.780820599 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.903430958 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.861084744 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.895866111 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.78192308 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.775821589 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.784434079 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.599703331 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.851471888 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.810384955 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.609186989 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.780491921 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.149803867 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.551277337 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.780850822 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.776593863 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.790290447 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.776917795 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.775686051 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.777145387 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.85545747 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.776216903 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.777425961 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.897960571 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.502867358 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.076560054 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.7800415 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.77632778 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.782858775 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.857278116 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.904443389 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.775863057 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.842135552 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.782540553 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.779426967 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.864643899 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.777549718 seconds)
  done (took 401.294951179 seconds)
done (took 779.174710383 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.436137899 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.409554886 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.504311491 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.423625388 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.398511875 seconds)
  done (took 13.884572215 seconds)
done (took 15.597176776 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.853020513 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.856448257 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.793648319 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.857648547 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.790245014 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.855249046 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.838610411 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.797354512 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.825897065 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.798792631 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.824945296 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.797014135 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.784318894 seconds)
  done (took 25.385993527 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.012681522 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.024540503 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.844655881 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.009160235 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.818852793 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.998561033 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.942859343 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.920178436 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.917705767 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.788290112 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.785486962 seconds)
  done (took 22.77729339 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.01866651 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.005128685 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.848898439 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.026368563 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.823256862 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.01208007 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.928468807 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.928600753 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.922215516 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.788889366 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.784999181 seconds)
  done (took 22.802932107 seconds)
done (took 72.67947114 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.779416157 seconds)
  done (took 3.493217621 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.80286575 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.955118848 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.780440422 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.780630668 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.78084941 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.781841225 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.78249405 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.782313297 seconds)
  done (took 16.164799061 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.781187453 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.781066135 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.781198767 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.781806292 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.781467171 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.780128448 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.780635999 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.781814936 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.782541633 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.780745141 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.782043867 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.782030541 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.781762319 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.781571007 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.782102877 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.781868104 seconds)
  done (took 30.21961204 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.783505022 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.782043344 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.783481662 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.782264258 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.781772592 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.783274357 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.782972816 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.782266217 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.783080974 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.783099646 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.782332994 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.782427203 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.782588757 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.783805968 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.782240224 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.78301431 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.782180909 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.781893924 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.787336991 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.783684925 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.78237632 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.781311096 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.783771117 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.783323836 seconds)
  done (took 44.514494538 seconds)
done (took 96.106196702 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.586271398 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.705560712 seconds)
  done (took 10.009832372 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.792320894 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.790126815 seconds)
  done (took 5.39000274 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.78997348 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.790111485 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.790320866 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.79059457 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.791071839 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.79064806 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.790349699 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.791792022 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.790728899 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.790741651 seconds)
  done (took 19.630617312 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.79022198 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.790615345 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.790826658 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.791802703 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.790890153 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.791878158 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.791709749 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.792282214 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.791831458 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.791021431 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.790599665 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.791528684 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.791217714 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.791415401 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.791510471 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.790579779 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.791619167 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.791302919 seconds)
  done (took 33.968179569 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.791093968 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.791252025 seconds)
  done (took 5.307040253 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.790819605 seconds)
    (2/7) benchmarking "second"...
    done (took 1.791089492 seconds)
    (3/7) benchmarking "month"...
    done (took 1.792308961 seconds)
    (4/7) benchmarking "year"...
    done (took 1.790064235 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.791150606 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.792319721 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.790745493 seconds)
  done (took 14.26359637 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.791733822 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.952701078 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.021486436 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.469670917 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.793683488 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.793817541 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.709704315 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.794704419 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.796040314 seconds)
  done (took 19.849595289 seconds)
done (took 110.135743304 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.65202357 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.793953294 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.090462927 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.865724449 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.862312363 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.133097478 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.799467511 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.086423817 seconds)
done (took 43.008987985 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.798925639 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 6.593974519 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 6.597017233 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.818844216 seconds)
  done (took 21.736548596 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.793990446 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.108975358 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.817156208 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.639863545 seconds)
  done (took 22.13294907 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.155890417 seconds)
    (2/2) benchmarking "read"...
    done (took 2.14480802 seconds)
  done (took 6.031046344 seconds)
done (took 58.42669163 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.793507525 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.793720376 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.793284877 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.794495268 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.793727681 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.793167363 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.792650146 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.793034341 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.793957515 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.794560655 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.792882532 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.793086293 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.793403 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79343797 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793150743 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794098825 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793976504 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.79565015 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793276274 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794237813 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795285252 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.79452273 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.794021726 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.794804771 seconds)
  done (took 44.77860347 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.79499114 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.794592079 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.79468091 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.794756325 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.795739588 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.795606131 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.796671257 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.795158147 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.795035891 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.795605616 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794153513 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.794655996 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.795502164 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.79645001 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793963331 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.794897498 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.794863969 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796038185 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794510349 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.794798084 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.795363642 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795573344 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.795088379 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796400613 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.79542589 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795306117 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.795727442 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.795618486 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.796315787 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.797672019 seconds)
  done (took 55.589543736 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.79687753 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.795455529 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.794723871 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.797266427 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.795876252 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.795745064 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.795949051 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.797120226 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.795831311 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.796820367 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.796311728 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.796203646 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.796457117 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.796002493 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.798208286 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.797061204 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.796535779 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.797065717 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.797429897 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.796636057 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.797881619 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.797110542 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.796889298 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.797724595 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.796478007 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.797609523 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.796917151 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.797354087 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.797887794 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.797526495 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.797558336 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.797590195 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.797159376 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.796995174 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.798548541 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.797730993 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.797303867 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.797753554 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.798027136 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.797133784 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.798364166 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.797298664 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.800164748 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.798858376 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.798373048 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.79870954 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.797693041 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.798234374 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.798978691 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.79696269 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.79775567 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.799497422 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.79825681 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.799479604 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.799107206 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.79846173 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.798638826 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.798624173 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.798869388 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.800073002 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.798863625 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.798798109 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.799549853 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.798701122 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.799582446 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.798879649 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.798832536 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.798570407 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.799373113 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.799112607 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.799920599 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.800199144 seconds)
  done (took 131.172644279 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.80016746 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.800520927 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.800321429 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.799505388 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799672752 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.798844667 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.800325757 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798737612 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800448346 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.800909021 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800087598 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.800861238 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800319882 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.80009634 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801360291 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.800556724 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.800857963 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.800156515 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.800455043 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.802334976 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.800668514 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.801641875 seconds)
  done (took 41.342132694 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800620222 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.800254745 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.801566983 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.800742593 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.800576854 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.800779348 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.800893625 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.801291867 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800734296 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800646596 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800857442 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800951554 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.801046804 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801328021 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801779802 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.801248276 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801023209 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.802557966 seconds)
  done (took 34.153633256 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.802262255 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.80158893 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.802238275 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.801882204 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.802218934 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.802764023 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802527054 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.80180294 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.802098593 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.800807571 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.801622452 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802381277 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.801612375 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801016734 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801860048 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.801560404 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.803915586 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802919835 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802752083 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801779051 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.803548876 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.8026003 seconds)
  done (took 41.383184746 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802945706 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.802881397 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.804280335 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.803815238 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.803603634 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.804349718 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.803300261 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.803252828 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.803070175 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.802885875 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804290479 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.803019017 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.803822707 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.803582306 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.803288217 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803886504 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.804501183 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.803307094 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803657243 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.803419985 seconds)
  done (took 37.809115219 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.805771756 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803915075 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.804024029 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803959802 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.806888007 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.805229509 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804628362 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.805025254 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.803864781 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.804025912 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.804223416 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.805503633 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800924968 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.80179434 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.80232257 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802319273 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801294364 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.803846996 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.800824082 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80211762 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.802060951 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.802695469 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.8022629 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.80161384 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.802215126 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.802093824 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802466465 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.801605895 seconds)
  done (took 52.227189592 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802060688 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.801358775 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.801202264 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.802134552 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.803619477 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.80237085 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.801776848 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.802415896 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.802832409 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.803264844 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.803086658 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.802354407 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.802379593 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.802779483 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.802934863 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.803316102 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801782254 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.802715812 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.803235384 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802204191 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.803184992 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804217634 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.802413101 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.802135084 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803385562 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.802992596 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.804446706 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.803764777 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80276106 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.8030741 seconds)
  done (took 55.819489102 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.823405151 seconds)
    (2/2) benchmarking "in"...
    done (took 1.82557004 seconds)
  done (took 5.385603002 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.802535971 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803865301 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.802984448 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.803669554 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.803766287 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.803868496 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.803792587 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804426694 seconds)
  done (took 16.165244165 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.80648705 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.804494699 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.804398976 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.804414803 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.805393892 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.806763761 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.812414169 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.804784148 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.806131073 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.806099651 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.811031973 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.814662507 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.808498492 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.806783033 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.80623554 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.808629105 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.805283772 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.806089027 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.804698033 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.805623606 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.805929135 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.80867771 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.810264641 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.805188077 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.807848319 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.81664773 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.811474576 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.805149843 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.808123691 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.810187271 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.806907714 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.805987726 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.806092954 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.806536649 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.805933731 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.805955384 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.815529201 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.80932117 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.813135792 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807391981 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.805661219 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.805817341 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.808251281 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.808868213 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.8097047 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.80685917 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.806913789 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.806589618 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.80756639 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.810376446 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.813652589 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808593108 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.806041152 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.81225867 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.809694835 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.815005223 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.808423978 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.811084413 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.816624628 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.818654935 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.818413424 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.816513677 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810922665 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.807003741 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.817682177 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.831742922 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.81598715 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.808455218 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.807581159 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.807230668 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.816769147 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819677112 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.818842329 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.807772753 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.808071667 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.807492641 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.810378888 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.808353629 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.815975037 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.813949099 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.809098327 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.808944262 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.818548671 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.831956375 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.809080624 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.808879391 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.809136738 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.809242677 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.810192141 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.820658006 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.809909368 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.808741238 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.809494345 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.81087293 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.811615972 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.808857587 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.808945193 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.811027343 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.808847237 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.808589195 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.80993587 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813249295 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.819325363 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.810106386 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.809644702 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.818372668 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.810223234 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810239223 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.817682229 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.810229183 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810410624 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.812321581 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.816121434 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.809654209 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813340246 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.819477187 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.812478416 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.813616185 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.810986403 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.810753223 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819616332 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.836737741 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.81156523 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.811462729 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.816613323 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.821365931 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.811614444 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.815961947 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.811336414 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.811035525 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.810062697 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.814417183 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.811207539 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.814823459 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.812084635 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.814094819 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.812017567 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.810939402 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.812467928 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.814258244 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.813883234 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.813622427 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.813670066 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.815455054 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.812418344 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.815018029 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.81915872 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.813660539 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.813931584 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.814347853 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.812947244 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.812309408 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.814216969 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.812781159 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.814353115 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.813936268 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.813988285 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.813203343 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.812238522 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.811977886 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.812829446 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.815188229 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817810759 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.812396473 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.818773599 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.81436431 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.812954468 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.813936138 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.812801125 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.813816866 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.812923448 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.814902183 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.81772731 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.821272118 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.812582789 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.813861129 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.817927531 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814303157 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.814062453 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.813927736 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.817943119 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.823379985 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.814589984 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.821421491 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.815690785 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.814653902 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.814883698 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.816769422 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.816460091 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814212233 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.817835639 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.821184765 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825990734 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.82412423 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.816107601 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.818072217 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.81559905 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.818843878 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.818925954 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.816284103 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.815985225 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815597329 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.816033147 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.815325185 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.817326355 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.815303259 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.815891669 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.814772543 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.814338964 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.815093564 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.815518925 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.817363321 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.817425107 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.815447888 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815355071 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.817519622 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.817053897 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.816318218 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.816468419 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.816600865 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.815305359 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.816421255 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.824395765 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.816086615 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.819031957 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81813755 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.819370776 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.816908171 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.816296544 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.819669801 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.818419211 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.823531843 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.819323202 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.818997855 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.825032335 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.818556014 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.817446293 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.821487269 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.817663267 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.816669002 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.820331289 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.824339098 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.817076521 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.816781909 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.817631729 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.818287609 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.816907846 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.825470678 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.818758952 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.818234921 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.817373388 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.819917469 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.816994285 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.819491634 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.820401957 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.818232504 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.820964304 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.817624796 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.817576844 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.821371271 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.817505821 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.818487755 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.817967575 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.822122863 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.824915779 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.825490952 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.819271952 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.822705791 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.81944676 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.821672696 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.821378921 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.817984695 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.819878983 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.831296699 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.825665417 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825469091 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.822624452 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.818442908 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.825926657 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.820766674 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.823551751 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.8213165 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.820764101 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.821519955 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.823154177 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.820291169 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.821117682 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.820189095 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823205293 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.821306701 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.823232991 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.819497245 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.821925497 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.821177512 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.820600556 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.819588632 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.821176716 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.820323644 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.824783923 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.823262533 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.821352763 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.822356555 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.827886889 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.823277806 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.823041518 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.82102908 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.821661388 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.820937491 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.822573854 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.820830952 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.824821595 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.828011744 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.82413546 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.830544505 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.824527261 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.831245106 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.821362063 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.823605076 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.829163391 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.820397133 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.821797888 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.822228531 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.820733474 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.828702252 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.821396399 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.823714542 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.825420297 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.822004144 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.821742425 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.822060689 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.822706577 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.822595482 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.822415108 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.832023604 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.824428122 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.826880985 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.826380383 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.82253173 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.822727548 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.821096285 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.82407213 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.827130889 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.823282939 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.824237088 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.82387512 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.823438486 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.822224694 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.823213283 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.822901411 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.822050705 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.822276704 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.830314968 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.824280744 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829117287 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.822769735 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.831672353 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.822682061 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.831280172 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.825867018 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.825195567 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.823549174 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.822968432 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.825378957 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.82503137 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.825863604 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.823415038 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.825248039 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.827066645 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.822997705 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.827756722 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.826730637 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.823921838 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.825685193 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.833699657 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.845180383 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.826262184 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.827662114 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.82385629 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.826206907 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.828303207 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.824420091 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.824447087 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.82773995 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.834712549 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.831194325 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.826361217 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.824071685 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.825900116 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.823570801 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.824428922 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.8246586 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.82525603 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.824578992 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.826286542 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.824415481 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.829782551 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.825601729 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.826598841 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.82766481 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.82781934 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.83655347 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.825586532 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.827235556 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.82533185 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.826298395 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.827426988 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.82723339 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.826820442 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82743637 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.826252542 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.827837511 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.833981815 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.834233292 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.831296537 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.827886311 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.826162714 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.827858254 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.827527268 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.825632228 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.826236486 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825765608 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.828194713 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.825468449 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.828278108 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.828237451 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.826689171 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.827040823 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.826190517 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829351658 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.835682574 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.827998266 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.8276731 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.826111571 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82625754 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.826961498 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.829168793 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.835317717 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831538794 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.837670576 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.835166533 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.832432482 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.82955657 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831020757 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.83586823 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.826518711 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.8290137 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.827740076 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.830431427 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.828235301 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.83271644 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.827616467 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.836607809 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.829751449 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.828709975 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.837455275 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.830757066 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.828883223 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.830357183 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.833100787 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.829294119 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.827675346 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.827525561 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.830231599 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.835430238 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.83155241 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827985161 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.832985029 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.830404635 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.830152451 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.833037684 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828970678 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.831655244 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.827961911 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.831562799 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.8287178 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.827926411 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.828309221 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.829938415 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.830323481 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.832073085 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.83668865 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.829790912 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.833066837 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.831626555 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.831477334 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828828342 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.829792899 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.828373128 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.829725897 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.831639518 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.829162743 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.831447692 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.833791901 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.831342115 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.831977079 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.834988003 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.830594826 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.832873768 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.840085132 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.837677063 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.831058194 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.832178893 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.831715768 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.834737566 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.831090185 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.831049882 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834235681 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.833824651 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.830086639 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.830676862 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.830807 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.835456472 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.847999034 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.831972176 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.833510712 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.833494822 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836137288 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.831346683 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.831433347 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.831272734 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.834105702 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.835844116 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.839591718 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.831403193 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.839547609 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.833634064 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.834417097 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.835251752 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.835700487 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.840359321 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.8354268 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.831725422 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.832337466 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.837458214 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.848465692 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.832026666 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.842489407 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.862145034 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.835372023 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.834256988 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.832351166 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.833257459 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.832664603 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.835408084 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.832912183 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.832325195 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.831462169 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.833959825 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.834946741 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.840487057 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.83579814 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.832161274 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.832082699 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.834264669 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.83494842 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.83437924 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.833109796 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.833765496 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.833248337 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.834110379 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.833994753 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.835162078 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.845567631 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.844208922 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.833349628 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.834603084 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.833162097 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.838905124 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.838462137 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.845344025 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.840703786 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.83363134 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.834479756 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.837809054 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.833564954 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.834592337 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.835682504 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.835475113 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.835759593 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.833974997 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.845211947 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.84186681 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.840569202 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.836403604 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.834154022 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.835093547 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.83676482 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.834657312 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.835217936 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.83832736 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.836283221 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838554136 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.834751414 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.835501437 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.838677767 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.842228067 seconds)
  done (took 1087.988403281 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.83591282 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835885069 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835130944 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.83499928 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835648891 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835873005 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.836112814 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.836136382 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.835826345 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.835615068 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.835596784 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834898077 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.836498722 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.83660716 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835444434 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.835483153 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.836253322 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.836877112 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.836329292 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836202551 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.835916064 seconds)
  done (took 40.32133332 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.836789304 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.836642492 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.83680574 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836343075 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836411945 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.835856934 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.837124711 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836778952 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.836751128 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836717843 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.836681769 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836692854 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.838090313 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.837593285 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836975348 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837259905 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.840287541 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.837903318 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.837137372 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.837949883 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.837933264 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.83764029 seconds)
  done (took 42.187847329 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.838166493 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.837366859 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.838469402 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.837303481 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.837018122 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.837038867 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.83871242 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.837927414 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.839035629 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.83942937 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.838475579 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.840605526 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.846169277 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.846132836 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.840794675 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.837792102 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.984291686 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.838708484 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.838060815 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.838808272 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.838132543 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.844813888 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.838543444 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.838751123 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.837860322 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.839124098 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.838825484 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.838919259 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.838648293 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.841467661 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.843697307 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.839850156 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.841715368 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.843613093 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.840219402 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.840421121 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.84401044 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.839666227 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.839770561 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.839091762 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.850042772 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.861856867 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.840647521 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.847858851 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.840423729 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.839378198 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.844008991 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.848055909 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.840160654 seconds)
  done (took 92.121501726 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.839796432 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.839489937 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.840029182 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.839205032 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.839991429 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.839338893 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.840140261 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.839872837 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.840292804 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.839923431 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.840942731 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.840582122 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.840000936 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.839997022 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.840367728 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.841032515 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.840681671 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.840296526 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.84128071 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.841414826 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.840845473 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.841301013 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.840856927 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.840705405 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.841162503 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.841202972 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.840840531 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.841154907 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.842601453 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.841491671 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.841521929 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.842315668 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.841352042 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.841103238 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.842393422 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.842510644 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.842316364 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.84199323 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.841670265 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.842545998 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.842293218 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.842330813 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.841620022 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.842953575 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.841307679 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.842286297 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.841745929 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.841293116 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.842521307 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.841506139 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.841888228 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.843643572 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.84267881 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.842573623 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.843039448 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.84216539 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.842418298 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.842435163 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.843102281 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.842898356 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.842364194 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.843022822 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.84215987 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.843391175 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.844580976 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.843962852 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.843286387 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.843269939 seconds)
  done (took 127.003857797 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844474422 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.84386189 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843830173 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84389292 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.843558864 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.843966741 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.844113387 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.84479595 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.844062546 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.844385024 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844460537 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.84480059 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.844672002 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.843511257 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.844022612 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.844633012 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.843960235 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.845444755 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.844262821 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845038762 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.84542327 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.844821562 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.84564797 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.846709479 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.84576282 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.845170525 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845576016 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.846495488 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845582715 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.845617917 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.845600458 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.845706474 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.845092745 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.846267811 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.846875129 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.846596094 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.845531075 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846564569 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.845840312 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.845700677 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.845727953 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.845894288 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.84591133 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.84581992 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.846124214 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.846582702 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.845622349 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.846705806 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.846518961 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846263545 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.845679359 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.846307736 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845327509 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.84655421 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.846108189 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.847106108 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846612487 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.846325923 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846741566 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.846171032 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.847453238 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.846453916 seconds)
  done (took 116.197662379 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846725037 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.845545011 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.84819115 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.846347013 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.847098528 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.847541686 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.846969247 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.846841166 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.848216583 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.847092848 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846432822 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84788306 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848688393 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847809718 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.847155359 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848776002 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.848247357 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.847907716 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847977372 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.849302835 seconds)
  done (took 38.729198995 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.84771657 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.847686492 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.848027019 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.848401513 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.848064066 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.847959736 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.848097364 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848199286 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84794823 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847644352 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.848474557 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.846983608 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847837821 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.847916935 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.849323676 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.848409568 seconds)
  done (took 31.349070091 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.848391278 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.848672696 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.849060408 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.849171507 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.848152892 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.848423073 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.848519609 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.848730423 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.849684508 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.848970069 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.848844621 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.848985794 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.849174409 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.850134226 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.849761812 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.849461057 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.848743546 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.848620703 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.849646375 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.851588426 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.851124665 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.848305728 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.849311511 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.849138406 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.850226594 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.851178175 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.850192227 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.850233962 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.850226951 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.849733443 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.850247538 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.849095147 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.850028889 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.850224263 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.850424056 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.850705147 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.850946801 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.850035638 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.850510218 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.850425553 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.851622814 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.851130536 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.850714677 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.852081081 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.851299536 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.850588144 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.850796456 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.851735741 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.850333302 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.850911278 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.850664315 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.852150794 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.850485878 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.85113004 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.850709662 seconds)
  done (took 103.533049211 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.851493395 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.851527563 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.851081654 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.851207948 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.851362464 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.851196087 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.850979376 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.850866248 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.851448904 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.851661884 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.851509224 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.850690708 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852187599 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.851415068 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.851855934 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.851364211 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.851351235 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.85305522 seconds)
  done (took 35.109398363 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.852177714 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.851823168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.852241759 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.851845732 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.852281908 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.852361824 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852159593 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.852441868 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85157533 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.853367061 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852669694 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.853542513 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852772045 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.853312964 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.853804576 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853668363 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.853384976 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853537157 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.853576262 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.853552552 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.853988356 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.852496375 seconds)
  done (took 42.546595311 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.854628049 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.85375215 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.868243928 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.874232904 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.873636998 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.886235836 seconds)
  done (took 12.996630872 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853531773 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853400526 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853104729 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854352928 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854160646 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8536753 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853412352 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85386576 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853994587 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854424835 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854089737 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85431667 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854350927 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853696952 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853826866 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854055881 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854838367 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853934221 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855086571 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854535087 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85393226 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855160464 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854562531 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85418514 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855001128 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853848715 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853912795 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856628796 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855444045 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854443881 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85533761 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855349016 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854881448 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855776454 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854821706 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855637463 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855266467 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855665877 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855227 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855063869 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.855773909 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856617478 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855980098 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856799717 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855995725 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856241069 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855550094 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856213789 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856288894 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857046019 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857043386 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855717828 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856632232 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855869632 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856282918 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856541624 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856101178 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8569234 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857973811 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857278413 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856582604 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857115603 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856772236 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856992522 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856882376 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857884432 seconds)
  done (took 124.239184004 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856470222 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.856906834 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856069191 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857057006 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857679233 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85682195 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85748604 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856961707 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858092939 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858313082 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85770588 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856706494 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856942848 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857539513 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857088884 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856881166 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858402738 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858340668 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85682807 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857983299 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857788441 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858423961 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858361777 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860492314 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857812157 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859052758 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858990131 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858528996 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85836622 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859489533 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860092939 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859557576 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859763651 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.859541213 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86011024 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858834977 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859665779 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85914969 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859345658 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859079458 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859122552 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859285978 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858949425 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859197665 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859829134 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859116005 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859809535 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859237338 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858863111 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859332212 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860047686 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858985747 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859679311 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859326236 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859359753 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85964446 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860551895 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859999073 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859780465 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859643117 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859986513 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860621633 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86019886 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86022433 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859677836 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860415994 seconds)
  done (took 124.470569209 seconds)
done (took 2536.35276352 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.860470286 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.9537893 seconds)
  done (took 15.605866235 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.026642002 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.977459422 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.86445689 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.917182224 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.865216948 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.884545965 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.887491258 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.864735844 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.864479568 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.864288855 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.864894901 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.049542828 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.866167727 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.865497124 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.865139996 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.955719103 seconds)
  done (took 52.288836151 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.868079602 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.868667836 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.876866948 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.870412983 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.866831134 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.879494444 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.898502399 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.870409233 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.901428778 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.877025321 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.934834655 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.876837018 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.866876829 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.915713372 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.878195316 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.882328241 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.956847121 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.941955417 seconds)
  done (took 35.82523369 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.943276915 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.877907323 seconds)
  done (took 10.622693485 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.861796826 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.919068846 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.911979056 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.873863819 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.875461317 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.90002016 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.90205923 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.905358058 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.883904905 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.907782133 seconds)
  done (took 70.738311575 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.872152114 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.870515304 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.869087336 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.866238398 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.863557442 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.868265402 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.866233772 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.865514288 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.518009979 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.901190192 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.874879885 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.872589043 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.866895359 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.868631132 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.865870168 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.890111515 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.985789827 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.865134033 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.864849434 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.871871575 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.866723207 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.917204631 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.880394235 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.868517033 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.897439523 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.519051203 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.874544553 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.872453604 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.975413801 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.865398495 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.866927729 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.052480759 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.869844794 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.327649094 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.133264016 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.87166524 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.878711761 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.875236044 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.865947207 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.97895197 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.869048552 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.872870802 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.776288307 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.115211489 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.971360879 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.910579327 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.168896336 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.88284308 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.868009496 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.895901031 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.870837296 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.869544134 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.881861198 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.380013711 seconds)
  done (took 132.575034199 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.865593561 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.214131688 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.033467463 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.869253724 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.149849395 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07212 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.869566503 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.91338551 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.868302984 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.095301229 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.119489208 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.969733906 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868835567 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.868710678 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.87080458 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.865521696 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.021222793 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.936973638 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.869740183 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.866565448 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894130948 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106873044 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.989309864 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.870314793 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.894732043 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.078071579 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.988579919 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.969889858 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.651472717 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.868378499 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.930568441 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.870149681 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.871465889 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.867646777 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.023070565 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.960567435 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949486695 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.870089133 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868149447 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.867597266 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.613778027 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06653855 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.961351803 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.996971452 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118856651 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.072856475 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.644584219 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.868219912 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.603213614 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.02992586 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.096708789 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.096020258 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.990562466 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.871916939 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.393534228 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.86879293 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.868627477 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.116102185 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088291846 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.9644148 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871198577 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.870503892 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.870381983 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.15792723 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.872873222 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.963357346 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871168779 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.870681933 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.965172357 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.965523218 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.097209508 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081728631 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.899311729 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.209179316 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.383506697 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.115691634 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.934672361 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.119253066 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.872867579 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.870136786 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947404068 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.709817147 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.123365593 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.149987813 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.113646461 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904455633 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.588512516 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.868937927 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.094496714 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.089235357 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.128784466 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.114306416 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.109179515 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.19166323 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.870890169 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.870584618 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.128481806 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.993372447 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.873070354 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.212502152 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098983116 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.39303636 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.897892505 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.173912297 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.001185583 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.874687191 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.50782909 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.87267802 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.098714414 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.909842 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.87418322 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87247377 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.08896858 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.950347102 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.873649182 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.513431236 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.932305398 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.876485187 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.10434552 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.875244941 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.138591442 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874903764 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104158126 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.289393516 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901844627 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.099347909 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.11734647 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.875234973 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.110787915 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.114185916 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.985366509 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.091887825 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.494204902 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.874484091 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.156612741 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.876465293 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.872860474 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.041768981 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.875642457 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.013626036 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.875494147 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.165549378 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893851898 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.10458295 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.317573187 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.124884482 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.904610727 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92289749 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.877156819 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.004391822 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.875957168 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.707151827 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.029209496 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875845224 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.874220769 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.666699336 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.877333411 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.023501766 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.099130718 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894593872 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.945034361 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.53252272 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.873423303 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957518075 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896137636 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.258877851 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.8757522 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.124204195 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.876603932 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.873715748 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.874579502 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.157454287 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.055670838 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.87706342 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.874928506 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.775308769 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.874131202 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.875207095 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.054983485 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.22677938 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87572649 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075017015 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87799645 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00162045 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.877244197 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.944790595 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.214837467 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.87466973 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.875984168 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.876371484 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.876472435 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.876855213 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134855462 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.898674658 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.367190265 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.010472885 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.14488971 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.183432705 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.114195382 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.917241642 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.877547719 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.129451208 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.87984851 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.937421203 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.879226581 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.895305501 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100671343 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.880821623 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.082814264 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.143220955 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.881722979 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923201008 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.877000989 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875141742 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.875442077 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.019474205 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956920824 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.878717353 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.876813189 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.989341376 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.996777333 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.0827497 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.877252204 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.95160715 seconds)
  done (took 904.245112225 seconds)
done (took 1223.694285854 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.877150115 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.877492727 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.880830019 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.877461237 seconds)
  done (took 29.321312993 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.878703227 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.878173274 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.878217926 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.877006647 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.878414369 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.878325246 seconds)
  done (took 13.076798599 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.048756442 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.876343271 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.882460702 seconds)
  done (took 21.616226054 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.948229764 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.26181733 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.011968876 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.29437679 seconds)
  done (took 10.326731243 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.877883999 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.878404664 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.878284836 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.877994923 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.880649379 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.879733141 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.879940586 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.880180562 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.879735863 seconds)
  done (took 18.72346498 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.891302684 seconds)
done (took 98.763015192 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.903586881 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.944430447 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.666884409 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.974939015 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.061064053 seconds)
    (6/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.883258072 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.886781884 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.755088461 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.556416271 seconds)
    (10/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.124061054 seconds)
    (11/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.905382406 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.895434363 seconds)
    (13/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.879519594 seconds)
    (14/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.553263416 seconds)
    (15/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.881608426 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.970110045 seconds)
    (17/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.103001283 seconds)
    (18/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.87874492 seconds)
    (19/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.293096316 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.061418853 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.268807778 seconds)
    (22/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.885071555 seconds)
    (23/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.236733547 seconds)
    (24/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.883255792 seconds)
    (25/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.210054373 seconds)
    (26/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.332312261 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.173438288 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.908076063 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.166369281 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.905007581 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.880479262 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.375623296 seconds)
    (33/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.432103284 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.145101146 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.005965939 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.967730294 seconds)
    (37/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.885397988 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.799887321 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.622150172 seconds)
    (40/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.020743715 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.903820085 seconds)
    (42/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.209343214 seconds)
    (43/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.889408283 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.399288658 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.140161344 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.886248826 seconds)
    (47/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.527877485 seconds)
    (48/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.083159521 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.062355953 seconds)
    (50/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.884150134 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.668674113 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.882952466 seconds)
    (53/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.639156648 seconds)
    (54/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.90866838 seconds)
    (55/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.96039089 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 2.097941093 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.883878752 seconds)
    (58/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.368314194 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.826410276 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.237866462 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.826353322 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.888010597 seconds)
    (63/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 8.020910495 seconds)
    (64/309) benchmarking ("sort", Int64, false)...
    done (took 5.648674614 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.213596025 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.884966647 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.322167534 seconds)
    (68/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.064362451 seconds)
    (69/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.740932828 seconds)
    (70/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.881886528 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.133742302 seconds)
    (72/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.24865798 seconds)
    (73/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.04331564 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.121977252 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.280759457 seconds)
    (76/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.042056839 seconds)
    (77/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.902502869 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.171397581 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.51867677 seconds)
    (80/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.133309445 seconds)
    (81/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.970588897 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.881057002 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.74662287 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.137522572 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.920632539 seconds)
    (86/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.093667905 seconds)
    (87/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.366814889 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.21474463 seconds)
    (89/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.719934122 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.660597495 seconds)
    (91/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.909098287 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.249924534 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.198812834 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.888187497 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.992617342 seconds)
    (96/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.763642662 seconds)
    (97/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.84426191 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.99250116 seconds)
    (99/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.952687762 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.895269137 seconds)
    (101/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.364782617 seconds)
    (102/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.199314285 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.892045446 seconds)
    (104/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.782413859 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.050209051 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.018664496 seconds)
    (107/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.012274323 seconds)
    (108/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.962403706 seconds)
    (109/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.907065531 seconds)
    (110/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.028700196 seconds)
    (111/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.086286963 seconds)
    (112/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.885004608 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.130456368 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.880124066 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.163643592 seconds)
    (116/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.897132072 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.325862867 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.897664516 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.760894756 seconds)
    (120/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.321433938 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.008203095 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.960987194 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.023711923 seconds)
    (124/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.97205926 seconds)
    (125/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.975605552 seconds)
    (126/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.945064807 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.229859125 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.171519 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.84591517 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.873529661 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.550604322 seconds)
    (132/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.869261655 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.869103137 seconds)
    (134/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.155457305 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.886056382 seconds)
    (136/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.866334122 seconds)
    (137/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.059122172 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.561037326 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.988744063 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.215418588 seconds)
    (141/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.98197548 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.886451196 seconds)
    (143/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.968720554 seconds)
    (144/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.137149847 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.231824662 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.895638601 seconds)
    (147/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.919191744 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.90761423 seconds)
    (149/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.014522739 seconds)
    (150/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.91370826 seconds)
    (151/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.567592143 seconds)
    (152/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.993463686 seconds)
    (153/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.094603141 seconds)
    (154/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.886220419 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.114980343 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.979946642 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.243505325 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.011338507 seconds)
    (159/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.957116853 seconds)
    (160/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.990891925 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.87844182 seconds)
    (162/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.210573847 seconds)
    (163/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.87865694 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.770291427 seconds)
    (165/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.944394321 seconds)
    (166/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.899504536 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.098455285 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.504778681 seconds)
    (169/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.877531169 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.902063478 seconds)
    (171/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.9054097 seconds)
    (172/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.072520033 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.891113782 seconds)
    (174/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.909684961 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.888651894 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.280478779 seconds)
    (177/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.325580454 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.891681132 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.995163579 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.88883828 seconds)
    (181/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.118756039 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.224684635 seconds)
    (183/309) benchmarking ("sort", Float64, false)...
    done (took 5.660567866 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.20221359 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.024125409 seconds)
    (186/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.050049019 seconds)
    (187/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.90032368 seconds)
    (188/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.889886102 seconds)
    (189/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.951060114 seconds)
    (190/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.328155634 seconds)
    (191/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.995236477 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.972375156 seconds)
    (193/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.888252588 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 3.302707079 seconds)
    (195/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.893324247 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 3.444252801 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.886955113 seconds)
    (198/309) benchmarking ("sort", Float32, false)...
    done (took 5.650197816 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.034555632 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.071349275 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.891558682 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.794092016 seconds)
    (203/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.89896049 seconds)
    (204/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.107523764 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.966732613 seconds)
    (206/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.381436054 seconds)
    (207/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.24489815 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.038086339 seconds)
    (209/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.994331142 seconds)
    (210/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.160432961 seconds)
    (211/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.89646746 seconds)
    (212/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.61833332 seconds)
    (213/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.93432036 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.354870534 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.901210938 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.119952769 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.793412139 seconds)
    (218/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.223847561 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.233606165 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.587085591 seconds)
    (221/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.073917217 seconds)
    (222/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.271248126 seconds)
    (223/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.234535159 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.898633487 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.091437942 seconds)
    (226/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.007384256 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.230260314 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.138621909 seconds)
    (229/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.897159769 seconds)
    (230/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.705757945 seconds)
    (231/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.026796764 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.916339838 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.036065019 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.51585295 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.899843043 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.061230349 seconds)
    (237/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.996009518 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.004667801 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.89680492 seconds)
    (240/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.058434764 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.296882881 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.975988677 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.904058073 seconds)
    (244/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.999680503 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.01961059 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.992980047 seconds)
    (247/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.193252631 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.899946868 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.523100332 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.899452917 seconds)
    (251/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.158923964 seconds)
    (252/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.147524174 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.581008994 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.796171959 seconds)
    (255/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.047758578 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.002262914 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.917294865 seconds)
    (258/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.045573857 seconds)
    (259/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.015598617 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.898827123 seconds)
    (261/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.044326059 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.241793037 seconds)
    (263/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.978484172 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.875167825 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.325530901 seconds)
    (266/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.906345838 seconds)
    (267/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.896013692 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.186782604 seconds)
    (269/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.933308343 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.95674003 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.896491846 seconds)
    (272/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.095345682 seconds)
    (273/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.214761896 seconds)
    (274/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.963278949 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.027390884 seconds)
    (276/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.052165998 seconds)
    (277/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.190692729 seconds)
    (278/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.98257537 seconds)
    (279/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.97416063 seconds)
    (280/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.900471088 seconds)
    (281/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.066116217 seconds)
    (282/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.90146923 seconds)
    (283/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.022511055 seconds)
    (284/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.998525128 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.680704697 seconds)
    (286/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.897686216 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.857538688 seconds)
    (288/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.200930864 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.233819047 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.903521749 seconds)
    (291/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.928651414 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.928486042 seconds)
    (293/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.195222276 seconds)
    (294/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.013696844 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.17492809 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.993181986 seconds)
    (297/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.004282418 seconds)
    (298/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.280222201 seconds)
    (299/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.038518422 seconds)
    (300/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.11982327 seconds)
    (301/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.15599317 seconds)
    (302/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.145992643 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.107775055 seconds)
    (304/309) benchmarking ("sort", Int8, false)...
    done (took 4.794312116 seconds)
    (305/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.977881904 seconds)
    (306/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.590641174 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.004182739 seconds)
    (308/309) benchmarking ("sort", BigInt, false)...
    done (took 6.898803622 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.903211419 seconds)
  done (took 1009.962288898 seconds)
done (took 1011.830975384 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.142082033 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.921043193 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.904120805 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.926050818 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.012666931 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.945112737 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.91716295 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.905991234 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.953097361 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.953006219 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.899544654 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.942712297 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.901956216 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.903400201 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.902229573 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.919723568 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.196224973 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.922075281 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.923167376 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.909406161 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.919227425 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.89849965 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.953138746 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.939312139 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.906719809 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.905734117 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.901459134 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.91911091 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.01106209 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.903457465 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.902853301 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.911262723 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.193103249 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.917958949 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.898300821 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.9195838 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.910552812 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.913250233 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.904911382 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.929941321 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.28156011 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.928251047 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.897619429 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.898061317 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.899338807 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.908169416 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.8990985 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.9059224 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.914884125 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913902402 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.27704892 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.946862926 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.902507998 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.902574228 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.914576848 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.900851485 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.906139649 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916755536 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.922405494 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916653836 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.18264986 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.930338885 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.905895568 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.916809963 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.909174359 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.313651744 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.930494315 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.90885658 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.284493651 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.939156754 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.314381814 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.939377725 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.903011129 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.917744682 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.932298736 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.197468508 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.919674615 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.901223477 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.910044999 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.898721097 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.916233768 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917647652 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.90637997 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.903054104 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.917038645 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.948099741 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.912949953 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.902715753 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.914874531 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.918966607 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.908690532 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.910456193 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.905387503 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.897121683 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.912405267 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.903199426 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.898363366 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.900965935 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.901451648 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.911164282 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.276977625 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.942083594 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.892262202 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.892398029 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.899999466 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.909276642 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.276865914 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.925431715 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.916973645 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.944988729 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.897769179 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.173790887 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.91423837 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.906152159 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.906906523 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.897643547 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.894946889 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.169674564 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.282074138 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.932634045 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.884118257 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.881797065 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898771908 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.883526045 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.881788404 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.177604668 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.90809269 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.897427734 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.005834562 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.897504853 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.915469763 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.882448397 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.890426826 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.927287109 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899507134 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.9168509 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.889261878 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898180915 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.898133492 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.879739156 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.895038285 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.896414717 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.884692454 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.887407824 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.876566836 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.920447135 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892733095 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891364777 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.895354469 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.99642687 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.872832645 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.154500128 seconds)
done (took 298.998985623 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.948931385 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.866861488 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.970584545 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.865631897 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.962015387 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.939688644 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.866317075 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.863931266 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.863785612 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.347102809 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.862898395 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.871807221 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.860481523 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.86140336 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.939252201 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.860629603 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.860160339 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.290500629 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.861167936 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.940106569 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.860842802 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.860437737 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.860457673 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.346185926 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.85965127 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.860605213 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.93997556 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.860692916 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.295626411 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.859455075 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.860160943 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.296987946 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.940317398 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.887866433 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.868702779 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.86620849 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.950041639 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.871362154 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.928677325 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.937420546 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.954927368 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.893697707 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.861366829 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.862977403 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.863929845 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.862708143 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.860359723 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.893513563 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.860113029 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.867061367 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.29373112 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.869175185 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.866937091 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.861978489 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.860764394 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.889880065 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.862258686 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.862172459 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.942580447 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.863414014 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.932040782 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.348846099 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.345374137 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.86281016 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.861984414 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.863307415 seconds)
  done (took 184.683502768 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.929415868 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.938497848 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.927807947 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.867017315 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.91078653 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.931123139 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.867431961 seconds)
  done (took 15.165933895 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.870291055 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.863959755 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.913607465 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.913310218 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.863224028 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.02177771 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.862217295 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.875508222 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.869063822 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.891167502 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.864474077 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.862399862 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.869721635 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.862707844 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.912958326 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.875412597 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.978861078 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.866167861 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.863668615 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.012288941 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.869892666 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.868424266 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.889581721 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.875207878 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.864137017 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.871629293 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.520465262 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.864625615 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.864146587 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.86426347 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.863374722 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.907103236 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.864394251 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.86522158 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.864301494 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.980331303 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.864599727 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.863722995 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.864191974 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.863652296 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.864519119 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.864859734 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.864743824 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.864808677 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.865033726 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.888868705 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.865286345 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.864623027 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.865464773 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.864814652 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.891372509 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.865197129 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.865300892 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.872726626 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.908599102 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.869869761 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.866596691 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.865233613 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.864807002 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.864644451 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.013928293 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.916340846 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.864881461 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.916480247 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.865245421 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.866879044 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.865575535 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.865953011 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.954079076 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.865317338 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.916217906 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.865715166 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.027500125 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.889777338 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.866927389 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.870351617 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.869870342 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.865870938 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.866646359 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.874385258 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.865821573 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.869660012 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.873997507 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.871386423 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.866660518 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.012824911 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.007832189 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.867223515 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.868894251 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.875631141 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.866876376 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.912008356 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.866802309 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.866517387 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.925946244 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.984183485 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.894774523 seconds)
  done (took 205.475799615 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.874726694 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.874638464 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.87010713 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.884127978 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.870325386 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.870205973 seconds)
  done (took 13.042526651 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.870472574 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.870820675 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.868460547 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.867923251 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.867603398 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.868251217 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.868643125 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.870417966 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.871893641 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.868418868 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.868447176 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.86888232 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.868318102 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.869170543 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.868555822 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.867965641 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.868875756 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.869105344 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.868613295 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.868169016 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.118075058 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.868707577 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.868427413 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.871953647 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.872255467 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.868337913 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.882800342 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.868378832 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.869041827 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.876380502 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.873686931 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.871205435 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.873267152 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.87688476 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.873842682 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.872870279 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.873602381 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.871050387 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.869805973 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.8706332 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.871374649 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.869719494 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.870152817 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.87167416 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.872669579 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.878163349 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.875626923 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.886199004 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.870593905 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.871934619 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.87152852 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.87073086 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.870965353 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.86968628 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.874228071 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.87588459 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.873638649 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.871604689 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.865866646 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.869683112 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.869154074 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.86622249 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.87050625 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.868042657 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.871022505 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.865089116 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.867413954 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.867207343 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.864802097 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.861578472 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.862218762 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.862641562 seconds)
  done (took 137.71910023 seconds)
done (took 557.903226572 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.139579063 seconds)
  done (took 8.933445484 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.0711748 seconds)
  done (took 8.946725314 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.090186703 seconds)
  done (took 9.906839219 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.914421329 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.887673649 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.889469976 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.884697295 seconds)
  done (took 29.405374851 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.175958581 seconds)
  done (took 8.983141491 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.886825529 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.871741744 seconds)
  done (took 15.943690308 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.957816306 seconds)
  done (took 8.758120305 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.355669581 seconds)
  done (took 9.16152003 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.888749123 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.878103875 seconds)
  done (took 15.586365204 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.865117034 seconds)
  done (took 8.656907555 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.068420131 seconds)
  done (took 9.969624239 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.881057699 seconds)
  done (took 8.744955204 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.912477828 seconds)
  done (took 8.70513278 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.904921634 seconds)
  done (took 8.697133799 seconds)
done (took 162.192339969 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.864331459 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.864699885 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.860806586 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.8629368 seconds)
  done (took 29.246028567 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.89470977 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.895068909 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.896658969 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.906110274 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.897773167 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.893322823 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.888550463 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.887844318 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.905471088 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.896964303 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.896961755 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.896463641 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.894183989 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.887429787 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.897584907 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.89650291 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.904488162 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.89680085 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.887460922 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.896775731 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.862343063 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.905827921 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.896996206 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.862766755 seconds)
  done (took 47.238330877 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.053392712 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.935304589 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.016374136 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.916748521 seconds)
  done (took 9.713661986 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.912691442 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.915273952 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.927634462 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.965231501 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.047907379 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.924309666 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.887642511 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.883383257 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.87009021 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.915425216 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.990749698 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.910787698 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.001547008 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.86196143 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.046600621 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.864395447 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.863756484 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.914955627 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.968338916 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.979155954 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.863681203 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.914117746 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.917940199 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.911209968 seconds)
  done (took 48.051976171 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.864195161 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.872516984 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.871428681 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.863929591 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.864616767 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.864588968 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.871829411 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.865312236 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.885271479 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.863931244 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.863221713 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.864312223 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.868530977 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.860191915 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.859501984 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.872084211 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.873712918 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.861783841 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.86030652 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.862846238 seconds)
  done (took 39.128189148 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.854594865 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.698489834 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.197440888 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.10318585 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.848303834 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.850318219 seconds)
  done (took 31.338288715 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.863678659 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.858490184 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.852150037 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.908700957 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.997468076 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.864009998 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.85181964 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.863579377 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.898360276 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.922363758 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.87588642 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.880765369 seconds)
  done (took 24.416621826 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.85162677 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.85466205 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.853988233 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.866803043 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.861402339 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.859176559 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.858345588 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.851095749 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.867446279 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.870228823 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.859461006 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.863579609 seconds)
  done (took 44.1032961 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928579331 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.724444249 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29205054 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311439608 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.374575326 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053008455 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.851729338 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.936842704 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.852435326 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121106909 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.175416122 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119789954 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163804023 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.684427255 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.01990141 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.398943934 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20646386 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136738475 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949890943 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.527091456 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022768036 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.498240452 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.580507664 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.025618132 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124752736 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.042901375 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.180321236 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.870741058 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969511744 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924282834 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927014208 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.922913087 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193238101 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044733315 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992013697 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927934645 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337433149 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.627425919 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.937019959 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.593457303 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.426154596 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.035936056 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926028125 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922178412 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849353778 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37118472 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120934694 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.926228249 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.62243239 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.922705015 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927965569 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997323525 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.92611093 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.7302188 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.607847192 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.19135609 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.924348375 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926021653 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.482109851 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911538858 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468157832 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.965485837 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.018948679 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.584045481 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366368349 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.074014346 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.926473767 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925763933 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851141009 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.588152653 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03100791 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.060385162 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.942098072 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564801672 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204920523 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.312182176 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.970151605 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197091994 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.647071793 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.964434358 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143281674 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.867608039 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851451604 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.753822624 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.851160936 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137377552 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958227368 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.514046275 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961588512 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.007771807 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.930264451 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941572876 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927842236 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.140161285 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.81966889 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926350466 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.191629982 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.173871341 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943155742 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.010365912 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852233811 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.927662704 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172670547 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.129387214 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.112586663 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.506862924 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008632795 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806367773 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.049684562 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.786089898 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.042441502 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.188748888 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980826249 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.918677824 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037196305 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.875566248 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180299503 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826492626 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.137406832 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.26648383 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158331496 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.263741457 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.174500753 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990099214 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927362341 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.927757316 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.602391874 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.529846787 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.143705569 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.940729242 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34592404 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043141623 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.928447191 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862195117 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.594771999 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.261259511 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.999283349 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144622694 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.810706657 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.312963682 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855765183 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.065231202 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.931876771 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.142868247 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.56600053 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.006411832 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178131867 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.112346312 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.216294954 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045682686 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941684728 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019975764 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945823471 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.304202416 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.2835461 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.93050043 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.931274977 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.598719414 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.980323039 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933613284 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.93213825 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.480020156 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19480158 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.947672821 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.936980988 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.803467459 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.941417533 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991827468 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932868806 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933338126 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.454534226 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.442363577 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.93605128 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.596547814 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145239221 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934191681 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.533018193 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098873446 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.942943528 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192483096 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992101852 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.856567988 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.630619666 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.631490281 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931755983 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858013593 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930842803 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933270324 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935993763 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.119688959 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.200079636 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.977715634 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.60056406 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.030823623 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937888581 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.934006204 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930946915 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.425233121 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.928159879 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469756883 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047145196 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060265095 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.943021022 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.858472679 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.93318905 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934451745 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.930903282 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.877225244 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980137747 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.595398963 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128331703 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180914818 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.337967531 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940582138 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.5804347 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.044255558 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.96126138 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.229918897 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.529830565 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.037161497 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006436341 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.937081049 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.590768505 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.659797411 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.495260631 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221972747 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240770745 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268328719 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.360218283 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.258308627 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.01885084 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160582874 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.453552793 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.989475578 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.028910217 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871206678 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948121933 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.569545569 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.296202022 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945104564 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151652024 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215520251 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.268267616 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059226338 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138211801 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964483205 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.802027023 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.964666965 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.470926295 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950899142 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.341035173 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128936653 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016725357 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.206885733 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.005041534 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.935559874 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.271974908 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975643278 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.639527268 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.286002075 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384716606 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.381690647 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150272816 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.941385568 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.374856265 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277269977 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.172871602 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.058950494 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863215325 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940649742 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940087674 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.949593186 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.910899229 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.778445412 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.177738132 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941515295 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162737289 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.116410693 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.296899446 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.83618386 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.93877395 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936188465 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180852334 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.651884382 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095759772 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.307551907 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.517775324 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94556402 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.862786682 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864146075 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.636529207 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.943233767 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901680694 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147312708 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.048497016 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620770763 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372313637 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25193346 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182474326 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.950570881 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.201458644 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208818926 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.431990107 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959860433 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.037621073 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.231628642 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.623356525 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.154641596 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167335243 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.471758012 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.158298954 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383631897 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.910499614 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.941199259 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14653564 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.156316415 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.283629486 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106012264 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.650811066 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.9480259 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30118675 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001062724 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.281895059 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.120363572 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.02802911 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948857437 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018381131 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944075977 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.946773852 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.94617981 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951068406 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.288723249 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.051981309 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.953691485 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017198092 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92735129 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.508840099 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.950080393 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204221242 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281376541 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264639099 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999779974 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.942326726 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951025017 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868473977 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071182807 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.380000471 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212780644 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.063159724 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.076111306 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963440254 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.222461661 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.241568322 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254542236 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214998756 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.825202389 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.626382626 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.066202503 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.159666701 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948521761 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.145564354 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157825302 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241632276 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.509653259 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.132600188 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.139899182 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214722171 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.303377149 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.944715402 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.527170125 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.951798519 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.344474908 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.976412649 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.281326531 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191603853 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948084948 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066350286 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.947412205 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.141969689 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.394436876 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.548992491 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.282533053 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.800002321 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.947490661 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209833319 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.260071747 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243508594 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021317939 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949791732 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.662487947 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077403982 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.800045064 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.1615893 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.945204392 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149292808 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.654735985 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.948276161 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208655322 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244555087 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.945175871 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.825088367 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964391958 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.949102273 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.15980296 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158411464 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.190225378 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95039033 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.953289011 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.754164923 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211293466 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001778897 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871424508 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.948715929 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992369083 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17324322 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965212055 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.462160855 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.647004312 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223980878 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.850867449 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963282895 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405169776 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.31899882 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263918527 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.469490217 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163160777 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.498614517 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.841720056 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.325997583 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.949605784 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392340383 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.330583411 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.948490495 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.495993866 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060153079 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.207768217 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270996042 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.960196953 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.623638074 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.971452614 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161691578 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305425323 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87862584 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.949340919 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.996044452 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.948570952 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.942818715 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957154534 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.85777969 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415735405 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.789937887 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507437382 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.952181083 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.956152536 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.261397947 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.516325847 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059074606 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965217165 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952958823 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.661760619 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.235525381 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190673235 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.496387326 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.047021904 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.950569182 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950213992 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.868047472 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.132341988 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.137402632 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229391662 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.355430492 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.060300416 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.951067874 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.156669657 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151857639 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.291264574 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071076138 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.140375653 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066429841 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.88989694 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.655191669 seconds)
  done (took 1692.074337813 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.964231915 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.966439757 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.95814644 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.041773882 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.017477406 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.01412173 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.005165032 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.971229228 seconds)
  done (took 57.815954217 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.950788003 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.24430391 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.955303367 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.953467896 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.959093067 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.951149606 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.105869445 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.966556013 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.956773176 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.957017584 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.953282433 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.962050633 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.781208587 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.975288727 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.952910506 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.959237213 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.96192413 seconds)
  done (took 76.465048629 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.954441088 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.356160981 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.982566721 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.955922311 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.774930431 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.965798899 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.017659817 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.001801072 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.958555952 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.007058829 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.252359612 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.958684995 seconds)
  done (took 91.066774283 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.966260092 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.955412628 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.955681578 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.956637803 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.955678385 seconds)
  done (took 11.679751297 seconds)
done (took 2204.140809671 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.185654831 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.013319871 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.056348539 seconds)
  done (took 5.951364972 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.100882805 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.14667535 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.260364546 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.280046142 seconds)
  done (took 10.67742373 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.261490547 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.34075703 seconds)
  done (took 6.483929359 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.276286441 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.975684936 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.338435093 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.956301017 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.960539017 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.958805305 seconds)
  done (took 22.761651132 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.954739403 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.955577553 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.955120789 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.955111037 seconds)
  done (took 9.701363088 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.955178042 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.665563892 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.960161533 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.970282435 seconds)
  done (took 21.43297107 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.102962937 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.071050434 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.098183312 seconds)
  done (took 8.153797294 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.175503496 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.060498009 seconds)
  done (took 7.118476144 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.093436423 seconds)
  done (took 3.975690213 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.983739811 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.226097101 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.443682171 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.47776174 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.537454651 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.832919169 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.282385873 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.180187264 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.399721216 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.416320783 seconds)
  done (took 25.662927654 seconds)
done (took 137.576555856 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.30481422 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.987512203 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.157178943 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.316991814 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.195054947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.156828605 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.173014671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.309913595 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.013236506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.987371998 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.318503915 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.19714264 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.122814221 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.978503754 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.130447989 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.974454494 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.187321712 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.326827047 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.002737676 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.216428541 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.185353382 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.960359346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.156763951 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.978692958 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.192031144 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.108073921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.50394019 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.980979386 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.142538058 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.519663294 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.112931015 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.362130372 seconds)
  done (took 171.144762055 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.959242513 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.958972637 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.959533281 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.958801958 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.414978648 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.960286568 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.96087266 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.959297226 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.34524851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.341908869 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.959108975 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.404906023 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.962591097 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.959331227 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.960628762 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.959943789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.50495009 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.960384271 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.960714145 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.957842028 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.960347759 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.239956694 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.961220527 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.254691205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.493300627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.960843752 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.9593135 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.959640887 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.95948174 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.958876573 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.962961915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.960760638 seconds)
  done (took 211.928773641 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.958845316 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.962418542 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.960961685 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.961740476 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.962632926 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.962991444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.963212223 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.960296472 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.584276964 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.57102986 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.961584666 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.962384569 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.962694185 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.961532192 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.964841506 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.962555322 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.961790972 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.962842337 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.962143126 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.962859814 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.962594191 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.685398954 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.963499222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.699923277 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.962811981 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.961947447 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.962255308 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.961747254 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.962758549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.964781556 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.970517756 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.962618387 seconds)
  done (took 223.383258338 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.202412504 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.961861653 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.962935472 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.867837769 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.962262332 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.961420823 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.953386726 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.207594021 seconds)
  done (took 19.969761992 seconds)
done (took 628.317544976 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.311538862 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.157513232 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.146758027 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.986407426 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.250352815 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.036720932 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.981320883 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.046448491 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.820241278 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.058068159 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.625057656 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.006912901 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.718559764 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.010787607 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.109616257 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.041525379 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.535003873 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.634928427 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.127798635 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.046391978 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.164629817 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.89846543 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.068581429 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.861624989 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.637340922 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.94530701 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.026241684 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.539051691 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.993902431 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.142706205 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.620827659 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.270161238 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.998124363 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.982409561 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.043389851 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.015666543 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.213728904 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.995742959 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.108178741 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.690465471 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.061993051 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.726599571 seconds)
  done (took 106.546341887 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.975825296 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.970143322 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.969825811 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.970521251 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.978939537 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.970626246 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.971050376 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.971079078 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.97120613 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.971206608 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.971447995 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.97962953 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.971235288 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.980506339 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.971748109 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.971265607 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.971967624 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.980251729 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.972372051 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.972791924 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.97167863 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.972567354 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.966873684 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.971822018 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.9723907 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.9721372 seconds)
  done (took 53.196001491 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.966104176 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.139525134 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.208947503 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.987602611 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.967622459 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.970364908 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.984616919 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.971667392 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.969190834 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.969195907 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.056575547 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.97280543 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.985602543 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.210491921 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.98382107 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.966441062 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.967392383 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.968232152 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.146922031 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.984410288 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.987101043 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.971265006 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.988409685 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.98117556 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.97079551 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.968151193 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.971332449 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.432183227 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.976691423 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.057135032 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.014984848 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.993315106 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.379855939 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.219788119 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.024996299 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.977516237 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.968065762 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.062038307 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.976250338 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.969669763 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.987449778 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.97462455 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.211012615 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.495455821 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.98405831 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.969487539 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.442983058 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.070359548 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.011312453 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.978729135 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.212808681 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.987233683 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.970051219 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.970540242 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.006346293 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.975530253 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.970878618 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.332910904 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.981522523 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.987475625 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.97464427 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.970607645 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.154497362 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.978184916 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.141542331 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.980668536 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.975678399 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.971037191 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.213453952 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.987576891 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.513807628 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.985548023 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.970033659 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.059809398 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.146997306 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.467668578 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.984063589 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.154657756 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.396508753 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.995995547 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.978913661 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.423080185 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.999704114 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.978481611 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.972092064 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.970767968 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.970450986 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.012779351 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.987987119 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.426788678 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.512501974 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.353996983 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.999595313 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.989219352 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.97325851 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.334972752 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.980309338 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.972323527 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.204799093 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.521315048 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.987414846 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.979991399 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.492770949 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.98688838 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.990006935 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.980767164 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.220587678 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.989003704 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.013211882 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.971131421 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.978767112 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.974943945 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.991024287 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.979540567 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.971915483 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.483190867 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.080405108 seconds)
  done (took 244.344186158 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.972385656 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.972946213 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.971860764 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.972683578 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.973631189 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.973875725 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.970899873 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.972464149 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.973607554 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.971578172 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.972136513 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.971791465 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.97280879 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.0819928 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.978930808 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.975033619 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.575997094 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.972817897 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.972187959 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.972444415 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.614914773 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.976228496 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.974788624 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.972922584 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.973447189 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.973050276 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.080414358 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.977763047 seconds)
  done (took 170.618127222 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.97304144 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.086816001 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.995958949 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.002419911 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.981111989 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.973708839 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.07214001 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.992749812 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.980870645 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.972955375 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.9742296 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.035488867 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.987551502 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.071321261 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.007464373 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.080309726 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.079808018 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.981735352 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.974275325 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.974354123 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.003327082 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.98450151 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.035657992 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.097356363 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.995785579 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.088349503 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.99546028 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.975238373 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.975919642 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.088472597 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.997418316 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.036247935 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.003853929 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.994456971 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.09367161 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.095463597 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.080889845 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.079435174 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.984052077 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.97647678 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.976046461 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.97871375 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.089140401 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.995237731 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.9776732 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.093011456 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.997996937 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.976185488 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.976212737 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.975587071 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.990219755 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.99543309 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.040968567 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.105210384 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.011212844 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.999329092 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.075178147 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.102914691 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.977453512 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.074501112 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.986082515 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.09011038 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.000075497 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.979419335 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.978312357 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.980093512 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.006430053 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.081622709 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.082749947 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.98511823 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.074053186 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.013735708 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.985010898 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.978549413 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.978319266 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.089942609 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.093303943 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.013836471 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.014597381 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.009365979 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.989034492 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.979027317 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.979896624 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.996623609 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.983271003 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.091455647 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.099572021 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.985725336 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.979533588 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.977841138 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.977999068 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.003387444 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.097946885 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.013395794 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.08382035 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.045780167 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.054964013 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.991837232 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.991901034 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.982497051 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.042149848 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.996512041 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.9908185 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.274848171 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.038822792 seconds)
  done (took 214.16148997 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.367046032 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.02934905 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.035432357 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.297174429 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.369040301 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.950174273 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.023908811 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.025242542 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.052675241 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.207790543 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.100065169 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.046154208 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.014109983 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.001401862 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.025674207 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.048275358 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.040241917 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.36173061 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.246855352 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.162652279 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.016187991 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.315113615 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.366938984 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.597655226 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.081632681 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.449847942 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.601722188 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.161085422 seconds)
  done (took 64.908197302 seconds)
done (took 855.663878312 seconds)
SAVING RESULT...
DONE!
